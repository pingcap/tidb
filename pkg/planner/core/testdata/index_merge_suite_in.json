[
  {
    "name": "TestIndexMergePathGeneration",
    "cases": [
      "select * from t",
      "select * from t where c < 1",
      "select * from t where c < 1 or f > 2",
      "select * from t where (c < 1 or f > 2) and (c > 5 or f < 7)",
      "select * from t where (c < 1 or f > 2) and (c > 5 or f < 7) and (c < 1 or g > 2)",
      "select * from t where (c < 1 or f > 2) and (c > 5 or f < 7) and (e < 1 or f > 2)"
    ]
  },
  {
    "name": "TestHintForIntersectionIndexMerge",
    "cases": [
      "set @@tidb_partition_prune_mode = 'dynamic'",
      "select * from vh",
      "select /*+ qb_name(v, v), use_index_merge(@v t1, ia, ibc, id) */ * from v",
      "select /*+ qb_name(v, v@sel_1), use_index_merge(@v t1, ia, ibc, id) */ * from v",
      "select /*+ qb_name(v, v@sel_1 .@sel_1), use_index_merge(@v t1, ia, ibc, id) */ * from v",
      "select /*+ qb_name(v, v1@sel_1 .@sel_1), use_index_merge(@v t1, ia, ibc, id) */ * from v1 where c < 30 and d in (2,5)",
      "select /*+ use_index_merge(t2, ia, ibc, id, ie) */ * from t2 where a > 10 and b = 20 and c < 35 and d < 45 and e = 100",
      "select /*+ use_index_merge(t3, ia, ibc, id, ie) */ * from t3 where a > 10 and b = 20 and c < 35 and d < 45 and e = 100",
      "select /*+ use_index_merge(t4, ia, ibc, id, ie) */ * from t4 where a > 10 and b = 20 and c < 35 and d in (1,3,8,9) and e = 100",
      "select /*+ use_index_merge(t5, is1, is2, is3, is4) */ * from t5 where s1 = 'Abc' and s2 > 'zzz' and s3 < 'B啊a' and s4 = 'CcC'",
      "select /*+ use_index_merge(t6, primary, is3, is4) */ * from t6 where s1 = 'Abc' and s2 > 'zzz' and s3 = 'A啊a' and s4 not like 'Cd_'",
      "select /*+ use_index_merge(t7, primary,ia,ib,ic,ie,iff,ig) */ * from t7 where a = 100 and b > 5 and c < 12.3 and d > 54.321 and e = '2022-11-22 17:00' and f > '2020-6-23 10:00' and g < 2025",
      "select /*+ use_index_merge(t8, primary,is2,is3,is4,is5) */ * from t8 where s1 like '啊A%' and s2 > 'abc' and s3 > 'cba' and s4 in ('aA', '??') and s5 = 'test,2'",
      "select (select /*+ use_index_merge(t1,ia,ibc,ic) */ a from t1 where t1.a > 10 and t1.b = 20 and t1.c = t2.a) from t2",
      "select (select /*+ use_index_merge(t1,ia,ibc,ic) */ a from t1 where t1.a > 10 and t1.b = 20 and t1.c > t2.a) from t2",
      "select (select /*+ use_index_merge(t1,ia,ibc,ic) */ a from t1 where t1.a > 10 and t1.b = 20 and t1.e > t2.a) from t2",
      "set @@tidb_partition_prune_mode = 'static'",
      "select * from vh",
      "select /*+ qb_name(v, v), use_index_merge(@v t1, ia, ibc, id) */ * from v",
      "select /*+ qb_name(v, v@sel_1), use_index_merge(@v t1, ia, ibc, id) */ * from v",
      "select /*+ qb_name(v, v@sel_1 .@sel_1), use_index_merge(@v t1, ia, ibc, id) */ * from v",
      "select /*+ qb_name(v, v@sel_1 .@sel_1), use_index_merge(@v t1, ia, ibc, id) */ * from v",
      "select /*+ use_index_merge(t2, ia, ibc, id, ie) */ * from t2 where a > 10 and b = 20 and c < 35 and d < 45 and e = 100",
      "select /*+ use_index_merge(t3, ia, ibc, id, ie) */ * from t3 where a > 10 and b = 20 and c < 35 and d < 45 and e = 100",
      "select /*+ use_index_merge(t4, ia, ibc, id, ie) */ * from t4 where a > 10 and b = 20 and c < 35 and d in (1,3,8,9) and e = 100"
    ]
  },
  {
    "name": "TestIndexMergeWithOrderProperty",
    "cases": [
      "select * from t where a=1 or b=1 order by c; -- 1. auto pick the most suitable index ac and bc",
      "select /*+ use_index_merge(t, ac, bc) */ * from t where a=1 or b=1 order by c; -- 2. hint instruction to pick the suitable index ac and bc",
      "select * from t2 where a=1 or b=1 order by c; -- 3. if one of the index order path can't satisfied, back to normal choice",
      "select /*+ use_index_merge(t, ac, b) */ * from t where a=1 or b=1 order by c; -- 4. hint to use ac strongly, but sort OP is still needed",

      "select * from t where a=1 or a=2 order by c; -- 5. duplicated column a's conditions and lack of column b's conditions",
      "select * from t use index(a) where a=1 or a=2 order by c; -- 6. duplicated column a's conditions and lack of column b's conditions",

      "select * from t where a=1 or a=2 or b=3 order by c; -- 7. duplicate column a's conditions",
      "select /*+ use_index_merge(t, ac, bc) */ * from t where a=1 or a=2 or b=3 order by c; -- 8. duplicate column a's conditions",

      "select * from t where a=1 or b=1 or c=1 order by d; -- 9. more than 2 index related columns, here c condition is interference",
      "select /*+ use_index_merge(t, a, b, c) */ * from t where a=1 or b=1 or c=1 order by d; -- 10. more than 2 index related columns, here c condition is interference",

      "select * from t where a=1 or b=1 or c=1 or d=1 order by e; -- 11. more index definition about idx(a,e), idx(b,e)",
      "select /*+ use_index_merge(t, ae, be, c) */ * from t where a=1 or b=1 or c=1 order by e; -- 12. more index definition about idx(a,e), idx(b,e)",

      "select * from t where (a=1 and b=1) or c=1 order by d; -- 13. composite predicates and more index defined, idx(a, b, d), idx(c, d)",
      "select * from t where (a=1 and b=1) or (c=1 and d=2) order by d; -- 14. composite predicates and more index defined, idx(a, b, d), idx(c, d)",
      "select * from t where (a=1 and b=1) or (c=1 and d=1) order by e"
    ]
  }
]
