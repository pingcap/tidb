[
  {
    "Name": "Test33B",
    "Cases": [
      {
        "SQL": "SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie FROM company_name AS cn1, company_name AS cn2, info_type AS it1, info_type AS it2, kind_type AS kt1, kind_type AS kt2, link_type AS lt, movie_companies AS mc1, movie_companies AS mc2, movie_info_idx AS mi_idx1, movie_info_idx AS mi_idx2, movie_link AS ml, title AS t1, title AS t2 WHERE cn1.country_code  = '[nl]' AND it1.info  = 'rating' AND it2.info  = 'rating' AND kt1.kind  in ('tv series') AND kt2.kind  in ('tv series') AND lt.link  LIKE '%follow%' AND mi_idx2.info  < '3.0' AND t2.production_year  = 2007 AND lt.id = ml.link_type_id AND t1.id = ml.movie_id AND t2.id = ml.linked_movie_id AND it1.id = mi_idx1.info_type_id AND t1.id = mi_idx1.movie_id AND kt1.id = t1.kind_id AND cn1.id = mc1.company_id AND t1.id = mc1.movie_id AND ml.movie_id = mi_idx1.movie_id AND ml.movie_id = mc1.movie_id AND mi_idx1.movie_id = mc1.movie_id AND it2.id = mi_idx2.info_type_id AND t2.id = mi_idx2.movie_id AND kt2.id = t2.kind_id AND cn2.id = mc2.company_id AND t2.id = mc2.movie_id AND ml.linked_movie_id = mi_idx2.movie_id AND ml.linked_movie_id = mc2.movie_id AND mi_idx2.movie_id = mc2.movie_id;",
        "Result": [
          "StreamAgg 1.00 root  funcs:min(imdb.company_name.name)->Column#73, funcs:min(imdb.company_name.name)->Column#74, funcs:min(imdb.movie_info_idx.info)->Column#75, funcs:min(imdb.movie_info_idx.info)->Column#76, funcs:min(imdb.title.title)->Column#77, funcs:min(imdb.title.title)->Column#78",
          "└─Projection 5.06 root  imdb.company_name.name, imdb.company_name.name, imdb.movie_info_idx.info, imdb.movie_info_idx.info, imdb.title.title, imdb.title.title",
          "  └─IndexJoin 5.06 root  inner join, inner:TableReader, outer key:imdb.movie_companies.company_id, inner key:imdb.company_name.id, equal cond:eq(imdb.movie_companies.company_id, imdb.company_name.id)",
          "    ├─IndexJoin(Build) 5.06 root  inner join, inner:IndexLookUp, outer key:imdb.movie_info_idx.movie_id, inner key:imdb.movie_companies.movie_id, equal cond:eq(imdb.movie_info_idx.movie_id, imdb.movie_companies.movie_id), eq(imdb.movie_link.linked_movie_id, imdb.movie_companies.movie_id), eq(imdb.title.id, imdb.movie_companies.movie_id)",
          "    │ ├─IndexJoin(Build) 2.25 root  inner join, inner:TableReader, outer key:imdb.movie_companies.company_id, inner key:imdb.company_name.id, equal cond:eq(imdb.movie_companies.company_id, imdb.company_name.id)",
          "    │ │ ├─IndexJoin(Build) 2.25 root  inner join, inner:IndexLookUp, outer key:imdb.movie_info_idx.movie_id, inner key:imdb.movie_companies.movie_id, equal cond:eq(imdb.movie_info_idx.movie_id, imdb.movie_companies.movie_id), eq(imdb.movie_link.movie_id, imdb.movie_companies.movie_id), eq(imdb.title.id, imdb.movie_companies.movie_id)",
          "    │ │ │ ├─HashJoin(Build) 1.00 root  inner join, equal:[eq(imdb.title.kind_id, imdb.kind_type.id)]",
          "    │ │ │ │ ├─TableReader(Build) 1.00 root  data:Selection",
          "    │ │ │ │ │ └─Selection 1.00 cop[tikv]  eq(imdb.kind_type.kind, \"tv series\")",
          "    │ │ │ │ │   └─TableFullScan 9.00 cop[tikv] table:kt1 keep order:false",
          "    │ │ │ │ └─IndexJoin(Probe) 1.02 root  inner join, inner:TableReader, outer key:imdb.movie_link.movie_id, imdb.movie_info_idx.movie_id, inner key:imdb.title.id, imdb.title.id, equal cond:eq(imdb.movie_info_idx.movie_id, imdb.title.id), eq(imdb.movie_link.movie_id, imdb.title.id)",
          "    │ │ │ │   ├─HashJoin(Build) 1.01 root  inner join, equal:[eq(imdb.title.kind_id, imdb.kind_type.id)]",
          "    │ │ │ │   │ ├─TableReader(Build) 1.00 root  data:Selection",
          "    │ │ │ │   │ │ └─Selection 1.00 cop[tikv]  eq(imdb.kind_type.kind, \"tv series\")",
          "    │ │ │ │   │ │   └─TableFullScan 9.00 cop[tikv] table:kt2 keep order:false",
          "    │ │ │ │   │ └─IndexJoin(Probe) 1.01 root  inner join, inner:TableReader, outer key:imdb.movie_link.linked_movie_id, imdb.movie_info_idx.movie_id, inner key:imdb.title.id, imdb.title.id, equal cond:eq(imdb.movie_info_idx.movie_id, imdb.title.id), eq(imdb.movie_link.linked_movie_id, imdb.title.id)",
          "    │ │ │ │   │   ├─HashJoin(Build) 1.00 root  inner join, equal:[eq(imdb.movie_info_idx.info_type_id, imdb.info_type.id)]",
          "    │ │ │ │   │   │ ├─TableReader(Build) 1.00 root  data:Selection",
          "    │ │ │ │   │   │ │ └─Selection 1.00 cop[tikv]  eq(imdb.info_type.info, \"rating\")",
          "    │ │ │ │   │   │ │   └─TableFullScan 113.00 cop[tikv] table:it2 keep order:false",
          "    │ │ │ │   │   │ └─IndexHashJoin(Probe) 12.49 root  inner join, inner:IndexLookUp, outer key:imdb.movie_link.linked_movie_id, inner key:imdb.movie_info_idx.movie_id, equal cond:eq(imdb.movie_link.linked_movie_id, imdb.movie_info_idx.movie_id)",
          "    │ │ │ │   │   │   ├─HashJoin(Build) 9.99 root  inner join, equal:[eq(imdb.movie_link.link_type_id, imdb.link_type.id)]",
          "    │ │ │ │   │   │   │ ├─TableReader(Build) 14.40 root  data:Selection",
          "    │ │ │ │   │   │   │ │ └─Selection 14.40 cop[tikv]  like(imdb.link_type.link, \"%follow%\", 92)",
          "    │ │ │ │   │   │   │ │   └─TableFullScan 18.00 cop[tikv] table:lt keep order:false",
          "    │ │ │ │   │   │   │ └─IndexHashJoin(Probe) 9.99 root  inner join, inner:IndexLookUp, outer key:imdb.movie_info_idx.movie_id, inner key:imdb.movie_link.movie_id, equal cond:eq(imdb.movie_info_idx.movie_id, imdb.movie_link.movie_id)",
          "    │ │ │ │   │   │   │   ├─IndexHashJoin(Build) 1.25 root  inner join, inner:IndexLookUp, outer key:imdb.info_type.id, inner key:imdb.movie_info_idx.info_type_id, equal cond:eq(imdb.info_type.id, imdb.movie_info_idx.info_type_id)",
          "    │ │ │ │   │   │   │   │ ├─TableReader(Build) 1.00 root  data:Selection",
          "    │ │ │ │   │   │   │   │ │ └─Selection 1.00 cop[tikv]  eq(imdb.info_type.info, \"rating\")",
          "    │ │ │ │   │   │   │   │ │   └─TableFullScan 113.00 cop[tikv] table:it1 keep order:false",
          "    │ │ │ │   │   │   │   │ └─IndexLookUp(Probe) 1.25 root  ",
          "    │ │ │ │   │   │   │   │   ├─IndexRangeScan(Build) 1.25 cop[tikv] table:mi_idx1, index:info_type_id_movie_info_idx(info_type_id) range: decided by [eq(imdb.movie_info_idx.info_type_id, imdb.info_type.id)], keep order:false, stats:pseudo",
          "    │ │ │ │   │   │   │   │   └─TableRowIDScan(Probe) 1.25 cop[tikv] table:mi_idx1 keep order:false, stats:pseudo",
          "    │ │ │ │   │   │   │   └─IndexLookUp(Probe) 9.99 root  ",
          "    │ │ │ │   │   │   │     ├─IndexRangeScan(Build) 9.99 cop[tikv] table:ml, index:movie_link_idx_mid(movie_id) range: decided by [eq(imdb.movie_link.movie_id, imdb.movie_info_idx.movie_id)], keep order:false",
          "    │ │ │ │   │   │   │     └─TableRowIDScan(Probe) 9.99 cop[tikv] table:ml keep order:false",
          "    │ │ │ │   │   │   └─IndexLookUp(Probe) 12.49 root  ",
          "    │ │ │ │   │   │     ├─IndexRangeScan(Build) 37.58 cop[tikv] table:mi_idx2, index:movie_id_movie_info_idx(movie_id) range: decided by [eq(imdb.movie_info_idx.movie_id, imdb.movie_link.linked_movie_id)], keep order:false, stats:pseudo",
          "    │ │ │ │   │   │     └─Selection(Probe) 12.49 cop[tikv]  lt(imdb.movie_info_idx.info, \"3.0\")",
          "    │ │ │ │   │   │       └─TableRowIDScan 37.58 cop[tikv] table:mi_idx2 keep order:false, stats:pseudo",
          "    │ │ │ │   │   └─TableReader(Probe) 0.03 root  data:Selection",
          "    │ │ │ │   │     └─Selection 0.03 cop[tikv]  eq(imdb.title.production_year, 2007)",
          "    │ │ │ │   │       └─TableRangeScan 1.00 cop[tikv] table:t2 range: decided by [imdb.movie_link.linked_movie_id imdb.movie_info_idx.movie_id], keep order:false",
          "    │ │ │ │   └─TableReader(Probe) 1.01 root  data:TableRangeScan",
          "    │ │ │ │     └─TableRangeScan 1.01 cop[tikv] table:t1 range: decided by [imdb.movie_link.movie_id imdb.movie_info_idx.movie_id], keep order:false",
          "    │ │ │ └─IndexLookUp(Probe) 2.25 root  ",
          "    │ │ │   ├─IndexRangeScan(Build) 2.25 cop[tikv] table:mc1, index:movie_companies_idx_mid(movie_id) range: decided by [eq(imdb.movie_companies.movie_id, imdb.movie_info_idx.movie_id)], keep order:false",
          "    │ │ │   └─TableRowIDScan(Probe) 2.25 cop[tikv] table:mc1 keep order:false",
          "    │ │ └─TableReader(Probe) 0.02 root  data:Selection",
          "    │ │   └─Selection 0.02 cop[tikv]  eq(imdb.company_name.country_code, \"[nl]\")",
          "    │ │     └─TableRangeScan 2.25 cop[tikv] table:cn1 range: decided by [imdb.movie_companies.company_id], keep order:false",
          "    │ └─IndexLookUp(Probe) 5.06 root  ",
          "    │   ├─IndexRangeScan(Build) 5.06 cop[tikv] table:mc2, index:movie_companies_idx_mid(movie_id) range: decided by [eq(imdb.movie_companies.movie_id, imdb.movie_info_idx.movie_id)], keep order:false",
          "    │   └─TableRowIDScan(Probe) 5.06 cop[tikv] table:mc2 keep order:false",
          "    └─TableReader(Probe) 5.06 root  data:TableRangeScan",
          "      └─TableRangeScan 5.06 cop[tikv] table:cn2 range: decided by [imdb.movie_companies.company_id], keep order:false"
        ]
      }
    ]
  }
]
