[
  {
    "Name": "TestQ2",
    "Cases": [
      {
        "SQL": "SELECT s_suppkey, s_name, n_name, i_id, i_name, s_address, s_phone, s_comment FROM item, supplier, stock, nation, region, (SELECT s_i_id AS m_i_id, MIN(s_quantity) AS m_s_quantity FROM stock, supplier, nation, region WHERE MOD((s_w_id * s_i_id), 10000) = s_suppkey AND s_nationkey = n_nationkey AND n_regionkey = r_regionkey AND r_name LIKE 'EUROP%' GROUP BY s_i_id) m WHERE i_id = s_i_id AND MOD((s_w_id * s_i_id), 10000) = s_suppkey AND s_nationkey = n_nationkey AND n_regionkey = r_regionkey AND i_data LIKE '%b' AND r_name LIKE 'EUROP%' AND i_id = m_i_id AND s_quantity = m_s_quantity ORDER BY n_name, s_name, i_id;",
        "Result": [
          "Sort 1620678.30 root  tpcc.nation.n_name, tpcc.supplier.s_name, tpcc.item.i_id",
          "└─TableReader 1620678.30 root  MppVersion: 3, data:ExchangeSender",
          "  └─ExchangeSender 1620678.30 mpp[tiflash]  ExchangeType: PassThrough",
          "    └─Projection 1620678.30 mpp[tiflash]  tpcc.supplier.s_suppkey, tpcc.supplier.s_name, tpcc.nation.n_name, tpcc.item.i_id, tpcc.item.i_name, tpcc.supplier.s_address, tpcc.supplier.s_phone, tpcc.supplier.s_comment",
          "      └─Projection 1620678.30 mpp[tiflash]  tpcc.item.i_id, tpcc.item.i_name, tpcc.supplier.s_suppkey, tpcc.supplier.s_name, tpcc.supplier.s_address, tpcc.supplier.s_phone, tpcc.supplier.s_comment, tpcc.nation.n_name",
          "        └─Projection 1620678.30 mpp[tiflash]  tpcc.nation.n_name, tpcc.supplier.s_suppkey, tpcc.supplier.s_name, tpcc.supplier.s_address, tpcc.supplier.s_phone, tpcc.supplier.s_comment, tpcc.item.i_id, tpcc.item.i_name, tpcc.stock.s_quantity",
          "          └─HashJoin 1620678.30 mpp[tiflash]  inner join, equal:[eq(tpcc.item.i_id, tpcc.stock.s_i_id) eq(tpcc.stock.s_quantity, Column#70)]",
          "            ├─ExchangeReceiver(Build) 79488.00 mpp[tiflash]  ",
          "            │ └─ExchangeSender 79488.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: tpcc.stock.s_i_id, collate: binary], [name: Column#70, collate: binary]",
          "            │   └─Selection 79488.00 mpp[tiflash]  not(isnull(Column#70))",
          "            │     └─Projection 99360.00 mpp[tiflash]  Column#70, tpcc.stock.s_i_id",
          "            │       └─HashAgg 99360.00 mpp[tiflash]  group by:tpcc.stock.s_i_id, funcs:min(Column#82)->Column#70, funcs:firstrow(tpcc.stock.s_i_id)->tpcc.stock.s_i_id",
          "            │         └─ExchangeReceiver 99360.00 mpp[tiflash]  ",
          "            │           └─ExchangeSender 99360.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: tpcc.stock.s_i_id, collate: binary]",
          "            │             └─HashAgg 99360.00 mpp[tiflash]  group by:tpcc.stock.s_i_id, funcs:min(tpcc.stock.s_quantity)->Column#82",
          "            │               └─Projection 2012882.45 mpp[tiflash]  tpcc.stock.s_i_id, tpcc.stock.s_quantity",
          "            │                 └─Projection 2012882.45 mpp[tiflash]  tpcc.stock.s_i_id, tpcc.stock.s_quantity, Column#75",
          "            │                   └─HashJoin 2012882.45 mpp[tiflash]  inner join, equal:[eq(tpcc.supplier.s_suppkey, Column#75)]",
          "            │                     ├─ExchangeReceiver(Build) 2000.00 mpp[tiflash]  ",
          "            │                     │ └─ExchangeSender 2000.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: tpcc.supplier.s_suppkey, collate: binary]",
          "            │                     │   └─Projection 2000.00 mpp[tiflash]  tpcc.supplier.s_suppkey, tpcc.supplier.s_nationkey",
          "            │                     │     └─HashJoin 2000.00 mpp[tiflash]  inner join, equal:[eq(tpcc.nation.n_nationkey, tpcc.supplier.s_nationkey)]",
          "            │                     │       ├─ExchangeReceiver(Build) 5.00 mpp[tiflash]  ",
          "            │                     │       │ └─ExchangeSender 5.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: tpcc.nation.n_nationkey, collate: binary]",
          "            │                     │       │   └─Projection 5.00 mpp[tiflash]  tpcc.nation.n_nationkey, tpcc.nation.n_regionkey",
          "            │                     │       │     └─HashJoin 5.00 mpp[tiflash]  inner join, equal:[eq(tpcc.region.r_regionkey, tpcc.nation.n_regionkey)]",
          "            │                     │       │       ├─ExchangeReceiver(Build) 1.00 mpp[tiflash]  ",
          "            │                     │       │       │ └─ExchangeSender 1.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: tpcc.region.r_regionkey, collate: binary]",
          "            │                     │       │       │   └─Selection 1.00 mpp[tiflash]  like(tpcc.region.r_name, \"EUROP%\", 92)",
          "            │                     │       │       │     └─TableFullScan 5.00 mpp[tiflash] table:region keep order:false",
          "            │                     │       │       └─ExchangeReceiver(Probe) 25.00 mpp[tiflash]  ",
          "            │                     │       │         └─ExchangeSender 25.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: tpcc.nation.n_regionkey, collate: binary]",
          "            │                     │       │           └─TableFullScan 25.00 mpp[tiflash] table:nation keep order:false",
          "            │                     │       └─ExchangeReceiver(Probe) 10000.00 mpp[tiflash]  ",
          "            │                     │         └─ExchangeSender 10000.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: tpcc.supplier.s_nationkey, collate: binary]",
          "            │                     │           └─TableFullScan 10000.00 mpp[tiflash] table:supplier keep order:false",
          "            │                     └─ExchangeReceiver(Probe) 100000000.00 mpp[tiflash]  ",
          "            │                       └─ExchangeSender 100000000.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: Column#75, collate: binary]",
          "            │                         └─Projection 100000000.00 mpp[tiflash]  tpcc.stock.s_i_id, tpcc.stock.s_quantity, mod(mul(tpcc.stock.s_w_id, tpcc.stock.s_i_id), 10000)->Column#75",
          "            │                           └─TableFullScan 100000000.00 mpp[tiflash] table:stock keep order:false",
          "            └─ExchangeReceiver(Probe) 1620678.30 mpp[tiflash]  ",
          "              └─ExchangeSender 1620678.30 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: tpcc.item.i_id, collate: binary], [name: tpcc.stock.s_quantity, collate: binary]",
          "                └─Projection 1620678.30 mpp[tiflash]  tpcc.nation.n_name, tpcc.supplier.s_suppkey, tpcc.supplier.s_name, tpcc.supplier.s_address, tpcc.supplier.s_phone, tpcc.supplier.s_comment, tpcc.stock.s_quantity, tpcc.item.i_id, tpcc.item.i_name, tpcc.stock.s_i_id",
          "                  └─HashJoin 1620678.30 mpp[tiflash]  inner join, equal:[eq(tpcc.stock.s_i_id, tpcc.item.i_id)], other cond:eq(mod(mul(tpcc.stock.s_w_id, tpcc.item.i_id), 10000), tpcc.supplier.s_suppkey)",
          "                    ├─ExchangeReceiver(Build) 80000.00 mpp[tiflash]  ",
          "                    │ └─ExchangeSender 80000.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: tpcc.item.i_id, collate: binary]",
          "                    │   └─Selection 80000.00 mpp[tiflash]  like(tpcc.item.i_data, \"%b\", 92)",
          "                    │     └─TableFullScan 100000.00 mpp[tiflash] table:item keep order:false",
          "                    └─ExchangeReceiver(Probe) 2012882.45 mpp[tiflash]  ",
          "                      └─ExchangeSender 2012882.45 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: tpcc.stock.s_i_id, collate: binary]",
          "                        └─Projection 2012882.45 mpp[tiflash]  tpcc.nation.n_name, tpcc.supplier.s_suppkey, tpcc.supplier.s_name, tpcc.supplier.s_address, tpcc.supplier.s_phone, tpcc.supplier.s_comment, tpcc.stock.s_i_id, tpcc.stock.s_w_id, tpcc.stock.s_quantity, Column#71",
          "                          └─HashJoin 2012882.45 mpp[tiflash]  inner join, equal:[eq(tpcc.supplier.s_suppkey, Column#71)]",
          "                            ├─ExchangeReceiver(Build) 2000.00 mpp[tiflash]  ",
          "                            │ └─ExchangeSender 2000.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: tpcc.supplier.s_suppkey, collate: binary]",
          "                            │   └─Projection 2000.00 mpp[tiflash]  tpcc.nation.n_name, tpcc.supplier.s_suppkey, tpcc.supplier.s_name, tpcc.supplier.s_address, tpcc.supplier.s_phone, tpcc.supplier.s_comment, tpcc.supplier.s_nationkey",
          "                            │     └─HashJoin 2000.00 mpp[tiflash]  inner join, equal:[eq(tpcc.nation.n_nationkey, tpcc.supplier.s_nationkey)]",
          "                            │       ├─ExchangeReceiver(Build) 5.00 mpp[tiflash]  ",
          "                            │       │ └─ExchangeSender 5.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: tpcc.nation.n_nationkey, collate: binary]",
          "                            │       │   └─Projection 5.00 mpp[tiflash]  tpcc.nation.n_nationkey, tpcc.nation.n_name, tpcc.nation.n_regionkey",
          "                            │       │     └─HashJoin 5.00 mpp[tiflash]  inner join, equal:[eq(tpcc.region.r_regionkey, tpcc.nation.n_regionkey)]",
          "                            │       │       ├─ExchangeReceiver(Build) 1.00 mpp[tiflash]  ",
          "                            │       │       │ └─ExchangeSender 1.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: tpcc.region.r_regionkey, collate: binary]",
          "                            │       │       │   └─Selection 1.00 mpp[tiflash]  like(tpcc.region.r_name, \"EUROP%\", 92)",
          "                            │       │       │     └─TableFullScan 5.00 mpp[tiflash] table:region keep order:false",
          "                            │       │       └─ExchangeReceiver(Probe) 25.00 mpp[tiflash]  ",
          "                            │       │         └─ExchangeSender 25.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: tpcc.nation.n_regionkey, collate: binary]",
          "                            │       │           └─TableFullScan 25.00 mpp[tiflash] table:nation keep order:false",
          "                            │       └─ExchangeReceiver(Probe) 10000.00 mpp[tiflash]  ",
          "                            │         └─ExchangeSender 10000.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: tpcc.supplier.s_nationkey, collate: binary]",
          "                            │           └─TableFullScan 10000.00 mpp[tiflash] table:supplier keep order:false",
          "                            └─ExchangeReceiver(Probe) 100000000.00 mpp[tiflash]  ",
          "                              └─ExchangeSender 100000000.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: Column#71, collate: binary]",
          "                                └─Projection 100000000.00 mpp[tiflash]  tpcc.stock.s_i_id, tpcc.stock.s_w_id, tpcc.stock.s_quantity, mod(mul(tpcc.stock.s_w_id, tpcc.stock.s_i_id), 10000)->Column#71",
          "                                  └─Selection 100000000.00 mpp[tiflash]  not(isnull(tpcc.stock.s_quantity))",
          "                                    └─TableFullScan 100000000.00 mpp[tiflash] table:stock keep order:false"
        ]
      }
    ]
  },
  {
    "Name": "TestQ5",
    "Cases": [
      {
        "SQL": "SELECT n_name, SUM(ol_amount) AS revenue FROM customer, orders, order_line, stock, supplier, nation, region WHERE c_id = o_c_id AND c_w_id = o_w_id AND c_d_id = o_d_id AND ol_o_id = o_id AND ol_w_id = o_w_id AND ol_d_id = o_d_id AND ol_w_id = s_w_id AND ol_i_id = s_i_id AND MOD((s_w_id * s_i_id), 10000) = s_suppkey AND ASCII(SUBSTR(c_state, 1, 1)) - 65 = s_nationkey AND s_nationkey = n_nationkey AND n_regionkey = r_regionkey AND r_name = 'EUROPE' AND o_entry_d >= '2007-01-02 00:00:00.000000' GROUP BY n_name;",
        "Result": [
          "TableReader 5.00 root  MppVersion: 3, data:ExchangeSender",
          "└─ExchangeSender 5.00 mpp[tiflash]  ExchangeType: PassThrough",
          "  └─Projection 5.00 mpp[tiflash]  tpcc.nation.n_name, Column#75",
          "    └─Projection 5.00 mpp[tiflash]  Column#75, tpcc.nation.n_name",
          "      └─HashAgg 5.00 mpp[tiflash]  group by:tpcc.nation.n_name, funcs:sum(Column#132)->Column#75, funcs:firstrow(tpcc.nation.n_name)->tpcc.nation.n_name",
          "        └─ExchangeReceiver 5.00 mpp[tiflash]  ",
          "          └─ExchangeSender 5.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: tpcc.nation.n_name, collate: utf8mb4_bin]",
          "            └─HashAgg 5.00 mpp[tiflash]  group by:tpcc.nation.n_name, funcs:sum(tpcc.order_line.ol_amount)->Column#132",
          "              └─Projection 2307115560.97 mpp[tiflash]  tpcc.order_line.ol_amount, tpcc.nation.n_name",
          "                └─Projection 2307115560.97 mpp[tiflash]  tpcc.nation.n_name, tpcc.order_line.ol_amount, tpcc.supplier.s_nationkey, Column#94",
          "                  └─HashJoin 2307115560.97 mpp[tiflash]  inner join, equal:[eq(tpcc.nation.n_nationkey, tpcc.supplier.s_nationkey) eq(tpcc.nation.n_nationkey, Column#94)]",
          "                    ├─ExchangeReceiver(Build) 5.00 mpp[tiflash]  ",
          "                    │ └─ExchangeSender 5.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: tpcc.nation.n_nationkey, collate: binary], [name: tpcc.nation.n_nationkey, collate: binary]",
          "                    │   └─Projection 5.00 mpp[tiflash]  tpcc.nation.n_nationkey, tpcc.nation.n_name, tpcc.nation.n_regionkey",
          "                    │     └─HashJoin 5.00 mpp[tiflash]  inner join, equal:[eq(tpcc.region.r_regionkey, tpcc.nation.n_regionkey)]",
          "                    │       ├─ExchangeReceiver(Build) 1.00 mpp[tiflash]  ",
          "                    │       │ └─ExchangeSender 1.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: tpcc.region.r_regionkey, collate: binary]",
          "                    │       │   └─Selection 1.00 mpp[tiflash]  eq(tpcc.region.r_name, \"EUROPE\")",
          "                    │       │     └─TableFullScan 5.00 mpp[tiflash] table:region keep order:false",
          "                    │       └─ExchangeReceiver(Probe) 25.00 mpp[tiflash]  ",
          "                    │         └─ExchangeSender 25.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: tpcc.nation.n_regionkey, collate: binary]",
          "                    │           └─TableFullScan 25.00 mpp[tiflash] table:nation keep order:false",
          "                    └─ExchangeReceiver(Probe) 311922034240.24 mpp[tiflash]  ",
          "                      └─ExchangeSender 311922034240.24 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: tpcc.supplier.s_nationkey, collate: binary], [name: Column#94, collate: binary]",
          "                        └─Projection 311922034240.24 mpp[tiflash]  tpcc.order_line.ol_amount, tpcc.supplier.s_nationkey, minus(ascii(substr(tpcc.customer.c_state, 1, 1)), 65)->Column#94",
          "                          └─Projection 311922034240.24 mpp[tiflash]  tpcc.customer.c_state, tpcc.order_line.ol_amount, tpcc.supplier.s_nationkey",
          "                            └─Projection 311922034240.24 mpp[tiflash]  tpcc.supplier.s_nationkey, tpcc.customer.c_state, tpcc.order_line.ol_amount, Column#76, Column#77, Column#78, Column#79, Column#80, Column#81, Column#82, Column#83, Column#84",
          "                              └─HashJoin 311922034240.24 mpp[tiflash]  inner join, equal:[eq(tpcc.supplier.s_suppkey, Column#76) eq(tpcc.supplier.s_suppkey, Column#77) eq(tpcc.supplier.s_suppkey, Column#78) eq(tpcc.supplier.s_suppkey, Column#79) eq(tpcc.supplier.s_suppkey, Column#80) eq(tpcc.supplier.s_suppkey, Column#81) eq(tpcc.supplier.s_suppkey, Column#82) eq(tpcc.supplier.s_nationkey, Column#83) eq(tpcc.supplier.s_suppkey, Column#84)]",
          "                                ├─ExchangeReceiver(Build) 10000.00 mpp[tiflash]  ",
          "                                │ └─ExchangeSender 10000.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: tpcc.supplier.s_suppkey, collate: binary], [name: tpcc.supplier.s_suppkey, collate: binary], [name: tpcc.supplier.s_suppkey, collate: binary], [name: tpcc.supplier.s_suppkey, collate: binary], [name: tpcc.supplier.s_suppkey, collate: binary], [name: tpcc.supplier.s_suppkey, collate: binary], [name: tpcc.supplier.s_suppkey, collate: binary], [name: tpcc.supplier.s_nationkey, collate: binary], [name: tpcc.supplier.s_suppkey, collate: binary]",
          "                                │   └─TableFullScan 10000.00 mpp[tiflash] table:supplier keep order:false",
          "                                └─ExchangeReceiver(Probe) 3132905604950.64 mpp[tiflash]  ",
          "                                  └─ExchangeSender 3132905604950.64 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: Column#76, collate: binary], [name: Column#77, collate: binary], [name: Column#78, collate: binary], [name: Column#79, collate: binary], [name: Column#80, collate: binary], [name: Column#81, collate: binary], [name: Column#82, collate: binary], [name: Column#83, collate: binary], [name: Column#84, collate: binary]",
          "                                    └─Projection 3132905604950.64 mpp[tiflash]  tpcc.customer.c_state, tpcc.order_line.ol_amount, mod(mul(tpcc.order_line.ol_w_id, tpcc.order_line.ol_i_id), 10000)->Column#76, mod(mul(tpcc.orders.o_w_id, tpcc.order_line.ol_i_id), 10000)->Column#77, mod(mul(tpcc.customer.c_w_id, tpcc.order_line.ol_i_id), 10000)->Column#78, mod(mul(tpcc.stock.s_w_id, tpcc.order_line.ol_i_id), 10000)->Column#79, mod(mul(tpcc.order_line.ol_w_id, tpcc.stock.s_i_id), 10000)->Column#80, mod(mul(tpcc.orders.o_w_id, tpcc.stock.s_i_id), 10000)->Column#81, mod(mul(tpcc.customer.c_w_id, tpcc.stock.s_i_id), 10000)->Column#82, minus(ascii(substr(tpcc.customer.c_state, 1, 1)), 65)->Column#83, mod(mul(tpcc.stock.s_w_id, tpcc.stock.s_i_id), 10000)->Column#84",
          "                                      └─Projection 3132905604950.64 mpp[tiflash]  tpcc.customer.c_w_id, tpcc.customer.c_state, tpcc.orders.o_w_id, tpcc.order_line.ol_w_id, tpcc.order_line.ol_i_id, tpcc.order_line.ol_amount, tpcc.stock.s_i_id, tpcc.stock.s_w_id",
          "                                        └─HashJoin 3132905604950.64 mpp[tiflash]  inner join, equal:[eq(tpcc.order_line.ol_w_id, tpcc.stock.s_w_id) eq(tpcc.order_line.ol_i_id, tpcc.stock.s_i_id)]",
          "                                          ├─ExchangeReceiver(Build) 100000000.00 mpp[tiflash]  ",
          "                                          │ └─ExchangeSender 100000000.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: tpcc.stock.s_w_id, collate: binary], [name: tpcc.stock.s_i_id, collate: binary]",
          "                                          │   └─TableFullScan 100000000.00 mpp[tiflash] table:stock keep order:false",
          "                                          └─ExchangeReceiver(Probe) 3032548362493.69 mpp[tiflash]  ",
          "                                            └─ExchangeSender 3032548362493.69 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: tpcc.order_line.ol_w_id, collate: binary], [name: tpcc.order_line.ol_i_id, collate: binary]",
          "                                              └─Projection 3032548362493.69 mpp[tiflash]  tpcc.customer.c_w_id, tpcc.customer.c_state, tpcc.orders.o_w_id, tpcc.order_line.ol_w_id, tpcc.order_line.ol_i_id, tpcc.order_line.ol_amount, tpcc.order_line.ol_o_id, tpcc.order_line.ol_d_id",
          "                                                └─HashJoin 3032548362493.69 mpp[tiflash]  inner join, equal:[eq(tpcc.orders.o_id, tpcc.order_line.ol_o_id) eq(tpcc.orders.o_w_id, tpcc.order_line.ol_w_id) eq(tpcc.orders.o_d_id, tpcc.order_line.ol_d_id)]",
          "                                                  ├─ExchangeReceiver(Build) 30325621.00 mpp[tiflash]  ",
          "                                                  │ └─ExchangeSender 30325621.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: tpcc.orders.o_id, collate: binary], [name: tpcc.orders.o_w_id, collate: binary], [name: tpcc.orders.o_d_id, collate: binary]",
          "                                                  │   └─Projection 30325621.00 mpp[tiflash]  tpcc.customer.c_w_id, tpcc.customer.c_state, tpcc.orders.o_id, tpcc.orders.o_d_id, tpcc.orders.o_w_id, tpcc.orders.o_c_id",
          "                                                  │     └─HashJoin 30325621.00 mpp[tiflash]  inner join, equal:[eq(tpcc.customer.c_id, tpcc.orders.o_c_id) eq(tpcc.customer.c_w_id, tpcc.orders.o_w_id) eq(tpcc.customer.c_d_id, tpcc.orders.o_d_id)]",
          "                                                  │       ├─ExchangeReceiver(Build) 30000000.00 mpp[tiflash]  ",
          "                                                  │       │ └─ExchangeSender 30000000.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: tpcc.customer.c_id, collate: binary], [name: tpcc.customer.c_w_id, collate: binary], [name: tpcc.customer.c_d_id, collate: binary]",
          "                                                  │       │   └─TableFullScan 30000000.00 mpp[tiflash] table:customer keep order:false",
          "                                                  │       └─ExchangeReceiver(Probe) 30325621.00 mpp[tiflash]  ",
          "                                                  │         └─ExchangeSender 30325621.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: tpcc.orders.o_c_id, collate: binary], [name: tpcc.orders.o_w_id, collate: binary], [name: tpcc.orders.o_d_id, collate: binary]",
          "                                                  │           └─Selection 30325621.00 mpp[tiflash]  ge(tpcc.orders.o_entry_d, 2007-01-02 00:00:00.000000), not(isnull(tpcc.orders.o_c_id))",
          "                                                  │             └─TableFullScan 30325621.00 mpp[tiflash] table:orders keep order:false",
          "                                                  └─ExchangeReceiver(Probe) 303255691.00 mpp[tiflash]  ",
          "                                                    └─ExchangeSender 303255691.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: tpcc.order_line.ol_o_id, collate: binary], [name: tpcc.order_line.ol_w_id, collate: binary], [name: tpcc.order_line.ol_d_id, collate: binary]",
          "                                                      └─TableFullScan 303255691.00 mpp[tiflash] table:order_line keep order:false"
        ]
      }
    ]
  }
]
