[
  {
    "Name": "TestQ1",
    "Cases": [
      {
        "SQL": "explain format='brief' SELECT l_returnflag, l_linestatus, SUM(l_quantity) AS sum_qty, SUM(l_extendedprice) AS sum_base_price, SUM(l_extendedprice * (1 - l_discount)) AS sum_disc_price, SUM(l_extendedprice * (1 - l_discount) * (1 + l_tax)) AS sum_charge, AVG(l_quantity) AS avg_qty, AVG(l_extendedprice) AS avg_price, AVG(l_discount) AS avg_disc, COUNT(*) AS count_order FROM lineitem WHERE l_shipdate <= DATE_SUB('1998-12-01', INTERVAL 108 DAY) GROUP BY l_returnflag, l_linestatus ORDER BY l_returnflag, l_linestatus;",
        "Result": [
          "Sort 2658.67 root  test.lineitem.l_returnflag, test.lineitem.l_linestatus",
          "└─TableReader 2658.67 root  MppVersion: 3, data:ExchangeSender",
          "  └─ExchangeSender 2658.67 mpp[tiflash]  ExchangeType: PassThrough",
          "    └─Projection 2658.67 mpp[tiflash]  test.lineitem.l_returnflag, test.lineitem.l_linestatus, Column#17, Column#18, Column#19, Column#20, Column#21, Column#22, Column#23, Column#24",
          "      └─Projection 2658.67 mpp[tiflash]  Column#17, Column#18, Column#19, Column#20, div(Column#21, cast(case(eq(Column#70, 0), 1, Column#70), decimal(20,0) BINARY))->Column#21, div(Column#22, cast(case(eq(Column#71, 0), 1, Column#71), decimal(20,0) BINARY))->Column#22, div(Column#23, cast(case(eq(Column#72, 0), 1, Column#72), decimal(20,0) BINARY))->Column#23, Column#24, test.lineitem.l_returnflag, test.lineitem.l_linestatus",
          "        └─HashAgg 2658.67 mpp[tiflash]  group by:Column#100, Column#99, funcs:sum(Column#89)->Column#17, funcs:sum(Column#90)->Column#18, funcs:sum(Column#91)->Column#19, funcs:sum(Column#92)->Column#20, funcs:count(Column#93)->Column#70, funcs:sum(Column#94)->Column#21, funcs:count(Column#95)->Column#71, funcs:sum(Column#96)->Column#22, funcs:count(Column#97)->Column#72, funcs:sum(Column#98)->Column#23, funcs:count(1)->Column#24, funcs:firstrow(Column#99)->test.lineitem.l_returnflag, funcs:firstrow(Column#100)->test.lineitem.l_linestatus",
          "          └─Projection 3323.33 mpp[tiflash]  test.lineitem.l_quantity->Column#89, test.lineitem.l_extendedprice->Column#90, mul(test.lineitem.l_extendedprice, minus(1, test.lineitem.l_discount))->Column#91, mul(mul(test.lineitem.l_extendedprice, minus(1, test.lineitem.l_discount)), plus(1, test.lineitem.l_tax))->Column#92, test.lineitem.l_quantity->Column#93, test.lineitem.l_quantity->Column#94, test.lineitem.l_extendedprice->Column#95, test.lineitem.l_extendedprice->Column#96, test.lineitem.l_discount->Column#97, test.lineitem.l_discount->Column#98, test.lineitem.l_returnflag->Column#99, test.lineitem.l_linestatus->Column#100",
          "            └─ExchangeReceiver 3323.33 mpp[tiflash]  ",
          "              └─ExchangeSender 3323.33 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: test.lineitem.l_returnflag, collate: utf8mb4_bin], [name: test.lineitem.l_linestatus, collate: utf8mb4_bin]",
          "                └─Selection 3323.33 mpp[tiflash]  le(test.lineitem.l_shipdate, 1998-08-15 00:00:00.000000)",
          "                  └─TableFullScan 10000.00 mpp[tiflash] table:lineitem pushed down filter:empty, keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestQ3",
    "Cases": [
      {
        "SQL": "explain format='brief' select /*+ HASH_JOIN(orders, lineitem, customer) */ l_orderkey, sum(l_extendedprice * (1 - l_discount)) as revenue, o_orderdate, o_shippriority from customer, orders, lineitem where c_mktsegment = 'AUTOMOBILE' and c_custkey = o_custkey and l_orderkey = o_orderkey and o_orderdate < '1995-03-13' and l_shipdate > '1995-03-13' group by l_orderkey, o_orderdate, o_shippriority order by revenue desc, o_orderdate limit 10;",
        "Result": [
          "Projection 10.00 root  test.lineitem.l_orderkey, Column#34, test.orders.o_orderdate, test.orders.o_shippriority",
          "└─TopN 10.00 root  Column#34:desc, test.orders.o_orderdate, offset:0, count:10",
          "  └─TableReader 10.00 root  MppVersion: 3, data:ExchangeSender",
          "    └─ExchangeSender 10.00 mpp[tiflash]  ExchangeType: PassThrough",
          "      └─TopN 10.00 mpp[tiflash]  Column#34:desc, test.orders.o_orderdate, offset:0, count:10",
          "        └─Projection 15.62 mpp[tiflash]  Column#34, test.orders.o_orderdate, test.orders.o_shippriority, test.lineitem.l_orderkey",
          "          └─HashAgg 15.62 mpp[tiflash]  group by:Column#48, Column#49, Column#50, funcs:sum(Column#47)->Column#34, funcs:firstrow(Column#48)->test.orders.o_orderdate, funcs:firstrow(Column#49)->test.orders.o_shippriority, funcs:firstrow(Column#50)->test.lineitem.l_orderkey",
          "            └─Projection 15.62 mpp[tiflash]  mul(test.lineitem.l_extendedprice, minus(1, test.lineitem.l_discount))->Column#47, test.orders.o_orderdate->Column#48, test.orders.o_shippriority->Column#49, test.lineitem.l_orderkey->Column#50",
          "              └─Projection 15.62 mpp[tiflash]  test.orders.o_orderdate, test.orders.o_shippriority, test.lineitem.l_orderkey, test.lineitem.l_extendedprice, test.lineitem.l_discount",
          "                └─HashJoin 15.62 mpp[tiflash]  inner join, equal:[eq(test.orders.o_orderkey, test.lineitem.l_orderkey)]",
          "                  ├─ExchangeReceiver(Build) 12.50 mpp[tiflash]  ",
          "                  │ └─ExchangeSender 12.50 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: test.orders.o_orderkey, collate: binary]",
          "                  │   └─Projection 12.50 mpp[tiflash]  test.orders.o_orderkey, test.orders.o_orderdate, test.orders.o_shippriority, test.orders.o_custkey",
          "                  │     └─HashJoin 12.50 mpp[tiflash]  inner join, equal:[eq(test.customer.c_custkey, test.orders.o_custkey)]",
          "                  │       ├─ExchangeReceiver(Build) 10.00 mpp[tiflash]  ",
          "                  │       │ └─ExchangeSender 10.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: test.customer.c_custkey, collate: binary]",
          "                  │       │   └─TableFullScan 10.00 mpp[tiflash] table:customer pushed down filter:eq(test.customer.c_mktsegment, \"AUTOMOBILE\"), keep order:false, stats:pseudo",
          "                  │       └─ExchangeReceiver(Probe) 3323.33 mpp[tiflash]  ",
          "                  │         └─ExchangeSender 3323.33 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: test.orders.o_custkey, collate: binary]",
          "                  │           └─Selection 3323.33 mpp[tiflash]  lt(test.orders.o_orderdate, 1995-03-13 00:00:00.000000)",
          "                  │             └─TableFullScan 10000.00 mpp[tiflash] table:orders pushed down filter:empty, keep order:false, stats:pseudo",
          "                  └─ExchangeReceiver(Probe) 3333.33 mpp[tiflash]  ",
          "                    └─ExchangeSender 3333.33 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: test.lineitem.l_orderkey, collate: binary]",
          "                      └─Selection 3333.33 mpp[tiflash]  gt(test.lineitem.l_shipdate, 1995-03-13 00:00:00.000000)",
          "                        └─TableFullScan 10000.00 mpp[tiflash] table:lineitem pushed down filter:empty, keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain format='brief' SELECT /*+ HASH_JOIN(orders, lineitem, customer) */ l_orderkey, SUM(l_extendedprice * (1 - l_discount)) AS revenue, o_orderdate, o_shippriority FROM customer AS c LEFT JOIN orders AS o ON c.c_custkey = o.o_custkey LEFT JOIN lineitem AS l ON l.l_orderkey = o.o_orderkey WHERE c.c_mktsegment = 'AUTOMOBILE' AND o.o_orderdate < '1995-03-13' AND l.l_shipdate > '1995-03-13' GROUP BY l_orderkey, o_orderdate, o_shippriority ORDER BY revenue DESC, o_orderdate LIMIT 10;",
        "Result": [
          "Projection 10.00 root  test.lineitem.l_orderkey, Column#34, test.orders.o_orderdate, test.orders.o_shippriority",
          "└─TopN 10.00 root  Column#34:desc, test.orders.o_orderdate, offset:0, count:10",
          "  └─HashAgg 15.62 root  group by:Column#48, Column#49, Column#50, funcs:sum(Column#47)->Column#34, funcs:firstrow(Column#48)->test.orders.o_orderdate, funcs:firstrow(Column#49)->test.orders.o_shippriority, funcs:firstrow(Column#50)->test.lineitem.l_orderkey",
          "    └─Projection 15.62 root  mul(test.lineitem.l_extendedprice, minus(1, test.lineitem.l_discount))->Column#47, test.orders.o_orderdate->Column#48, test.orders.o_shippriority->Column#49, test.lineitem.l_orderkey->Column#50",
          "      └─IndexJoin 15.62 root  inner join, inner:TableReader, outer key:test.orders.o_orderkey, inner key:test.lineitem.l_orderkey, equal cond:eq(test.orders.o_orderkey, test.lineitem.l_orderkey)",
          "        ├─TableReader(Build) 12.50 root  MppVersion: 3, data:ExchangeSender",
          "        │ └─ExchangeSender 12.50 mpp[tiflash]  ExchangeType: PassThrough",
          "        │   └─Projection 12.50 mpp[tiflash]  test.orders.o_orderkey, test.orders.o_orderdate, test.orders.o_shippriority, test.orders.o_custkey",
          "        │     └─HashJoin 12.50 mpp[tiflash]  inner join, equal:[eq(test.customer.c_custkey, test.orders.o_custkey)]",
          "        │       ├─ExchangeReceiver(Build) 10.00 mpp[tiflash]  ",
          "        │       │ └─ExchangeSender 10.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: test.customer.c_custkey, collate: binary]",
          "        │       │   └─TableFullScan 10.00 mpp[tiflash] table:c pushed down filter:eq(test.customer.c_mktsegment, \"AUTOMOBILE\"), keep order:false, stats:pseudo",
          "        │       └─ExchangeReceiver(Probe) 3323.33 mpp[tiflash]  ",
          "        │         └─ExchangeSender 3323.33 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: test.orders.o_custkey, collate: binary]",
          "        │           └─Selection 3323.33 mpp[tiflash]  lt(test.orders.o_orderdate, 1995-03-13 00:00:00.000000)",
          "        │             └─TableFullScan 10000.00 mpp[tiflash] table:o pushed down filter:empty, keep order:false, stats:pseudo",
          "        └─TableReader(Probe) 4.17 root  data:Selection",
          "          └─Selection 4.17 cop[tikv]  gt(test.lineitem.l_shipdate, 1995-03-13 00:00:00.000000)",
          "            └─TableRangeScan 12.50 cop[tikv] table:l range: decided by [eq(test.lineitem.l_orderkey, test.orders.o_orderkey)], keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain format='brief' SELECT /*+ SHUFFLE_JOIN(orders, lineitem) */ o.o_orderdate, SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue FROM orders AS o JOIN lineitem AS l ON o.o_orderkey = l.l_orderkey WHERE o.o_orderdate BETWEEN '1994-01-01' AND '1994-12-31' GROUP BY o.o_orderdate ORDER BY revenue DESC LIMIT 10;",
        "Result": [
          "Projection 10.00 root  test.orders.o_orderdate, Column#26",
          "└─TopN 10.00 root  Column#26:desc, offset:0, count:10",
          "  └─HashAgg 200.00 root  group by:Column#34, funcs:sum(Column#33)->Column#26, funcs:firstrow(Column#34)->test.orders.o_orderdate",
          "    └─Projection 312.50 root  mul(test.lineitem.l_extendedprice, minus(1, test.lineitem.l_discount))->Column#33, test.orders.o_orderdate->Column#34",
          "      └─IndexHashJoin 312.50 root  inner join, inner:TableReader, outer key:test.orders.o_orderkey, inner key:test.lineitem.l_orderkey, equal cond:eq(test.orders.o_orderkey, test.lineitem.l_orderkey)",
          "        ├─TableReader(Build) 250.00 root  MppVersion: 3, data:ExchangeSender",
          "        │ └─ExchangeSender 250.00 mpp[tiflash]  ExchangeType: PassThrough",
          "        │   └─TableFullScan 250.00 mpp[tiflash] table:o pushed down filter:ge(test.orders.o_orderdate, 1994-01-01 00:00:00.000000), le(test.orders.o_orderdate, 1994-12-31 00:00:00.000000), keep order:false, stats:pseudo",
          "        └─TableReader(Probe) 250.00 root  data:TableRangeScan",
          "          └─TableRangeScan 250.00 cop[tikv] table:l range: decided by [eq(test.lineitem.l_orderkey, test.orders.o_orderkey)], keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestQ4",
    "Cases": [
      {
        "SQL": "SELECT o_orderpriority, COUNT(*) AS order_count FROM orders WHERE o_orderdate >= '1995-01-01' AND o_orderdate < DATE_ADD('1995-01-01', INTERVAL '3' MONTH) AND EXISTS (SELECT * FROM lineitem WHERE l_orderkey = o_orderkey AND l_commitdate < l_receiptdate) GROUP BY o_orderpriority ORDER BY o_orderpriority;",
        "Result": [
          "Sort_10 1.00 37804480154.54 (((((cpu(10*3*tidb_cpu_factor(49.9))) + (((cpu(10*3*tidb_cpu_factor(49.9))) + ((((((cpu(1.5e+09*filters(2)*tiflash_cpu_factor(2.4))) + (((scan(1.5e+09*logrowsize(46.17)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(46.17)*tiflash_scan_factor(11.6))))*1.00))) + (net(5.645217633333338e+07*rowsize(46.17)*tidb_flash_net_factor(2.2))))/15.00)*1.00) + (cpu(5.645217633333338e+07*filters(0)*tidb_cpu_factor(49.9))) + (cpu(5.645217633333338e+07*10*tidb_cpu_factor(49.9))) + (((((((((cpu(1*filters(1)*tikv_cpu_factor(49.9))) + ((scan(1*logrowsize(291)*tikv_scan_factor(40.7)))*1.00)) + (net(0.8*rowsize(24)*tidb_kv_net_factor(3.96))))/15.00)*1.00)*56452176.33)/6.00) + (cpu(4.516174106666671e+07*filters(0)*tidb_cpu_factor(49.9))) + ((hashkey(4.516174106666671e+07*0*tidb_cpu_factor(49.9))) + (hashmem(4.516174106666671e+07*24*tidb_mem_factor(0.2))) + (hashbuild(4.516174106666671e+07*tidb_cpu_factor(49.9)))))/5.00))*1.00) + (((agg(4.516174106666671e+07*aggs(2)*tidb_cpu_factor(49.9))) + (group(4.516174106666671e+07*cols(0.01)*tidb_cpu_factor(49.9))) + ((hashkey(1*1*tidb_cpu_factor(49.9))) + (hashmem(1*23*tidb_mem_factor(0.2))) + (hashbuild(1*tidb_cpu_factor(49.9)))) + ((hashkey(4.516174106666671e+07*1*tidb_cpu_factor(49.9))) + (hashprobe(4.516174106666671e+07*tidb_cpu_factor(49.9)))))/5.00))*1.00) + ((cpu(1*filters(0.02)*tidb_cpu_factor(49.9)))/5.00)) + ((exprCPU(1*0*tidb_cpu_factor(49.9))) + (orderCPU(1*log(1)*tidb_cpu_factor(49.9)))) + (sortMem(1*23*tidb_mem_factor(0.2))))*1.00 root  olap.orders.o_orderpriority",
          "└─Projection_12 1.00 37804480149.94 (((cpu(10*3*tidb_cpu_factor(49.9))) + (((cpu(10*3*tidb_cpu_factor(49.9))) + ((((((cpu(1.5e+09*filters(2)*tiflash_cpu_factor(2.4))) + (((scan(1.5e+09*logrowsize(46.17)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(46.17)*tiflash_scan_factor(11.6))))*1.00))) + (net(5.645217633333338e+07*rowsize(46.17)*tidb_flash_net_factor(2.2))))/15.00)*1.00) + (cpu(5.645217633333338e+07*filters(0)*tidb_cpu_factor(49.9))) + (cpu(5.645217633333338e+07*10*tidb_cpu_factor(49.9))) + (((((((((cpu(1*filters(1)*tikv_cpu_factor(49.9))) + ((scan(1*logrowsize(291)*tikv_scan_factor(40.7)))*1.00)) + (net(0.8*rowsize(24)*tidb_kv_net_factor(3.96))))/15.00)*1.00)*56452176.33)/6.00) + (cpu(4.516174106666671e+07*filters(0)*tidb_cpu_factor(49.9))) + ((hashkey(4.516174106666671e+07*0*tidb_cpu_factor(49.9))) + (hashmem(4.516174106666671e+07*24*tidb_mem_factor(0.2))) + (hashbuild(4.516174106666671e+07*tidb_cpu_factor(49.9)))))/5.00))*1.00) + (((agg(4.516174106666671e+07*aggs(2)*tidb_cpu_factor(49.9))) + (group(4.516174106666671e+07*cols(0.01)*tidb_cpu_factor(49.9))) + ((hashkey(1*1*tidb_cpu_factor(49.9))) + (hashmem(1*23*tidb_mem_factor(0.2))) + (hashbuild(1*tidb_cpu_factor(49.9)))) + ((hashkey(4.516174106666671e+07*1*tidb_cpu_factor(49.9))) + (hashprobe(4.516174106666671e+07*tidb_cpu_factor(49.9)))))/5.00))*1.00) + ((cpu(1*filters(0.02)*tidb_cpu_factor(49.9)))/5.00) root  olap.orders.o_orderpriority, Column#26",
          "  └─HashAgg_16 1.00 37804480149.74 ((cpu(10*3*tidb_cpu_factor(49.9))) + (((cpu(10*3*tidb_cpu_factor(49.9))) + ((((((cpu(1.5e+09*filters(2)*tiflash_cpu_factor(2.4))) + (((scan(1.5e+09*logrowsize(46.17)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(46.17)*tiflash_scan_factor(11.6))))*1.00))) + (net(5.645217633333338e+07*rowsize(46.17)*tidb_flash_net_factor(2.2))))/15.00)*1.00) + (cpu(5.645217633333338e+07*filters(0)*tidb_cpu_factor(49.9))) + (cpu(5.645217633333338e+07*10*tidb_cpu_factor(49.9))) + (((((((((cpu(1*filters(1)*tikv_cpu_factor(49.9))) + ((scan(1*logrowsize(291)*tikv_scan_factor(40.7)))*1.00)) + (net(0.8*rowsize(24)*tidb_kv_net_factor(3.96))))/15.00)*1.00)*56452176.33)/6.00) + (cpu(4.516174106666671e+07*filters(0)*tidb_cpu_factor(49.9))) + ((hashkey(4.516174106666671e+07*0*tidb_cpu_factor(49.9))) + (hashmem(4.516174106666671e+07*24*tidb_mem_factor(0.2))) + (hashbuild(4.516174106666671e+07*tidb_cpu_factor(49.9)))))/5.00))*1.00) + (((agg(4.516174106666671e+07*aggs(2)*tidb_cpu_factor(49.9))) + (group(4.516174106666671e+07*cols(0.01)*tidb_cpu_factor(49.9))) + ((hashkey(1*1*tidb_cpu_factor(49.9))) + (hashmem(1*23*tidb_mem_factor(0.2))) + (hashbuild(1*tidb_cpu_factor(49.9)))) + ((hashkey(4.516174106666671e+07*1*tidb_cpu_factor(49.9))) + (hashprobe(4.516174106666671e+07*tidb_cpu_factor(49.9)))))/5.00))*1.00 root  group by:olap.orders.o_orderpriority, funcs:count(1)->Column#26, funcs:firstrow(olap.orders.o_orderpriority)->olap.orders.o_orderpriority",
          "    └─IndexJoin_29 45161741.07 35997114786.72 ((cpu(10*3*tidb_cpu_factor(49.9))) + ((((((cpu(1.5e+09*filters(2)*tiflash_cpu_factor(2.4))) + (((scan(1.5e+09*logrowsize(46.17)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(46.17)*tiflash_scan_factor(11.6))))*1.00))) + (net(5.645217633333338e+07*rowsize(46.17)*tidb_flash_net_factor(2.2))))/15.00)*1.00) + (cpu(5.645217633333338e+07*filters(0)*tidb_cpu_factor(49.9))) + (cpu(5.645217633333338e+07*10*tidb_cpu_factor(49.9))) + (((((((((cpu(1*filters(1)*tikv_cpu_factor(49.9))) + ((scan(1*logrowsize(291)*tikv_scan_factor(40.7)))*1.00)) + (net(0.8*rowsize(24)*tidb_kv_net_factor(3.96))))/15.00)*1.00)*56452176.33)/6.00) + (cpu(4.516174106666671e+07*filters(0)*tidb_cpu_factor(49.9))) + ((hashkey(4.516174106666671e+07*0*tidb_cpu_factor(49.9))) + (hashmem(4.516174106666671e+07*24*tidb_mem_factor(0.2))) + (hashbuild(4.516174106666671e+07*tidb_cpu_factor(49.9)))))/5.00))*1.00 root  semi join, inner:TableReader_25, left side:TableReader_61, outer key:olap.orders.o_orderkey, inner key:olap.lineitem.l_orderkey, equal cond:eq(olap.orders.o_orderkey, olap.lineitem.l_orderkey)",
          "      ├─TableReader_61(Build) 56452176.33 7275819553.60 (((((cpu(1.5e+09*filters(2)*tiflash_cpu_factor(2.4))) + (((scan(1.5e+09*logrowsize(46.17)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(46.17)*tiflash_scan_factor(11.6))))*1.00))) + (net(5.645217633333338e+07*rowsize(46.17)*tidb_flash_net_factor(2.2))))/15.00)*1.00 root  MppVersion: 3, data:ExchangeSender_60",
          "      │ └─ExchangeSender_60 56452176.33 103403219945.10 ((cpu(1.5e+09*filters(2)*tiflash_cpu_factor(2.4))) + (((scan(1.5e+09*logrowsize(46.17)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(46.17)*tiflash_scan_factor(11.6))))*1.00)) mpp[tiflash]  ExchangeType: PassThrough",
          "      │   └─TableFullScan_58 56452176.33 96203219945.10 ((scan(1.5e+09*logrowsize(46.17)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(46.17)*tiflash_scan_factor(11.6))))*1.00 mpp[tiflash] table:orders pushed down filter:ge(olap.orders.o_orderdate, 1995-01-01 00:00:00.000000), lt(olap.orders.o_orderdate, 1995-04-01 00:00:00.000000), keep order:false",
          "      └─TableReader_25(Probe) 45161741.07 30.60 ((((cpu(1*filters(1)*tikv_cpu_factor(49.9))) + ((scan(1*logrowsize(291)*tikv_scan_factor(40.7)))*1.00)) + (net(0.8*rowsize(24)*tidb_kv_net_factor(3.96))))/15.00)*1.00 root  data:Selection_24",
          "        └─Selection_24 45161741.07 383.02 (cpu(1*filters(1)*tikv_cpu_factor(49.9))) + ((scan(1*logrowsize(291)*tikv_scan_factor(40.7)))*1.00) cop[tikv]  lt(olap.lineitem.l_commitdate, olap.lineitem.l_receiptdate)",
          "          └─TableRangeScan_23 56452176.33 333.12 (scan(1*logrowsize(291)*tikv_scan_factor(40.7)))*1.00 cop[tikv] table:lineitem range: decided by [eq(olap.lineitem.l_orderkey, olap.orders.o_orderkey)], keep order:false"
        ]
      },
      {
        "SQL": "SELECT /*+ NO_INDEX_JOIN(orders, lineitem),NO_INDEX_HASH_JOIN(orders, lineitem) */ o_orderpriority, COUNT(*) AS order_count FROM orders WHERE o_orderdate >= '1995-01-01' AND o_orderdate < DATE_ADD('1995-01-01', INTERVAL '3' MONTH) AND EXISTS (SELECT * FROM lineitem WHERE l_orderkey = o_orderkey AND l_commitdate < l_receiptdate) GROUP BY o_orderpriority ORDER BY o_orderpriority;",
        "Result": [
          "Sort_10 1.00 51782161111.90 (((((cpu(10*3*tidb_cpu_factor(49.9))) + (((((((((((cpu(1.5e+09*filters(2)*tiflash_cpu_factor(2.4))) + (((scan(1.5e+09*logrowsize(46.17)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(46.17)*tiflash_scan_factor(11.6))))*1.00))) + (net(5.645217633333338e+07*rowsize(46.17)*tiflash_mpp_net_factor(1)))) + ((((cpu(5.999989709e+09*filters(1)*tiflash_cpu_factor(2.4))) + (((scan(5.999989709e+09*logrowsize(48)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(48)*tiflash_scan_factor(11.6))))*1.00))) + (net(4.7999917672e+09*rowsize(48)*tiflash_mpp_net_factor(1)))) + ((((hashkey(5.645217633333338e+07*1*tiflash_cpu_factor(2.4))) + (hashmem(5.645217633333338e+07*46.17*tiflash_mem_factor(0.05))) + (hashbuild(5.645217633333338e+07*tiflash_cpu_factor(2.4)))) + (cpu(5.645217633333338e+07*filters(0)*tiflash_cpu_factor(2.4))) + ((hashkey(4.7999917672e+09*1*tiflash_cpu_factor(2.4))) + (hashprobe(4.7999917672e+09*tiflash_cpu_factor(2.4)))) + (cpu(4.7999917672e+09*filters(0)*tiflash_cpu_factor(2.4))))/3.00))*1.00) + ((cpu(4.516174106666671e+07*filters(0.02)*tiflash_cpu_factor(2.4)))/5.00))) + (net(4.516174106666671e+07*rowsize(23)*tidb_flash_net_factor(2.2))))/15.00)*1.00) + (((agg(4.516174106666671e+07*aggs(2)*tidb_cpu_factor(49.9))) + (group(4.516174106666671e+07*cols(0.01)*tidb_cpu_factor(49.9))) + ((hashkey(1*1*tidb_cpu_factor(49.9))) + (hashmem(1*23*tidb_mem_factor(0.2))) + (hashbuild(1*tidb_cpu_factor(49.9)))) + ((hashkey(4.516174106666671e+07*1*tidb_cpu_factor(49.9))) + (hashprobe(4.516174106666671e+07*tidb_cpu_factor(49.9)))))/5.00))*1.00) + ((cpu(1*filters(0.02)*tidb_cpu_factor(49.9)))/5.00)) + ((exprCPU(1*0*tidb_cpu_factor(49.9))) + (orderCPU(1*log(1)*tidb_cpu_factor(49.9)))) + (sortMem(1*23*tidb_mem_factor(0.2))))*1.00 root  olap.orders.o_orderpriority",
          "└─Projection_12 1.00 51782161107.30 (((cpu(10*3*tidb_cpu_factor(49.9))) + (((((((((((cpu(1.5e+09*filters(2)*tiflash_cpu_factor(2.4))) + (((scan(1.5e+09*logrowsize(46.17)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(46.17)*tiflash_scan_factor(11.6))))*1.00))) + (net(5.645217633333338e+07*rowsize(46.17)*tiflash_mpp_net_factor(1)))) + ((((cpu(5.999989709e+09*filters(1)*tiflash_cpu_factor(2.4))) + (((scan(5.999989709e+09*logrowsize(48)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(48)*tiflash_scan_factor(11.6))))*1.00))) + (net(4.7999917672e+09*rowsize(48)*tiflash_mpp_net_factor(1)))) + ((((hashkey(5.645217633333338e+07*1*tiflash_cpu_factor(2.4))) + (hashmem(5.645217633333338e+07*46.17*tiflash_mem_factor(0.05))) + (hashbuild(5.645217633333338e+07*tiflash_cpu_factor(2.4)))) + (cpu(5.645217633333338e+07*filters(0)*tiflash_cpu_factor(2.4))) + ((hashkey(4.7999917672e+09*1*tiflash_cpu_factor(2.4))) + (hashprobe(4.7999917672e+09*tiflash_cpu_factor(2.4)))) + (cpu(4.7999917672e+09*filters(0)*tiflash_cpu_factor(2.4))))/3.00))*1.00) + ((cpu(4.516174106666671e+07*filters(0.02)*tiflash_cpu_factor(2.4)))/5.00))) + (net(4.516174106666671e+07*rowsize(23)*tidb_flash_net_factor(2.2))))/15.00)*1.00) + (((agg(4.516174106666671e+07*aggs(2)*tidb_cpu_factor(49.9))) + (group(4.516174106666671e+07*cols(0.01)*tidb_cpu_factor(49.9))) + ((hashkey(1*1*tidb_cpu_factor(49.9))) + (hashmem(1*23*tidb_mem_factor(0.2))) + (hashbuild(1*tidb_cpu_factor(49.9)))) + ((hashkey(4.516174106666671e+07*1*tidb_cpu_factor(49.9))) + (hashprobe(4.516174106666671e+07*tidb_cpu_factor(49.9)))))/5.00))*1.00) + ((cpu(1*filters(0.02)*tidb_cpu_factor(49.9)))/5.00) root  olap.orders.o_orderpriority, Column#26",
          "  └─HashAgg_16 1.00 51782161107.10 ((cpu(10*3*tidb_cpu_factor(49.9))) + (((((((((((cpu(1.5e+09*filters(2)*tiflash_cpu_factor(2.4))) + (((scan(1.5e+09*logrowsize(46.17)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(46.17)*tiflash_scan_factor(11.6))))*1.00))) + (net(5.645217633333338e+07*rowsize(46.17)*tiflash_mpp_net_factor(1)))) + ((((cpu(5.999989709e+09*filters(1)*tiflash_cpu_factor(2.4))) + (((scan(5.999989709e+09*logrowsize(48)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(48)*tiflash_scan_factor(11.6))))*1.00))) + (net(4.7999917672e+09*rowsize(48)*tiflash_mpp_net_factor(1)))) + ((((hashkey(5.645217633333338e+07*1*tiflash_cpu_factor(2.4))) + (hashmem(5.645217633333338e+07*46.17*tiflash_mem_factor(0.05))) + (hashbuild(5.645217633333338e+07*tiflash_cpu_factor(2.4)))) + (cpu(5.645217633333338e+07*filters(0)*tiflash_cpu_factor(2.4))) + ((hashkey(4.7999917672e+09*1*tiflash_cpu_factor(2.4))) + (hashprobe(4.7999917672e+09*tiflash_cpu_factor(2.4)))) + (cpu(4.7999917672e+09*filters(0)*tiflash_cpu_factor(2.4))))/3.00))*1.00) + ((cpu(4.516174106666671e+07*filters(0.02)*tiflash_cpu_factor(2.4)))/5.00))) + (net(4.516174106666671e+07*rowsize(23)*tidb_flash_net_factor(2.2))))/15.00)*1.00) + (((agg(4.516174106666671e+07*aggs(2)*tidb_cpu_factor(49.9))) + (group(4.516174106666671e+07*cols(0.01)*tidb_cpu_factor(49.9))) + ((hashkey(1*1*tidb_cpu_factor(49.9))) + (hashmem(1*23*tidb_mem_factor(0.2))) + (hashbuild(1*tidb_cpu_factor(49.9)))) + ((hashkey(4.516174106666671e+07*1*tidb_cpu_factor(49.9))) + (hashprobe(4.516174106666671e+07*tidb_cpu_factor(49.9)))))/5.00))*1.00 root  group by:olap.orders.o_orderpriority, funcs:count(1)->Column#26, funcs:firstrow(olap.orders.o_orderpriority)->olap.orders.o_orderpriority",
          "    └─TableReader_46 45161741.07 49974795744.08 ((((((((((cpu(1.5e+09*filters(2)*tiflash_cpu_factor(2.4))) + (((scan(1.5e+09*logrowsize(46.17)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(46.17)*tiflash_scan_factor(11.6))))*1.00))) + (net(5.645217633333338e+07*rowsize(46.17)*tiflash_mpp_net_factor(1)))) + ((((cpu(5.999989709e+09*filters(1)*tiflash_cpu_factor(2.4))) + (((scan(5.999989709e+09*logrowsize(48)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(48)*tiflash_scan_factor(11.6))))*1.00))) + (net(4.7999917672e+09*rowsize(48)*tiflash_mpp_net_factor(1)))) + ((((hashkey(5.645217633333338e+07*1*tiflash_cpu_factor(2.4))) + (hashmem(5.645217633333338e+07*46.17*tiflash_mem_factor(0.05))) + (hashbuild(5.645217633333338e+07*tiflash_cpu_factor(2.4)))) + (cpu(5.645217633333338e+07*filters(0)*tiflash_cpu_factor(2.4))) + ((hashkey(4.7999917672e+09*1*tiflash_cpu_factor(2.4))) + (hashprobe(4.7999917672e+09*tiflash_cpu_factor(2.4)))) + (cpu(4.7999917672e+09*filters(0)*tiflash_cpu_factor(2.4))))/3.00))*1.00) + ((cpu(4.516174106666671e+07*filters(0.02)*tiflash_cpu_factor(2.4)))/5.00))) + (net(4.516174106666671e+07*rowsize(23)*tidb_flash_net_factor(2.2))))/15.00)*1.00 root  MppVersion: 3, data:ExchangeSender_45",
          "      └─ExchangeSender_45 45161741.07 747336752063.26 (((((((cpu(1.5e+09*filters(2)*tiflash_cpu_factor(2.4))) + (((scan(1.5e+09*logrowsize(46.17)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(46.17)*tiflash_scan_factor(11.6))))*1.00))) + (net(5.645217633333338e+07*rowsize(46.17)*tiflash_mpp_net_factor(1)))) + ((((cpu(5.999989709e+09*filters(1)*tiflash_cpu_factor(2.4))) + (((scan(5.999989709e+09*logrowsize(48)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(48)*tiflash_scan_factor(11.6))))*1.00))) + (net(4.7999917672e+09*rowsize(48)*tiflash_mpp_net_factor(1)))) + ((((hashkey(5.645217633333338e+07*1*tiflash_cpu_factor(2.4))) + (hashmem(5.645217633333338e+07*46.17*tiflash_mem_factor(0.05))) + (hashbuild(5.645217633333338e+07*tiflash_cpu_factor(2.4)))) + (cpu(5.645217633333338e+07*filters(0)*tiflash_cpu_factor(2.4))) + ((hashkey(4.7999917672e+09*1*tiflash_cpu_factor(2.4))) + (hashprobe(4.7999917672e+09*tiflash_cpu_factor(2.4)))) + (cpu(4.7999917672e+09*filters(0)*tiflash_cpu_factor(2.4))))/3.00))*1.00) + ((cpu(4.516174106666671e+07*filters(0.02)*tiflash_cpu_factor(2.4)))/5.00)) mpp[tiflash]  ExchangeType: PassThrough",
          "        └─Projection_44 45161741.07 747336752063.26 ((((((cpu(1.5e+09*filters(2)*tiflash_cpu_factor(2.4))) + (((scan(1.5e+09*logrowsize(46.17)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(46.17)*tiflash_scan_factor(11.6))))*1.00))) + (net(5.645217633333338e+07*rowsize(46.17)*tiflash_mpp_net_factor(1)))) + ((((cpu(5.999989709e+09*filters(1)*tiflash_cpu_factor(2.4))) + (((scan(5.999989709e+09*logrowsize(48)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(48)*tiflash_scan_factor(11.6))))*1.00))) + (net(4.7999917672e+09*rowsize(48)*tiflash_mpp_net_factor(1)))) + ((((hashkey(5.645217633333338e+07*1*tiflash_cpu_factor(2.4))) + (hashmem(5.645217633333338e+07*46.17*tiflash_mem_factor(0.05))) + (hashbuild(5.645217633333338e+07*tiflash_cpu_factor(2.4)))) + (cpu(5.645217633333338e+07*filters(0)*tiflash_cpu_factor(2.4))) + ((hashkey(4.7999917672e+09*1*tiflash_cpu_factor(2.4))) + (hashprobe(4.7999917672e+09*tiflash_cpu_factor(2.4)))) + (cpu(4.7999917672e+09*filters(0)*tiflash_cpu_factor(2.4))))/3.00))*1.00) + ((cpu(4.516174106666671e+07*filters(0.02)*tiflash_cpu_factor(2.4)))/5.00) mpp[tiflash]  olap.orders.o_orderpriority, olap.orders.o_orderkey",
          "          └─HashJoin_20 45161741.07 747336318510.55 (((((cpu(1.5e+09*filters(2)*tiflash_cpu_factor(2.4))) + (((scan(1.5e+09*logrowsize(46.17)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(46.17)*tiflash_scan_factor(11.6))))*1.00))) + (net(5.645217633333338e+07*rowsize(46.17)*tiflash_mpp_net_factor(1)))) + ((((cpu(5.999989709e+09*filters(1)*tiflash_cpu_factor(2.4))) + (((scan(5.999989709e+09*logrowsize(48)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(48)*tiflash_scan_factor(11.6))))*1.00))) + (net(4.7999917672e+09*rowsize(48)*tiflash_mpp_net_factor(1)))) + ((((hashkey(5.645217633333338e+07*1*tiflash_cpu_factor(2.4))) + (hashmem(5.645217633333338e+07*46.17*tiflash_mem_factor(0.05))) + (hashbuild(5.645217633333338e+07*tiflash_cpu_factor(2.4)))) + (cpu(5.645217633333338e+07*filters(0)*tiflash_cpu_factor(2.4))) + ((hashkey(4.7999917672e+09*1*tiflash_cpu_factor(2.4))) + (hashprobe(4.7999917672e+09*tiflash_cpu_factor(2.4)))) + (cpu(4.7999917672e+09*filters(0)*tiflash_cpu_factor(2.4))))/3.00))*1.00 mpp[tiflash]  semi join, left side:ExchangeReceiver_39, equal:[eq(olap.orders.o_orderkey, olap.lineitem.l_orderkey)]",
          "            ├─ExchangeReceiver_39(Build) 56452176.33 106009616926.41 (((cpu(1.5e+09*filters(2)*tiflash_cpu_factor(2.4))) + (((scan(1.5e+09*logrowsize(46.17)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(46.17)*tiflash_scan_factor(11.6))))*1.00))) + (net(5.645217633333338e+07*rowsize(46.17)*tiflash_mpp_net_factor(1))) mpp[tiflash]  ",
          "            │ └─ExchangeSender_38 56452176.33 103403219945.10 ((cpu(1.5e+09*filters(2)*tiflash_cpu_factor(2.4))) + (((scan(1.5e+09*logrowsize(46.17)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(46.17)*tiflash_scan_factor(11.6))))*1.00)) mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: olap.orders.o_orderkey, collate: binary]",
          "            │   └─TableFullScan_36 56452176.33 96203219945.10 ((scan(1.5e+09*logrowsize(46.17)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(46.17)*tiflash_scan_factor(11.6))))*1.00 mpp[tiflash] table:orders pushed down filter:ge(olap.orders.o_orderdate, 1995-01-01 00:00:00.000000), lt(olap.orders.o_orderdate, 1995-04-01 00:00:00.000000), keep order:false",
          "            └─ExchangeReceiver_43(Probe) 4799991767.20 633512951324.79 (((cpu(5.999989709e+09*filters(1)*tiflash_cpu_factor(2.4))) + (((scan(5.999989709e+09*logrowsize(48)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(48)*tiflash_scan_factor(11.6))))*1.00))) + (net(4.7999917672e+09*rowsize(48)*tiflash_mpp_net_factor(1))) mpp[tiflash]  ",
          "              └─ExchangeSender_42 4799991767.20 403113346499.19 ((cpu(5.999989709e+09*filters(1)*tiflash_cpu_factor(2.4))) + (((scan(5.999989709e+09*logrowsize(48)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(48)*tiflash_scan_factor(11.6))))*1.00)) mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: olap.lineitem.l_orderkey, collate: binary]",
          "                └─Selection_41 4799991767.20 403113346499.19 (cpu(5.999989709e+09*filters(1)*tiflash_cpu_factor(2.4))) + (((scan(5.999989709e+09*logrowsize(48)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(48)*tiflash_scan_factor(11.6))))*1.00) mpp[tiflash]  lt(olap.lineitem.l_commitdate, olap.lineitem.l_receiptdate)",
          "                  └─TableFullScan_40 5999989709.00 388713371197.59 ((scan(5.999989709e+09*logrowsize(48)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(48)*tiflash_scan_factor(11.6))))*1.00 mpp[tiflash] table:lineitem pushed down filter:empty, keep order:false"
        ]
      }
    ]
  },
  {
    "Name": "TestQ9",
    "Cases": [
      {
        "SQL": "explain format='brief' SELECT nation, o_year, SUM(amount) AS sum_profit FROM (SELECT n_name AS nation, EXTRACT(YEAR FROM o_orderdate) AS o_year, l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity AS amount FROM part, supplier, lineitem, partsupp, orders, nation WHERE s_suppkey = l_suppkey AND ps_suppkey = l_suppkey AND ps_partkey = l_partkey AND p_partkey = l_partkey AND o_orderkey = l_orderkey AND s_nationkey = n_nationkey AND p_name LIKE '%dim%') AS profit GROUP BY nation, o_year ORDER BY nation, o_year DESC;",
        "Result": [
          "Sort 8000.00 root  test.nation.n_name, Column#52:desc",
          "└─TableReader 8000.00 root  MppVersion: 3, data:ExchangeSender",
          "  └─ExchangeSender 8000.00 mpp[tiflash]  ExchangeType: PassThrough",
          "    └─Projection 8000.00 mpp[tiflash]  test.nation.n_name, Column#52, Column#54",
          "      └─Projection 8000.00 mpp[tiflash]  Column#54, test.nation.n_name, Column#52",
          "        └─HashAgg 8000.00 mpp[tiflash]  group by:Column#72, test.nation.n_name, funcs:sum(Column#73)->Column#54, funcs:firstrow(test.nation.n_name)->test.nation.n_name, funcs:firstrow(Column#72)->Column#52",
          "          └─ExchangeReceiver 8000.00 mpp[tiflash]  ",
          "            └─ExchangeSender 8000.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: test.nation.n_name, collate: utf8mb4_bin]",
          "              └─HashAgg 8000.00 mpp[tiflash]  group by:Column#77, Column#78, funcs:sum(Column#76)->Column#73",
          "                └─Projection 24414.06 mpp[tiflash]  minus(mul(test.lineitem.l_extendedprice, minus(1, test.lineitem.l_discount)), mul(test.partsupp.ps_supplycost, test.lineitem.l_quantity))->Column#76, test.nation.n_name->Column#77, extract(YEAR, test.orders.o_orderdate)->Column#78",
          "                  └─Projection 24414.06 mpp[tiflash]  test.lineitem.l_quantity, test.lineitem.l_extendedprice, test.lineitem.l_discount, test.partsupp.ps_supplycost, test.orders.o_orderdate, test.nation.n_name",
          "                    └─Projection 24414.06 mpp[tiflash]  test.lineitem.l_quantity, test.lineitem.l_extendedprice, test.lineitem.l_discount, test.partsupp.ps_supplycost, test.orders.o_orderdate, test.nation.n_name, test.supplier.s_nationkey",
          "                      └─HashJoin 24414.06 mpp[tiflash]  inner join, equal:[eq(test.supplier.s_nationkey, test.nation.n_nationkey)]",
          "                        ├─ExchangeReceiver(Build) 10000.00 mpp[tiflash]  ",
          "                        │ └─ExchangeSender 10000.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: test.nation.n_nationkey, collate: binary]",
          "                        │   └─TableFullScan 10000.00 mpp[tiflash] table:nation keep order:false, stats:pseudo",
          "                        └─ExchangeReceiver(Probe) 19531.25 mpp[tiflash]  ",
          "                          └─ExchangeSender 19531.25 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: test.supplier.s_nationkey, collate: binary]",
          "                            └─Projection 19531.25 mpp[tiflash]  test.lineitem.l_quantity, test.lineitem.l_extendedprice, test.lineitem.l_discount, test.supplier.s_nationkey, test.partsupp.ps_supplycost, test.orders.o_orderdate, test.lineitem.l_orderkey",
          "                              └─HashJoin 19531.25 mpp[tiflash]  inner join, equal:[eq(test.lineitem.l_orderkey, test.orders.o_orderkey)]",
          "                                ├─ExchangeReceiver(Build) 10000.00 mpp[tiflash]  ",
          "                                │ └─ExchangeSender 10000.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: test.orders.o_orderkey, collate: binary]",
          "                                │   └─TableFullScan 10000.00 mpp[tiflash] table:orders keep order:false, stats:pseudo",
          "                                └─ExchangeReceiver(Probe) 15625.00 mpp[tiflash]  ",
          "                                  └─ExchangeSender 15625.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: test.lineitem.l_orderkey, collate: binary]",
          "                                    └─Projection 15625.00 mpp[tiflash]  test.lineitem.l_orderkey, test.lineitem.l_quantity, test.lineitem.l_extendedprice, test.lineitem.l_discount, test.supplier.s_nationkey, test.partsupp.ps_supplycost, test.lineitem.l_suppkey, test.lineitem.l_partkey",
          "                                      └─HashJoin 15625.00 mpp[tiflash]  inner join, equal:[eq(test.lineitem.l_suppkey, test.partsupp.ps_suppkey) eq(test.lineitem.l_partkey, test.partsupp.ps_partkey)]",
          "                                        ├─ExchangeReceiver(Build) 10000.00 mpp[tiflash]  ",
          "                                        │ └─ExchangeSender 10000.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: test.partsupp.ps_suppkey, collate: binary], [name: test.partsupp.ps_partkey, collate: binary]",
          "                                        │   └─TableFullScan 10000.00 mpp[tiflash] table:partsupp keep order:false, stats:pseudo",
          "                                        └─ExchangeReceiver(Probe) 12500.00 mpp[tiflash]  ",
          "                                          └─ExchangeSender 12500.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: test.lineitem.l_suppkey, collate: binary], [name: test.lineitem.l_partkey, collate: binary]",
          "                                            └─Projection 12500.00 mpp[tiflash]  test.lineitem.l_orderkey, test.lineitem.l_partkey, test.lineitem.l_suppkey, test.lineitem.l_quantity, test.lineitem.l_extendedprice, test.lineitem.l_discount, test.supplier.s_nationkey, test.supplier.s_suppkey",
          "                                              └─HashJoin 12500.00 mpp[tiflash]  inner join, equal:[eq(test.lineitem.l_suppkey, test.supplier.s_suppkey)]",
          "                                                ├─ExchangeReceiver(Build) 10000.00 mpp[tiflash]  ",
          "                                                │ └─ExchangeSender 10000.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: test.lineitem.l_suppkey, collate: binary]",
          "                                                │   └─Projection 10000.00 mpp[tiflash]  test.lineitem.l_orderkey, test.lineitem.l_partkey, test.lineitem.l_suppkey, test.lineitem.l_quantity, test.lineitem.l_extendedprice, test.lineitem.l_discount",
          "                                                │     └─HashJoin 10000.00 mpp[tiflash]  inner join, equal:[eq(test.part.p_partkey, test.lineitem.l_partkey)]",
          "                                                │       ├─ExchangeReceiver(Build) 8000.00 mpp[tiflash]  ",
          "                                                │       │ └─ExchangeSender 8000.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: test.part.p_partkey, collate: binary]",
          "                                                │       │   └─Selection 8000.00 mpp[tiflash]  like(test.part.p_name, \"%dim%\", 92)",
          "                                                │       │     └─TableFullScan 10000.00 mpp[tiflash] table:part pushed down filter:empty, keep order:false, stats:pseudo",
          "                                                │       └─ExchangeReceiver(Probe) 10000.00 mpp[tiflash]  ",
          "                                                │         └─ExchangeSender 10000.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: test.lineitem.l_partkey, collate: binary]",
          "                                                │           └─TableFullScan 10000.00 mpp[tiflash] table:lineitem keep order:false, stats:pseudo",
          "                                                └─ExchangeReceiver(Probe) 10000.00 mpp[tiflash]  ",
          "                                                  └─ExchangeSender 10000.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: test.supplier.s_suppkey, collate: binary]",
          "                                                    └─TableFullScan 10000.00 mpp[tiflash] table:supplier keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestQ13",
    "Cases": [
      {
        "SQL": "explain format='brief' select c_count, count(*) as custdist from ( select c_custkey, count(o_orderkey) as c_count from customer left outer join orders on c_custkey = o_custkey and o_comment not like '%pending%deposits%' group by c_custkey ) c_orders group by c_count order by custdist desc, c_count desc;",
        "Result": [
          "Sort 8000.00 root  Column#19:desc, Column#18:desc",
          "└─TableReader 8000.00 root  MppVersion: 3, data:ExchangeSender",
          "  └─ExchangeSender 8000.00 mpp[tiflash]  ExchangeType: PassThrough",
          "    └─Projection 8000.00 mpp[tiflash]  Column#18, Column#19",
          "      └─Projection 8000.00 mpp[tiflash]  Column#19, Column#18",
          "        └─HashAgg 8000.00 mpp[tiflash]  group by:Column#18, funcs:count(1)->Column#19, funcs:firstrow(Column#18)->Column#18",
          "          └─ExchangeReceiver 8000.00 mpp[tiflash]  ",
          "            └─ExchangeSender 8000.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: Column#18, collate: binary]",
          "              └─Projection 8000.00 mpp[tiflash]  Column#18",
          "                └─HashAgg 8000.00 mpp[tiflash]  group by:test.customer.c_custkey, funcs:count(test.orders.o_orderkey)->Column#18",
          "                  └─Projection 10000.00 mpp[tiflash]  test.customer.c_custkey, test.orders.o_orderkey",
          "                    └─HashJoin 10000.00 mpp[tiflash]  left outer join, left side:ExchangeReceiver, equal:[eq(test.customer.c_custkey, test.orders.o_custkey)]",
          "                      ├─ExchangeReceiver(Build) 8000.00 mpp[tiflash]  ",
          "                      │ └─ExchangeSender 8000.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: test.orders.o_custkey, collate: binary]",
          "                      │   └─Selection 8000.00 mpp[tiflash]  not(like(test.orders.o_comment, \"%pending%deposits%\", 92))",
          "                      │     └─TableFullScan 10000.00 mpp[tiflash] table:orders pushed down filter:empty, keep order:false, stats:pseudo",
          "                      └─ExchangeReceiver(Probe) 10000.00 mpp[tiflash]  ",
          "                        └─ExchangeSender 10000.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: test.customer.c_custkey, collate: binary]",
          "                          └─TableFullScan 10000.00 mpp[tiflash] table:customer keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestQ18",
    "Cases": [
      {
        "SQL": "EXPLAIN FORMAT='brief' SELECT c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice, SUM(l_quantity) FROM customer, orders, lineitem WHERE o_orderkey IN (SELECT l_orderkey FROM lineitem GROUP BY l_orderkey HAVING SUM(l_quantity) > 314) AND c_custkey = o_custkey AND o_orderkey = l_orderkey GROUP BY c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice ORDER BY o_totalprice DESC, o_orderdate LIMIT 100;",
        "Result": [
          "Projection 100.00 root  test.customer.c_name, test.customer.c_custkey, test.orders.o_orderkey, test.orders.o_orderdate, test.orders.o_totalprice, Column#52",
          "└─TopN 100.00 root  test.orders.o_totalprice:desc, test.orders.o_orderdate, offset:0, count:100",
          "  └─TableReader 100.00 root  MppVersion: 3, data:ExchangeSender",
          "    └─ExchangeSender 100.00 mpp[tiflash]  ExchangeType: PassThrough",
          "      └─TopN 100.00 mpp[tiflash]  test.orders.o_totalprice:desc, test.orders.o_orderdate, offset:0, count:100",
          "        └─Projection 8000.00 mpp[tiflash]  Column#52, test.customer.c_custkey, test.customer.c_name, test.orders.o_orderkey, test.orders.o_totalprice, test.orders.o_orderdate",
          "          └─HashAgg 8000.00 mpp[tiflash]  group by:test.customer.c_custkey, test.customer.c_name, test.orders.o_orderdate, test.orders.o_orderkey, test.orders.o_totalprice, funcs:sum(test.lineitem.l_quantity)->Column#52, funcs:firstrow(test.customer.c_custkey)->test.customer.c_custkey, funcs:firstrow(test.customer.c_name)->test.customer.c_name, funcs:firstrow(test.orders.o_orderkey)->test.orders.o_orderkey, funcs:firstrow(test.orders.o_totalprice)->test.orders.o_totalprice, funcs:firstrow(test.orders.o_orderdate)->test.orders.o_orderdate",
          "            └─Projection 12500.00 mpp[tiflash]  test.customer.c_custkey, test.customer.c_name, test.orders.o_orderkey, test.orders.o_totalprice, test.orders.o_orderdate, test.lineitem.l_quantity",
          "              └─HashJoin 12500.00 mpp[tiflash]  inner join, equal:[eq(test.orders.o_orderkey, test.lineitem.l_orderkey)]",
          "                ├─Selection(Build) 6400.00 mpp[tiflash]  gt(Column#50, 314)",
          "                │ └─Projection 8000.00 mpp[tiflash]  Column#50, test.lineitem.l_orderkey",
          "                │   └─HashAgg 8000.00 mpp[tiflash]  group by:test.lineitem.l_orderkey, funcs:sum(Column#57)->Column#50, funcs:firstrow(test.lineitem.l_orderkey)->test.lineitem.l_orderkey",
          "                │     └─ExchangeReceiver 8000.00 mpp[tiflash]  ",
          "                │       └─ExchangeSender 8000.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: test.lineitem.l_orderkey, collate: binary]",
          "                │         └─HashAgg 8000.00 mpp[tiflash]  group by:test.lineitem.l_orderkey, funcs:sum(test.lineitem.l_quantity)->Column#57",
          "                │           └─TableFullScan 10000.00 mpp[tiflash] table:lineitem keep order:false, stats:pseudo",
          "                └─Projection(Probe) 15625.00 mpp[tiflash]  test.customer.c_custkey, test.customer.c_name, test.orders.o_orderkey, test.orders.o_totalprice, test.orders.o_orderdate, test.lineitem.l_quantity",
          "                  └─HashJoin 15625.00 mpp[tiflash]  inner join, equal:[eq(test.orders.o_orderkey, test.lineitem.l_orderkey)]",
          "                    ├─ExchangeReceiver(Build) 10000.00 mpp[tiflash]  ",
          "                    │ └─ExchangeSender 10000.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: test.lineitem.l_orderkey, collate: binary]",
          "                    │   └─TableFullScan 10000.00 mpp[tiflash] table:lineitem keep order:false, stats:pseudo",
          "                    └─ExchangeReceiver(Probe) 12500.00 mpp[tiflash]  ",
          "                      └─ExchangeSender 12500.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: test.orders.o_orderkey, collate: binary]",
          "                        └─Projection 12500.00 mpp[tiflash]  test.customer.c_custkey, test.customer.c_name, test.orders.o_orderkey, test.orders.o_totalprice, test.orders.o_orderdate, test.orders.o_custkey",
          "                          └─HashJoin 12500.00 mpp[tiflash]  inner join, equal:[eq(test.customer.c_custkey, test.orders.o_custkey)]",
          "                            ├─ExchangeReceiver(Build) 10000.00 mpp[tiflash]  ",
          "                            │ └─ExchangeSender 10000.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: test.customer.c_custkey, collate: binary]",
          "                            │   └─TableFullScan 10000.00 mpp[tiflash] table:customer keep order:false, stats:pseudo",
          "                            └─ExchangeReceiver(Probe) 10000.00 mpp[tiflash]  ",
          "                              └─ExchangeSender 10000.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: test.orders.o_custkey, collate: binary]",
          "                                └─TableFullScan 10000.00 mpp[tiflash] table:orders keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestQ21",
    "Cases": [
      {
        "SQL": "SELECT o_orderpriority, COUNT(*) AS order_count FROM orders WHERE o_orderdate >= '1995-01-01' AND o_orderdate < DATE_ADD('1995-01-01', INTERVAL '3' MONTH) AND EXISTS (SELECT * FROM lineitem WHERE l_orderkey = o_orderkey AND l_commitdate < l_receiptdate) GROUP BY o_orderpriority ORDER BY o_orderpriority;",
        "Result": [
          "Sort_10 160.00 295393.03 (((((cpu(10*3*tidb_cpu_factor(49.9))) + (((cpu(10*3*tidb_cpu_factor(49.9))) + ((((((cpu(10000*filters(2)*tiflash_cpu_factor(2.4))) + (((scan(10000*logrowsize(55)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(55)*tiflash_scan_factor(11.6))))*1.00))) + (net(250*rowsize(55)*tidb_flash_net_factor(2.2))))/15.00)*1.00) + (cpu(250*filters(0)*tidb_cpu_factor(49.9))) + (cpu(250*10*tidb_cpu_factor(49.9))) + (((((((((cpu(1*filters(1)*tikv_cpu_factor(49.9))) + ((scan(1*logrowsize(291)*tikv_scan_factor(40.7)))*1.00)) + (net(0.8*rowsize(24)*tidb_kv_net_factor(3.96))))/15.00)*1.00)*250.00)/6.00) + (cpu(200*filters(0)*tidb_cpu_factor(49.9))) + ((hashkey(200*0*tidb_cpu_factor(49.9))) + (hashmem(200*24*tidb_mem_factor(0.2))) + (hashbuild(200*tidb_cpu_factor(49.9)))))/5.00))*1.00) + (((agg(200*aggs(2)*tidb_cpu_factor(49.9))) + (group(200*cols(0.01)*tidb_cpu_factor(49.9))) + ((hashkey(160*1*tidb_cpu_factor(49.9))) + (hashmem(160*23*tidb_mem_factor(0.2))) + (hashbuild(160*tidb_cpu_factor(49.9)))) + ((hashkey(200*1*tidb_cpu_factor(49.9))) + (hashprobe(200*tidb_cpu_factor(49.9)))))/5.00))*1.00) + ((cpu(160*filters(0.02)*tidb_cpu_factor(49.9)))/5.00)) + ((exprCPU(160*0*tidb_cpu_factor(49.9))) + (orderCPU(160*log(160)*tidb_cpu_factor(49.9)))) + (sortMem(160*23*tidb_mem_factor(0.2))))*1.00 root  test.orders.o_orderpriority",
          "└─Projection_12 160.00 236198.76 (((cpu(10*3*tidb_cpu_factor(49.9))) + (((cpu(10*3*tidb_cpu_factor(49.9))) + ((((((cpu(10000*filters(2)*tiflash_cpu_factor(2.4))) + (((scan(10000*logrowsize(55)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(55)*tiflash_scan_factor(11.6))))*1.00))) + (net(250*rowsize(55)*tidb_flash_net_factor(2.2))))/15.00)*1.00) + (cpu(250*filters(0)*tidb_cpu_factor(49.9))) + (cpu(250*10*tidb_cpu_factor(49.9))) + (((((((((cpu(1*filters(1)*tikv_cpu_factor(49.9))) + ((scan(1*logrowsize(291)*tikv_scan_factor(40.7)))*1.00)) + (net(0.8*rowsize(24)*tidb_kv_net_factor(3.96))))/15.00)*1.00)*250.00)/6.00) + (cpu(200*filters(0)*tidb_cpu_factor(49.9))) + ((hashkey(200*0*tidb_cpu_factor(49.9))) + (hashmem(200*24*tidb_mem_factor(0.2))) + (hashbuild(200*tidb_cpu_factor(49.9)))))/5.00))*1.00) + (((agg(200*aggs(2)*tidb_cpu_factor(49.9))) + (group(200*cols(0.01)*tidb_cpu_factor(49.9))) + ((hashkey(160*1*tidb_cpu_factor(49.9))) + (hashmem(160*23*tidb_mem_factor(0.2))) + (hashbuild(160*tidb_cpu_factor(49.9)))) + ((hashkey(200*1*tidb_cpu_factor(49.9))) + (hashprobe(200*tidb_cpu_factor(49.9)))))/5.00))*1.00) + ((cpu(160*filters(0.02)*tidb_cpu_factor(49.9)))/5.00) root  test.orders.o_orderpriority, Column#26",
          "  └─HashAgg_16 160.00 236166.82 ((cpu(10*3*tidb_cpu_factor(49.9))) + (((cpu(10*3*tidb_cpu_factor(49.9))) + ((((((cpu(10000*filters(2)*tiflash_cpu_factor(2.4))) + (((scan(10000*logrowsize(55)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(55)*tiflash_scan_factor(11.6))))*1.00))) + (net(250*rowsize(55)*tidb_flash_net_factor(2.2))))/15.00)*1.00) + (cpu(250*filters(0)*tidb_cpu_factor(49.9))) + (cpu(250*10*tidb_cpu_factor(49.9))) + (((((((((cpu(1*filters(1)*tikv_cpu_factor(49.9))) + ((scan(1*logrowsize(291)*tikv_scan_factor(40.7)))*1.00)) + (net(0.8*rowsize(24)*tidb_kv_net_factor(3.96))))/15.00)*1.00)*250.00)/6.00) + (cpu(200*filters(0)*tidb_cpu_factor(49.9))) + ((hashkey(200*0*tidb_cpu_factor(49.9))) + (hashmem(200*24*tidb_mem_factor(0.2))) + (hashbuild(200*tidb_cpu_factor(49.9)))))/5.00))*1.00) + (((agg(200*aggs(2)*tidb_cpu_factor(49.9))) + (group(200*cols(0.01)*tidb_cpu_factor(49.9))) + ((hashkey(160*1*tidb_cpu_factor(49.9))) + (hashmem(160*23*tidb_mem_factor(0.2))) + (hashbuild(160*tidb_cpu_factor(49.9)))) + ((hashkey(200*1*tidb_cpu_factor(49.9))) + (hashprobe(200*tidb_cpu_factor(49.9)))))/5.00))*1.00 root  group by:test.orders.o_orderpriority, funcs:count(1)->Column#26, funcs:firstrow(test.orders.o_orderpriority)->test.orders.o_orderpriority",
          "    └─IndexJoin_29 200.00 223325.06 ((cpu(10*3*tidb_cpu_factor(49.9))) + ((((((cpu(10000*filters(2)*tiflash_cpu_factor(2.4))) + (((scan(10000*logrowsize(55)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(55)*tiflash_scan_factor(11.6))))*1.00))) + (net(250*rowsize(55)*tidb_flash_net_factor(2.2))))/15.00)*1.00) + (cpu(250*filters(0)*tidb_cpu_factor(49.9))) + (cpu(250*10*tidb_cpu_factor(49.9))) + (((((((((cpu(1*filters(1)*tikv_cpu_factor(49.9))) + ((scan(1*logrowsize(291)*tikv_scan_factor(40.7)))*1.00)) + (net(0.8*rowsize(24)*tidb_kv_net_factor(3.96))))/15.00)*1.00)*250.00)/6.00) + (cpu(200*filters(0)*tidb_cpu_factor(49.9))) + ((hashkey(200*0*tidb_cpu_factor(49.9))) + (hashmem(200*24*tidb_mem_factor(0.2))) + (hashbuild(200*tidb_cpu_factor(49.9)))))/5.00))*1.00 root  semi join, inner:TableReader_25, left side:TableReader_59, outer key:test.orders.o_orderkey, inner key:test.lineitem.l_orderkey, equal cond:eq(test.orders.o_orderkey, test.lineitem.l_orderkey)",
          "      ├─TableReader_59(Build) 250.00 94635.03 (((((cpu(10000*filters(2)*tiflash_cpu_factor(2.4))) + (((scan(10000*logrowsize(55)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(55)*tiflash_scan_factor(11.6))))*1.00))) + (net(250*rowsize(55)*tidb_flash_net_factor(2.2))))/15.00)*1.00 root  MppVersion: 3, data:ExchangeSender_58",
          "      │ └─ExchangeSender_58 250.00 1389275.45 ((cpu(10000*filters(2)*tiflash_cpu_factor(2.4))) + (((scan(10000*logrowsize(55)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(55)*tiflash_scan_factor(11.6))))*1.00)) mpp[tiflash]  ExchangeType: PassThrough",
          "      │   └─TableFullScan_56 250.00 1341275.45 ((scan(10000*logrowsize(55)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(55)*tiflash_scan_factor(11.6))))*1.00 mpp[tiflash] table:orders pushed down filter:ge(test.orders.o_orderdate, 1995-01-01 00:00:00.000000), lt(test.orders.o_orderdate, 1995-04-01 00:00:00.000000), keep order:false, stats:pseudo",
          "      └─TableReader_25(Probe) 200.00 30.60 ((((cpu(1*filters(1)*tikv_cpu_factor(49.9))) + ((scan(1*logrowsize(291)*tikv_scan_factor(40.7)))*1.00)) + (net(0.8*rowsize(24)*tidb_kv_net_factor(3.96))))/15.00)*1.00 root  data:Selection_24",
          "        └─Selection_24 200.00 383.02 (cpu(1*filters(1)*tikv_cpu_factor(49.9))) + ((scan(1*logrowsize(291)*tikv_scan_factor(40.7)))*1.00) cop[tikv]  lt(test.lineitem.l_commitdate, test.lineitem.l_receiptdate)",
          "          └─TableRangeScan_23 250.00 333.12 (scan(1*logrowsize(291)*tikv_scan_factor(40.7)))*1.00 cop[tikv] table:lineitem range: decided by [eq(test.lineitem.l_orderkey, test.orders.o_orderkey)], keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "SELECT /*+ NO_INDEX_JOIN(orders, lineitem),NO_INDEX_HASH_JOIN(orders, lineitem) */ o_orderpriority, COUNT(*) AS order_count FROM orders WHERE o_orderdate >= '1995-01-01' AND o_orderdate < DATE_ADD('1995-01-01', INTERVAL '3' MONTH) AND EXISTS (SELECT * FROM lineitem WHERE l_orderkey = o_orderkey AND l_commitdate < l_receiptdate) GROUP BY o_orderpriority ORDER BY o_orderpriority;",
        "Result": [
          "Sort_10 160.00 331213.82 (((((cpu(10*3*tidb_cpu_factor(49.9))) + (((((((((((cpu(10000*filters(1)*tiflash_cpu_factor(2.4))) + (((scan(10000*logrowsize(48)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(48)*tiflash_scan_factor(11.6))))*1.00))) + ((net(8000*rowsize(48)*tiflash_mpp_net_factor(1)))*3.00)) + ((cpu(10000*filters(2)*tiflash_cpu_factor(2.4))) + (((scan(10000*logrowsize(55)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(55)*tiflash_scan_factor(11.6))))*1.00)) + ((((hashkey(8000*1*tiflash_cpu_factor(2.4))) + (hashmem(8000*48*tiflash_mem_factor(0.05))) + (hashbuild(8000*tiflash_cpu_factor(2.4)))) + (cpu(8000*filters(0)*tiflash_cpu_factor(2.4))) + ((hashkey(250*1*tiflash_cpu_factor(2.4))) + (hashprobe(250*tiflash_cpu_factor(2.4)))) + (cpu(250*filters(0)*tiflash_cpu_factor(2.4))))/3.00))*1.00) + ((cpu(200*filters(0.01)*tiflash_cpu_factor(2.4)))/5.00))) + (net(200*rowsize(15)*tidb_flash_net_factor(2.2))))/15.00)*1.00) + (((agg(200*aggs(2)*tidb_cpu_factor(49.9))) + (group(200*cols(0.01)*tidb_cpu_factor(49.9))) + ((hashkey(160*1*tidb_cpu_factor(49.9))) + (hashmem(160*23*tidb_mem_factor(0.2))) + (hashbuild(160*tidb_cpu_factor(49.9)))) + ((hashkey(200*1*tidb_cpu_factor(49.9))) + (hashprobe(200*tidb_cpu_factor(49.9)))))/5.00))*1.00) + ((cpu(160*filters(0.02)*tidb_cpu_factor(49.9)))/5.00)) + ((exprCPU(160*0*tidb_cpu_factor(49.9))) + (orderCPU(160*log(160)*tidb_cpu_factor(49.9)))) + (sortMem(160*23*tidb_mem_factor(0.2))))*1.00 root  test.orders.o_orderpriority",
          "└─Projection_12 160.00 272019.54 (((cpu(10*3*tidb_cpu_factor(49.9))) + (((((((((((cpu(10000*filters(1)*tiflash_cpu_factor(2.4))) + (((scan(10000*logrowsize(48)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(48)*tiflash_scan_factor(11.6))))*1.00))) + ((net(8000*rowsize(48)*tiflash_mpp_net_factor(1)))*3.00)) + ((cpu(10000*filters(2)*tiflash_cpu_factor(2.4))) + (((scan(10000*logrowsize(55)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(55)*tiflash_scan_factor(11.6))))*1.00)) + ((((hashkey(8000*1*tiflash_cpu_factor(2.4))) + (hashmem(8000*48*tiflash_mem_factor(0.05))) + (hashbuild(8000*tiflash_cpu_factor(2.4)))) + (cpu(8000*filters(0)*tiflash_cpu_factor(2.4))) + ((hashkey(250*1*tiflash_cpu_factor(2.4))) + (hashprobe(250*tiflash_cpu_factor(2.4)))) + (cpu(250*filters(0)*tiflash_cpu_factor(2.4))))/3.00))*1.00) + ((cpu(200*filters(0.01)*tiflash_cpu_factor(2.4)))/5.00))) + (net(200*rowsize(15)*tidb_flash_net_factor(2.2))))/15.00)*1.00) + (((agg(200*aggs(2)*tidb_cpu_factor(49.9))) + (group(200*cols(0.01)*tidb_cpu_factor(49.9))) + ((hashkey(160*1*tidb_cpu_factor(49.9))) + (hashmem(160*23*tidb_mem_factor(0.2))) + (hashbuild(160*tidb_cpu_factor(49.9)))) + ((hashkey(200*1*tidb_cpu_factor(49.9))) + (hashprobe(200*tidb_cpu_factor(49.9)))))/5.00))*1.00) + ((cpu(160*filters(0.02)*tidb_cpu_factor(49.9)))/5.00) root  test.orders.o_orderpriority, Column#26",
          "  └─HashAgg_16 160.00 271987.61 ((cpu(10*3*tidb_cpu_factor(49.9))) + (((((((((((cpu(10000*filters(1)*tiflash_cpu_factor(2.4))) + (((scan(10000*logrowsize(48)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(48)*tiflash_scan_factor(11.6))))*1.00))) + ((net(8000*rowsize(48)*tiflash_mpp_net_factor(1)))*3.00)) + ((cpu(10000*filters(2)*tiflash_cpu_factor(2.4))) + (((scan(10000*logrowsize(55)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(55)*tiflash_scan_factor(11.6))))*1.00)) + ((((hashkey(8000*1*tiflash_cpu_factor(2.4))) + (hashmem(8000*48*tiflash_mem_factor(0.05))) + (hashbuild(8000*tiflash_cpu_factor(2.4)))) + (cpu(8000*filters(0)*tiflash_cpu_factor(2.4))) + ((hashkey(250*1*tiflash_cpu_factor(2.4))) + (hashprobe(250*tiflash_cpu_factor(2.4)))) + (cpu(250*filters(0)*tiflash_cpu_factor(2.4))))/3.00))*1.00) + ((cpu(200*filters(0.01)*tiflash_cpu_factor(2.4)))/5.00))) + (net(200*rowsize(15)*tidb_flash_net_factor(2.2))))/15.00)*1.00) + (((agg(200*aggs(2)*tidb_cpu_factor(49.9))) + (group(200*cols(0.01)*tidb_cpu_factor(49.9))) + ((hashkey(160*1*tidb_cpu_factor(49.9))) + (hashmem(160*23*tidb_mem_factor(0.2))) + (hashbuild(160*tidb_cpu_factor(49.9)))) + ((hashkey(200*1*tidb_cpu_factor(49.9))) + (hashprobe(200*tidb_cpu_factor(49.9)))))/5.00))*1.00 root  group by:test.orders.o_orderpriority, funcs:count(1)->Column#26, funcs:firstrow(test.orders.o_orderpriority)->test.orders.o_orderpriority",
          "    └─TableReader_44 200.00 259145.85 ((((((((((cpu(10000*filters(1)*tiflash_cpu_factor(2.4))) + (((scan(10000*logrowsize(48)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(48)*tiflash_scan_factor(11.6))))*1.00))) + ((net(8000*rowsize(48)*tiflash_mpp_net_factor(1)))*3.00)) + ((cpu(10000*filters(2)*tiflash_cpu_factor(2.4))) + (((scan(10000*logrowsize(55)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(55)*tiflash_scan_factor(11.6))))*1.00)) + ((((hashkey(8000*1*tiflash_cpu_factor(2.4))) + (hashmem(8000*48*tiflash_mem_factor(0.05))) + (hashbuild(8000*tiflash_cpu_factor(2.4)))) + (cpu(8000*filters(0)*tiflash_cpu_factor(2.4))) + ((hashkey(250*1*tiflash_cpu_factor(2.4))) + (hashprobe(250*tiflash_cpu_factor(2.4)))) + (cpu(250*filters(0)*tiflash_cpu_factor(2.4))))/3.00))*1.00) + ((cpu(200*filters(0.01)*tiflash_cpu_factor(2.4)))/5.00))) + (net(200*rowsize(15)*tidb_flash_net_factor(2.2))))/15.00)*1.00 root  MppVersion: 3, data:ExchangeSender_43",
          "      └─ExchangeSender_43 200.00 3880587.71 (((((((cpu(10000*filters(1)*tiflash_cpu_factor(2.4))) + (((scan(10000*logrowsize(48)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(48)*tiflash_scan_factor(11.6))))*1.00))) + ((net(8000*rowsize(48)*tiflash_mpp_net_factor(1)))*3.00)) + ((cpu(10000*filters(2)*tiflash_cpu_factor(2.4))) + (((scan(10000*logrowsize(55)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(55)*tiflash_scan_factor(11.6))))*1.00)) + ((((hashkey(8000*1*tiflash_cpu_factor(2.4))) + (hashmem(8000*48*tiflash_mem_factor(0.05))) + (hashbuild(8000*tiflash_cpu_factor(2.4)))) + (cpu(8000*filters(0)*tiflash_cpu_factor(2.4))) + ((hashkey(250*1*tiflash_cpu_factor(2.4))) + (hashprobe(250*tiflash_cpu_factor(2.4)))) + (cpu(250*filters(0)*tiflash_cpu_factor(2.4))))/3.00))*1.00) + ((cpu(200*filters(0.01)*tiflash_cpu_factor(2.4)))/5.00)) mpp[tiflash]  ExchangeType: PassThrough",
          "        └─Projection_42 200.00 3880587.71 ((((((cpu(10000*filters(1)*tiflash_cpu_factor(2.4))) + (((scan(10000*logrowsize(48)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(48)*tiflash_scan_factor(11.6))))*1.00))) + ((net(8000*rowsize(48)*tiflash_mpp_net_factor(1)))*3.00)) + ((cpu(10000*filters(2)*tiflash_cpu_factor(2.4))) + (((scan(10000*logrowsize(55)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(55)*tiflash_scan_factor(11.6))))*1.00)) + ((((hashkey(8000*1*tiflash_cpu_factor(2.4))) + (hashmem(8000*48*tiflash_mem_factor(0.05))) + (hashbuild(8000*tiflash_cpu_factor(2.4)))) + (cpu(8000*filters(0)*tiflash_cpu_factor(2.4))) + ((hashkey(250*1*tiflash_cpu_factor(2.4))) + (hashprobe(250*tiflash_cpu_factor(2.4)))) + (cpu(250*filters(0)*tiflash_cpu_factor(2.4))))/3.00))*1.00) + ((cpu(200*filters(0.01)*tiflash_cpu_factor(2.4)))/5.00) mpp[tiflash]  test.orders.o_orderpriority",
          "          └─HashJoin_20 200.00 3880586.75 (((((cpu(10000*filters(1)*tiflash_cpu_factor(2.4))) + (((scan(10000*logrowsize(48)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(48)*tiflash_scan_factor(11.6))))*1.00))) + ((net(8000*rowsize(48)*tiflash_mpp_net_factor(1)))*3.00)) + ((cpu(10000*filters(2)*tiflash_cpu_factor(2.4))) + (((scan(10000*logrowsize(55)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(55)*tiflash_scan_factor(11.6))))*1.00)) + ((((hashkey(8000*1*tiflash_cpu_factor(2.4))) + (hashmem(8000*48*tiflash_mem_factor(0.05))) + (hashbuild(8000*tiflash_cpu_factor(2.4)))) + (cpu(8000*filters(0)*tiflash_cpu_factor(2.4))) + ((hashkey(250*1*tiflash_cpu_factor(2.4))) + (hashprobe(250*tiflash_cpu_factor(2.4)))) + (cpu(250*filters(0)*tiflash_cpu_factor(2.4))))/3.00))*1.00 mpp[tiflash]  semi join, left side:TableFullScan_36, equal:[eq(test.orders.o_orderkey, test.lineitem.l_orderkey)]",
          "            ├─ExchangeReceiver_41(Build) 8000.00 2471711.30 (((cpu(10000*filters(1)*tiflash_cpu_factor(2.4))) + (((scan(10000*logrowsize(48)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(48)*tiflash_scan_factor(11.6))))*1.00))) + ((net(8000*rowsize(48)*tiflash_mpp_net_factor(1)))*3.00) mpp[tiflash]  ",
          "            │ └─ExchangeSender_40 8000.00 1319711.30 ((cpu(10000*filters(1)*tiflash_cpu_factor(2.4))) + (((scan(10000*logrowsize(48)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(48)*tiflash_scan_factor(11.6))))*1.00)) mpp[tiflash]  ExchangeType: Broadcast, Compression: FAST",
          "            │   └─Selection_39 8000.00 1319711.30 (cpu(10000*filters(1)*tiflash_cpu_factor(2.4))) + (((scan(10000*logrowsize(48)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(48)*tiflash_scan_factor(11.6))))*1.00) mpp[tiflash]  lt(test.lineitem.l_commitdate, test.lineitem.l_receiptdate)",
          "            │     └─TableFullScan_38 10000.00 1295711.30 ((scan(10000*logrowsize(48)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(48)*tiflash_scan_factor(11.6))))*1.00 mpp[tiflash] table:lineitem pushed down filter:empty, keep order:false, stats:pseudo",
          "            └─TableFullScan_36(Probe) 250.00 1341275.45 ((scan(10000*logrowsize(55)*tiflash_scan_factor(11.6))) + (scan(10000*logrowsize(55)*tiflash_scan_factor(11.6))))*1.00 mpp[tiflash] table:orders pushed down filter:ge(test.orders.o_orderdate, 1995-01-01 00:00:00.000000), lt(test.orders.o_orderdate, 1995-04-01 00:00:00.000000), keep order:false, stats:pseudo"
        ]
      }
    ]
  }
]
