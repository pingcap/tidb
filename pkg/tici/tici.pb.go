// Copyright 2025 PingCAP, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.29.3
// source: tici.proto

package tici

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WorkerNodeStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TODO Need more metrics, such as disk usage, quotas, cache miss rates
	CpuUsage    float64 `protobuf:"fixed64,1,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	MemoryUsage uint64  `protobuf:"varint,2,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`
}

func (x *WorkerNodeStatus) Reset() {
	*x = WorkerNodeStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tici_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerNodeStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerNodeStatus) ProtoMessage() {}

func (x *WorkerNodeStatus) ProtoReflect() protoreflect.Message {
	mi := &file_tici_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerNodeStatus.ProtoReflect.Descriptor instead.
func (*WorkerNodeStatus) Descriptor() ([]byte, []int) {
	return file_tici_proto_rawDescGZIP(), []int{0}
}

func (x *WorkerNodeStatus) GetCpuUsage() float64 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *WorkerNodeStatus) GetMemoryUsage() uint64 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

// Reader node status information
type ReaderNodeStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// CPU usage percentage (0.0 to 100.0)
	CpuUsage float64 `protobuf:"fixed64,1,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	// Memory usage in bytes
	MemoryUsage uint64 `protobuf:"varint,2,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`
	// Number of requests processed in current heartbeat cycle
	RequestsInCycle uint32 `protobuf:"varint,3,opt,name=requests_in_cycle,json=requestsInCycle,proto3" json:"requests_in_cycle,omitempty"`
	// Cache hit rate percentage (0.0 to 100.0)
	CacheHitRate float64 `protobuf:"fixed64,4,opt,name=cache_hit_rate,json=cacheHitRate,proto3" json:"cache_hit_rate,omitempty"`
}

func (x *ReaderNodeStatus) Reset() {
	*x = ReaderNodeStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tici_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReaderNodeStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReaderNodeStatus) ProtoMessage() {}

func (x *ReaderNodeStatus) ProtoReflect() protoreflect.Message {
	mi := &file_tici_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReaderNodeStatus.ProtoReflect.Descriptor instead.
func (*ReaderNodeStatus) Descriptor() ([]byte, []int) {
	return file_tici_proto_rawDescGZIP(), []int{1}
}

func (x *ReaderNodeStatus) GetCpuUsage() float64 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *ReaderNodeStatus) GetMemoryUsage() uint64 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

func (x *ReaderNodeStatus) GetRequestsInCycle() uint32 {
	if x != nil {
		return x.RequestsInCycle
	}
	return 0
}

func (x *ReaderNodeStatus) GetCacheHitRate() float64 {
	if x != nil {
		return x.CacheHitRate
	}
	return 0
}

// Some fields may be duplicated with ShardManifestHeader,
// however, just leave them here.
type WorkerNodeShardStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartKey string `protobuf:"bytes,1,opt,name=start_key,json=startKey,proto3" json:"start_key,omitempty"`
	EndKey   string `protobuf:"bytes,2,opt,name=end_key,json=endKey,proto3" json:"end_key,omitempty"`
	// TODO shard_id is unique across tables and indexes.
	// We still need them because in meta service we are not currently maintain this correspondence.
	TableId int64  `protobuf:"varint,3,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	IndexId int64  `protobuf:"varint,4,opt,name=index_id,json=indexId,proto3" json:"index_id,omitempty"`
	ShardId uint64 `protobuf:"varint,5,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	Epoch   uint64 `protobuf:"varint,6,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Seq     uint64 `protobuf:"varint,7,opt,name=seq,proto3" json:"seq,omitempty"`
}

func (x *WorkerNodeShardStatus) Reset() {
	*x = WorkerNodeShardStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tici_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerNodeShardStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerNodeShardStatus) ProtoMessage() {}

func (x *WorkerNodeShardStatus) ProtoReflect() protoreflect.Message {
	mi := &file_tici_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerNodeShardStatus.ProtoReflect.Descriptor instead.
func (*WorkerNodeShardStatus) Descriptor() ([]byte, []int) {
	return file_tici_proto_rawDescGZIP(), []int{2}
}

func (x *WorkerNodeShardStatus) GetStartKey() string {
	if x != nil {
		return x.StartKey
	}
	return ""
}

func (x *WorkerNodeShardStatus) GetEndKey() string {
	if x != nil {
		return x.EndKey
	}
	return ""
}

func (x *WorkerNodeShardStatus) GetTableId() int64 {
	if x != nil {
		return x.TableId
	}
	return 0
}

func (x *WorkerNodeShardStatus) GetIndexId() int64 {
	if x != nil {
		return x.IndexId
	}
	return 0
}

func (x *WorkerNodeShardStatus) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *WorkerNodeShardStatus) GetEpoch() uint64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *WorkerNodeShardStatus) GetSeq() uint64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

type WorkerNodeCompactionStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WorkerNodeCompactionStatus) Reset() {
	*x = WorkerNodeCompactionStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tici_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerNodeCompactionStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerNodeCompactionStatus) ProtoMessage() {}

func (x *WorkerNodeCompactionStatus) ProtoReflect() protoreflect.Message {
	mi := &file_tici_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerNodeCompactionStatus.ProtoReflect.Descriptor instead.
func (*WorkerNodeCompactionStatus) Descriptor() ([]byte, []int) {
	return file_tici_proto_rawDescGZIP(), []int{3}
}

type WorkerNodeHeartbeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr        string                        `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Status      *WorkerNodeStatus             `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Shards      []*WorkerNodeShardStatus      `protobuf:"bytes,3,rep,name=shards,proto3" json:"shards,omitempty"`
	Compactions []*WorkerNodeCompactionStatus `protobuf:"bytes,4,rep,name=compactions,proto3" json:"compactions,omitempty"`
}

func (x *WorkerNodeHeartbeatRequest) Reset() {
	*x = WorkerNodeHeartbeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tici_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerNodeHeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerNodeHeartbeatRequest) ProtoMessage() {}

func (x *WorkerNodeHeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tici_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerNodeHeartbeatRequest.ProtoReflect.Descriptor instead.
func (*WorkerNodeHeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_tici_proto_rawDescGZIP(), []int{4}
}

func (x *WorkerNodeHeartbeatRequest) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *WorkerNodeHeartbeatRequest) GetStatus() *WorkerNodeStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *WorkerNodeHeartbeatRequest) GetShards() []*WorkerNodeShardStatus {
	if x != nil {
		return x.Shards
	}
	return nil
}

func (x *WorkerNodeHeartbeatRequest) GetCompactions() []*WorkerNodeCompactionStatus {
	if x != nil {
		return x.Compactions
	}
	return nil
}

type WorkerNodeHeartbeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Operation result status code, 0 means success
	Status      int32              `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	ToAddShards []*AddShardRequest `protobuf:"bytes,2,rep,name=to_add_shards,json=toAddShards,proto3" json:"to_add_shards,omitempty"`
	// We assume the `shard_id`s are unique across tables,
	// So using `shard_id` is enough here.
	ToRemoveShards []uint64 `protobuf:"varint,3,rep,packed,name=to_remove_shards,json=toRemoveShards,proto3" json:"to_remove_shards,omitempty"`
}

func (x *WorkerNodeHeartbeatResponse) Reset() {
	*x = WorkerNodeHeartbeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tici_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerNodeHeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerNodeHeartbeatResponse) ProtoMessage() {}

func (x *WorkerNodeHeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tici_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerNodeHeartbeatResponse.ProtoReflect.Descriptor instead.
func (*WorkerNodeHeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_tici_proto_rawDescGZIP(), []int{5}
}

func (x *WorkerNodeHeartbeatResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *WorkerNodeHeartbeatResponse) GetToAddShards() []*AddShardRequest {
	if x != nil {
		return x.ToAddShards
	}
	return nil
}

func (x *WorkerNodeHeartbeatResponse) GetToRemoveShards() []uint64 {
	if x != nil {
		return x.ToRemoveShards
	}
	return nil
}

// Reader node heartbeat request
type ReaderNodeHeartbeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Reader node address
	Addr string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	// Reader node status
	Status *ReaderNodeStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ReaderNodeHeartbeatRequest) Reset() {
	*x = ReaderNodeHeartbeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tici_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReaderNodeHeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReaderNodeHeartbeatRequest) ProtoMessage() {}

func (x *ReaderNodeHeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tici_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReaderNodeHeartbeatRequest.ProtoReflect.Descriptor instead.
func (*ReaderNodeHeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_tici_proto_rawDescGZIP(), []int{6}
}

func (x *ReaderNodeHeartbeatRequest) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *ReaderNodeHeartbeatRequest) GetStatus() *ReaderNodeStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// Reader node heartbeat response
type ReaderNodeHeartbeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Operation result status code, 0 means success
	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	// Error message, only valid when status is non-zero
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *ReaderNodeHeartbeatResponse) Reset() {
	*x = ReaderNodeHeartbeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tici_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReaderNodeHeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReaderNodeHeartbeatResponse) ProtoMessage() {}

func (x *ReaderNodeHeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tici_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReaderNodeHeartbeatResponse.ProtoReflect.Descriptor instead.
func (*ReaderNodeHeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_tici_proto_rawDescGZIP(), []int{7}
}

func (x *ReaderNodeHeartbeatResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ReaderNodeHeartbeatResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// Fragment metadata primarily stores all data files under a ​​fragment​​
type FragMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Data format version​​, used for future iterative upgrades
	FormatVersion uint64 `protobuf:"varint,1,opt,name=format_version,json=formatVersion,proto3" json:"format_version,omitempty"`
	// Root path of the fragment​​
	FragPath string `protobuf:"bytes,2,opt,name=frag_path,json=fragPath,proto3" json:"frag_path,omitempty"`
	// Data files under the fragment​​, relative path under frag_path
	DataFiles []string `protobuf:"bytes,3,rep,name=data_files,json=dataFiles,proto3" json:"data_files,omitempty"`
}

func (x *FragMeta) Reset() {
	*x = FragMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tici_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FragMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FragMeta) ProtoMessage() {}

func (x *FragMeta) ProtoReflect() protoreflect.Message {
	mi := &file_tici_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FragMeta.ProtoReflect.Descriptor instead.
func (*FragMeta) Descriptor() ([]byte, []int) {
	return file_tici_proto_rawDescGZIP(), []int{8}
}

func (x *FragMeta) GetFormatVersion() uint64 {
	if x != nil {
		return x.FormatVersion
	}
	return 0
}

func (x *FragMeta) GetFragPath() string {
	if x != nil {
		return x.FragPath
	}
	return ""
}

func (x *FragMeta) GetDataFiles() []string {
	if x != nil {
		return x.DataFiles
	}
	return nil
}

type AppendFragMetaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableId        int64       `protobuf:"varint,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	IndexId        int64       `protobuf:"varint,2,opt,name=index_id,json=indexId,proto3" json:"index_id,omitempty"`
	ShardId        uint64      `protobuf:"varint,3,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	LastCdcFile    string      `protobuf:"bytes,4,opt,name=last_cdc_file,json=lastCdcFile,proto3" json:"last_cdc_file,omitempty"`
	WorkerNodeAddr string      `protobuf:"bytes,5,opt,name=worker_node_addr,json=workerNodeAddr,proto3" json:"worker_node_addr,omitempty"`
	FragMetas      []*FragMeta `protobuf:"bytes,6,rep,name=frag_metas,json=fragMetas,proto3" json:"frag_metas,omitempty"`
}

func (x *AppendFragMetaRequest) Reset() {
	*x = AppendFragMetaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tici_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendFragMetaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendFragMetaRequest) ProtoMessage() {}

func (x *AppendFragMetaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tici_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendFragMetaRequest.ProtoReflect.Descriptor instead.
func (*AppendFragMetaRequest) Descriptor() ([]byte, []int) {
	return file_tici_proto_rawDescGZIP(), []int{9}
}

func (x *AppendFragMetaRequest) GetTableId() int64 {
	if x != nil {
		return x.TableId
	}
	return 0
}

func (x *AppendFragMetaRequest) GetIndexId() int64 {
	if x != nil {
		return x.IndexId
	}
	return 0
}

func (x *AppendFragMetaRequest) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *AppendFragMetaRequest) GetLastCdcFile() string {
	if x != nil {
		return x.LastCdcFile
	}
	return ""
}

func (x *AppendFragMetaRequest) GetWorkerNodeAddr() string {
	if x != nil {
		return x.WorkerNodeAddr
	}
	return ""
}

func (x *AppendFragMetaRequest) GetFragMetas() []*FragMeta {
	if x != nil {
		return x.FragMetas
	}
	return nil
}

type AppendFragMetaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 0 - success
	// ... other error codes
	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *AppendFragMetaResponse) Reset() {
	*x = AppendFragMetaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tici_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendFragMetaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendFragMetaResponse) ProtoMessage() {}

func (x *AppendFragMetaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tici_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendFragMetaResponse.ProtoReflect.Descriptor instead.
func (*AppendFragMetaResponse) Descriptor() ([]byte, []int) {
	return file_tici_proto_rawDescGZIP(), []int{10}
}

func (x *AppendFragMetaResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// Key range definition for shard cache queries
type KeyRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartKey string `protobuf:"bytes,1,opt,name=start_key,json=startKey,proto3" json:"start_key,omitempty"`
	EndKey   string `protobuf:"bytes,2,opt,name=end_key,json=endKey,proto3" json:"end_key,omitempty"`
}

func (x *KeyRange) Reset() {
	*x = KeyRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tici_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyRange) ProtoMessage() {}

func (x *KeyRange) ProtoReflect() protoreflect.Message {
	mi := &file_tici_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyRange.ProtoReflect.Descriptor instead.
func (*KeyRange) Descriptor() ([]byte, []int) {
	return file_tici_proto_rawDescGZIP(), []int{11}
}

func (x *KeyRange) GetStartKey() string {
	if x != nil {
		return x.StartKey
	}
	return ""
}

func (x *KeyRange) GetEndKey() string {
	if x != nil {
		return x.EndKey
	}
	return ""
}

// Shard local cache information
type ShardLocalCacheInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shard           *ShardManifestHeader `protobuf:"bytes,1,opt,name=shard,proto3" json:"shard,omitempty"`
	LocalCacheAddrs []string             `protobuf:"bytes,2,rep,name=local_cache_addrs,json=localCacheAddrs,proto3" json:"local_cache_addrs,omitempty"`
}

func (x *ShardLocalCacheInfo) Reset() {
	*x = ShardLocalCacheInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tici_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardLocalCacheInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardLocalCacheInfo) ProtoMessage() {}

func (x *ShardLocalCacheInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tici_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardLocalCacheInfo.ProtoReflect.Descriptor instead.
func (*ShardLocalCacheInfo) Descriptor() ([]byte, []int) {
	return file_tici_proto_rawDescGZIP(), []int{12}
}

func (x *ShardLocalCacheInfo) GetShard() *ShardManifestHeader {
	if x != nil {
		return x.Shard
	}
	return nil
}

func (x *ShardLocalCacheInfo) GetLocalCacheAddrs() []string {
	if x != nil {
		return x.LocalCacheAddrs
	}
	return nil
}

// Request to get shard local cache information
type GetShardLocalCacheRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Table ID to filter shards
	TableId int64 `protobuf:"varint,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	// Index ID to filter shards
	IndexId   int64       `protobuf:"varint,2,opt,name=index_id,json=indexId,proto3" json:"index_id,omitempty"`
	KeyRanges []*KeyRange `protobuf:"bytes,3,rep,name=key_ranges,json=keyRanges,proto3" json:"key_ranges,omitempty"`
	// at most `limit` shards can be returned
	Limit int32 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetShardLocalCacheRequest) Reset() {
	*x = GetShardLocalCacheRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tici_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShardLocalCacheRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShardLocalCacheRequest) ProtoMessage() {}

func (x *GetShardLocalCacheRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tici_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShardLocalCacheRequest.ProtoReflect.Descriptor instead.
func (*GetShardLocalCacheRequest) Descriptor() ([]byte, []int) {
	return file_tici_proto_rawDescGZIP(), []int{13}
}

func (x *GetShardLocalCacheRequest) GetTableId() int64 {
	if x != nil {
		return x.TableId
	}
	return 0
}

func (x *GetShardLocalCacheRequest) GetIndexId() int64 {
	if x != nil {
		return x.IndexId
	}
	return 0
}

func (x *GetShardLocalCacheRequest) GetKeyRanges() []*KeyRange {
	if x != nil {
		return x.KeyRanges
	}
	return nil
}

func (x *GetShardLocalCacheRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Response containing shard local cache information
type GetShardLocalCacheResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Operation result status code, 0 means success
	Status               int32                  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	ShardLocalCacheInfos []*ShardLocalCacheInfo `protobuf:"bytes,2,rep,name=shard_local_cache_infos,json=shardLocalCacheInfos,proto3" json:"shard_local_cache_infos,omitempty"`
}

func (x *GetShardLocalCacheResponse) Reset() {
	*x = GetShardLocalCacheResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tici_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShardLocalCacheResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShardLocalCacheResponse) ProtoMessage() {}

func (x *GetShardLocalCacheResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tici_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShardLocalCacheResponse.ProtoReflect.Descriptor instead.
func (*GetShardLocalCacheResponse) Descriptor() ([]byte, []int) {
	return file_tici_proto_rawDescGZIP(), []int{14}
}

func (x *GetShardLocalCacheResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetShardLocalCacheResponse) GetShardLocalCacheInfos() []*ShardLocalCacheInfo {
	if x != nil {
		return x.ShardLocalCacheInfos
	}
	return nil
}

type DebugGetShardManifestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableId  int64     `protobuf:"varint,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	IndexId  int64     `protobuf:"varint,2,opt,name=index_id,json=indexId,proto3" json:"index_id,omitempty"`
	Keyrange *KeyRange `protobuf:"bytes,3,opt,name=keyrange,proto3" json:"keyrange,omitempty"`
}

func (x *DebugGetShardManifestRequest) Reset() {
	*x = DebugGetShardManifestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tici_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugGetShardManifestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugGetShardManifestRequest) ProtoMessage() {}

func (x *DebugGetShardManifestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tici_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugGetShardManifestRequest.ProtoReflect.Descriptor instead.
func (*DebugGetShardManifestRequest) Descriptor() ([]byte, []int) {
	return file_tici_proto_rawDescGZIP(), []int{15}
}

func (x *DebugGetShardManifestRequest) GetTableId() int64 {
	if x != nil {
		return x.TableId
	}
	return 0
}

func (x *DebugGetShardManifestRequest) GetIndexId() int64 {
	if x != nil {
		return x.IndexId
	}
	return 0
}

func (x *DebugGetShardManifestRequest) GetKeyrange() *KeyRange {
	if x != nil {
		return x.Keyrange
	}
	return nil
}

type DebugGetShardManifestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FragMetas []*FragMeta `protobuf:"bytes,1,rep,name=frag_metas,json=fragMetas,proto3" json:"frag_metas,omitempty"`
}

func (x *DebugGetShardManifestResponse) Reset() {
	*x = DebugGetShardManifestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tici_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugGetShardManifestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugGetShardManifestResponse) ProtoMessage() {}

func (x *DebugGetShardManifestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tici_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugGetShardManifestResponse.ProtoReflect.Descriptor instead.
func (*DebugGetShardManifestResponse) Descriptor() ([]byte, []int) {
	return file_tici_proto_rawDescGZIP(), []int{16}
}

func (x *DebugGetShardManifestResponse) GetFragMetas() []*FragMeta {
	if x != nil {
		return x.FragMetas
	}
	return nil
}

var File_tici_proto protoreflect.FileDescriptor

var file_tici_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x74, 0x69, 0x63, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x74, 0x69,
	0x63, 0x69, 0x1a, 0x0d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x52, 0x0a, 0x10, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x75, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x63, 0x70, 0x75, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x70,
	0x75, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x63,
	0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x49,
	0x6e, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f,
	0x68, 0x69, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x48, 0x69, 0x74, 0x52, 0x61, 0x74, 0x65, 0x22, 0xc6, 0x01, 0x0a,
	0x15, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x4b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6e, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x65, 0x70,
	0x6f, 0x63, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x73, 0x65, 0x71, 0x22, 0x1c, 0x0a, 0x1a, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4e,
	0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0xd9, 0x01, 0x0a, 0x1a, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4e, 0x6f,
	0x64, 0x65, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x69, 0x63, 0x69, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x33, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x69, 0x63, 0x69, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x12, 0x42, 0x0a, 0x0b, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x74, 0x69, 0x63, 0x69, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4e, 0x6f,
	0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x9d, 0x01, 0x0a, 0x1b, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x48, 0x65,
	0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3c, 0x0a, 0x0d, 0x74, 0x6f, 0x5f, 0x61, 0x64,
	0x64, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x53,
	0x68, 0x61, 0x72, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x0e, 0x74, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x22,
	0x60, 0x0a, 0x1a, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x48, 0x65, 0x61,
	0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64,
	0x72, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x74, 0x69, 0x63, 0x69, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4e,
	0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x5a, 0x0a, 0x1b, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x48,
	0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x6d, 0x0a,
	0x08, 0x46, 0x72, 0x61, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x61, 0x67, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x61, 0x67, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a,
	0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x22, 0xe5, 0x01, 0x0a,
	0x15, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x61, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x63, 0x64, 0x63, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6c, 0x61, 0x73, 0x74, 0x43, 0x64, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x77,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4e, 0x6f, 0x64,
	0x65, 0x41, 0x64, 0x64, 0x72, 0x12, 0x2d, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x69, 0x63, 0x69,
	0x2e, 0x46, 0x72, 0x61, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x09, 0x66, 0x72, 0x61, 0x67, 0x4d,
	0x65, 0x74, 0x61, 0x73, 0x22, 0x30, 0x0a, 0x16, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x46, 0x72,
	0x61, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x40, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x12,
	0x17, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x65, 0x6e, 0x64, 0x4b, 0x65, 0x79, 0x22, 0x75, 0x0a, 0x13, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43, 0x61, 0x63, 0x68, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x32, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4d, 0x61,
	0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x05, 0x73, 0x68,
	0x61, 0x72, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x43, 0x61, 0x63, 0x68, 0x65, 0x41, 0x64, 0x64, 0x72, 0x73, 0x22,
	0x96, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x0a, 0x6b, 0x65, 0x79, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x69, 0x63, 0x69, 0x2e, 0x4b,
	0x65, 0x79, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x86, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x53, 0x68, 0x61, 0x72, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x50, 0x0a, 0x17, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x74, 0x69, 0x63, 0x69, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x43, 0x61, 0x63, 0x68, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x14, 0x73, 0x68, 0x61,
	0x72, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43, 0x61, 0x63, 0x68, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x22, 0x80, 0x01, 0x0a, 0x1c, 0x44, 0x65, 0x62, 0x75, 0x67, 0x47, 0x65, 0x74, 0x53, 0x68,
	0x61, 0x72, 0x64, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x69, 0x63,
	0x69, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x22, 0x4e, 0x0a, 0x1d, 0x44, 0x65, 0x62, 0x75, 0x67, 0x47, 0x65, 0x74,
	0x53, 0x68, 0x61, 0x72, 0x64, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x69, 0x63, 0x69,
	0x2e, 0x46, 0x72, 0x61, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x09, 0x66, 0x72, 0x61, 0x67, 0x4d,
	0x65, 0x74, 0x61, 0x73, 0x32, 0xb8, 0x05, 0x0a, 0x0b, 0x4d, 0x65, 0x74, 0x61, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x5a, 0x0a, 0x13, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4e, 0x6f,
	0x64, 0x65, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x20, 0x2e, 0x74, 0x69,
	0x63, 0x69, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x48, 0x65, 0x61,
	0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x74, 0x69, 0x63, 0x69, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x48,
	0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5a, 0x0a, 0x13, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x48, 0x65,
	0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x20, 0x2e, 0x74, 0x69, 0x63, 0x69, 0x2e, 0x52,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65,
	0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x74, 0x69, 0x63, 0x69,
	0x2e, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1b, 0x2e, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x44, 0x72, 0x6f, 0x70, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x19, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e, 0x44, 0x72,
	0x6f, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20,
	0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x61,
	0x67, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x1b, 0x2e, 0x74, 0x69, 0x63, 0x69, 0x2e, 0x41, 0x70, 0x70,
	0x65, 0x6e, 0x64, 0x46, 0x72, 0x61, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x74, 0x69, 0x63, 0x69, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64,
	0x46, 0x72, 0x61, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5b, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x43, 0x61, 0x63, 0x68, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x2e, 0x74, 0x69, 0x63,
	0x69, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x74, 0x69,
	0x63, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a,
	0x15, 0x44, 0x65, 0x62, 0x75, 0x67, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4d, 0x61,
	0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x12, 0x22, 0x2e, 0x74, 0x69, 0x63, 0x69, 0x2e, 0x44, 0x65,
	0x62, 0x75, 0x67, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4d, 0x61, 0x6e, 0x69, 0x66,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x74, 0x69, 0x63,
	0x69, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4d,
	0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x03, 0x5a, 0x01, 0x2e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tici_proto_rawDescOnce sync.Once
	file_tici_proto_rawDescData = file_tici_proto_rawDesc
)

func file_tici_proto_rawDescGZIP() []byte {
	file_tici_proto_rawDescOnce.Do(func() {
		file_tici_proto_rawDescData = protoimpl.X.CompressGZIP(file_tici_proto_rawDescData)
	})
	return file_tici_proto_rawDescData
}

var file_tici_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_tici_proto_goTypes = []any{
	(*WorkerNodeStatus)(nil),              // 0: tici.WorkerNodeStatus
	(*ReaderNodeStatus)(nil),              // 1: tici.ReaderNodeStatus
	(*WorkerNodeShardStatus)(nil),         // 2: tici.WorkerNodeShardStatus
	(*WorkerNodeCompactionStatus)(nil),    // 3: tici.WorkerNodeCompactionStatus
	(*WorkerNodeHeartbeatRequest)(nil),    // 4: tici.WorkerNodeHeartbeatRequest
	(*WorkerNodeHeartbeatResponse)(nil),   // 5: tici.WorkerNodeHeartbeatResponse
	(*ReaderNodeHeartbeatRequest)(nil),    // 6: tici.ReaderNodeHeartbeatRequest
	(*ReaderNodeHeartbeatResponse)(nil),   // 7: tici.ReaderNodeHeartbeatResponse
	(*FragMeta)(nil),                      // 8: tici.FragMeta
	(*AppendFragMetaRequest)(nil),         // 9: tici.AppendFragMetaRequest
	(*AppendFragMetaResponse)(nil),        // 10: tici.AppendFragMetaResponse
	(*KeyRange)(nil),                      // 11: tici.KeyRange
	(*ShardLocalCacheInfo)(nil),           // 12: tici.ShardLocalCacheInfo
	(*GetShardLocalCacheRequest)(nil),     // 13: tici.GetShardLocalCacheRequest
	(*GetShardLocalCacheResponse)(nil),    // 14: tici.GetShardLocalCacheResponse
	(*DebugGetShardManifestRequest)(nil),  // 15: tici.DebugGetShardManifestRequest
	(*DebugGetShardManifestResponse)(nil), // 16: tici.DebugGetShardManifestResponse
	(*AddShardRequest)(nil),               // 17: indexer.AddShardRequest
	(*ShardManifestHeader)(nil),           // 18: indexer.ShardManifestHeader
	(*CreateIndexRequest)(nil),            // 19: indexer.CreateIndexRequest
	(*DropIndexRequest)(nil),              // 20: indexer.DropIndexRequest
	(*GetIndexProgressRequest)(nil),       // 21: indexer.GetIndexProgressRequest
	(*CreateIndexResponse)(nil),           // 22: indexer.CreateIndexResponse
	(*DropIndexResponse)(nil),             // 23: indexer.DropIndexResponse
	(*GetIndexProgressResponse)(nil),      // 24: indexer.GetIndexProgressResponse
}
var file_tici_proto_depIdxs = []int32{
	0,  // 0: tici.WorkerNodeHeartbeatRequest.status:type_name -> tici.WorkerNodeStatus
	2,  // 1: tici.WorkerNodeHeartbeatRequest.shards:type_name -> tici.WorkerNodeShardStatus
	3,  // 2: tici.WorkerNodeHeartbeatRequest.compactions:type_name -> tici.WorkerNodeCompactionStatus
	17, // 3: tici.WorkerNodeHeartbeatResponse.to_add_shards:type_name -> indexer.AddShardRequest
	1,  // 4: tici.ReaderNodeHeartbeatRequest.status:type_name -> tici.ReaderNodeStatus
	8,  // 5: tici.AppendFragMetaRequest.frag_metas:type_name -> tici.FragMeta
	18, // 6: tici.ShardLocalCacheInfo.shard:type_name -> indexer.ShardManifestHeader
	11, // 7: tici.GetShardLocalCacheRequest.key_ranges:type_name -> tici.KeyRange
	12, // 8: tici.GetShardLocalCacheResponse.shard_local_cache_infos:type_name -> tici.ShardLocalCacheInfo
	11, // 9: tici.DebugGetShardManifestRequest.keyrange:type_name -> tici.KeyRange
	8,  // 10: tici.DebugGetShardManifestResponse.frag_metas:type_name -> tici.FragMeta
	4,  // 11: tici.MetaService.WorkerNodeHeartbeat:input_type -> tici.WorkerNodeHeartbeatRequest
	6,  // 12: tici.MetaService.ReaderNodeHeartbeat:input_type -> tici.ReaderNodeHeartbeatRequest
	19, // 13: tici.MetaService.CreateIndex:input_type -> indexer.CreateIndexRequest
	20, // 14: tici.MetaService.DropIndex:input_type -> indexer.DropIndexRequest
	21, // 15: tici.MetaService.GetIndexProgress:input_type -> indexer.GetIndexProgressRequest
	9,  // 16: tici.MetaService.AppendFragMeta:input_type -> tici.AppendFragMetaRequest
	13, // 17: tici.MetaService.GetShardLocalCacheInfo:input_type -> tici.GetShardLocalCacheRequest
	15, // 18: tici.MetaService.DebugGetShardManifest:input_type -> tici.DebugGetShardManifestRequest
	5,  // 19: tici.MetaService.WorkerNodeHeartbeat:output_type -> tici.WorkerNodeHeartbeatResponse
	7,  // 20: tici.MetaService.ReaderNodeHeartbeat:output_type -> tici.ReaderNodeHeartbeatResponse
	22, // 21: tici.MetaService.CreateIndex:output_type -> indexer.CreateIndexResponse
	23, // 22: tici.MetaService.DropIndex:output_type -> indexer.DropIndexResponse
	24, // 23: tici.MetaService.GetIndexProgress:output_type -> indexer.GetIndexProgressResponse
	10, // 24: tici.MetaService.AppendFragMeta:output_type -> tici.AppendFragMetaResponse
	14, // 25: tici.MetaService.GetShardLocalCacheInfo:output_type -> tici.GetShardLocalCacheResponse
	16, // 26: tici.MetaService.DebugGetShardManifest:output_type -> tici.DebugGetShardManifestResponse
	19, // [19:27] is the sub-list for method output_type
	11, // [11:19] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_tici_proto_init() }
func file_tici_proto_init() {
	if File_tici_proto != nil {
		return
	}
	file_indexer_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tici_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*WorkerNodeStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tici_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ReaderNodeStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tici_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*WorkerNodeShardStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tici_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*WorkerNodeCompactionStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tici_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*WorkerNodeHeartbeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tici_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*WorkerNodeHeartbeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tici_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ReaderNodeHeartbeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tici_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ReaderNodeHeartbeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tici_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*FragMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tici_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*AppendFragMetaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tici_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*AppendFragMetaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tici_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*KeyRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tici_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ShardLocalCacheInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tici_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GetShardLocalCacheRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tici_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*GetShardLocalCacheResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tici_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*DebugGetShardManifestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tici_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*DebugGetShardManifestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tici_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tici_proto_goTypes,
		DependencyIndexes: file_tici_proto_depIdxs,
		MessageInfos:      file_tici_proto_msgTypes,
	}.Build()
	File_tici_proto = out.File
	file_tici_proto_rawDesc = nil
	file_tici_proto_goTypes = nil
	file_tici_proto_depIdxs = nil
}
