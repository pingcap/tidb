load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "importer",
    srcs = [
        "chunk_process.go",
        "engine_process.go",
        "import.go",
        "job.go",
        "kv_encode.go",
        "precheck.go",
        "progress.go",
        "table_import.go",
    ],
    importpath = "github.com/pingcap/tidb/pkg/executor/importer",
    visibility = ["//visibility:public"],
    deps = [
        "//br/pkg/lightning/backend",
        "//br/pkg/lightning/backend/encode",
        "//br/pkg/lightning/backend/external",
        "//br/pkg/lightning/backend/kv",
        "//br/pkg/lightning/backend/local",
        "//br/pkg/lightning/checkpoints",
        "//br/pkg/lightning/common",
        "//br/pkg/lightning/config",
        "//br/pkg/lightning/log",
        "//br/pkg/lightning/metric",
        "//br/pkg/lightning/mydump",
        "//br/pkg/lightning/verification",
        "//br/pkg/storage",
        "//br/pkg/streamhelper",
        "//br/pkg/utils",
        "//pkg/config",
        "//pkg/ddl/util",
        "//pkg/expression",
        "//pkg/kv",
        "//pkg/meta/autoid",
        "//pkg/parser",
        "//pkg/parser/ast",
        "//pkg/parser/format",
        "//pkg/parser/model",
        "//pkg/parser/mysql",
        "//pkg/parser/terror",
        "//pkg/planner/core",
        "//pkg/sessionctx",
        "//pkg/sessionctx/stmtctx",
        "//pkg/sessionctx/variable",
        "//pkg/table",
        "//pkg/table/tables",
        "//pkg/tablecodec",
        "//pkg/types",
        "//pkg/util",
        "//pkg/util/chunk",
        "//pkg/util/cpu",
        "//pkg/util/dbterror",
        "//pkg/util/dbterror/exeerrors",
        "//pkg/util/etcd",
        "//pkg/util/filter",
        "//pkg/util/intest",
        "//pkg/util/logutil",
        "//pkg/util/sqlexec",
        "//pkg/util/stringutil",
        "//pkg/util/syncutil",
        "@com_github_docker_go_units//:go-units",
        "@com_github_pingcap_errors//:errors",
        "@com_github_pingcap_failpoint//:failpoint",
        "@com_github_pingcap_log//:log",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_tikv_client_go_v2//config",
        "@com_github_tikv_client_go_v2//tikv",
        "@com_github_tikv_client_go_v2//util",
        "@com_github_tikv_pd_client//:client",
        "@org_golang_x_sync//errgroup",
        "@org_uber_go_multierr//:multierr",
        "@org_uber_go_zap//:zap",
    ],
)

go_test(
    name = "importer_test",
    timeout = "short",
    srcs = [
        "chunk_process_testkit_test.go",
        "import_test.go",
        "job_test.go",
        "precheck_test.go",
        "table_import_test.go",
    ],
    embed = [":importer"],
    flaky = True,
    race = "on",
    shard_count = 20,
    deps = [
        "//br/pkg/errors",
        "//br/pkg/lightning/backend/encode",
        "//br/pkg/lightning/checkpoints",
        "//br/pkg/lightning/config",
        "//br/pkg/lightning/log",
        "//br/pkg/lightning/mydump",
        "//br/pkg/mock",
        "//br/pkg/streamhelper",
        "//br/pkg/utils",
        "//pkg/config",
        "//pkg/expression",
        "//pkg/infoschema",
        "//pkg/kv",
        "//pkg/parser",
        "//pkg/parser/ast",
        "//pkg/parser/model",
        "//pkg/planner/core",
        "//pkg/session",
        "//pkg/sessionctx/variable",
        "//pkg/testkit",
        "//pkg/types",
        "//pkg/util/dbterror/exeerrors",
        "//pkg/util/etcd",
        "//pkg/util/logutil",
        "//pkg/util/mock",
        "//pkg/util/sqlexec",
        "//pkg/util/syncutil",
        "@com_github_johannesboyne_gofakes3//:gofakes3",
        "@com_github_johannesboyne_gofakes3//backend/s3mem",
        "@com_github_pingcap_errors//:errors",
        "@com_github_pingcap_failpoint//:failpoint",
        "@com_github_pingcap_log//:log",
        "@com_github_stretchr_testify//require",
        "@com_github_tikv_client_go_v2//tikv",
        "@com_github_tikv_client_go_v2//util",
        "@io_etcd_go_etcd_client_v3//:client",
        "@io_etcd_go_etcd_server_v3//embed",
        "@org_uber_go_mock//gomock",
        "@org_uber_go_zap//:zap",
    ],
)
