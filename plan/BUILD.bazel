load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "aggregation_push_down.go",
        "build_key_info.go",
        "column_pruning.go",
        "decorrelate.go",
        "eliminate_projection.go",
        "expression_rewriter.go",
        "initialize.go",
        "join_reorder.go",
        "logical_plan_builder.go",
        "logical_plans.go",
        "match_property.go",
        "new_physical_plan_builder.go",
        "optimizer.go",
        "physical_plan_builder.go",
        "physical_plans.go",
        "plan.go",
        "plan_to_pb.go",
        "planbuilder.go",
        "plans.go",
        "predicate_push_down.go",
        "preprocess.go",
        "resolve_indices.go",
        "resolver.go",
        "stats.go",
        "stringer.go",
        "task.go",
        "topn_push_down.go",
        "util.go",
        "validator.go",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//ast:go_default_library",
        "//context:go_default_library",
        "//distsql:go_default_library",
        "//expression:go_default_library",
        "//infoschema:go_default_library",
        "//kv:go_default_library",
        "//model:go_default_library",
        "//mysql:go_default_library",
        "//parser:go_default_library",
        "//parser/opcode:go_default_library",
        "//privilege:go_default_library",
        "//sessionctx:go_default_library",
        "//sessionctx/variable:go_default_library",
        "//sessionctx/varsutil:go_default_library",
        "//statistics:go_default_library",
        "//table:go_default_library",
        "//tablecodec:go_default_library",
        "//terror:go_default_library",
        "//util/charset:go_default_library",
        "//util/codec:go_default_library",
        "//util/ranger:go_default_library",
        "//util/types:go_default_library",
        "//vendor/github.com/juju/errors:go_default_library",
        "//vendor/github.com/ngaut/log:go_default_library",
        "//vendor/github.com/pingcap/tipb/go-tipb:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "expression_test.go",
        "logical_plan_test.go",
        "physical_plan_test.go",
        "planbuilder_test.go",
    ],
    library = ":go_default_library",
    deps = [
        "//ast:go_default_library",
        "//context:go_default_library",
        "//domain:go_default_library",
        "//expression:go_default_library",
        "//infoschema:go_default_library",
        "//kv:go_default_library",
        "//model:go_default_library",
        "//mysql:go_default_library",
        "//parser:go_default_library",
        "//sessionctx:go_default_library",
        "//sessionctx/variable:go_default_library",
        "//statistics:go_default_library",
        "//store/tikv/oracle:go_default_library",
        "//terror:go_default_library",
        "//util/charset:go_default_library",
        "//util/mock:go_default_library",
        "//util/ranger:go_default_library",
        "//util/testleak:go_default_library",
        "//util/testutil:go_default_library",
        "//util/types:go_default_library",
        "//vendor/github.com/pingcap/check:go_default_library",
        "//vendor/github.com/pingcap/tipb/go-tipb:go_default_library",
        "//vendor/golang.org/x/net/context:go_default_library",
    ],
)

go_test(
    name = "go_default_xtest",
    srcs = [
        "analyze_test.go",
        "dag_plan_test.go",
        "expression_test.go",
        "logical_plan_test.go",
        "physical_plan_test.go",
        "planbuilder_test.go",
        "resolver_test.go",
        "validator_test.go",
    ],
    deps = [
        ":go_default_library",
        "//:go_default_library",
        "//ast:go_default_library",
        "//context:go_default_library",
        "//domain:go_default_library",
        "//expression:go_default_library",
        "//infoschema:go_default_library",
        "//kv:go_default_library",
        "//model:go_default_library",
        "//mysql:go_default_library",
        "//parser:go_default_library",
        "//sessionctx:go_default_library",
        "//sessionctx/variable:go_default_library",
        "//statistics:go_default_library",
        "//store/tikv:go_default_library",
        "//store/tikv/oracle:go_default_library",
        "//terror:go_default_library",
        "//util/charset:go_default_library",
        "//util/mock:go_default_library",
        "//util/ranger:go_default_library",
        "//util/testkit:go_default_library",
        "//util/testleak:go_default_library",
        "//util/testutil:go_default_library",
        "//util/types:go_default_library",
        "//vendor/github.com/juju/errors:go_default_library",
        "//vendor/github.com/pingcap/check:go_default_library",
        "//vendor/github.com/pingcap/tipb/go-tipb:go_default_library",
        "//vendor/golang.org/x/net/context:go_default_library",
    ],
)
