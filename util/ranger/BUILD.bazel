load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "ranger",
    srcs = [
        "checker.go",
        "detacher.go",
        "points.go",
        "ranger.go",
        "types.go",
    ],
    importpath = "github.com/pingcap/tidb/util/ranger",
    visibility = ["//visibility:public"],
    deps = [
        "//errno",
        "//expression",
        "//kv",
        "//sessionctx",
        "//sessionctx/stmtctx",
        "//types",
        "//types/parser_driver",
        "//util/chunk",
        "//util/codec",
        "//util/collate",
        "//util/dbterror",
        "//vendor/github.com/pingcap/errors",
        "//vendor/github.com/pingcap/tidb/parser/ast",
        "//vendor/github.com/pingcap/tidb/parser/charset",
        "//vendor/github.com/pingcap/tidb/parser/format",
        "//vendor/github.com/pingcap/tidb/parser/model",
        "//vendor/github.com/pingcap/tidb/parser/mysql",
        "//vendor/github.com/pingcap/tidb/parser/terror",
        "//vendor/golang.org/x/exp/slices",
    ],
)

go_test(
    name = "ranger_test",
    timeout = "short",
    srcs = [
        "bench_test.go",
        "main_test.go",
        "ranger_test.go",
        "types_test.go",
    ],
    data = glob(["testdata/**"]),
    flaky = True,
    deps = [
        ":ranger",
        "//config",
        "//expression",
        "//planner/core",
        "//session",
        "//sessionctx",
        "//sessionctx/variable",
        "//testkit",
        "//testkit/testdata",
        "//testkit/testsetup",
        "//types",
        "//util/collate",
        "//vendor/github.com/pingcap/tidb/parser/ast",
        "//vendor/github.com/pingcap/tidb/parser/model",
        "//vendor/github.com/pingcap/tidb/parser/mysql",
        "//vendor/github.com/stretchr/testify/require",
        "//vendor/go.uber.org/goleak",
    ],
)
