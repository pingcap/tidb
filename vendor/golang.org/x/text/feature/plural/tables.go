// Code generated by running "go generate" in golang.org/x/text. DO NOT EDIT.

package plural

// CLDRVersion is the CLDR version from which the tables in this package are derived.
const CLDRVersion = "30"

var ordinalRules = []pluralCheck{ // 58 elements
	0:  {cat: 0x2f, setID: 0x4},
	1:  {cat: 0x3a, setID: 0x5},
	2:  {cat: 0x22, setID: 0x1},
	3:  {cat: 0x22, setID: 0x6},
	4:  {cat: 0x22, setID: 0x7},
	5:  {cat: 0x2f, setID: 0x8},
	6:  {cat: 0x3c, setID: 0x9},
	7:  {cat: 0x2f, setID: 0xa},
	8:  {cat: 0x3c, setID: 0xb},
	9:  {cat: 0x2d, setID: 0xc},
	10: {cat: 0x2d, setID: 0xd},
	11: {cat: 0x2f, setID: 0xe},
	12: {cat: 0x35, setID: 0x3},
	13: {cat: 0xc5, setID: 0xf},
	14: {cat: 0x2, setID: 0x1},
	15: {cat: 0x5, setID: 0x3},
	16: {cat: 0xd, setID: 0x10},
	17: {cat: 0x22, setID: 0x1},
	18: {cat: 0x2f, setID: 0x11},
	19: {cat: 0x3d, setID: 0x12},
	20: {cat: 0x2f, setID: 0x13},
	21: {cat: 0x3a, setID: 0x14},
	22: {cat: 0x2f, setID: 0x15},
	23: {cat: 0x3b, setID: 0x16},
	24: {cat: 0x2f, setID: 0xa},
	25: {cat: 0x3c, setID: 0xb},
	26: {cat: 0x22, setID: 0x1},
	27: {cat: 0x23, setID: 0x17},
	28: {cat: 0x24, setID: 0x18},
	29: {cat: 0x22, setID: 0x19},
	30: {cat: 0x23, setID: 0x2},
	31: {cat: 0x24, setID: 0x18},
	32: {cat: 0xf, setID: 0x13},
	33: {cat: 0x1a, setID: 0x14},
	34: {cat: 0xf, setID: 0x15},
	35: {cat: 0x1b, setID: 0x16},
	36: {cat: 0xf, setID: 0x1a},
	37: {cat: 0x1d, setID: 0x1b},
	38: {cat: 0xa, setID: 0x1c},
	39: {cat: 0xa, setID: 0x1d},
	40: {cat: 0xc, setID: 0x1e},
	41: {cat: 0xe4, setID: 0x0},
	42: {cat: 0x5, setID: 0x3},
	43: {cat: 0xd, setID: 0xc},
	44: {cat: 0xd, setID: 0x1f},
	45: {cat: 0x22, setID: 0x1},
	46: {cat: 0x23, setID: 0x17},
	47: {cat: 0x24, setID: 0x18},
	48: {cat: 0x25, setID: 0x20},
	49: {cat: 0x22, setID: 0x21},
	50: {cat: 0x23, setID: 0x17},
	51: {cat: 0x24, setID: 0x18},
	52: {cat: 0x25, setID: 0x20},
	53: {cat: 0x21, setID: 0x22},
	54: {cat: 0x22, setID: 0x1},
	55: {cat: 0x23, setID: 0x2},
	56: {cat: 0x24, setID: 0x23},
	57: {cat: 0x25, setID: 0x24},
} // Size: 140 bytes

var ordinalIndex = []uint8{ // 20 elements
	0x00, 0x00, 0x02, 0x03, 0x04, 0x05, 0x07, 0x09,
	0x0d, 0x0e, 0x11, 0x14, 0x1a, 0x1d, 0x20, 0x26,
	0x2d, 0x31, 0x35, 0x3a,
} // Size: 44 bytes

var ordinalLangToIndex = []uint8{ // 752 elements
	// Entry 0 - 3F
	0x00, 0x0d, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00,
	0x0f, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x05,
	0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	// Entry 40 - 7F
	0x00, 0x00, 0x11, 0x11, 0x11, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x0d, 0x0d, 0x0d, 0x0d, 0x0d, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x12, 0x12, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	// Entry 80 - BF
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x0b, 0x0b,
	0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b,
	0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b,
	0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b,
	0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b,
	0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b,
	0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b,
	0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b,
	// Entry C0 - FF
	0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b,
	0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b,
	0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b,
	0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b,
	0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b,
	0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	// Entry 100 - 13F
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00,
	0x00, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
	0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
	0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
	0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
	// Entry 140 - 17F
	0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
	0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
	0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x02, 0x02,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	// Entry 180 - 1BF
	0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x09, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	// Entry 1C0 - 1FF
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x0e, 0x0e, 0x00, 0x00,
	0x00, 0x00, 0x0c, 0x0c, 0x02, 0x02, 0x02, 0x02,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	// Entry 200 - 23F
	0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	// Entry 240 - 27F
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02,
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a,
	// Entry 280 - 2BF
	0x0a, 0x0a, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00,
	// Entry 2C0 - 2FF
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
} // Size: 776 bytes

var ordinalInclusionMasks = []uint64{ // 100 elements
	// Entry 0 - 1F
	0x0000000400004009, 0x00000002120800d3, 0x0000000010a10195, 0x0000000842810581,
	0x0000000841030081, 0x0000001210010041, 0x0000001100011001, 0x0000000614010001,
	0x0000000614018001, 0x0000000600012001, 0x0000000200014001, 0x0000000010198031,
	0x0000000010610331, 0x0000000040010f01, 0x0000000040070001, 0x0000000010010001,
	0x0000000000011001, 0x000000001c010001, 0x000000001c010001, 0x0000000000012001,
	0x0000000020014001, 0x0000000010080011, 0x0000000010200111, 0x0000000040000501,
	0x0000000040020001, 0x0000000010000001, 0x0000000000001001, 0x0000000014000001,
	0x0000000014000001, 0x0000000000002001, 0x0000000000004001, 0x0000000010080011,
	// Entry 20 - 3F
	0x0000000010200111, 0x0000000040000501, 0x0000000040020001, 0x0000000010000001,
	0x0000000000001001, 0x0000000014000001, 0x0000000014000001, 0x0000000000002001,
	0x0000000080014001, 0x0000000010080011, 0x0000000010200111, 0x0000000040000501,
	0x0000000040020001, 0x0000000010000001, 0x0000000000001001, 0x0000000014000001,
	0x0000000014000001, 0x0000000000002001, 0x0000000020004001, 0x0000000010080011,
	0x0000000010200111, 0x0000000040000501, 0x0000000040020001, 0x0000000010000001,
	0x0000000000001001, 0x0000000014000001, 0x0000000014000001, 0x0000000000002001,
	0x0000000080014001, 0x0000000010080011, 0x0000000010200111, 0x0000000040000501,
	// Entry 40 - 5F
	0x0000000040020001, 0x0000000010000001, 0x0000000000001001, 0x0000000014000001,
	0x0000000014000001, 0x0000000000002001, 0x0000000020004001, 0x0000000010080011,
	0x0000000010200111, 0x0000000040000501, 0x0000000040020001, 0x0000000010000001,
	0x0000000000001001, 0x0000000014000001, 0x0000000014000001, 0x0000000000002001,
	0x000000002001c001, 0x0000000010080011, 0x0000000010200111, 0x0000000040000501,
	0x0000000040020001, 0x0000000010000001, 0x0000000000001001, 0x0000000014000001,
	0x0000000014000001, 0x0000000000002001, 0x0000000080004001, 0x0000000010080011,
	0x0000000010200111, 0x0000000040000501, 0x0000000040020001, 0x0000000010000001,
	// Entry 60 - 7F
	0x0000000000001001, 0x0000000014000001, 0x0000000014000001, 0x0000000000002001,
} // Size: 824 bytes

// Slots used for ordinal: 3A of 0xFF rules; 14 of 0xFF indexes; 37 of 64 sets

var cardinalRules = []pluralCheck{ // 169 elements
	0:   {cat: 0x2, setID: 0x3},
	1:   {cat: 0x22, setID: 0x1},
	2:   {cat: 0x2, setID: 0x4},
	3:   {cat: 0x7, setID: 0x1},
	4:   {cat: 0x62, setID: 0x3},
	5:   {cat: 0x22, setID: 0x4},
	6:   {cat: 0x7, setID: 0x3},
	7:   {cat: 0x42, setID: 0x1},
	8:   {cat: 0x22, setID: 0x4},
	9:   {cat: 0x22, setID: 0x4},
	10:  {cat: 0x22, setID: 0x5},
	11:  {cat: 0x27, setID: 0x6},
	12:  {cat: 0x32, setID: 0x2},
	13:  {cat: 0x22, setID: 0x1},
	14:  {cat: 0x27, setID: 0x1},
	15:  {cat: 0x62, setID: 0x3},
	16:  {cat: 0x22, setID: 0x1},
	17:  {cat: 0x7, setID: 0x4},
	18:  {cat: 0x92, setID: 0x3},
	19:  {cat: 0xf, setID: 0x7},
	20:  {cat: 0x1f, setID: 0x8},
	21:  {cat: 0x82, setID: 0x3},
	22:  {cat: 0x92, setID: 0x3},
	23:  {cat: 0xf, setID: 0x7},
	24:  {cat: 0x62, setID: 0x3},
	25:  {cat: 0x4a, setID: 0x7},
	26:  {cat: 0x7, setID: 0x9},
	27:  {cat: 0x62, setID: 0x3},
	28:  {cat: 0x1f, setID: 0xa},
	29:  {cat: 0x62, setID: 0x3},
	30:  {cat: 0x5f, setID: 0xa},
	31:  {cat: 0x72, setID: 0x3},
	32:  {cat: 0x29, setID: 0xb},
	33:  {cat: 0x29, setID: 0xc},
	34:  {cat: 0x4f, setID: 0xc},
	35:  {cat: 0x61, setID: 0x2},
	36:  {cat: 0x2f, setID: 0x7},
	37:  {cat: 0x3a, setID: 0x8},
	38:  {cat: 0x4f, setID: 0x7},
	39:  {cat: 0x5f, setID: 0x8},
	40:  {cat: 0x62, setID: 0x2},
	41:  {cat: 0x4f, setID: 0x7},
	42:  {cat: 0x72, setID: 0x2},
	43:  {cat: 0x21, setID: 0x3},
	44:  {cat: 0x7, setID: 0x4},
	45:  {cat: 0x32, setID: 0x3},
	46:  {cat: 0x21, setID: 0x3},
	47:  {cat: 0x22, setID: 0x1},
	48:  {cat: 0x22, setID: 0x1},
	49:  {cat: 0x23, setID: 0x2},
	50:  {cat: 0x2, setID: 0x3},
	51:  {cat: 0x22, setID: 0x1},
	52:  {cat: 0x24, setID: 0xd},
	53:  {cat: 0x7, setID: 0x1},
	54:  {cat: 0x62, setID: 0x3},
	55:  {cat: 0x74, setID: 0x3},
	56:  {cat: 0x24, setID: 0x3},
	57:  {cat: 0x2f, setID: 0xe},
	58:  {cat: 0x34, setID: 0x1},
	59:  {cat: 0xf, setID: 0x7},
	60:  {cat: 0x1f, setID: 0x8},
	61:  {cat: 0x62, setID: 0x3},
	62:  {cat: 0x4f, setID: 0x7},
	63:  {cat: 0x5a, setID: 0x8},
	64:  {cat: 0xf, setID: 0xf},
	65:  {cat: 0x1f, setID: 0x10},
	66:  {cat: 0x64, setID: 0x3},
	67:  {cat: 0x4f, setID: 0xf},
	68:  {cat: 0x5c, setID: 0x10},
	69:  {cat: 0x22, setID: 0x11},
	70:  {cat: 0x23, setID: 0x12},
	71:  {cat: 0x24, setID: 0x13},
	72:  {cat: 0xf, setID: 0x1},
	73:  {cat: 0x62, setID: 0x3},
	74:  {cat: 0xf, setID: 0x2},
	75:  {cat: 0x63, setID: 0x3},
	76:  {cat: 0xf, setID: 0x14},
	77:  {cat: 0x64, setID: 0x3},
	78:  {cat: 0x74, setID: 0x3},
	79:  {cat: 0xf, setID: 0x1},
	80:  {cat: 0x62, setID: 0x3},
	81:  {cat: 0x4a, setID: 0x1},
	82:  {cat: 0xf, setID: 0x2},
	83:  {cat: 0x63, setID: 0x3},
	84:  {cat: 0x4b, setID: 0x2},
	85:  {cat: 0xf, setID: 0x14},
	86:  {cat: 0x64, setID: 0x3},
	87:  {cat: 0x4c, setID: 0x14},
	88:  {cat: 0x7, setID: 0x1},
	89:  {cat: 0x62, setID: 0x3},
	90:  {cat: 0x7, setID: 0x2},
	91:  {cat: 0x63, setID: 0x3},
	92:  {cat: 0x2f, setID: 0xb},
	93:  {cat: 0x37, setID: 0x15},
	94:  {cat: 0x65, setID: 0x3},
	95:  {cat: 0x7, setID: 0x1},
	96:  {cat: 0x62, setID: 0x3},
	97:  {cat: 0x7, setID: 0x16},
	98:  {cat: 0x64, setID: 0x3},
	99:  {cat: 0x75, setID: 0x3},
	100: {cat: 0x7, setID: 0x1},
	101: {cat: 0x62, setID: 0x3},
	102: {cat: 0xf, setID: 0xf},
	103: {cat: 0x1f, setID: 0x10},
	104: {cat: 0x64, setID: 0x3},
	105: {cat: 0xf, setID: 0x17},
	106: {cat: 0x17, setID: 0x1},
	107: {cat: 0x65, setID: 0x3},
	108: {cat: 0xf, setID: 0x18},
	109: {cat: 0x65, setID: 0x3},
	110: {cat: 0xf, setID: 0x10},
	111: {cat: 0x65, setID: 0x3},
	112: {cat: 0x2f, setID: 0x7},
	113: {cat: 0x3a, setID: 0x8},
	114: {cat: 0x2f, setID: 0xf},
	115: {cat: 0x3c, setID: 0x10},
	116: {cat: 0x2d, setID: 0xb},
	117: {cat: 0x2d, setID: 0x18},
	118: {cat: 0x2d, setID: 0x19},
	119: {cat: 0x2f, setID: 0x7},
	120: {cat: 0x3a, setID: 0xc},
	121: {cat: 0x2f, setID: 0x1a},
	122: {cat: 0x3c, setID: 0xc},
	123: {cat: 0x55, setID: 0x3},
	124: {cat: 0x22, setID: 0x1},
	125: {cat: 0x24, setID: 0x3},
	126: {cat: 0x2c, setID: 0xd},
	127: {cat: 0x2d, setID: 0xc},
	128: {cat: 0xf, setID: 0x7},
	129: {cat: 0x1f, setID: 0x8},
	130: {cat: 0x62, setID: 0x3},
	131: {cat: 0xf, setID: 0xf},
	132: {cat: 0x1f, setID: 0x10},
	133: {cat: 0x64, setID: 0x3},
	134: {cat: 0xf, setID: 0xb},
	135: {cat: 0x65, setID: 0x3},
	136: {cat: 0xf, setID: 0x18},
	137: {cat: 0x65, setID: 0x3},
	138: {cat: 0xf, setID: 0x19},
	139: {cat: 0x65, setID: 0x3},
	140: {cat: 0x2f, setID: 0x7},
	141: {cat: 0x3a, setID: 0x1b},
	142: {cat: 0x2f, setID: 0x1c},
	143: {cat: 0x3b, setID: 0x1d},
	144: {cat: 0x2f, setID: 0x1e},
	145: {cat: 0x3c, setID: 0x1f},
	146: {cat: 0x37, setID: 0x3},
	147: {cat: 0xa5, setID: 0x0},
	148: {cat: 0x22, setID: 0x1},
	149: {cat: 0x23, setID: 0x2},
	150: {cat: 0x24, setID: 0x20},
	151: {cat: 0x25, setID: 0x21},
	152: {cat: 0xf, setID: 0x7},
	153: {cat: 0x62, setID: 0x3},
	154: {cat: 0xf, setID: 0x1c},
	155: {cat: 0x63, setID: 0x3},
	156: {cat: 0xf, setID: 0x22},
	157: {cat: 0x64, setID: 0x3},
	158: {cat: 0x75, setID: 0x3},
	159: {cat: 0x21, setID: 0x3},
	160: {cat: 0x22, setID: 0x1},
	161: {cat: 0x23, setID: 0x2},
	162: {cat: 0x2c, setID: 0x23},
	163: {cat: 0x2d, setID: 0x5},
	164: {cat: 0x21, setID: 0x3},
	165: {cat: 0x22, setID: 0x1},
	166: {cat: 0x23, setID: 0x2},
	167: {cat: 0x24, setID: 0x24},
	168: {cat: 0x25, setID: 0x25},
} // Size: 362 bytes

var cardinalIndex = []uint8{ // 37 elements
	0x00, 0x00, 0x02, 0x03, 0x05, 0x08, 0x09, 0x0b,
	0x0d, 0x0e, 0x10, 0x13, 0x17, 0x1a, 0x20, 0x2b,
	0x2e, 0x30, 0x32, 0x35, 0x3b, 0x45, 0x48, 0x4f,
	0x58, 0x5f, 0x64, 0x70, 0x77, 0x7c, 0x80, 0x8c,
	0x94, 0x98, 0x9f, 0xa4, 0xa9,
} // Size: 61 bytes

var cardinalLangToIndex = []uint8{ // 752 elements
	// Entry 0 - 3F
	0x00, 0x03, 0x03, 0x08, 0x08, 0x08, 0x00, 0x00,
	0x05, 0x05, 0x01, 0x01, 0x22, 0x22, 0x22, 0x22,
	0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22,
	0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22,
	0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22,
	0x22, 0x22, 0x01, 0x01, 0x08, 0x08, 0x03, 0x03,
	0x08, 0x00, 0x00, 0x08, 0x08, 0x00, 0x00, 0x1b,
	0x1b, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x05,
	// Entry 40 - 7F
	0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00,
	0x1f, 0x1f, 0x08, 0x08, 0x14, 0x00, 0x00, 0x14,
	0x14, 0x03, 0x03, 0x03, 0x03, 0x03, 0x08, 0x08,
	0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x19,
	0x19, 0x00, 0x00, 0x23, 0x23, 0x0a, 0x0a, 0x0a,
	0x00, 0x00, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
	0x03, 0x03, 0x00, 0x00, 0x17, 0x17, 0x00, 0x00,
	0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,
	// Entry 80 - BF
	0x08, 0x08, 0x08, 0x08, 0x08, 0x03, 0x03, 0x03,
	0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
	0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
	0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
	0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
	0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
	0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
	0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
	// Entry C0 - FF
	0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
	0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
	0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
	0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
	0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
	0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x08, 0x08,
	0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08,
	0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08,
	// Entry 100 - 13F
	0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08,
	0x08, 0x08, 0x08, 0x08, 0x03, 0x03, 0x08, 0x08,
	0x00, 0x00, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02,
	0x02, 0x02, 0x03, 0x03, 0x0d, 0x0d, 0x08, 0x08,
	0x08, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
	0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
	0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
	0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
	// Entry 140 - 17F
	0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
	0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
	0x08, 0x08, 0x03, 0x03, 0x20, 0x20, 0x15, 0x15,
	0x03, 0x03, 0x08, 0x08, 0x08, 0x08, 0x01, 0x01,
	0x05, 0x00, 0x00, 0x21, 0x21, 0x08, 0x08, 0x08,
	0x08, 0x08, 0x08, 0x18, 0x18, 0x01, 0x01, 0x14,
	0x14, 0x14, 0x17, 0x17, 0x08, 0x08, 0x02, 0x02,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x0b,
	// Entry 180 - 1BF
	0x03, 0x03, 0x03, 0x03, 0x11, 0x00, 0x00, 0x00,
	0x08, 0x08, 0x08, 0x08, 0x00, 0x08, 0x08, 0x02,
	0x02, 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x08,
	0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08,
	0x08, 0x08, 0x00, 0x00, 0x10, 0x10, 0x08, 0x11,
	0x11, 0x08, 0x08, 0x0f, 0x0f, 0x08, 0x08, 0x08,
	// Entry 1C0 - 1FF
	0x08, 0x00, 0x00, 0x05, 0x05, 0x05, 0x05, 0x05,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x1c, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x0e, 0x08,
	0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x05, 0x05,
	0x00, 0x00, 0x08, 0x08, 0x0c, 0x0c, 0x08, 0x08,
	0x08, 0x08, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x1d, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x08, 0x11, 0x11, 0x08, 0x08, 0x08, 0x08, 0x08,
	// Entry 200 - 23F
	0x00, 0x00, 0x00, 0x08, 0x08, 0x08, 0x03, 0x03,
	0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x00, 0x00,
	0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x08, 0x05,
	0x00, 0x00, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08,
	0x08, 0x08, 0x08, 0x08, 0x08, 0x05, 0x00, 0x00,
	0x05, 0x05, 0x08, 0x1a, 0x1a, 0x0e, 0x0e, 0x08,
	0x08, 0x07, 0x09, 0x07, 0x09, 0x09, 0x09, 0x09,
	0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x00, 0x00,
	// Entry 240 - 27F
	0x00, 0x00, 0x08, 0x08, 0x00, 0x00, 0x13, 0x13,
	0x13, 0x08, 0x08, 0x1e, 0x1e, 0x1e, 0x1e, 0x1e,
	0x1e, 0x1e, 0x00, 0x00, 0x08, 0x08, 0x00, 0x00,
	0x08, 0x08, 0x00, 0x00, 0x08, 0x11, 0x11, 0x11,
	0x11, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x12,
	0x00, 0x00, 0x12, 0x12, 0x04, 0x04, 0x19, 0x19,
	0x16, 0x16, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
	0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08,
	// Entry 280 - 2BF
	0x08, 0x08, 0x08, 0x14, 0x14, 0x14, 0x14, 0x14,
	0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x08, 0x08,
	0x08, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
	0x03, 0x03, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08,
	0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x05,
	0x05, 0x05, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00,
	0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x06, 0x06,
	0x08, 0x08, 0x1e, 0x1e, 0x03, 0x03, 0x03, 0x08,
	// Entry 2C0 - 2FF
	0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x08, 0x08,
	0x08, 0x08, 0x05, 0x08, 0x08, 0x00, 0x08, 0x08,
	0x08, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
} // Size: 776 bytes

var cardinalInclusionMasks = []uint64{ // 100 elements
	// Entry 0 - 1F
	0x0000000400a00859, 0x0000000000a242d3, 0x000000001464e245, 0x000000194478e201,
	0x000000094478e401, 0x0000000905286001, 0x0000002905286401, 0x0000000a05286001,
	0x0000000a05286001, 0x0000000a45286401, 0x0000000a80a86801, 0x000000008a8251a1,
	0x00000000b605d021, 0x00000000c609d021, 0x00000000c609d421, 0x0000000085085021,
	0x0000000085085421, 0x0000000085085021, 0x0000000085085021, 0x00000000c5085421,
	0x0000000400800821, 0x00000000008000a1, 0x0000000014008021, 0x0000000044008021,
	0x0000000044008421, 0x0000000005000021, 0x0000000005000421, 0x0000000005000021,
	0x0000000005000021, 0x0000000045000421, 0x0000000000800821, 0x00000000008000a1,
	// Entry 20 - 3F
	0x0000000014008021, 0x0000000044008021, 0x0000000044008421, 0x0000000005000021,
	0x0000000005000421, 0x0000000005000021, 0x0000000005000021, 0x0000000045000421,
	0x0000000400800821, 0x00000000008000a1, 0x0000000014008021, 0x0000000044008021,
	0x0000000044008421, 0x0000000005000021, 0x0000000005000421, 0x0000000005000021,
	0x0000000005000021, 0x0000000045000421, 0x0000000000800821, 0x00000000008000a1,
	0x0000000014008021, 0x0000000044008021, 0x0000000044008421, 0x0000000005000021,
	0x0000000005000421, 0x0000000005000021, 0x0000000005000021, 0x0000000045000421,
	0x0000000400800821, 0x00000000008000a1, 0x0000000014008021, 0x0000000044008021,
	// Entry 40 - 5F
	0x0000000044008421, 0x0000000005000021, 0x0000000005000421, 0x0000000005000021,
	0x0000000005000021, 0x0000000045000421, 0x0000000080800821, 0x00000000888000a1,
	0x00000000b4008021, 0x00000000c4008021, 0x00000000c4008421, 0x0000000085000021,
	0x0000000085000421, 0x0000000085000021, 0x0000000085000021, 0x00000000c5000421,
	0x0000000400800821, 0x00000000008000a1, 0x0000000014008021, 0x0000000044008021,
	0x0000000044008421, 0x0000000005000021, 0x0000000005000421, 0x0000000005000021,
	0x0000000005000021, 0x0000000045000421, 0x0000000080800821, 0x00000000888000a1,
	0x00000000b4008021, 0x00000000c4008021, 0x00000000c4008421, 0x0000000085000021,
	// Entry 60 - 7F
	0x0000000085000421, 0x0000000085000021, 0x0000000085000021, 0x00000000c5000421,
} // Size: 824 bytes

// Slots used for cardinal: A9 of 0xFF rules; 25 of 0xFF indexes; 38 of 64 sets

// Total table size 3807 bytes (3KiB); checksum: A9B90899
