// Code generated by protoc-gen-go.
// source: HFile.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = math.Inf

// Map of name/values
type FileInfoProto struct {
	MapEntry         []*BytesBytesPair `protobuf:"bytes,1,rep,name=map_entry" json:"map_entry,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *FileInfoProto) Reset()         { *m = FileInfoProto{} }
func (m *FileInfoProto) String() string { return proto1.CompactTextString(m) }
func (*FileInfoProto) ProtoMessage()    {}

func (m *FileInfoProto) GetMapEntry() []*BytesBytesPair {
	if m != nil {
		return m.MapEntry
	}
	return nil
}

// HFile file trailer
type FileTrailerProto struct {
	FileInfoOffset            *uint64 `protobuf:"varint,1,opt,name=file_info_offset" json:"file_info_offset,omitempty"`
	LoadOnOpenDataOffset      *uint64 `protobuf:"varint,2,opt,name=load_on_open_data_offset" json:"load_on_open_data_offset,omitempty"`
	UncompressedDataIndexSize *uint64 `protobuf:"varint,3,opt,name=uncompressed_data_index_size" json:"uncompressed_data_index_size,omitempty"`
	TotalUncompressedBytes    *uint64 `protobuf:"varint,4,opt,name=total_uncompressed_bytes" json:"total_uncompressed_bytes,omitempty"`
	DataIndexCount            *uint32 `protobuf:"varint,5,opt,name=data_index_count" json:"data_index_count,omitempty"`
	MetaIndexCount            *uint32 `protobuf:"varint,6,opt,name=meta_index_count" json:"meta_index_count,omitempty"`
	EntryCount                *uint64 `protobuf:"varint,7,opt,name=entry_count" json:"entry_count,omitempty"`
	NumDataIndexLevels        *uint32 `protobuf:"varint,8,opt,name=num_data_index_levels" json:"num_data_index_levels,omitempty"`
	FirstDataBlockOffset      *uint64 `protobuf:"varint,9,opt,name=first_data_block_offset" json:"first_data_block_offset,omitempty"`
	LastDataBlockOffset       *uint64 `protobuf:"varint,10,opt,name=last_data_block_offset" json:"last_data_block_offset,omitempty"`
	ComparatorClassName       *string `protobuf:"bytes,11,opt,name=comparator_class_name" json:"comparator_class_name,omitempty"`
	CompressionCodec          *uint32 `protobuf:"varint,12,opt,name=compression_codec" json:"compression_codec,omitempty"`
	EncryptionKey             []byte  `protobuf:"bytes,13,opt,name=encryption_key" json:"encryption_key,omitempty"`
	XXX_unrecognized          []byte  `json:"-"`
}

func (m *FileTrailerProto) Reset()         { *m = FileTrailerProto{} }
func (m *FileTrailerProto) String() string { return proto1.CompactTextString(m) }
func (*FileTrailerProto) ProtoMessage()    {}

func (m *FileTrailerProto) GetFileInfoOffset() uint64 {
	if m != nil && m.FileInfoOffset != nil {
		return *m.FileInfoOffset
	}
	return 0
}

func (m *FileTrailerProto) GetLoadOnOpenDataOffset() uint64 {
	if m != nil && m.LoadOnOpenDataOffset != nil {
		return *m.LoadOnOpenDataOffset
	}
	return 0
}

func (m *FileTrailerProto) GetUncompressedDataIndexSize() uint64 {
	if m != nil && m.UncompressedDataIndexSize != nil {
		return *m.UncompressedDataIndexSize
	}
	return 0
}

func (m *FileTrailerProto) GetTotalUncompressedBytes() uint64 {
	if m != nil && m.TotalUncompressedBytes != nil {
		return *m.TotalUncompressedBytes
	}
	return 0
}

func (m *FileTrailerProto) GetDataIndexCount() uint32 {
	if m != nil && m.DataIndexCount != nil {
		return *m.DataIndexCount
	}
	return 0
}

func (m *FileTrailerProto) GetMetaIndexCount() uint32 {
	if m != nil && m.MetaIndexCount != nil {
		return *m.MetaIndexCount
	}
	return 0
}

func (m *FileTrailerProto) GetEntryCount() uint64 {
	if m != nil && m.EntryCount != nil {
		return *m.EntryCount
	}
	return 0
}

func (m *FileTrailerProto) GetNumDataIndexLevels() uint32 {
	if m != nil && m.NumDataIndexLevels != nil {
		return *m.NumDataIndexLevels
	}
	return 0
}

func (m *FileTrailerProto) GetFirstDataBlockOffset() uint64 {
	if m != nil && m.FirstDataBlockOffset != nil {
		return *m.FirstDataBlockOffset
	}
	return 0
}

func (m *FileTrailerProto) GetLastDataBlockOffset() uint64 {
	if m != nil && m.LastDataBlockOffset != nil {
		return *m.LastDataBlockOffset
	}
	return 0
}

func (m *FileTrailerProto) GetComparatorClassName() string {
	if m != nil && m.ComparatorClassName != nil {
		return *m.ComparatorClassName
	}
	return ""
}

func (m *FileTrailerProto) GetCompressionCodec() uint32 {
	if m != nil && m.CompressionCodec != nil {
		return *m.CompressionCodec
	}
	return 0
}

func (m *FileTrailerProto) GetEncryptionKey() []byte {
	if m != nil {
		return m.EncryptionKey
	}
	return nil
}

func init() {
}
