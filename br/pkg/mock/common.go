// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/pingcap/tidb/pkg/lightning/common (interfaces: ChunkFlushStatus)
//
// Generated by this command:
//
//	mockgen -package mock github.com/pingcap/tidb/pkg/lightning/common ChunkFlushStatus
//

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockChunkFlushStatus is a mock of ChunkFlushStatus interface.
type MockChunkFlushStatus struct {
	ctrl     *gomock.Controller
	recorder *MockChunkFlushStatusMockRecorder
}

// MockChunkFlushStatusMockRecorder is the mock recorder for MockChunkFlushStatus.
type MockChunkFlushStatusMockRecorder struct {
	mock *MockChunkFlushStatus
}

// NewMockChunkFlushStatus creates a new mock instance.
func NewMockChunkFlushStatus(ctrl *gomock.Controller) *MockChunkFlushStatus {
	mock := &MockChunkFlushStatus{ctrl: ctrl}
	mock.recorder = &MockChunkFlushStatusMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockChunkFlushStatus) EXPECT() *MockChunkFlushStatusMockRecorder {
	return m.recorder
}

// ISGOMOCK indicates that this struct is a gomock mock.
func (m *MockChunkFlushStatus) ISGOMOCK() struct{} {
	return struct{}{}
}

// Flushed mocks base method.
func (m *MockChunkFlushStatus) Flushed() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Flushed")
	ret0, _ := ret[0].(bool)
	return ret0
}

// Flushed indicates an expected call of Flushed.
func (mr *MockChunkFlushStatusMockRecorder) Flushed() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Flushed", reflect.TypeOf((*MockChunkFlushStatus)(nil).Flushed))
}
