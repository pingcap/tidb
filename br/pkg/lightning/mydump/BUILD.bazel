load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "mydump",
    srcs = [
        "bytes.go",
        "charset_convertor.go",
        "csv_parser.go",
        "loader.go",
        "parquet_parser.go",
        "parser.go",
        "parser_generated.go",
        "reader.go",
        "region.go",
        "router.go",
    ],
    importpath = "github.com/pingcap/tidb/br/pkg/lightning/mydump",
    visibility = ["//visibility:public"],
    deps = [
        "//br/pkg/lightning/common",
        "//br/pkg/lightning/config",
        "//br/pkg/lightning/log",
        "//br/pkg/lightning/metric",
        "//br/pkg/lightning/worker",
        "//br/pkg/storage",
        "//types",
        "//util/filter",
        "//util/mathutil",
        "//util/regexpr-router",
        "//util/slice",
        "//util/table-filter",
        "//vendor/github.com/pingcap/errors",
        "//vendor/github.com/pingcap/tidb/parser/mysql",
        "//vendor/github.com/xitongsys/parquet-go/parquet",
        "//vendor/github.com/xitongsys/parquet-go/reader",
        "//vendor/github.com/xitongsys/parquet-go/source",
        "//vendor/go.uber.org/zap",
        "//vendor/go.uber.org/zap/zapcore",
        "//vendor/golang.org/x/text/encoding",
        "//vendor/golang.org/x/text/encoding/simplifiedchinese",
    ],
)

go_test(
    name = "mydump_test",
    timeout = "short",
    srcs = [
        "charset_convertor_test.go",
        "csv_parser_test.go",
        "loader_test.go",
        "main_test.go",
        "parquet_parser_test.go",
        "parser_test.go",
        "reader_test.go",
        "region_test.go",
        "router_test.go",
    ],
    data = glob([
        "csv/*",
        "examples/*",
        "parquet/*",
    ]),
    embed = [":mydump"],
    flaky = True,
    deps = [
        "//br/pkg/lightning/common",
        "//br/pkg/lightning/config",
        "//br/pkg/lightning/log",
        "//br/pkg/lightning/worker",
        "//br/pkg/mock/storage",
        "//br/pkg/storage",
        "//testkit/testsetup",
        "//types",
        "//util/filter",
        "//util/table-filter",
        "//util/table-router",
        "//vendor/github.com/golang/mock/gomock",
        "//vendor/github.com/pingcap/errors",
        "//vendor/github.com/pingcap/tidb/parser/mysql",
        "//vendor/github.com/stretchr/testify/assert",
        "//vendor/github.com/stretchr/testify/require",
        "//vendor/github.com/xitongsys/parquet-go-source/local",
        "//vendor/github.com/xitongsys/parquet-go/writer",
        "//vendor/go.uber.org/goleak",
        "//vendor/go.uber.org/zap",
    ],
)
