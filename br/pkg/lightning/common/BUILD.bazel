load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "common",
    srcs = [
        "conn.go",
        "errors.go",
        "once_error.go",
        "pause.go",
        "retry.go",
        "security.go",
        "storage.go",
        "storage_unix.go",
        "storage_windows.go",
        "util.go",
    ],
    importpath = "github.com/pingcap/tidb/br/pkg/lightning/common",
    visibility = ["//visibility:public"],
    deps = [
        "//br/pkg/errors",
        "//br/pkg/httputil",
        "//br/pkg/lightning/log",
        "//br/pkg/utils",
        "//errno",
        "//store/driver/error",
        "//util",
        "//vendor/github.com/go-sql-driver/mysql",
        "//vendor/github.com/pingcap/errors",
        "//vendor/github.com/pingcap/failpoint",
        "//vendor/github.com/pingcap/tidb/parser/model",
        "//vendor/github.com/tikv/client-go/v2/config",
        "//vendor/github.com/tikv/pd/client",
        "//vendor/go.uber.org/zap",
        "//vendor/golang.org/x/sys/unix",
        "//vendor/google.golang.org/grpc",
        "//vendor/google.golang.org/grpc/codes",
        "//vendor/google.golang.org/grpc/credentials",
        "//vendor/google.golang.org/grpc/status",
    ],
)

go_test(
    name = "common_test",
    timeout = "short",
    srcs = [
        "errors_test.go",
        "main_test.go",
        "once_error_test.go",
        "pause_test.go",
        "retry_test.go",
        "security_test.go",
        "storage_test.go",
        "util_test.go",
    ],
    embed = [":common"],
    flaky = True,
    deps = [
        "//br/pkg/errors",
        "//br/pkg/lightning/log",
        "//errno",
        "//store/driver/error",
        "//testkit/testsetup",
        "//vendor/github.com/DATA-DOG/go-sqlmock",
        "//vendor/github.com/go-sql-driver/mysql",
        "//vendor/github.com/pingcap/errors",
        "//vendor/github.com/pingcap/failpoint",
        "//vendor/github.com/stretchr/testify/assert",
        "//vendor/github.com/stretchr/testify/require",
        "//vendor/go.uber.org/goleak",
        "//vendor/go.uber.org/multierr",
        "//vendor/google.golang.org/grpc/codes",
        "//vendor/google.golang.org/grpc/status",
    ],
)
