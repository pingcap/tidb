load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "task",
    srcs = [
        "backup.go",
        "backup_ebs.go",
        "backup_raw.go",
        "common.go",
        "restore.go",
        "restore_data.go",
        "restore_ebs_meta.go",
        "restore_raw.go",
        "stream.go",
    ],
    importpath = "github.com/pingcap/tidb/br/pkg/task",
    visibility = ["//visibility:public"],
    deps = [
        "//br/pkg/aws",
        "//br/pkg/backup",
        "//br/pkg/checksum",
        "//br/pkg/common",
        "//br/pkg/config",
        "//br/pkg/conn",
        "//br/pkg/conn/util",
        "//br/pkg/errors",
        "//br/pkg/glue",
        "//br/pkg/httputil",
        "//br/pkg/logutil",
        "//br/pkg/metautil",
        "//br/pkg/pdutil",
        "//br/pkg/restore",
        "//br/pkg/restore/tiflashrec",
        "//br/pkg/rtree",
        "//br/pkg/storage",
        "//br/pkg/stream",
        "//br/pkg/streamhelper",
        "//br/pkg/streamhelper/config",
        "//br/pkg/streamhelper/daemon",
        "//br/pkg/summary",
        "//br/pkg/utils",
        "//br/pkg/version",
        "//config",
        "//ddl",
        "//kv",
        "//sessionctx/stmtctx",
        "//sessionctx/variable",
        "//statistics/handle",
        "//types",
        "//util",
        "//util/mathutil",
        "//util/sqlexec",
        "//util/table-filter",
        "//vendor/cloud.google.com/go/storage",
        "//vendor/github.com/docker/go-units",
        "//vendor/github.com/fatih/color",
        "//vendor/github.com/gogo/protobuf/proto",
        "//vendor/github.com/opentracing/opentracing-go",
        "//vendor/github.com/pingcap/errors",
        "//vendor/github.com/pingcap/failpoint",
        "//vendor/github.com/pingcap/kvproto/pkg/brpb",
        "//vendor/github.com/pingcap/kvproto/pkg/encryptionpb",
        "//vendor/github.com/pingcap/kvproto/pkg/metapb",
        "//vendor/github.com/pingcap/log",
        "//vendor/github.com/pingcap/tidb/parser/model",
        "//vendor/github.com/pingcap/tidb/parser/mysql",
        "//vendor/github.com/spf13/cobra",
        "//vendor/github.com/spf13/pflag",
        "//vendor/github.com/tikv/client-go/v2/config",
        "//vendor/github.com/tikv/client-go/v2/oracle",
        "//vendor/github.com/tikv/pd/client",
        "//vendor/go.etcd.io/etcd/client/pkg/v3/transport",
        "//vendor/go.etcd.io/etcd/client/v3:client",
        "//vendor/go.uber.org/multierr",
        "//vendor/go.uber.org/zap",
        "//vendor/go.uber.org/zap/zapcore",
        "//vendor/golang.org/x/exp/slices",
        "//vendor/golang.org/x/sync/errgroup",
        "//vendor/google.golang.org/grpc",
        "//vendor/google.golang.org/grpc/backoff",
        "//vendor/google.golang.org/grpc/keepalive",
    ],
)

go_test(
    name = "task_test",
    timeout = "short",
    srcs = [
        "backup_ebs_test.go",
        "backup_test.go",
        "common_test.go",
        "restore_test.go",
        "stream_test.go",
    ],
    embed = [":task"],
    flaky = True,
    deps = [
        "//br/pkg/conn",
        "//br/pkg/errors",
        "//br/pkg/metautil",
        "//br/pkg/restore",
        "//br/pkg/storage",
        "//br/pkg/stream",
        "//br/pkg/utils",
        "//config",
        "//statistics/handle",
        "//tablecodec",
        "//vendor/github.com/golang/protobuf/proto",
        "//vendor/github.com/pingcap/errors",
        "//vendor/github.com/pingcap/kvproto/pkg/brpb",
        "//vendor/github.com/pingcap/kvproto/pkg/encryptionpb",
        "//vendor/github.com/pingcap/kvproto/pkg/metapb",
        "//vendor/github.com/pingcap/tidb/parser/model",
        "//vendor/github.com/spf13/pflag",
        "//vendor/github.com/stretchr/testify/require",
        "//vendor/github.com/tikv/client-go/v2/oracle",
        "//vendor/github.com/tikv/pd/client",
        "//vendor/google.golang.org/grpc/keepalive",
    ],
)
