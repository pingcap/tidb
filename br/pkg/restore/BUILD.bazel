load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "restore",
    srcs = [
        "batcher.go",
        "client.go",
        "data.go",
        "db.go",
        "import.go",
        "import_retry.go",
        "log_client.go",
        "merge.go",
        "pipeline_items.go",
        "range.go",
        "rawkv_client.go",
        "search.go",
        "split.go",
        "stream_metas.go",
        "systable_restore.go",
        "util.go",
    ],
    importpath = "github.com/pingcap/tidb/br/pkg/restore",
    visibility = ["//visibility:public"],
    deps = [
        "//br/pkg/backup",
        "//br/pkg/checksum",
        "//br/pkg/common",
        "//br/pkg/conn",
        "//br/pkg/conn/util",
        "//br/pkg/errors",
        "//br/pkg/glue",
        "//br/pkg/logutil",
        "//br/pkg/metautil",
        "//br/pkg/pdutil",
        "//br/pkg/redact",
        "//br/pkg/restore/prealloc_table_id",
        "//br/pkg/restore/split",
        "//br/pkg/restore/tiflashrec",
        "//br/pkg/rtree",
        "//br/pkg/storage",
        "//br/pkg/stream",
        "//br/pkg/summary",
        "//br/pkg/utils",
        "//br/pkg/utils/iter",
        "//config",
        "//ddl",
        "//ddl/util",
        "//domain",
        "//kv",
        "//meta",
        "//sessionctx/variable",
        "//statistics/handle",
        "//store/pdtypes",
        "//tablecodec",
        "//util",
        "//util/codec",
        "//util/hack",
        "//util/mathutil",
        "//util/table-filter",
        "//vendor/github.com/emirpasic/gods/maps/treemap",
        "//vendor/github.com/go-sql-driver/mysql",
        "//vendor/github.com/google/uuid",
        "//vendor/github.com/opentracing/opentracing-go",
        "//vendor/github.com/pingcap/errors",
        "//vendor/github.com/pingcap/failpoint",
        "//vendor/github.com/pingcap/kvproto/pkg/brpb",
        "//vendor/github.com/pingcap/kvproto/pkg/errorpb",
        "//vendor/github.com/pingcap/kvproto/pkg/import_sstpb",
        "//vendor/github.com/pingcap/kvproto/pkg/kvrpcpb",
        "//vendor/github.com/pingcap/kvproto/pkg/metapb",
        "//vendor/github.com/pingcap/kvproto/pkg/pdpb",
        "//vendor/github.com/pingcap/kvproto/pkg/recoverdatapb",
        "//vendor/github.com/pingcap/log",
        "//vendor/github.com/pingcap/tidb/parser/model",
        "//vendor/github.com/pingcap/tidb/parser/mysql",
        "//vendor/github.com/tikv/client-go/v2/config",
        "//vendor/github.com/tikv/client-go/v2/kv",
        "//vendor/github.com/tikv/client-go/v2/oracle",
        "//vendor/github.com/tikv/client-go/v2/rawkv",
        "//vendor/github.com/tikv/client-go/v2/tikv",
        "//vendor/github.com/tikv/client-go/v2/txnkv/rangetask",
        "//vendor/github.com/tikv/pd/client",
        "//vendor/go.uber.org/multierr",
        "//vendor/go.uber.org/zap",
        "//vendor/go.uber.org/zap/zapcore",
        "//vendor/golang.org/x/exp/slices",
        "//vendor/golang.org/x/sync/errgroup",
        "//vendor/google.golang.org/grpc",
        "//vendor/google.golang.org/grpc/backoff",
        "//vendor/google.golang.org/grpc/codes",
        "//vendor/google.golang.org/grpc/credentials",
        "//vendor/google.golang.org/grpc/keepalive",
        "//vendor/google.golang.org/grpc/status",
    ],
)

go_test(
    name = "restore_test",
    timeout = "short",
    srcs = [
        "batcher_test.go",
        "client_test.go",
        "data_test.go",
        "db_test.go",
        "import_retry_test.go",
        "log_client_test.go",
        "main_test.go",
        "merge_fuzz_test.go",
        "merge_test.go",
        "range_test.go",
        "rawkv_client_test.go",
        "search_test.go",
        "split_test.go",
        "stream_metas_test.go",
        "util_test.go",
    ],
    embed = [":restore"],
    flaky = True,
    race = "on",
    shard_count = 20,
    deps = [
        "//br/pkg/backup",
        "//br/pkg/conn",
        "//br/pkg/errors",
        "//br/pkg/glue",
        "//br/pkg/gluetidb",
        "//br/pkg/logutil",
        "//br/pkg/metautil",
        "//br/pkg/mock",
        "//br/pkg/pdutil",
        "//br/pkg/restore/split",
        "//br/pkg/restore/tiflashrec",
        "//br/pkg/rtree",
        "//br/pkg/storage",
        "//br/pkg/stream",
        "//br/pkg/utils",
        "//br/pkg/utils/iter",
        "//infoschema",
        "//kv",
        "//meta/autoid",
        "//sessionctx/stmtctx",
        "//store/pdtypes",
        "//tablecodec",
        "//testkit",
        "//testkit/testsetup",
        "//types",
        "//util/codec",
        "//util/mathutil",
        "//vendor/github.com/fsouza/fake-gcs-server/fakestorage",
        "//vendor/github.com/golang/protobuf/proto",
        "//vendor/github.com/pingcap/errors",
        "//vendor/github.com/pingcap/failpoint",
        "//vendor/github.com/pingcap/kvproto/pkg/brpb",
        "//vendor/github.com/pingcap/kvproto/pkg/encryptionpb",
        "//vendor/github.com/pingcap/kvproto/pkg/errorpb",
        "//vendor/github.com/pingcap/kvproto/pkg/import_sstpb",
        "//vendor/github.com/pingcap/kvproto/pkg/metapb",
        "//vendor/github.com/pingcap/kvproto/pkg/pdpb",
        "//vendor/github.com/pingcap/kvproto/pkg/recoverdatapb",
        "//vendor/github.com/pingcap/log",
        "//vendor/github.com/pingcap/tidb/parser/model",
        "//vendor/github.com/pingcap/tidb/parser/mysql",
        "//vendor/github.com/pingcap/tidb/parser/types",
        "//vendor/github.com/stretchr/testify/assert",
        "//vendor/github.com/stretchr/testify/require",
        "//vendor/github.com/tikv/client-go/v2/oracle",
        "//vendor/github.com/tikv/client-go/v2/rawkv",
        "//vendor/github.com/tikv/client-go/v2/testutils",
        "//vendor/github.com/tikv/pd/client",
        "//vendor/go.uber.org/goleak",
        "//vendor/go.uber.org/multierr",
        "//vendor/go.uber.org/zap",
        "//vendor/go.uber.org/zap/zapcore",
        "//vendor/golang.org/x/exp/slices",
        "//vendor/google.golang.org/grpc/codes",
        "//vendor/google.golang.org/grpc/keepalive",
        "//vendor/google.golang.org/grpc/status",
    ],
)
