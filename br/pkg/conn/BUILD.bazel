load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "conn",
    srcs = ["conn.go"],
    importpath = "github.com/pingcap/tidb/br/pkg/conn",
    visibility = ["//visibility:public"],
    deps = [
        "//br/pkg/conn/util",
        "//br/pkg/errors",
        "//br/pkg/glue",
        "//br/pkg/logutil",
        "//br/pkg/pdutil",
        "//br/pkg/utils",
        "//br/pkg/version",
        "//domain",
        "//kv",
        "//vendor/github.com/docker/go-units",
        "//vendor/github.com/opentracing/opentracing-go",
        "//vendor/github.com/pingcap/errors",
        "//vendor/github.com/pingcap/failpoint",
        "//vendor/github.com/pingcap/kvproto/pkg/brpb",
        "//vendor/github.com/pingcap/kvproto/pkg/logbackuppb",
        "//vendor/github.com/pingcap/kvproto/pkg/metapb",
        "//vendor/github.com/pingcap/log",
        "//vendor/github.com/tikv/client-go/v2/oracle",
        "//vendor/github.com/tikv/client-go/v2/tikv",
        "//vendor/github.com/tikv/client-go/v2/txnkv/txnlock",
        "//vendor/github.com/tikv/pd/client",
        "//vendor/go.uber.org/zap",
        "//vendor/google.golang.org/grpc",
        "//vendor/google.golang.org/grpc/codes",
        "//vendor/google.golang.org/grpc/keepalive",
        "//vendor/google.golang.org/grpc/status",
    ],
)

go_test(
    name = "conn_test",
    timeout = "short",
    srcs = [
        "conn_test.go",
        "main_test.go",
    ],
    embed = [":conn"],
    flaky = True,
    deps = [
        "//br/pkg/conn/util",
        "//br/pkg/pdutil",
        "//br/pkg/utils",
        "//testkit/testsetup",
        "//vendor/github.com/docker/go-units",
        "//vendor/github.com/pingcap/errors",
        "//vendor/github.com/pingcap/failpoint",
        "//vendor/github.com/pingcap/kvproto/pkg/metapb",
        "//vendor/github.com/stretchr/testify/require",
        "//vendor/go.uber.org/goleak",
        "//vendor/google.golang.org/grpc/codes",
        "//vendor/google.golang.org/grpc/status",
    ],
)
