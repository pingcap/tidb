load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "aggregation.go",
        "builtin.go",
        "builtin_cast.go",
        "builtin_compare.go",
        "builtin_control.go",
        "builtin_encryption.go",
        "builtin_info.go",
        "builtin_json.go",
        "builtin_like.go",
        "builtin_math.go",
        "builtin_miscellaneous.go",
        "builtin_op.go",
        "builtin_other.go",
        "builtin_string.go",
        "builtin_time.go",
        "column.go",
        "constant_fold.go",
        "constant_propagation.go",
        "distsql_builtin.go",
        "expr_to_pb.go",
        "expression.go",
        "helper.go",
        "scalar_function.go",
        "schema.go",
        "typeinferer.go",
        "util.go",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//ast:go_default_library",
        "//context:go_default_library",
        "//kv:go_default_library",
        "//model:go_default_library",
        "//mysql:go_default_library",
        "//parser/opcode:go_default_library",
        "//sessionctx/variable:go_default_library",
        "//sessionctx/varsutil:go_default_library",
        "//terror:go_default_library",
        "//util:go_default_library",
        "//util/charset:go_default_library",
        "//util/codec:go_default_library",
        "//util/encrypt:go_default_library",
        "//util/hack:go_default_library",
        "//util/mock:go_default_library",
        "//util/mvmap:go_default_library",
        "//util/stringutil:go_default_library",
        "//util/types:go_default_library",
        "//util/types/json:go_default_library",
        "//vendor/github.com/juju/errors:go_default_library",
        "//vendor/github.com/ngaut/log:go_default_library",
        "//vendor/github.com/pingcap/tipb/go-tipb:go_default_library",
        "//vendor/github.com/twinj/uuid:go_default_library",
        "//vendor/golang.org/x/text/transform:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "builtin_cast_test.go",
        "builtin_control_test.go",
        "builtin_encryption_test.go",
        "builtin_info_test.go",
        "builtin_json_test.go",
        "builtin_math_test.go",
        "builtin_miscellaneous_test.go",
        "builtin_other_test.go",
        "builtin_string_test.go",
        "builtin_test.go",
        "builtin_time_test.go",
        "constant_test.go",
        "distsql_builtin_test.go",
        "evaluator_test.go",
        "helper_test.go",
        "util_test.go",
    ],
    library = ":go_default_library",
    deps = [
        "//ast:go_default_library",
        "//context:go_default_library",
        "//model:go_default_library",
        "//mysql:go_default_library",
        "//parser:go_default_library",
        "//sessionctx/variable:go_default_library",
        "//sessionctx/varsutil:go_default_library",
        "//util/charset:go_default_library",
        "//util/codec:go_default_library",
        "//util/hack:go_default_library",
        "//util/mock:go_default_library",
        "//util/testleak:go_default_library",
        "//util/testutil:go_default_library",
        "//util/types:go_default_library",
        "//util/types/json:go_default_library",
        "//vendor/github.com/juju/errors:go_default_library",
        "//vendor/github.com/pingcap/check:go_default_library",
        "//vendor/github.com/pingcap/tipb/go-tipb:go_default_library",
    ],
)

go_test(
    name = "go_default_xtest",
    srcs = ["typeinferer_test.go"],
    deps = [
        ":go_default_library",
        "//:go_default_library",
        "//ast:go_default_library",
        "//context:go_default_library",
        "//kv:go_default_library",
        "//model:go_default_library",
        "//mysql:go_default_library",
        "//plan:go_default_library",
        "//sessionctx:go_default_library",
        "//table:go_default_library",
        "//util/charset:go_default_library",
        "//util/testkit:go_default_library",
        "//util/testleak:go_default_library",
        "//vendor/github.com/juju/errors:go_default_library",
        "//vendor/github.com/pingcap/check:go_default_library",
    ],
)
