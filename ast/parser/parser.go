// CAUTION: Generated file - DO NOT EDIT.

// Copyright 2013 The ql Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSES/QL-LICENSE file.

// Copyright 2015 PingCAP, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// See the License for the specific language governing permissions and
// limitations under the License.

// Inital yacc source generated by ebnf2y[1]
// at 2013-10-04 23:10:47.861401015 +0200 CEST
//
//  $ ebnf2y -o ql.y -oe ql.ebnf -start StatementList -pkg ql -p _
//
//   [1]: http://github.com/cznic/ebnf2y

package parser

import __yyfmt__ "fmt"

import (
	"strings"

	"github.com/pingcap/tidb/ast"
	"github.com/pingcap/tidb/field"
	"github.com/pingcap/tidb/model"
	mysql "github.com/pingcap/tidb/mysqldef"
	"github.com/pingcap/tidb/parser/opcode"
	"github.com/pingcap/tidb/util/charset"
	"github.com/pingcap/tidb/util/types"
)

type yySymType struct {
	yys    int
	offset int // offset
	line   int
	col    int
	item   interface{}
	list   []interface{}
}

type yyXError struct {
	state, xsym int
}

const (
	yyDefault              = 57623
	yyEOFCode              = 57344
	abs                    = 57352
	add                    = 57353
	after                  = 57354
	all                    = 57355
	alter                  = 57356
	and                    = 57357
	andand                 = 57358
	andnot                 = 57359
	any                    = 57360
	as                     = 57361
	asc                    = 57362
	at                     = 57363
	autoIncrement          = 57364
	avg                    = 57365
	avgRowLength           = 57366
	begin                  = 57367
	between                = 57368
	bigIntType             = 57561
	binaryType             = 57576
	bitLit                 = 57351
	bitType                = 57562
	blobType               = 57579
	boolType               = 57598
	booleanType            = 57599
	both                   = 57369
	by                     = 57370
	byteType               = 57371
	calcFoundRows          = 57551
	caseKwd                = 57372
	cast                   = 57373
	charType               = 57574
	character              = 57374
	charsetKwd             = 57375
	check                  = 57376
	checksum               = 57377
	coalesce               = 57378
	collate                = 57379
	collation              = 57380
	column                 = 57381
	columns                = 57382
	comment                = 57383
	commit                 = 57384
	compression            = 57385
	concat                 = 57386
	concatWs               = 57387
	connection             = 57388
	constraint             = 57389
	convert                = 57390
	count                  = 57391
	create                 = 57392
	cross                  = 57393
	curDate                = 57394
	currentDate            = 57395
	currentTs              = 57552
	currentUser            = 57396
	database               = 57397
	databases              = 57398
	dateType               = 57569
	datetimeType           = 57571
	day                    = 57399
	dayHour                = 57610
	dayMicrosecond         = 57607
	dayMinute              = 57609
	daySecond              = 57608
	dayofmonth             = 57400
	dayofweek              = 57401
	dayofyear              = 57402
	deallocate             = 57403
	decimalType            = 57563
	defaultKwd             = 57404
	delayed                = 57405
	deleteKwd              = 57406
	desc                   = 57407
	describe               = 57408
	distinct               = 57409
	div                    = 57410
	do                     = 57411
	doubleType             = 57566
	drop                   = 57412
	dual                   = 57413
	duplicate              = 57414
	elseKwd                = 57415
	end                    = 57416
	engine                 = 57417
	engines                = 57418
	enum                   = 57419
	eq                     = 57420
	yyErrCode              = 57345
	escape                 = 57421
	execute                = 57422
	exists                 = 57423
	explain                = 57424
	extract                = 57425
	falseKwd               = 57426
	first                  = 57427
	float32Type            = 57596
	float64Type            = 57597
	floatLit               = 57346
	floatType              = 57565
	forKwd                 = 57429
	foreign                = 57428
	foundRows              = 57430
	from                   = 57431
	full                   = 57432
	fulltext               = 57433
	ge                     = 57434
	global                 = 57435
	group                  = 57436
	groupConcat            = 57437
	having                 = 57438
	hexLit                 = 57350
	highPriority           = 57439
	hour                   = 57440
	hourMicrosecond        = 57604
	hourMinute             = 57606
	hourSecond             = 57605
	identified             = 57441
	identifier             = 57347
	ifKwd                  = 57443
	ifNull                 = 57444
	ignore                 = 57442
	in                     = 57445
	index                  = 57446
	inner                  = 57447
	insert                 = 57448
	insertValues           = 57616
	int16Type              = 57586
	int24Type              = 57587
	int32Type              = 57588
	int64Type              = 57589
	int8Type               = 57590
	intLit                 = 57348
	intType                = 57559
	integerType            = 57560
	into                   = 57449
	is                     = 57450
	join                   = 57451
	key                    = 57452
	keyBlockSize           = 57453
	le                     = 57454
	leading                = 57455
	left                   = 57456
	length                 = 57457
	like                   = 57458
	limit                  = 57459
	local                  = 57460
	localTime              = 57553
	localTs                = 57554
	locate                 = 57461
	lock                   = 57462
	longblobType           = 57581
	longtextType           = 57585
	lowPriority            = 57464
	lower                  = 57463
	lowerThanCalcFoundRows = 57613
	lowerThanComma         = 57622
	lowerThanEq            = 57617
	lowerThanEscape        = 57621
	lowerThanInsertValues  = 57615
	lowerThanLeftParen     = 57619
	lowerThanQuick         = 57620
	lowerThanSetKeyword    = 57614
	lsh                    = 57465
	max                    = 57466
	maxRows                = 57467
	mediumIntType          = 57558
	mediumblobType         = 57580
	mediumtextType         = 57584
	microsecond            = 57468
	min                    = 57469
	minRows                = 57471
	minute                 = 57470
	minuteMicrosecond      = 57602
	minuteSecond           = 57603
	mod                    = 57472
	mode                   = 57473
	month                  = 57474
	names                  = 57475
	national               = 57476
	neg                    = 57618
	neq                    = 57477
	neqSynonym             = 57478
	not                    = 57479
	now                    = 57555
	null                   = 57480
	nullIf                 = 57482
	nulleq                 = 57481
	numericType            = 57564
	offset                 = 57483
	on                     = 57484
	or                     = 57485
	order                  = 57486
	oror                   = 57487
	outer                  = 57488
	parseExpression        = 57600
	password               = 57489
	placeholder            = 57490
	precisionType          = 57567
	prepare                = 57491
	primary                = 57492
	quarter                = 57493
	quick                  = 57494
	rand                   = 57495
	realType               = 57568
	references             = 57496
	regexp                 = 57497
	repeat                 = 57498
	right                  = 57499
	rlike                  = 57500
	rollback               = 57501
	row                    = 57502
	rsh                    = 57503
	schema                 = 57504
	schemas                = 57505
	second                 = 57506
	secondMicrosecond      = 57601
	selectKwd              = 57507
	session                = 57508
	set                    = 57509
	share                  = 57510
	show                   = 57511
	signed                 = 57512
	smallIntType           = 57557
	some                   = 57513
	start                  = 57514
	stringLit              = 57349
	stringType             = 57515
	substring              = 57516
	substringIndex         = 57517
	sum                    = 57518
	sysDate                = 57520
	sysVar                 = 57519
	tableKwd               = 57521
	tableRefPriority       = 57612
	tables                 = 57522
	textType               = 57583
	then                   = 57523
	timeType               = 57570
	timestampType          = 57572
	tinyIntType            = 57556
	tinyblobType           = 57578
	tinytextType           = 57582
	trailing               = 57524
	transaction            = 57525
	trim                   = 57526
	trueKwd                = 57527
	truncate               = 57528
	uint16Type             = 57592
	uint32Type             = 57593
	uint64Type             = 57594
	uint8Type              = 57595
	uintType               = 57591
	union                  = 57530
	unique                 = 57531
	unknown                = 57529
	unsigned               = 57532
	update                 = 57533
	upper                  = 57534
	use                    = 57535
	user                   = 57536
	userVar                = 57538
	using                  = 57537
	value                  = 57539
	values                 = 57540
	varbinaryType          = 57577
	varcharType            = 57575
	variables              = 57541
	warnings               = 57542
	week                   = 57543
	weekday                = 57544
	weekofyear             = 57545
	when                   = 57546
	where                  = 57547
	xor                    = 57548
	yearMonth              = 57611
	yearType               = 57573
	yearweek               = 57549
	zerofill               = 57550

	yyMaxDepth = 200
	yyTabOfs   = -743
)

var (
	yyXLAT = map[int]int{
		57364: 0,   // autoIncrement (707x)
		57383: 1,   // comment (707x)
		57354: 2,   // after (685x)
		57427: 3,   // first (685x)
		57344: 4,   // $end (668x)
		59:    5,   // ';' (666x)
		57375: 6,   // charsetKwd (622x)
		41:    7,   // ')' (619x)
		44:    8,   // ',' (596x)
		57489: 9,   // password (594x)
		57366: 10,  // avgRowLength (591x)
		57377: 11,  // checksum (591x)
		57385: 12,  // compression (591x)
		57388: 13,  // connection (591x)
		57417: 14,  // engine (591x)
		57453: 15,  // keyBlockSize (591x)
		57467: 16,  // maxRows (591x)
		57471: 17,  // minRows (591x)
		57416: 18,  // end (573x)
		57491: 19,  // prepare (572x)
		57382: 20,  // columns (570x)
		57571: 21,  // datetimeType (570x)
		57569: 22,  // dateType (570x)
		57483: 23,  // offset (570x)
		57522: 24,  // tables (570x)
		57570: 25,  // timeType (570x)
		57529: 26,  // unknown (570x)
		57367: 27,  // begin (569x)
		57384: 28,  // commit (569x)
		57403: 29,  // deallocate (569x)
		57411: 30,  // do (569x)
		57422: 31,  // execute (569x)
		57441: 32,  // identified (569x)
		57555: 33,  // now (569x)
		57501: 34,  // rollback (569x)
		57512: 35,  // signed (569x)
		57514: 36,  // start (569x)
		57528: 37,  // truncate (569x)
		57539: 38,  // value (569x)
		57573: 39,  // yearType (569x)
		57562: 40,  // bitType (568x)
		57599: 41,  // booleanType (568x)
		57598: 42,  // boolType (568x)
		57380: 43,  // collation (568x)
		57399: 44,  // day (568x)
		57418: 45,  // engines (568x)
		57432: 46,  // full (568x)
		57435: 47,  // global (568x)
		57440: 48,  // hour (568x)
		57468: 49,  // microsecond (568x)
		57470: 50,  // minute (568x)
		57473: 51,  // mode (568x)
		57474: 52,  // month (568x)
		57476: 53,  // national (568x)
		57493: 54,  // quarter (568x)
		57506: 55,  // second (568x)
		57508: 56,  // session (568x)
		57583: 57,  // textType (568x)
		57572: 58,  // timestampType (568x)
		57525: 59,  // transaction (568x)
		57536: 60,  // user (568x)
		57542: 61,  // warnings (568x)
		57543: 62,  // week (568x)
		57352: 63,  // abs (567x)
		57360: 64,  // any (567x)
		57365: 65,  // avg (567x)
		57551: 66,  // calcFoundRows (567x)
		57378: 67,  // coalesce (567x)
		57386: 68,  // concat (567x)
		57387: 69,  // concatWs (567x)
		57391: 70,  // count (567x)
		57400: 71,  // dayofmonth (567x)
		57401: 72,  // dayofweek (567x)
		57402: 73,  // dayofyear (567x)
		57421: 74,  // escape (567x)
		57430: 75,  // foundRows (567x)
		57437: 76,  // groupConcat (567x)
		57347: 77,  // identifier (567x)
		57444: 78,  // ifNull (567x)
		57457: 79,  // length (567x)
		57460: 80,  // local (567x)
		57461: 81,  // locate (567x)
		57466: 82,  // max (567x)
		57469: 83,  // min (567x)
		57475: 84,  // names (567x)
		57482: 85,  // nullIf (567x)
		57494: 86,  // quick (567x)
		57495: 87,  // rand (567x)
		57502: 88,  // row (567x)
		57513: 89,  // some (567x)
		57516: 90,  // substring (567x)
		57517: 91,  // substringIndex (567x)
		57518: 92,  // sum (567x)
		57526: 93,  // trim (567x)
		57544: 94,  // weekday (567x)
		57545: 95,  // weekofyear (567x)
		57549: 96,  // yearweek (567x)
		57479: 97,  // not (485x)
		57484: 98,  // on (481x)
		57349: 99,  // stringLit (463x)
		57456: 100, // left (434x)
		40:    101, // '(' (405x)
		43:    102, // '+' (402x)
		45:    103, // '-' (402x)
		57404: 104, // defaultKwd (401x)
		57480: 105, // null (373x)
		57530: 106, // union (349x)
		57357: 107, // and (341x)
		57358: 108, // andand (340x)
		57459: 109, // limit (340x)
		57485: 110, // or (340x)
		57487: 111, // oror (340x)
		57548: 112, // xor (340x)
		57429: 113, // forKwd (335x)
		57462: 114, // lock (333x)
		57431: 115, // from (331x)
		57486: 116, // order (310x)
		57379: 117, // collate (305x)
		57547: 118, // where (304x)
		57420: 119, // eq (298x)
		57438: 120, // having (297x)
		57509: 121, // set (295x)
		57451: 122, // join (294x)
		57436: 123, // group (292x)
		57393: 124, // cross (287x)
		57447: 125, // inner (287x)
		57499: 126, // right (287x)
		125:   127, // '}' (284x)
		57361: 128, // as (278x)
		57407: 129, // desc (276x)
		57537: 130, // using (276x)
		57546: 131, // when (276x)
		57362: 132, // asc (274x)
		57415: 133, // elseKwd (273x)
		57523: 134, // then (270x)
		42:    135, // '*' (269x)
		60:    136, // '<' (265x)
		62:    137, // '>' (265x)
		57434: 138, // ge (265x)
		57450: 139, // is (265x)
		57454: 140, // le (265x)
		57477: 141, // neq (265x)
		57478: 142, // neqSynonym (265x)
		57481: 143, // nulleq (265x)
		57445: 144, // in (263x)
		57458: 145, // like (262x)
		57576: 146, // binaryType (261x)
		57368: 147, // between (255x)
		57497: 148, // regexp (255x)
		57500: 149, // rlike (255x)
		37:    150, // '%' (254x)
		38:    151, // '&' (254x)
		47:    152, // '/' (254x)
		94:    153, // '^' (254x)
		124:   154, // '|' (254x)
		57410: 155, // div (254x)
		57465: 156, // lsh (254x)
		57472: 157, // mod (254x)
		57503: 158, // rsh (254x)
		57540: 159, // values (246x)
		57492: 160, // primary (229x)
		57531: 161, // unique (229x)
		57376: 162, // check (223x)
		57717: 163, // Identifier (219x)
		57739: 164, // NotKeywordToken (219x)
		57811: 165, // UnReservedKeyword (219x)
		57348: 166, // intLit (169x)
		57374: 167, // character (156x)
		57443: 168, // ifKwd (155x)
		57538: 169, // userVar (152x)
		57426: 170, // falseKwd (151x)
		57527: 171, // trueKwd (151x)
		57423: 172, // exists (150x)
		57346: 173, // floatLit (150x)
		57552: 174, // currentTs (149x)
		57397: 175, // database (149x)
		57504: 176, // schema (149x)
		57519: 177, // sysVar (149x)
		57351: 178, // bitLit (148x)
		57350: 179, // hexLit (148x)
		33:    180, // '!' (147x)
		126:   181, // '~' (147x)
		57372: 182, // caseKwd (147x)
		57373: 183, // cast (147x)
		57390: 184, // convert (147x)
		57394: 185, // curDate (147x)
		57395: 186, // currentDate (147x)
		57396: 187, // currentUser (147x)
		57425: 188, // extract (147x)
		57463: 189, // lower (147x)
		57490: 190, // placeholder (147x)
		57498: 191, // repeat (147x)
		57520: 192, // sysDate (147x)
		57534: 193, // upper (147x)
		57640: 194, // ColumnName (142x)
		46:    195, // '.' (139x)
		57791: 196, // SubSelect (129x)
		57821: 197, // UserVariable (118x)
		57735: 198, // Literal (116x)
		57507: 199, // selectKwd (116x)
		57706: 200, // Function (115x)
		57707: 201, // FunctionCallAgg (115x)
		57708: 202, // FunctionCallConflict (115x)
		57709: 203, // FunctionCallKeyword (115x)
		57710: 204, // FunctionCallNonKeyword (115x)
		57711: 205, // FunctionNameConflict (115x)
		57745: 206, // Operand (115x)
		57763: 207, // PrimaryExpression (115x)
		57793: 208, // SystemVariable (115x)
		57825: 209, // Variable (115x)
		57452: 210, // key (112x)
		57446: 211, // index (108x)
		57764: 212, // PrimaryFactor (107x)
		57574: 213, // charType (103x)
		57428: 214, // foreign (103x)
		57433: 215, // fulltext (102x)
		57563: 216, // decimalType (101x)
		57412: 217, // drop (101x)
		57560: 218, // integerType (101x)
		57575: 219, // varcharType (101x)
		57353: 220, // add (99x)
		57561: 221, // bigIntType (99x)
		57579: 222, // blobType (99x)
		57566: 223, // doubleType (99x)
		57419: 224, // enum (99x)
		57596: 225, // float32Type (99x)
		57597: 226, // float64Type (99x)
		57565: 227, // floatType (99x)
		57589: 228, // int64Type (99x)
		57559: 229, // intType (99x)
		57581: 230, // longblobType (99x)
		57585: 231, // longtextType (99x)
		57580: 232, // mediumblobType (99x)
		57558: 233, // mediumIntType (99x)
		57584: 234, // mediumtextType (99x)
		57564: 235, // numericType (99x)
		57568: 236, // realType (99x)
		57557: 237, // smallIntType (99x)
		57515: 238, // stringType (99x)
		57578: 239, // tinyblobType (99x)
		57556: 240, // tinyIntType (99x)
		57582: 241, // tinytextType (99x)
		57594: 242, // uint64Type (99x)
		57591: 243, // uintType (99x)
		57577: 244, // varbinaryType (99x)
		57760: 245, // PredicateExpr (94x)
		57687: 246, // Expression (92x)
		57692: 247, // Factor (92x)
		57832: 248, // logAnd (72x)
		57833: 249, // logOr (72x)
		57532: 250, // unsigned (33x)
		57550: 251, // zerofill (31x)
		57799: 252, // TableName (26x)
		57696: 253, // FieldLen (20x)
		57355: 254, // all (19x)
		57688: 255, // ExpressionList (16x)
		57749: 256, // OptFieldLen (14x)
		57681: 257, // EqOpt (13x)
		57442: 258, // ignore (13x)
		57732: 259, // LengthNum (13x)
		57737: 260, // NUM (13x)
		57770: 261, // SelectBasic (13x)
		57772: 262, // SelectStmt (12x)
		123:   263, // '{' (11x)
		57721: 264, // IndexColName (11x)
		57789: 265, // StringName (11x)
		57637: 266, // CharsetKw (10x)
		57722: 267, // IndexColNameList (10x)
		57729: 268, // JoinTable (10x)
		57798: 269, // TableFactor (10x)
		57804: 270, // TableRef (10x)
		57409: 271, // distinct (9x)
		57533: 272, // update (9x)
		57723: 273, // IndexName (8x)
		57670: 274, // DefaultKwdOpt (7x)
		57682: 275, // EscapedTableRef (7x)
		57449: 276, // into (7x)
		57747: 277, // OptCharset (7x)
		57521: 278, // tableKwd (7x)
		57406: 279, // deleteKwd (6x)
		57674: 280, // DistinctOpt (6x)
		57448: 281, // insert (6x)
		57748: 282, // OptCollate (6x)
		57805: 283, // TableRefs (6x)
		57830: 284, // WhereClause (6x)
		57831: 285, // WhereClauseOptional (6x)
		57660: 286, // CrossOpt (5x)
		57661: 287, // DBName (5x)
		57730: 288, // JoinType (5x)
		57746: 289, // OptBinary (5x)
		57801: 290, // TableOption (5x)
		57628: 291, // Assignment (4x)
		57689: 292, // ExpressionListList (4x)
		57691: 293, // ExpressionOpt (4x)
		57720: 294, // IgnoreOptional (4x)
		57753: 295, // OrderBy (4x)
		57756: 296, // OrderByOptional (4x)
		57800: 297, // TableNameList (4x)
		57541: 298, // variables (4x)
		57629: 299, // AssignmentList (3x)
		57370: 300, // by (3x)
		57638: 301, // ColumnDef (3x)
		57389: 302, // constraint (3x)
		57652: 303, // Constraint (3x)
		57654: 304, // ConstraintKeywordOpt (3x)
		57392: 305, // create (3x)
		57673: 306, // DeleteFromStmt (3x)
		57698: 307, // FieldOpt (3x)
		57699: 308, // FieldOpts (3x)
		57701: 309, // FloatOpt (3x)
		57719: 310, // IfNotExists (3x)
		57725: 311, // InsertIntoStmt (3x)
		57464: 312, // lowPriority (3x)
		57488: 313, // outer (3x)
		57759: 314, // Precision (3x)
		57777: 315, // SelectStmtLimit (3x)
		57781: 316, // ShowLikeOrWhereOpt (3x)
		57794: 317, // TableAlias (3x)
		57802: 318, // TableOptionList (3x)
		57803: 319, // TableOptionListOpt (3x)
		57814: 320, // UnionClauseP (3x)
		57817: 321, // UpdateStmt (3x)
		57823: 322, // Username (3x)
		57356: 323, // alter (2x)
		57624: 324, // AlterTableSpec (2x)
		57626: 325, // AlterTableStmt (2x)
		57632: 326, // AuthString (2x)
		57633: 327, // BeginTransactionStmt (2x)
		57636: 328, // CastType (2x)
		57381: 329, // column (2x)
		57639: 330, // ColumnKeywordOpt (2x)
		57643: 331, // ColumnOption (2x)
		57647: 332, // ColumnSetValue (2x)
		57650: 333, // CommitStmt (2x)
		57655: 334, // CreateDatabaseStmt (2x)
		57656: 335, // CreateIndexStmt (2x)
		57658: 336, // CreateTableStmt (2x)
		57659: 337, // CreateUserStmt (2x)
		57662: 338, // DatabaseOption (2x)
		57665: 339, // DatabaseSym (2x)
		57667: 340, // DeallocateStmt (2x)
		57668: 341, // DeallocateSym (2x)
		57408: 342, // describe (2x)
		57675: 343, // DoStmt (2x)
		57676: 344, // DropDatabaseStmt (2x)
		57677: 345, // DropIndexStmt (2x)
		57678: 346, // DropTableStmt (2x)
		57680: 347, // EmptyStmt (2x)
		57683: 348, // ExecuteStmt (2x)
		57424: 349, // explain (2x)
		57684: 350, // ExplainStmt (2x)
		57685: 351, // ExplainSym (2x)
		57693: 352, // Field (2x)
		57718: 353, // IfExists (2x)
		57734: 354, // LimitClause (2x)
		57553: 355, // localTime (2x)
		57554: 356, // localTs (2x)
		57736: 357, // LowPriorityOptional (2x)
		57740: 358, // NotOpt (2x)
		57741: 359, // NowSym (2x)
		57742: 360, // NumLiteral (2x)
		57751: 361, // OptInteger (2x)
		57752: 362, // Order (2x)
		57754: 363, // OrderByItem (2x)
		57758: 364, // PasswordOpt (2x)
		57762: 365, // PreparedStmt (2x)
		57769: 366, // RollbackStmt (2x)
		57771: 367, // SelectLockOpt (2x)
		57779: 368, // SetStmt (2x)
		57511: 369, // show (2x)
		57780: 370, // ShowDatabaseNameOpt (2x)
		57782: 371, // ShowStmt (2x)
		57786: 372, // Statement (2x)
		57788: 373, // StringList (2x)
		57792: 374, // Symbol (2x)
		57796: 375, // TableElement (2x)
		57809: 376, // TruncateTableStmt (2x)
		57812: 377, // UnionClause (2x)
		57815: 378, // UnionClausePList (2x)
		57816: 379, // UnionOpt (2x)
		57535: 380, // use (2x)
		57819: 381, // UserSpec (2x)
		57818: 382, // UseStmt (2x)
		57824: 383, // ValueSym (2x)
		57826: 384, // VariableAssignment (2x)
		57828: 385, // WhenClause (2x)
		57625: 386, // AlterTableSpecList (1x)
		57627: 387, // AnyOrAll (1x)
		57363: 388, // at (1x)
		57631: 389, // AuthOption (1x)
		57634: 390, // BitValueType (1x)
		57635: 391, // BlobType (1x)
		57369: 392, // both (1x)
		57641: 393, // ColumnNameList (1x)
		57642: 394, // ColumnNameListOpt (1x)
		57644: 395, // ColumnOptionList (1x)
		57645: 396, // ColumnOptionListOpt (1x)
		57646: 397, // ColumnPosition (1x)
		57648: 398, // ColumnSetValueList (1x)
		57651: 399, // CompareOp (1x)
		57653: 400, // ConstraintElem (1x)
		57657: 401, // CreateIndexStmtUnique (1x)
		57663: 402, // DatabaseOptionList (1x)
		57664: 403, // DatabaseOptionListOpt (1x)
		57398: 404, // databases (1x)
		57666: 405, // DateAndTimeType (1x)
		57610: 406, // dayHour (1x)
		57607: 407, // dayMicrosecond (1x)
		57609: 408, // dayMinute (1x)
		57608: 409, // daySecond (1x)
		57672: 410, // DefaultValueExpr (1x)
		57405: 411, // delayed (1x)
		57413: 412, // dual (1x)
		57414: 413, // duplicate (1x)
		57679: 414, // ElseOpt (1x)
		57686: 415, // ExplainableStmt (1x)
		57690: 416, // ExpressionListOpt (1x)
		57694: 417, // FieldAsName (1x)
		57695: 418, // FieldAsNameOpt (1x)
		57697: 419, // FieldList (1x)
		57700: 420, // FixedPointType (1x)
		57702: 421, // FloatingPointType (1x)
		57703: 422, // FromClause (1x)
		57704: 423, // FromDual (1x)
		57705: 424, // FuncDatetimePrec (1x)
		57712: 425, // GlobalScope (1x)
		57713: 426, // GroupByClause (1x)
		57714: 427, // GroupByList (1x)
		57715: 428, // HashString (1x)
		57716: 429, // HavingClause (1x)
		57439: 430, // highPriority (1x)
		57604: 431, // hourMicrosecond (1x)
		57606: 432, // hourMinute (1x)
		57605: 433, // hourSecond (1x)
		57726: 434, // InsertRest (1x)
		57727: 435, // IntegerType (1x)
		57728: 436, // IntoOpt (1x)
		57731: 437, // KeyOrIndex (1x)
		57455: 438, // leading (1x)
		57733: 439, // LikeEscapeOpt (1x)
		57602: 440, // minuteMicrosecond (1x)
		57603: 441, // minuteSecond (1x)
		57738: 442, // NationalOpt (1x)
		57743: 443, // NumericType (1x)
		57744: 444, // OnDuplicateKeyUpdate (1x)
		57750: 445, // OptFull (1x)
		57755: 446, // OrderByList (1x)
		57757: 447, // OuterOpt (1x)
		57600: 448, // parseExpression (1x)
		57567: 449, // precisionType (1x)
		57761: 450, // PrepareSQL (1x)
		57765: 451, // Priority (1x)
		57766: 452, // QuickOptional (1x)
		57767: 453, // ReferDef (1x)
		57496: 454, // references (1x)
		57768: 455, // RegexpSym (1x)
		57505: 456, // schemas (1x)
		57601: 457, // secondMicrosecond (1x)
		57773: 458, // SelectStmtCalcFoundRows (1x)
		57774: 459, // SelectStmtDistinct (1x)
		57775: 460, // SelectStmtFieldList (1x)
		57776: 461, // SelectStmtGroup (1x)
		57778: 462, // SelectStmtOpts (1x)
		57510: 463, // share (1x)
		57783: 464, // ShowTableAliasOpt (1x)
		57784: 465, // SignedLiteral (1x)
		57785: 466, // Start (1x)
		57787: 467, // StatementList (1x)
		57790: 468, // StringType (1x)
		57795: 469, // TableAliasOpt (1x)
		57797: 470, // TableElementList (1x)
		57806: 471, // TextType (1x)
		57807: 472, // TimeUnit (1x)
		57524: 473, // trailing (1x)
		57808: 474, // TrimDirection (1x)
		57810: 475, // Type (1x)
		57813: 476, // UnionClauseList (1x)
		57820: 477, // UserSpecList (1x)
		57822: 478, // UserVariableList (1x)
		57827: 479, // VariableAssignmentList (1x)
		57829: 480, // WhenClauseList (1x)
		57611: 481, // yearMonth (1x)
		57623: 482, // $default (0x)
		57359: 483, // andnot (0x)
		57630: 484, // AssignmentListOpt (0x)
		57371: 485, // byteType (0x)
		57649: 486, // CommaOpt (0x)
		57669: 487, // Default (0x)
		57671: 488, // DefaultOpt (0x)
		57345: 489, // error (0x)
		57724: 490, // IndexType (0x)
		57616: 491, // insertValues (0x)
		57586: 492, // int16Type (0x)
		57587: 493, // int24Type (0x)
		57588: 494, // int32Type (0x)
		57590: 495, // int8Type (0x)
		57613: 496, // lowerThanCalcFoundRows (0x)
		57622: 497, // lowerThanComma (0x)
		57617: 498, // lowerThanEq (0x)
		57621: 499, // lowerThanEscape (0x)
		57615: 500, // lowerThanInsertValues (0x)
		57619: 501, // lowerThanLeftParen (0x)
		57620: 502, // lowerThanQuick (0x)
		57614: 503, // lowerThanSetKeyword (0x)
		57834: 504, // name (0x)
		57618: 505, // neg (0x)
		57612: 506, // tableRefPriority (0x)
		57592: 507, // uint16Type (0x)
		57593: 508, // uint32Type (0x)
		57595: 509, // uint8Type (0x)
	}

	yySymNames = []string{
		"autoIncrement",
		"comment",
		"after",
		"first",
		"$end",
		"';'",
		"charsetKwd",
		"')'",
		"','",
		"password",
		"avgRowLength",
		"checksum",
		"compression",
		"connection",
		"engine",
		"keyBlockSize",
		"maxRows",
		"minRows",
		"end",
		"prepare",
		"columns",
		"datetimeType",
		"dateType",
		"offset",
		"tables",
		"timeType",
		"unknown",
		"begin",
		"commit",
		"deallocate",
		"do",
		"execute",
		"identified",
		"now",
		"rollback",
		"signed",
		"start",
		"truncate",
		"value",
		"yearType",
		"bitType",
		"booleanType",
		"boolType",
		"collation",
		"day",
		"engines",
		"full",
		"global",
		"hour",
		"microsecond",
		"minute",
		"mode",
		"month",
		"national",
		"quarter",
		"second",
		"session",
		"textType",
		"timestampType",
		"transaction",
		"user",
		"warnings",
		"week",
		"abs",
		"any",
		"avg",
		"calcFoundRows",
		"coalesce",
		"concat",
		"concatWs",
		"count",
		"dayofmonth",
		"dayofweek",
		"dayofyear",
		"escape",
		"foundRows",
		"groupConcat",
		"identifier",
		"ifNull",
		"length",
		"local",
		"locate",
		"max",
		"min",
		"names",
		"nullIf",
		"quick",
		"rand",
		"row",
		"some",
		"substring",
		"substringIndex",
		"sum",
		"trim",
		"weekday",
		"weekofyear",
		"yearweek",
		"not",
		"on",
		"stringLit",
		"left",
		"'('",
		"'+'",
		"'-'",
		"defaultKwd",
		"null",
		"union",
		"and",
		"andand",
		"limit",
		"or",
		"oror",
		"xor",
		"forKwd",
		"lock",
		"from",
		"order",
		"collate",
		"where",
		"eq",
		"having",
		"set",
		"join",
		"group",
		"cross",
		"inner",
		"right",
		"'}'",
		"as",
		"desc",
		"using",
		"when",
		"asc",
		"elseKwd",
		"then",
		"'*'",
		"'<'",
		"'>'",
		"ge",
		"is",
		"le",
		"neq",
		"neqSynonym",
		"nulleq",
		"in",
		"like",
		"binaryType",
		"between",
		"regexp",
		"rlike",
		"'%'",
		"'&'",
		"'/'",
		"'^'",
		"'|'",
		"div",
		"lsh",
		"mod",
		"rsh",
		"values",
		"primary",
		"unique",
		"check",
		"Identifier",
		"NotKeywordToken",
		"UnReservedKeyword",
		"intLit",
		"character",
		"ifKwd",
		"userVar",
		"falseKwd",
		"trueKwd",
		"exists",
		"floatLit",
		"currentTs",
		"database",
		"schema",
		"sysVar",
		"bitLit",
		"hexLit",
		"'!'",
		"'~'",
		"caseKwd",
		"cast",
		"convert",
		"curDate",
		"currentDate",
		"currentUser",
		"extract",
		"lower",
		"placeholder",
		"repeat",
		"sysDate",
		"upper",
		"ColumnName",
		"'.'",
		"SubSelect",
		"UserVariable",
		"Literal",
		"selectKwd",
		"Function",
		"FunctionCallAgg",
		"FunctionCallConflict",
		"FunctionCallKeyword",
		"FunctionCallNonKeyword",
		"FunctionNameConflict",
		"Operand",
		"PrimaryExpression",
		"SystemVariable",
		"Variable",
		"key",
		"index",
		"PrimaryFactor",
		"charType",
		"foreign",
		"fulltext",
		"decimalType",
		"drop",
		"integerType",
		"varcharType",
		"add",
		"bigIntType",
		"blobType",
		"doubleType",
		"enum",
		"float32Type",
		"float64Type",
		"floatType",
		"int64Type",
		"intType",
		"longblobType",
		"longtextType",
		"mediumblobType",
		"mediumIntType",
		"mediumtextType",
		"numericType",
		"realType",
		"smallIntType",
		"stringType",
		"tinyblobType",
		"tinyIntType",
		"tinytextType",
		"uint64Type",
		"uintType",
		"varbinaryType",
		"PredicateExpr",
		"Expression",
		"Factor",
		"logAnd",
		"logOr",
		"unsigned",
		"zerofill",
		"TableName",
		"FieldLen",
		"all",
		"ExpressionList",
		"OptFieldLen",
		"EqOpt",
		"ignore",
		"LengthNum",
		"NUM",
		"SelectBasic",
		"SelectStmt",
		"'{'",
		"IndexColName",
		"StringName",
		"CharsetKw",
		"IndexColNameList",
		"JoinTable",
		"TableFactor",
		"TableRef",
		"distinct",
		"update",
		"IndexName",
		"DefaultKwdOpt",
		"EscapedTableRef",
		"into",
		"OptCharset",
		"tableKwd",
		"deleteKwd",
		"DistinctOpt",
		"insert",
		"OptCollate",
		"TableRefs",
		"WhereClause",
		"WhereClauseOptional",
		"CrossOpt",
		"DBName",
		"JoinType",
		"OptBinary",
		"TableOption",
		"Assignment",
		"ExpressionListList",
		"ExpressionOpt",
		"IgnoreOptional",
		"OrderBy",
		"OrderByOptional",
		"TableNameList",
		"variables",
		"AssignmentList",
		"by",
		"ColumnDef",
		"constraint",
		"Constraint",
		"ConstraintKeywordOpt",
		"create",
		"DeleteFromStmt",
		"FieldOpt",
		"FieldOpts",
		"FloatOpt",
		"IfNotExists",
		"InsertIntoStmt",
		"lowPriority",
		"outer",
		"Precision",
		"SelectStmtLimit",
		"ShowLikeOrWhereOpt",
		"TableAlias",
		"TableOptionList",
		"TableOptionListOpt",
		"UnionClauseP",
		"UpdateStmt",
		"Username",
		"alter",
		"AlterTableSpec",
		"AlterTableStmt",
		"AuthString",
		"BeginTransactionStmt",
		"CastType",
		"column",
		"ColumnKeywordOpt",
		"ColumnOption",
		"ColumnSetValue",
		"CommitStmt",
		"CreateDatabaseStmt",
		"CreateIndexStmt",
		"CreateTableStmt",
		"CreateUserStmt",
		"DatabaseOption",
		"DatabaseSym",
		"DeallocateStmt",
		"DeallocateSym",
		"describe",
		"DoStmt",
		"DropDatabaseStmt",
		"DropIndexStmt",
		"DropTableStmt",
		"EmptyStmt",
		"ExecuteStmt",
		"explain",
		"ExplainStmt",
		"ExplainSym",
		"Field",
		"IfExists",
		"LimitClause",
		"localTime",
		"localTs",
		"LowPriorityOptional",
		"NotOpt",
		"NowSym",
		"NumLiteral",
		"OptInteger",
		"Order",
		"OrderByItem",
		"PasswordOpt",
		"PreparedStmt",
		"RollbackStmt",
		"SelectLockOpt",
		"SetStmt",
		"show",
		"ShowDatabaseNameOpt",
		"ShowStmt",
		"Statement",
		"StringList",
		"Symbol",
		"TableElement",
		"TruncateTableStmt",
		"UnionClause",
		"UnionClausePList",
		"UnionOpt",
		"use",
		"UserSpec",
		"UseStmt",
		"ValueSym",
		"VariableAssignment",
		"WhenClause",
		"AlterTableSpecList",
		"AnyOrAll",
		"at",
		"AuthOption",
		"BitValueType",
		"BlobType",
		"both",
		"ColumnNameList",
		"ColumnNameListOpt",
		"ColumnOptionList",
		"ColumnOptionListOpt",
		"ColumnPosition",
		"ColumnSetValueList",
		"CompareOp",
		"ConstraintElem",
		"CreateIndexStmtUnique",
		"DatabaseOptionList",
		"DatabaseOptionListOpt",
		"databases",
		"DateAndTimeType",
		"dayHour",
		"dayMicrosecond",
		"dayMinute",
		"daySecond",
		"DefaultValueExpr",
		"delayed",
		"dual",
		"duplicate",
		"ElseOpt",
		"ExplainableStmt",
		"ExpressionListOpt",
		"FieldAsName",
		"FieldAsNameOpt",
		"FieldList",
		"FixedPointType",
		"FloatingPointType",
		"FromClause",
		"FromDual",
		"FuncDatetimePrec",
		"GlobalScope",
		"GroupByClause",
		"GroupByList",
		"HashString",
		"HavingClause",
		"highPriority",
		"hourMicrosecond",
		"hourMinute",
		"hourSecond",
		"InsertRest",
		"IntegerType",
		"IntoOpt",
		"KeyOrIndex",
		"leading",
		"LikeEscapeOpt",
		"minuteMicrosecond",
		"minuteSecond",
		"NationalOpt",
		"NumericType",
		"OnDuplicateKeyUpdate",
		"OptFull",
		"OrderByList",
		"OuterOpt",
		"parseExpression",
		"precisionType",
		"PrepareSQL",
		"Priority",
		"QuickOptional",
		"ReferDef",
		"references",
		"RegexpSym",
		"schemas",
		"secondMicrosecond",
		"SelectStmtCalcFoundRows",
		"SelectStmtDistinct",
		"SelectStmtFieldList",
		"SelectStmtGroup",
		"SelectStmtOpts",
		"share",
		"ShowTableAliasOpt",
		"SignedLiteral",
		"Start",
		"StatementList",
		"StringType",
		"TableAliasOpt",
		"TableElementList",
		"TextType",
		"TimeUnit",
		"trailing",
		"TrimDirection",
		"Type",
		"UnionClauseList",
		"UserSpecList",
		"UserVariableList",
		"VariableAssignmentList",
		"WhenClauseList",
		"yearMonth",
		"$default",
		"andnot",
		"AssignmentListOpt",
		"byteType",
		"CommaOpt",
		"Default",
		"DefaultOpt",
		"error",
		"IndexType",
		"insertValues",
		"int16Type",
		"int24Type",
		"int32Type",
		"int8Type",
		"lowerThanCalcFoundRows",
		"lowerThanComma",
		"lowerThanEq",
		"lowerThanEscape",
		"lowerThanInsertValues",
		"lowerThanLeftParen",
		"lowerThanQuick",
		"lowerThanSetKeyword",
		"name",
		"neg",
		"tableRefPriority",
		"uint16Type",
		"uint32Type",
		"uint8Type",
	}

	yyReductions = map[int]struct{ xsym, components int }{
		0:   {0, 1},
		1:   {466, 1},
		2:   {466, 2},
		3:   {325, 5},
		4:   {324, 1},
		5:   {324, 4},
		6:   {324, 2},
		7:   {324, 3},
		8:   {324, 3},
		9:   {324, 3},
		10:  {324, 4},
		11:  {437, 1},
		12:  {437, 1},
		13:  {330, 0},
		14:  {330, 1},
		15:  {397, 0},
		16:  {397, 1},
		17:  {397, 2},
		18:  {386, 1},
		19:  {386, 3},
		20:  {304, 0},
		21:  {304, 1},
		22:  {304, 2},
		23:  {374, 1},
		24:  {291, 3},
		25:  {299, 1},
		26:  {299, 3},
		27:  {484, 0},
		28:  {484, 1},
		29:  {327, 1},
		30:  {327, 2},
		31:  {301, 3},
		32:  {194, 1},
		33:  {194, 3},
		34:  {194, 5},
		35:  {393, 1},
		36:  {393, 3},
		37:  {394, 0},
		38:  {394, 2},
		39:  {394, 3},
		40:  {333, 1},
		41:  {331, 2},
		42:  {331, 1},
		43:  {331, 1},
		44:  {331, 2},
		45:  {331, 1},
		46:  {331, 2},
		47:  {331, 2},
		48:  {331, 3},
		49:  {331, 2},
		50:  {331, 4},
		51:  {395, 1},
		52:  {395, 2},
		53:  {396, 0},
		54:  {396, 1},
		55:  {400, 5},
		56:  {400, 6},
		57:  {400, 5},
		58:  {400, 5},
		59:  {400, 5},
		60:  {400, 6},
		61:  {400, 6},
		62:  {400, 7},
		63:  {453, 5},
		64:  {410, 1},
		65:  {410, 1},
		66:  {359, 1},
		67:  {359, 1},
		68:  {359, 1},
		69:  {359, 1},
		70:  {465, 1},
		71:  {465, 2},
		72:  {465, 2},
		73:  {360, 1},
		74:  {360, 1},
		75:  {335, 9},
		76:  {401, 0},
		77:  {401, 1},
		78:  {264, 3},
		79:  {267, 0},
		80:  {267, 1},
		81:  {267, 3},
		82:  {334, 5},
		83:  {287, 1},
		84:  {338, 4},
		85:  {338, 4},
		86:  {403, 0},
		87:  {403, 1},
		88:  {402, 1},
		89:  {402, 2},
		90:  {336, 8},
		91:  {487, 2},
		92:  {488, 0},
		93:  {488, 1},
		94:  {274, 0},
		95:  {274, 1},
		96:  {343, 2},
		97:  {306, 9},
		98:  {306, 8},
		99:  {306, 9},
		100: {339, 1},
		101: {339, 1},
		102: {344, 4},
		103: {345, 6},
		104: {346, 3},
		105: {346, 5},
		106: {257, 0},
		107: {257, 1},
		108: {347, 0},
		109: {351, 1},
		110: {351, 1},
		111: {351, 1},
		112: {350, 2},
		113: {350, 3},
		114: {350, 2},
		115: {259, 1},
		116: {260, 1},
		117: {246, 3},
		118: {246, 3},
		119: {246, 3},
		120: {246, 2},
		121: {246, 4},
		122: {246, 4},
		123: {246, 4},
		124: {246, 1},
		125: {249, 1},
		126: {249, 1},
		127: {248, 1},
		128: {248, 1},
		129: {504, 1},
		130: {255, 1},
		131: {255, 3},
		132: {416, 0},
		133: {416, 1},
		134: {247, 4},
		135: {247, 3},
		136: {247, 4},
		137: {247, 1},
		138: {399, 1},
		139: {399, 1},
		140: {399, 1},
		141: {399, 1},
		142: {399, 1},
		143: {399, 1},
		144: {399, 1},
		145: {399, 1},
		146: {387, 1},
		147: {387, 1},
		148: {387, 1},
		149: {245, 6},
		150: {245, 4},
		151: {245, 6},
		152: {245, 5},
		153: {245, 4},
		154: {245, 1},
		155: {455, 1},
		156: {455, 1},
		157: {439, 0},
		158: {439, 2},
		159: {358, 0},
		160: {358, 1},
		161: {352, 1},
		162: {352, 3},
		163: {352, 5},
		164: {352, 2},
		165: {418, 0},
		166: {418, 1},
		167: {417, 1},
		168: {417, 2},
		169: {417, 1},
		170: {417, 2},
		171: {419, 1},
		172: {419, 3},
		173: {426, 3},
		174: {427, 1},
		175: {427, 3},
		176: {429, 0},
		177: {429, 2},
		178: {353, 0},
		179: {353, 2},
		180: {310, 0},
		181: {310, 3},
		182: {294, 0},
		183: {294, 1},
		184: {273, 0},
		185: {273, 1},
		186: {490, 1},
		187: {163, 1},
		188: {163, 1},
		189: {163, 1},
		190: {165, 1},
		191: {165, 1},
		192: {165, 1},
		193: {165, 1},
		194: {165, 1},
		195: {165, 1},
		196: {165, 1},
		197: {165, 1},
		198: {165, 1},
		199: {165, 1},
		200: {165, 1},
		201: {165, 1},
		202: {165, 1},
		203: {165, 1},
		204: {165, 1},
		205: {165, 1},
		206: {165, 1},
		207: {165, 1},
		208: {165, 1},
		209: {165, 1},
		210: {165, 1},
		211: {165, 1},
		212: {165, 1},
		213: {165, 1},
		214: {165, 1},
		215: {165, 1},
		216: {165, 1},
		217: {165, 1},
		218: {165, 1},
		219: {165, 1},
		220: {165, 1},
		221: {165, 1},
		222: {165, 1},
		223: {165, 1},
		224: {165, 1},
		225: {165, 1},
		226: {165, 1},
		227: {165, 1},
		228: {165, 1},
		229: {165, 1},
		230: {165, 1},
		231: {165, 1},
		232: {165, 1},
		233: {165, 1},
		234: {165, 1},
		235: {165, 1},
		236: {165, 1},
		237: {165, 1},
		238: {165, 1},
		239: {165, 1},
		240: {165, 1},
		241: {165, 1},
		242: {165, 1},
		243: {165, 1},
		244: {165, 1},
		245: {165, 1},
		246: {165, 1},
		247: {165, 1},
		248: {165, 1},
		249: {165, 1},
		250: {164, 1},
		251: {164, 1},
		252: {164, 1},
		253: {164, 1},
		254: {164, 1},
		255: {164, 1},
		256: {164, 1},
		257: {164, 1},
		258: {164, 1},
		259: {164, 1},
		260: {164, 1},
		261: {164, 1},
		262: {164, 1},
		263: {164, 1},
		264: {164, 1},
		265: {164, 1},
		266: {164, 1},
		267: {164, 1},
		268: {164, 1},
		269: {164, 1},
		270: {164, 1},
		271: {164, 1},
		272: {164, 1},
		273: {164, 1},
		274: {164, 1},
		275: {164, 1},
		276: {164, 1},
		277: {164, 1},
		278: {164, 1},
		279: {164, 1},
		280: {164, 1},
		281: {164, 1},
		282: {311, 7},
		283: {436, 0},
		284: {436, 1},
		285: {434, 5},
		286: {434, 4},
		287: {434, 2},
		288: {434, 1},
		289: {434, 2},
		290: {383, 1},
		291: {383, 1},
		292: {292, 2},
		293: {292, 4},
		294: {292, 3},
		295: {292, 5},
		296: {332, 3},
		297: {398, 0},
		298: {398, 1},
		299: {398, 3},
		300: {444, 0},
		301: {444, 5},
		302: {198, 1},
		303: {198, 1},
		304: {198, 1},
		305: {198, 1},
		306: {198, 1},
		307: {198, 1},
		308: {198, 1},
		309: {198, 1},
		310: {206, 1},
		311: {206, 1},
		312: {206, 3},
		313: {206, 1},
		314: {206, 4},
		315: {206, 1},
		316: {206, 1},
		317: {206, 6},
		318: {206, 5},
		319: {206, 2},
		320: {295, 3},
		321: {446, 1},
		322: {446, 3},
		323: {363, 2},
		324: {362, 0},
		325: {362, 1},
		326: {362, 1},
		327: {296, 0},
		328: {296, 1},
		329: {207, 1},
		330: {207, 1},
		331: {207, 1},
		332: {207, 2},
		333: {207, 2},
		334: {207, 2},
		335: {207, 2},
		336: {207, 2},
		337: {207, 3},
		338: {200, 1},
		339: {200, 1},
		340: {200, 1},
		341: {200, 1},
		342: {205, 1},
		343: {205, 1},
		344: {205, 1},
		345: {205, 1},
		346: {205, 1},
		347: {205, 1},
		348: {205, 1},
		349: {202, 4},
		350: {202, 1},
		351: {202, 1},
		352: {280, 0},
		353: {280, 1},
		354: {280, 1},
		355: {280, 2},
		356: {203, 5},
		357: {203, 6},
		358: {203, 5},
		359: {203, 6},
		360: {203, 6},
		361: {203, 4},
		362: {203, 3},
		363: {203, 4},
		364: {203, 4},
		365: {203, 4},
		366: {204, 4},
		367: {204, 3},
		368: {204, 2},
		369: {204, 4},
		370: {204, 4},
		371: {204, 4},
		372: {204, 4},
		373: {204, 4},
		374: {204, 4},
		375: {204, 4},
		376: {204, 6},
		377: {204, 3},
		378: {204, 4},
		379: {204, 4},
		380: {204, 4},
		381: {204, 6},
		382: {204, 8},
		383: {204, 4},
		384: {204, 4},
		385: {204, 4},
		386: {204, 4},
		387: {204, 4},
		388: {204, 4},
		389: {204, 4},
		390: {204, 4},
		391: {204, 6},
		392: {204, 6},
		393: {204, 8},
		394: {204, 8},
		395: {204, 8},
		396: {204, 4},
		397: {204, 4},
		398: {204, 6},
		399: {204, 6},
		400: {204, 7},
		401: {204, 4},
		402: {204, 4},
		403: {204, 4},
		404: {204, 4},
		405: {474, 1},
		406: {474, 1},
		407: {474, 1},
		408: {201, 5},
		409: {201, 5},
		410: {201, 5},
		411: {201, 5},
		412: {201, 5},
		413: {201, 5},
		414: {424, 0},
		415: {424, 2},
		416: {424, 3},
		417: {472, 1},
		418: {472, 1},
		419: {472, 1},
		420: {472, 1},
		421: {472, 1},
		422: {472, 1},
		423: {472, 1},
		424: {472, 1},
		425: {472, 1},
		426: {472, 1},
		427: {472, 1},
		428: {472, 1},
		429: {472, 1},
		430: {472, 1},
		431: {472, 1},
		432: {472, 1},
		433: {472, 1},
		434: {472, 1},
		435: {472, 1},
		436: {472, 1},
		437: {293, 0},
		438: {293, 1},
		439: {480, 1},
		440: {480, 2},
		441: {385, 4},
		442: {414, 0},
		443: {414, 2},
		444: {328, 2},
		445: {328, 4},
		446: {328, 1},
		447: {328, 2},
		448: {328, 2},
		449: {328, 2},
		450: {328, 2},
		451: {328, 2},
		452: {212, 3},
		453: {212, 3},
		454: {212, 3},
		455: {212, 3},
		456: {212, 3},
		457: {212, 3},
		458: {212, 3},
		459: {212, 3},
		460: {212, 3},
		461: {212, 3},
		462: {212, 3},
		463: {212, 3},
		464: {212, 1},
		465: {451, 0},
		466: {451, 1},
		467: {451, 1},
		468: {451, 1},
		469: {357, 0},
		470: {357, 1},
		471: {252, 1},
		472: {252, 3},
		473: {297, 1},
		474: {297, 3},
		475: {452, 0},
		476: {452, 1},
		477: {365, 4},
		478: {450, 1},
		479: {450, 1},
		480: {348, 2},
		481: {348, 4},
		482: {478, 1},
		483: {478, 3},
		484: {340, 3},
		485: {341, 1},
		486: {341, 1},
		487: {366, 1},
		488: {262, 1},
		489: {262, 2},
		490: {262, 4},
		491: {261, 6},
		492: {261, 11},
		493: {423, 0},
		494: {423, 2},
		495: {422, 1},
		496: {283, 1},
		497: {283, 3},
		498: {275, 1},
		499: {275, 4},
		500: {270, 1},
		501: {270, 1},
		502: {269, 2},
		503: {269, 4},
		504: {269, 3},
		505: {469, 0},
		506: {469, 1},
		507: {317, 1},
		508: {317, 2},
		509: {268, 3},
		510: {268, 5},
		511: {268, 7},
		512: {288, 1},
		513: {288, 1},
		514: {447, 0},
		515: {447, 1},
		516: {286, 1},
		517: {286, 2},
		518: {286, 2},
		519: {354, 0},
		520: {354, 2},
		521: {315, 0},
		522: {315, 2},
		523: {315, 4},
		524: {315, 4},
		525: {459, 0},
		526: {459, 1},
		527: {459, 1},
		528: {462, 2},
		529: {458, 0},
		530: {458, 1},
		531: {460, 1},
		532: {461, 0},
		533: {461, 1},
		534: {196, 3},
		535: {367, 0},
		536: {367, 2},
		537: {367, 4},
		538: {377, 3},
		539: {320, 3},
		540: {476, 1},
		541: {476, 2},
		542: {378, 1},
		543: {378, 2},
		544: {379, 0},
		545: {379, 1},
		546: {379, 1},
		547: {368, 2},
		548: {368, 3},
		549: {368, 5},
		550: {368, 3},
		551: {368, 4},
		552: {368, 6},
		553: {384, 3},
		554: {384, 4},
		555: {384, 4},
		556: {384, 4},
		557: {384, 3},
		558: {384, 3},
		559: {479, 0},
		560: {479, 1},
		561: {479, 3},
		562: {209, 1},
		563: {209, 1},
		564: {208, 1},
		565: {197, 1},
		566: {322, 3},
		567: {364, 1},
		568: {364, 4},
		569: {326, 1},
		570: {371, 2},
		571: {371, 2},
		572: {371, 2},
		573: {371, 3},
		574: {371, 5},
		575: {371, 5},
		576: {371, 2},
		577: {371, 4},
		578: {371, 3},
		579: {371, 4},
		580: {316, 0},
		581: {316, 2},
		582: {316, 2},
		583: {425, 0},
		584: {425, 1},
		585: {425, 1},
		586: {445, 0},
		587: {445, 1},
		588: {370, 0},
		589: {370, 2},
		590: {370, 2},
		591: {464, 2},
		592: {464, 2},
		593: {372, 1},
		594: {372, 1},
		595: {372, 1},
		596: {372, 1},
		597: {372, 1},
		598: {372, 1},
		599: {372, 1},
		600: {372, 1},
		601: {372, 1},
		602: {372, 1},
		603: {372, 1},
		604: {372, 1},
		605: {372, 1},
		606: {372, 1},
		607: {372, 1},
		608: {372, 1},
		609: {372, 1},
		610: {372, 1},
		611: {372, 1},
		612: {372, 1},
		613: {372, 1},
		614: {372, 1},
		615: {372, 1},
		616: {372, 1},
		617: {372, 1},
		618: {415, 1},
		619: {415, 1},
		620: {415, 1},
		621: {415, 1},
		622: {467, 1},
		623: {467, 3},
		624: {303, 2},
		625: {375, 1},
		626: {375, 1},
		627: {375, 4},
		628: {470, 1},
		629: {470, 3},
		630: {290, 2},
		631: {290, 3},
		632: {290, 4},
		633: {290, 4},
		634: {290, 3},
		635: {290, 3},
		636: {290, 3},
		637: {290, 3},
		638: {290, 3},
		639: {290, 3},
		640: {290, 3},
		641: {290, 3},
		642: {290, 3},
		643: {290, 3},
		644: {319, 0},
		645: {319, 1},
		646: {318, 1},
		647: {318, 2},
		648: {318, 3},
		649: {376, 3},
		650: {475, 1},
		651: {475, 1},
		652: {475, 1},
		653: {475, 1},
		654: {475, 1},
		655: {475, 1},
		656: {475, 1},
		657: {475, 1},
		658: {475, 1},
		659: {443, 3},
		660: {443, 3},
		661: {443, 3},
		662: {443, 2},
		663: {435, 1},
		664: {435, 1},
		665: {435, 1},
		666: {435, 1},
		667: {435, 1},
		668: {435, 1},
		669: {435, 1},
		670: {435, 1},
		671: {361, 0},
		672: {361, 1},
		673: {420, 1},
		674: {420, 1},
		675: {421, 1},
		676: {421, 1},
		677: {421, 1},
		678: {421, 2},
		679: {390, 1},
		680: {468, 6},
		681: {468, 5},
		682: {468, 6},
		683: {468, 2},
		684: {468, 2},
		685: {468, 1},
		686: {468, 4},
		687: {468, 6},
		688: {468, 6},
		689: {442, 0},
		690: {442, 1},
		691: {391, 1},
		692: {391, 2},
		693: {391, 1},
		694: {391, 1},
		695: {471, 1},
		696: {471, 2},
		697: {471, 1},
		698: {471, 1},
		699: {405, 1},
		700: {405, 2},
		701: {405, 2},
		702: {405, 2},
		703: {405, 2},
		704: {253, 3},
		705: {256, 0},
		706: {256, 1},
		707: {307, 1},
		708: {307, 1},
		709: {308, 0},
		710: {308, 2},
		711: {309, 0},
		712: {309, 1},
		713: {309, 1},
		714: {314, 5},
		715: {289, 0},
		716: {289, 1},
		717: {277, 0},
		718: {277, 2},
		719: {266, 2},
		720: {266, 1},
		721: {282, 0},
		722: {282, 2},
		723: {373, 1},
		724: {373, 3},
		725: {265, 1},
		726: {265, 1},
		727: {321, 9},
		728: {321, 7},
		729: {382, 2},
		730: {284, 2},
		731: {285, 0},
		732: {285, 1},
		733: {486, 0},
		734: {486, 1},
		735: {337, 4},
		736: {381, 2},
		737: {477, 1},
		738: {477, 3},
		739: {389, 0},
		740: {389, 3},
		741: {389, 4},
		742: {428, 1},
	}

	yyXErrors = map[yyXError]string{
		yyXError{1, -1}:    "expected $end",
		yyXError{263, -1}:  "expected '('",
		yyXError{264, -1}:  "expected '('",
		yyXError{265, -1}:  "expected '('",
		yyXError{266, -1}:  "expected '('",
		yyXError{267, -1}:  "expected '('",
		yyXError{270, -1}:  "expected '('",
		yyXError{271, -1}:  "expected '('",
		yyXError{273, -1}:  "expected '('",
		yyXError{274, -1}:  "expected '('",
		yyXError{275, -1}:  "expected '('",
		yyXError{277, -1}:  "expected '('",
		yyXError{278, -1}:  "expected '('",
		yyXError{279, -1}:  "expected '('",
		yyXError{280, -1}:  "expected '('",
		yyXError{671, -1}:  "expected '('",
		yyXError{789, -1}:  "expected '('",
		yyXError{887, -1}:  "expected '('",
		yyXError{888, -1}:  "expected '('",
		yyXError{990, -1}:  "expected '('",
		yyXError{998, -1}:  "expected '('",
		yyXError{1011, -1}: "expected '('",
		yyXError{1024, -1}: "expected '('",
		yyXError{1028, -1}: "expected '('",
		yyXError{1031, -1}: "expected '('",
		yyXError{1035, -1}: "expected '('",
		yyXError{1042, -1}: "expected '('",
		yyXError{1046, -1}: "expected '('",
		yyXError{1051, -1}: "expected '('",
		yyXError{1055, -1}: "expected '('",
		yyXError{1144, -1}: "expected '('",
		yyXError{1145, -1}: "expected '('",
		yyXError{1219, -1}: "expected '('",
		yyXError{1264, -1}: "expected '('",
		yyXError{170, -1}:  "expected ')'",
		yyXError{176, -1}:  "expected ')'",
		yyXError{300, -1}:  "expected ')'",
		yyXError{335, -1}:  "expected ')'",
		yyXError{338, -1}:  "expected ')'",
		yyXError{344, -1}:  "expected ')'",
		yyXError{347, -1}:  "expected ')'",
		yyXError{353, -1}:  "expected ')'",
		yyXError{354, -1}:  "expected ')'",
		yyXError{355, -1}:  "expected ')'",
		yyXError{356, -1}:  "expected ')'",
		yyXError{361, -1}:  "expected ')'",
		yyXError{363, -1}:  "expected ')'",
		yyXError{369, -1}:  "expected ')'",
		yyXError{371, -1}:  "expected ')'",
		yyXError{375, -1}:  "expected ')'",
		yyXError{383, -1}:  "expected ')'",
		yyXError{385, -1}:  "expected ')'",
		yyXError{402, -1}:  "expected ')'",
		yyXError{407, -1}:  "expected ')'",
		yyXError{420, -1}:  "expected ')'",
		yyXError{424, -1}:  "expected ')'",
		yyXError{515, -1}:  "expected ')'",
		yyXError{518, -1}:  "expected ')'",
		yyXError{561, -1}:  "expected ')'",
		yyXError{578, -1}:  "expected ')'",
		yyXError{598, -1}:  "expected ')'",
		yyXError{791, -1}:  "expected ')'",
		yyXError{906, -1}:  "expected ')'",
		yyXError{913, -1}:  "expected ')'",
		yyXError{915, -1}:  "expected ')'",
		yyXError{695, -1}:  "expected =",
		yyXError{761, -1}:  "expected =",
		yyXError{762, -1}:  "expected =",
		yyXError{763, -1}:  "expected =",
		yyXError{774, -1}:  "expected =",
		yyXError{777, -1}:  "expected =",
		yyXError{782, -1}:  "expected =",
		yyXError{798, -1}:  "expected =",
		yyXError{890, -1}:  "expected =",
		yyXError{1066, -1}: "expected =",
		yyXError{1068, -1}: "expected = or empty or Field length num(uint64) or one of [=, integer literal]",
		yyXError{1070, -1}: "expected = or empty or Field length num(uint64) or one of [=, integer literal]",
		yyXError{1073, -1}: "expected = or empty or Field length num(uint64) or one of [=, integer literal]",
		yyXError{1074, -1}: "expected = or empty or Field length num(uint64) or one of [=, integer literal]",
		yyXError{1075, -1}: "expected = or empty or Field length num(uint64) or one of [=, integer literal]",
		yyXError{1072, -1}: "expected = or empty or identifier or unreserved keyword or one of [=, ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1067, -1}: "expected = or empty or one of [=, string literal]",
		yyXError{1069, -1}: "expected = or empty or one of [=, string literal]",
		yyXError{1071, -1}: "expected = or empty or one of [=, string literal]",
		yyXError{1102, -1}: "expected = or empty or string literal or identifier or one of [=, ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier, string literal]",
		yyXError{1103, -1}: "expected = or empty or string literal or identifier or one of [=, ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier, string literal]",
		yyXError{1255, -1}: "expected = or empty or string literal or identifier or one of [=, ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier, string literal]",
		yyXError{1256, -1}: "expected = or empty or string literal or identifier or one of [=, ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier, string literal]",
		yyXError{783, -1}:  "expected AT",
		yyXError{1271, -1}: "expected Alter table specification list or one of [$end, ',', ';', ADD, AUTO_INCREMENT, AVG_ROW_LENGTH, CHARACTER, CHARSET, CHECKSUM, COLLATE, COMMENT, COMPRESSION, CONNECTION, DEFAULT, DROP, ENGINE, KEY_BLOCK_SIZE, MAX_ROWS, MIN_ROWS, PASSWORD]",
		yyXError{1296, -1}: "expected Alter table specification or one of [$end, ',', ';', ADD, AUTO_INCREMENT, AVG_ROW_LENGTH, CHARACTER, CHARSET, CHECKSUM, COLLATE, COMMENT, COMPRESSION, CONNECTION, DEFAULT, DROP, ENGINE, KEY_BLOCK_SIZE, MAX_ROWS, MIN_ROWS, PASSWORD]",
		yyXError{658, -1}:  "expected Any or All for subquery or Predicate expression factor or one of ['!', '(', '+', '-', '~', ABS, AFTER, ALL, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{433, -1}:  "expected BY",
		yyXError{819, -1}:  "expected BY",
		yyXError{979, -1}:  "expected BY",
		yyXError{858, -1}:  "expected Basic SELECT statement without parentheses and union or SELECT",
		yyXError{856, -1}:  "expected Basic SELECT statement without parentheses and union or Union Option(empty/ALL/DISTINCT) or one of [ALL, DISTINCT, SELECT]",
		yyXError{1249, -1}: "expected CREATE Database specification list opt or one of [$end, ';', CHARACTER, CHARSET, COLLATE, DEFAULT]",
		yyXError{1252, -1}: "expected CREATE Database specification or one of [$end, ';', CHARACTER, CHARSET, COLLATE, DEFAULT]",
		yyXError{8, -1}:    "expected CREATE INDEX optional UNIQUE clause or DATABASE or SCHEMA or one of [DATABASE, INDEX, SCHEMA, TABLE, UNIQUE, USER]",
		yyXError{1227, -1}: "expected CURRENT_TIMESTAMP/LOCALTIME/LOCALTIMESTAMP/NOW or one of [CURRENT_TIMESTAMP, LOCALTIME, LOCALTIMESTAMP, NOW]",
		yyXError{343, -1}:  "expected Cast function target type or one of [BINARY, CHAR, DATE, DATETIME, DECIMAL, SIGNED, TIME, UNSIGNED]",
		yyXError{401, -1}:  "expected Cast function target type or one of [BINARY, CHAR, DATE, DATETIME, DECIMAL, SIGNED, TIME, UNSIGNED]",
		yyXError{1275, -1}: "expected Column keyword or empty or column name or {KEY|INDEX} or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMN, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOREIGN, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, INDEX, KEY, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1274, -1}: "expected Column keyword or empty or table column definition or table constraint or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMN, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONSTRAINT, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOREIGN, FOUND_ROWS, FULL, FULLTEXT, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, INDEX, KEY, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNIQUE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1291, -1}: "expected Column position [First|After ColumnName] or one of [$end, ',', ';', AFTER, FIRST]",
		yyXError{195, -1}:  "expected Compare opcode or one of [!=, $end, &&, ')', ',', ';', '<', '>', '}', <=, <=>, <>, =, >=, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, RIGHT, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{992, -1}:  "expected Constraint Symbol or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOREIGN, FOUND_ROWS, FULL, FULLTEXT, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, INDEX, KEY, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNIQUE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1284, -1}: "expected Constraint Symbol or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{683, -1}:  "expected Cross join option or join type or one of [$end, ')', ',', ';', '}', CROSS, FOR, GROUP, HAVING, INNER, JOIN, LEFT, LIMIT, LOCK, ON, ORDER, RIGHT, SET, UNION, WHERE]",
		yyXError{168, -1}:  "expected Cross join option or join type or one of [$end, ')', ',', ';', CROSS, FOR, GROUP, HAVING, INNER, JOIN, LEFT, LIMIT, LOCK, ON, ORDER, RIGHT, SET, UNION, WHERE]",
		yyXError{161, -1}:  "expected Cross join option or join type or one of [',', CROSS, INNER, JOIN, LEFT, RIGHT, SET]",
		yyXError{692, -1}:  "expected Cross join option or join type or one of ['}', CROSS, INNER, JOIN, LEFT, RIGHT]",
		yyXError{190, -1}:  "expected Cross join option or join type or one of [CROSS, INNER, JOIN, LEFT, ON, RIGHT]",
		yyXError{11, -1}:   "expected DATABASE or SCHEMA or one of [DATABASE, INDEX, PREPARE, SCHEMA, TABLE]",
		yyXError{918, -1}:  "expected DUPLICATE",
		yyXError{932, -1}:  "expected Database Name or If Exists or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{970, -1}:  "expected Database Name or If Not Exists or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{56, -1}:   "expected Database Name or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{746, -1}:  "expected Database Name or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{747, -1}:  "expected Database Name or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{948, -1}:  "expected Database Name or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1248, -1}: "expected Database Name or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1216, -1}: "expected DefaultValueExpr(Now or Signed Literal) or one of ['+', '-', CURRENT_TIMESTAMP, LOCALTIME, LOCALTIMESTAMP, NOW, NULL, bit literal, false, floating-point literal, hexadecimal literal, integer literal, string literal, true]",
		yyXError{575, -1}:  "expected Distinct option or expression list or one of ['!', '(', '*', '+', '-', '~', ABS, AFTER, ALL, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DISTINCT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{557, -1}:  "expected Distinct option or expression list or one of ['!', '(', '+', '-', '~', ABS, AFTER, ALL, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DISTINCT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{609, -1}:  "expected Distinct option or expression list or one of ['!', '(', '+', '-', '~', ABS, AFTER, ALL, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DISTINCT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{483, -1}:  "expected Distinct option or expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ALL, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DISTINCT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{529, -1}:  "expected Distinct option or expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ALL, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DISTINCT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{536, -1}:  "expected Distinct option or expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ALL, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DISTINCT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{394, -1}:  "expected END",
		yyXError{936, -1}:  "expected EXISTS",
		yyXError{943, -1}:  "expected EXISTS",
		yyXError{987, -1}:  "expected EXISTS",
		yyXError{812, -1}:  "expected FOR UPDATE or LOCK IN SHARE MODE, or FromDual or SELECT statement optional LIMIT clause or one of [$end, ')', ';', FOR, FROM, LIMIT, LOCK, ON, UNION]",
		yyXError{815, -1}:  "expected FOR UPDATE or LOCK IN SHARE MODE, or HAVING clause or Optinal WHERE clause or Optional ORDER BY clause optional or SELECT statement optional GROUP BY clause or SELECT statement optional LIMIT clause or one of [$end, ')', ';', FOR, GROUP, HAVING, LIMIT, LOCK, ON, ORDER, UNION, WHERE]",
		yyXError{818, -1}:  "expected FOR UPDATE or LOCK IN SHARE MODE, or HAVING clause or Optional ORDER BY clause optional or SELECT statement optional GROUP BY clause or SELECT statement optional LIMIT clause or one of [$end, ')', ';', FOR, GROUP, HAVING, LIMIT, LOCK, ON, ORDER, UNION]",
		yyXError{820, -1}:  "expected FOR UPDATE or LOCK IN SHARE MODE, or HAVING clause or Optional ORDER BY clause optional or SELECT statement optional LIMIT clause or one of [$end, ')', ';', FOR, HAVING, LIMIT, LOCK, ON, ORDER, UNION]",
		yyXError{823, -1}:  "expected FOR UPDATE or LOCK IN SHARE MODE, or Optional ORDER BY clause optional or SELECT statement optional LIMIT clause or one of [$end, ')', ';', FOR, LIMIT, LOCK, ON, ORDER, UNION]",
		yyXError{813, -1}:  "expected FOR UPDATE or LOCK IN SHARE MODE, or SELECT statement optional LIMIT clause or one of [$end, ')', ';', FOR, LIMIT, LOCK, ON, UNION]",
		yyXError{824, -1}:  "expected FOR UPDATE or LOCK IN SHARE MODE, or SELECT statement optional LIMIT clause or one of [$end, ')', ';', FOR, LIMIT, LOCK, ON, UNION]",
		yyXError{825, -1}:  "expected FOR UPDATE or LOCK IN SHARE MODE, or one of [$end, ')', ';', FOR, LOCK, ON, UNION]",
		yyXError{839, -1}:  "expected FOR UPDATE or LOCK IN SHARE MODE, or one of [$end, ')', ';', FOR, LOCK, ON, UNION]",
		yyXError{306, -1}:  "expected FROM",
		yyXError{307, -1}:  "expected FROM",
		yyXError{308, -1}:  "expected FROM",
		yyXError{309, -1}:  "expected FROM",
		yyXError{310, -1}:  "expected FROM",
		yyXError{311, -1}:  "expected FROM",
		yyXError{312, -1}:  "expected FROM",
		yyXError{313, -1}:  "expected FROM",
		yyXError{314, -1}:  "expected FROM",
		yyXError{315, -1}:  "expected FROM",
		yyXError{316, -1}:  "expected FROM",
		yyXError{317, -1}:  "expected FROM",
		yyXError{318, -1}:  "expected FROM",
		yyXError{319, -1}:  "expected FROM",
		yyXError{320, -1}:  "expected FROM",
		yyXError{321, -1}:  "expected FROM",
		yyXError{322, -1}:  "expected FROM",
		yyXError{323, -1}:  "expected FROM",
		yyXError{324, -1}:  "expected FROM",
		yyXError{325, -1}:  "expected FROM",
		yyXError{326, -1}:  "expected FROM",
		yyXError{869, -1}:  "expected FROM",
		yyXError{808, -1}:  "expected Field alias name opt or logical and operator or logical or operator or one of [$end, &&, ')', ',', ';', ABS, AFTER, AND, ANY, AS, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, ON, OR, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{357, -1}:  "expected Field length num(uint64) or integer literal",
		yyXError{364, -1}:  "expected Field length num(uint64) or integer literal",
		yyXError{368, -1}:  "expected Field length num(uint64) or integer literal",
		yyXError{438, -1}:  "expected Field length num(uint64) or integer literal",
		yyXError{440, -1}:  "expected Field length num(uint64) or integer literal",
		yyXError{441, -1}:  "expected Field length num(uint64) or integer literal",
		yyXError{704, -1}:  "expected Field length num(uint64) or integer literal",
		yyXError{1082, -1}: "expected Field length num(uint64) or integer literal",
		yyXError{1084, -1}: "expected Field length num(uint64) or integer literal",
		yyXError{1086, -1}: "expected Field length num(uint64) or integer literal",
		yyXError{1092, -1}: "expected Field length num(uint64) or integer literal",
		yyXError{1096, -1}: "expected Field length num(uint64) or integer literal",
		yyXError{1100, -1}: "expected Field length num(uint64) or integer literal",
		yyXError{1141, -1}: "expected Field length or '('",
		yyXError{1187, -1}: "expected Field length or '('",
		yyXError{1186, -1}: "expected Field length or Optional BINARY or Optional Character setting or Optional Collate setting or one of [$end, '(', ')', ',', ';', AFTER, AUTO_INCREMENT, BINARY, CHARACTER, CHARSET, CHECK, COLLATE, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1121, -1}: "expected Field length or empty or Field type definition option list or one of [$end, '(', ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE, UNSIGNED, ZEROFILL]",
		yyXError{1015, -1}: "expected Field length or empty or ORDER BY clause optional collation specification or one of ['(', ')', ',', ASC, DESC]",
		yyXError{346, -1}:  "expected Field length or empty or Optional BINARY or Optional Character setting or one of ['(', ')', BINARY, CHARACTER, CHARSET]",
		yyXError{1152, -1}: "expected Field length or empty or one of [$end, '(', ')', ',', ';', AFTER, AUTO_INCREMENT, BINARY, CHARACTER, CHARSET, CHECK, COLLATE, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1124, -1}: "expected Field length or empty or one of [$end, '(', ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1140, -1}: "expected Field length or empty or one of [$end, '(', ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1148, -1}: "expected Field length or empty or one of [$end, '(', ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1156, -1}: "expected Field length or empty or one of [$end, '(', ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1157, -1}: "expected Field length or empty or one of [$end, '(', ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1158, -1}: "expected Field length or empty or one of [$end, '(', ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1159, -1}: "expected Field length or empty or one of [$end, '(', ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{345, -1}:  "expected Field length or empty or one of ['(', ')']",
		yyXError{348, -1}:  "expected Field length or empty or one of ['(', ')']",
		yyXError{350, -1}:  "expected Field length or empty or one of ['(', ')']",
		yyXError{1122, -1}: "expected Field type definition option list or Floating-point type option or one of [$end, '(', ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE, UNSIGNED, ZEROFILL]",
		yyXError{1123, -1}: "expected Field type definition option list or Floating-point type option or one of [$end, '(', ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE, UNSIGNED, ZEROFILL]",
		yyXError{1201, -1}: "expected Field type definition option list or one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE, UNSIGNED, ZEROFILL]",
		yyXError{1206, -1}: "expected Field type definition option list or one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE, UNSIGNED, ZEROFILL]",
		yyXError{1208, -1}: "expected Field type definition option list or one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE, UNSIGNED, ZEROFILL]",
		yyXError{1202, -1}: "expected Field type definition option or one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE, UNSIGNED, ZEROFILL]",
		yyXError{1207, -1}: "expected Field type definition option or one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE, UNSIGNED, ZEROFILL]",
		yyXError{1209, -1}: "expected Field type definition option or one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE, UNSIGNED, ZEROFILL]",
		yyXError{349, -1}:  "expected Floating-point type option or one of ['(', ')']",
		yyXError{814, -1}:  "expected From clause or one of ['(', '{', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, DUAL, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{27, -1}:   "expected Full or empty or The scope of variable or one of [CHARACTER, COLLATION, COLUMNS, CREATE, DATABASES, ENGINES, FULL, GLOBAL, SCHEMAS, SESSION, TABLES, VARIABLES, WARNINGS]",
		yyXError{276, -1}:  "expected Function datetime precision or one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{834, -1}:  "expected GROUP BY list or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{982, -1}:  "expected Hashed string or string literal",
		yyXError{16, -1}:   "expected IGNORE or empty or INTO or EmptyString or Table name or insert statement priority or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DELAYED, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HIGH_PRIORITY, HOUR, IDENTIFIED, IFNULL, IGNORE, INTO, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, LOW_PRIORITY, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{874, -1}:  "expected IGNORE or empty or INTO or EmptyString or Table name or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, IGNORE, INTO, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{10, -1}:   "expected IGNORE or empty or LOW_PRIORITY or empty or QUICK or empty or Table name list or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, IGNORE, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, LOW_PRIORITY, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{55, -1}:   "expected IGNORE or empty or LOW_PRIORITY or empty or table reference or table references or one of ['(', '{', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, IGNORE, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, LOW_PRIORITY, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{950, -1}:  "expected IGNORE or empty or QUICK or empty or Table name list or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, IGNORE, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{951, -1}:  "expected IGNORE or empty or Table name list or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, IGNORE, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{4, -1}:    "expected IGNORE or empty or one of [IGNORE, TABLE]",
		yyXError{155, -1}:  "expected IGNORE or empty or table reference or table references or one of ['(', '{', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, IGNORE, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{828, -1}:  "expected IN",
		yyXError{968, -1}:  "expected INDEX",
		yyXError{969, -1}:  "expected INDEX",
		yyXError{878, -1}:  "expected INTO or EmptyString or Table name or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, INTO, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{933, -1}:  "expected If Exists or identifier or unreserved keyword or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{971, -1}:  "expected If Not Exists or Table name or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{972, -1}:  "expected If Not Exists or Username and auth option list or one of [IF, string literal]",
		yyXError{1020, -1}: "expected Index column name or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{183, -1}:  "expected JOIN",
		yyXError{184, -1}:  "expected JOIN",
		yyXError{187, -1}:  "expected JOIN",
		yyXError{188, -1}:  "expected JOIN",
		yyXError{919, -1}:  "expected KEY",
		yyXError{1003, -1}: "expected KEY",
		yyXError{1004, -1}: "expected KEY",
		yyXError{1008, -1}: "expected KEY",
		yyXError{1214, -1}: "expected KEY",
		yyXError{1278, -1}: "expected KEY",
		yyXError{1280, -1}: "expected KEY",
		yyXError{959, -1}:  "expected LIMIT clause or Optinal WHERE clause or Optional ORDER BY clause optional or one of [$end, ',', ';', LIMIT, ORDER, USING, WHERE]",
		yyXError{697, -1}:  "expected LIMIT clause or Optinal WHERE clause or Optional ORDER BY clause optional or one of [$end, ',', ';', LIMIT, ORDER, WHERE]",
		yyXError{699, -1}:  "expected LIMIT clause or Optional ORDER BY clause optional or one of [$end, ';', LIMIT, ORDER]",
		yyXError{964, -1}:  "expected LIMIT clause or Optional ORDER BY clause optional or one of [$end, ';', LIMIT, ORDER]",
		yyXError{703, -1}:  "expected LIMIT clause or one of [$end, ';', LIMIT]",
		yyXError{965, -1}:  "expected LIMIT clause or one of [$end, ';', LIMIT]",
		yyXError{1013, -1}: "expected List of index column name or one of [')', ',', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1025, -1}: "expected List of index column name or one of [')', ',', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1032, -1}: "expected List of index column name or one of [')', ',', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1036, -1}: "expected List of index column name or one of [')', ',', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1039, -1}: "expected List of index column name or one of [')', ',', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1043, -1}: "expected List of index column name or one of [')', ',', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1047, -1}: "expected List of index column name or one of [')', ',', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1052, -1}: "expected List of index column name or one of [')', ',', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1056, -1}: "expected List of index column name or one of [')', ',', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1265, -1}: "expected List of index column name or one of [')', ',', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{830, -1}:  "expected MODE",
		yyXError{973, -1}:  "expected NOT",
		yyXError{1211, -1}: "expected NULL",
		yyXError{1237, -1}: "expected Num/Int/Float/Decimal Literal or one of [floating-point literal, integer literal]",
		yyXError{1238, -1}: "expected Num/Int/Float/Decimal Literal or one of [floating-point literal, integer literal]",
		yyXError{945, -1}:  "expected ON",
		yyXError{1262, -1}: "expected ON",
		yyXError{882, -1}:  "expected ON DUPLICATE KEY UPDATE value list or one of [$end, ';', ON]",
		yyXError{445, -1}:  "expected ORDER BY clause optional collation specification or logical and operator or logical or operator or one of [$end, &&, ')', ',', ';', AND, ASC, DESC, FOR, LIMIT, LOCK, ON, OR, UNION, XOR, ||]",
		yyXError{1017, -1}: "expected ORDER BY clause optional collation specification or one of [')', ',', ASC, DESC]",
		yyXError{448, -1}:  "expected ORDER BY list item or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{444, -1}:  "expected ORDER BY list or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{711, -1}:  "expected Optinal WHERE clause or one of [$end, ',', ';', WHERE]",
		yyXError{957, -1}:  "expected Optinal WHERE clause or one of [$end, ',', ';', WHERE]",
		yyXError{962, -1}:  "expected Optinal WHERE clause or one of [$end, ',', ';', WHERE]",
		yyXError{1143, -1}: "expected Optional BINARY or Optional Character setting or Optional Collate setting or one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, BINARY, CHARACTER, CHARSET, CHECK, COLLATE, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1188, -1}: "expected Optional BINARY or Optional Character setting or Optional Collate setting or one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, BINARY, CHARACTER, CHARSET, CHECK, COLLATE, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1192, -1}: "expected Optional BINARY or Optional Character setting or Optional Collate setting or one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, BINARY, CHARACTER, CHARSET, CHECK, COLLATE, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{372, -1}:  "expected Optional BINARY or Optional Character setting or one of [')', BINARY, CHARACTER, CHARSET]",
		yyXError{1169, -1}: "expected Optional Character setting or Optional Collate setting or one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHARACTER, CHARSET, CHECK, COLLATE, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1178, -1}: "expected Optional Character setting or Optional Collate setting or one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHARACTER, CHARSET, CHECK, COLLATE, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1181, -1}: "expected Optional Character setting or Optional Collate setting or one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHARACTER, CHARSET, CHECK, COLLATE, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1189, -1}: "expected Optional Character setting or Optional Collate setting or one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHARACTER, CHARSET, CHECK, COLLATE, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1193, -1}: "expected Optional Character setting or Optional Collate setting or one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHARACTER, CHARSET, CHECK, COLLATE, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1196, -1}: "expected Optional Character setting or Optional Collate setting or one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHARACTER, CHARSET, CHECK, COLLATE, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{373, -1}:  "expected Optional Character setting or one of [')', CHARACTER, CHARSET]",
		yyXError{1172, -1}: "expected Optional Collate setting or one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COLLATE, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1179, -1}: "expected Optional Collate setting or one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COLLATE, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1182, -1}: "expected Optional Collate setting or one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COLLATE, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1190, -1}: "expected Optional Collate setting or one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COLLATE, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1194, -1}: "expected Optional Collate setting or one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COLLATE, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1197, -1}: "expected Optional Collate setting or one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COLLATE, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{351, -1}:  "expected Optional Integer keyword or one of [')', INTEGER]",
		yyXError{352, -1}:  "expected Optional Integer keyword or one of [')', INTEGER]",
		yyXError{426, -1}:  "expected Optional ORDER BY clause optional or SELECT statement optional LIMIT clause or Union (select) or one of [$end, ')', ';', LIMIT, ON, ORDER, UNION]",
		yyXError{388, -1}:  "expected Optional else clause or When clause or one of [ELSE, END, WHEN]",
		yyXError{272, -1}:  "expected Optional expression or When clause list or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{298, -1}:  "expected Optional expression or one of ['!', '(', ')', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{514, -1}:  "expected Optional expression or one of ['!', '(', ')', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{517, -1}:  "expected Optional expression or one of ['!', '(', ')', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{19, -1}:   "expected PREPARE",
		yyXError{20, -1}:   "expected PREPARE",
		yyXError{780, -1}:  "expected Password option or one of [PASSWORD, string literal]",
		yyXError{786, -1}:  "expected Password option or one of [PASSWORD, string literal]",
		yyXError{980, -1}:  "expected Password string value or one of [PASSWORD, string literal]",
		yyXError{790, -1}:  "expected Password string value or string literal",
		yyXError{651, -1}:  "expected Predicate expression factor or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{870, -1}:  "expected Prepare statement sql string or one of [USER_VAR, string literal]",
		yyXError{613, -1}:  "expected REGEXP or RLIKE or one of [BETWEEN, IN, LIKE, REGEXP, RLIKE]",
		yyXError{197, -1}:  "expected REGEXP or RLIKE or optional NOT or one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{1019, -1}: "expected Reference definition or REFERENCES",
		yyXError{881, -1}:  "expected Rest part of INSERT INTO statement or one of ['(', SELECT, SET, VALUE, VALUES]",
		yyXError{24, -1}:   "expected SELECT statement field list or Select statement options or one of ['!', '(', '*', '+', '-', '~', ABS, AFTER, ALL, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DISTINCT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{801, -1}:  "expected SELECT statement field list or one of ['!', '(', '*', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{435, -1}:  "expected SELECT statement optional LIMIT clause or one of [$end, ')', ';', LIMIT, ON]",
		yyXError{804, -1}:  "expected SELECT statement optional SQL_CALC_FOUND_ROWS or one of ['!', '(', '*', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{907, -1}:  "expected SELECT statement or Value or Values or one of ['(', SELECT, VALUE, VALUES]",
		yyXError{883, -1}:  "expected SELECT statement or column name list opt or one of ['(', ')', SELECT]",
		yyXError{905, -1}:  "expected SELECT statement or column name list or one of ['(', ')', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SELECT, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{653, -1}:  "expected SELECT statement or expression list or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SELECT, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{245, -1}:  "expected SELECT statement or expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SELECT, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{25, -1}:   "expected SELECT statement or one of ['(', SELECT]",
		yyXError{166, -1}:  "expected SELECT statement or table references or one of ['(', '{', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SELECT, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{169, -1}:  "expected SELECT statement or table references or one of ['(', '{', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SELECT, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{377, -1}:  "expected SET",
		yyXError{720, -1}:  "expected SET",
		yyXError{829, -1}:  "expected SHARE",
		yyXError{738, -1}:  "expected Show like or where condition option or Show tables/columns statement database name option or one of [$end, ';', FROM, IN, LIKE, WHERE]",
		yyXError{724, -1}:  "expected Show like or where condition option or one of [$end, ';', LIKE, WHERE]",
		yyXError{736, -1}:  "expected Show like or where condition option or one of [$end, ';', LIKE, WHERE]",
		yyXError{750, -1}:  "expected Show like or where condition option or one of [$end, ';', LIKE, WHERE]",
		yyXError{739, -1}:  "expected Show table alias option or one of [FROM, IN]",
		yyXError{740, -1}:  "expected Show tables/columns statement database name option or one of [$end, ';', FROM, IN]",
		yyXError{0, -1}:    "expected Start or one of [$end, '(', ';', ALTER, BEGIN, COMMIT, CREATE, DEALLOCATE, DELETE, DESC, DESCRIBE, DO, DROP, EXECUTE, EXPLAIN, INSERT, PREPARE, ROLLBACK, SELECT, SET, SHOW, START, TRUNCATE, UPDATE, USE, parse expression prefix]",
		yyXError{249, -1}:  "expected Sub Select or '('",
		yyXError{429, -1}:  "expected Sub Select or '('",
		yyXError{639, -1}:  "expected Sub Select or '('",
		yyXError{668, -1}:  "expected Sub Select or '('",
		yyXError{427, -1}:  "expected Sub Select or Union Option(empty/ALL/DISTINCT) or one of ['(', ALL, DISTINCT]",
		yyXError{54, -1}:   "expected TABLE",
		yyXError{725, -1}:  "expected TABLE",
		yyXError{1269, -1}: "expected TABLE",
		yyXError{6, -1}:    "expected TRANSACTION",
		yyXError{953, -1}:  "expected Table name list or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{934, -1}:  "expected Table name list or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{938, -1}:  "expected Table name list or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{954, -1}:  "expected Table name or Table name list or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{15, -1}:   "expected Table name or explainable statement or one of ['(', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DELETE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, INSERT, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SELECT, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPDATE, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{715, -1}:  "expected Table name or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{729, -1}:  "expected Table name or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{741, -1}:  "expected Table name or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{742, -1}:  "expected Table name or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{879, -1}:  "expected Table name or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{940, -1}:  "expected Table name or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{946, -1}:  "expected Table name or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{989, -1}:  "expected Table name or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1023, -1}: "expected Table name or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1263, -1}: "expected Table name or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1270, -1}: "expected Table name or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{305, -1}:  "expected Time unit or one of [DAY, DAY_HOUR, DAY_MICROSECOND, DAY_MINUTE, DAY_SECOND, HOUR, HOUR_MICROSECOND, HOUR_MINUTE, HOUR_SECOND, MICROSECOND, MINUTE, MINUTE_MICROSECOND, MINUTE_SECOND, MONTH, QUARTER, SECOND, SECOND_MICROSECOND, WEEK, YEAR, YEAR_MONTH]",
		yyXError{466, -1}:  "expected Trim string direction or expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, BOTH, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEADING, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRAILING, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{993, -1}:  "expected Types or one of [BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, DATE, DATETIME, DECIMAL, DOUBLE, ENUM, INT, INTEGER, LONGBLOB, LONGTEXT, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, NATIONAL, NUMERIC, REAL, SET, SMALLINT, TEXT, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, VARBINARY, VARCHAR, YEAR, float, float32, float64, int64, string, uint, uint64]",
		yyXError{827, -1}:  "expected UPDATE",
		yyXError{920, -1}:  "expected UPDATE",
		yyXError{1217, -1}: "expected UPDATE",
		yyXError{23, -1}:   "expected Union (select) clause list or UNION",
		yyXError{423, -1}:  "expected Union (select) clause list or one of [!=, &&, '%', '&', ')', '*', '+', ',', '-', '/', '<', '>', '^', '|', <<, <=, <=>, <>, =, >=, >>, AND, BETWEEN, COLLATE, DIV, IN, IS, LIKE, MOD, NOT, OR, REGEXP, RLIKE, UNION, XOR, ||]",
		yyXError{22, -1}:   "expected Union select clause list or one of [$end, ')', ';', ON, UNION]",
		yyXError{855, -1}:  "expected Union select or one of [$end, ')', ';', ON, UNION]",
		yyXError{976, -1}:  "expected User auth option or one of [$end, ',', ';', IDENTIFIED]",
		yyXError{864, -1}:  "expected User defined variable name list or USER_VAR",
		yyXError{867, -1}:  "expected User defined variable name or USER_VAR",
		yyXError{974, -1}:  "expected Username and auth option list or string literal",
		yyXError{985, -1}:  "expected Username and auth option or string literal",
		yyXError{781, -1}:  "expected Username or string literal",
		yyXError{723, -1}:  "expected VARIABLES",
		yyXError{726, -1}:  "expected VARIABLES",
		yyXError{727, -1}:  "expected VARIABLES",
		yyXError{387, -1}:  "expected When clause list or WHEN",
		yyXError{694, -1}:  "expected assignment list or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{710, -1}:  "expected assignment list or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{921, -1}:  "expected assignment list or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{698, -1}:  "expected assignment or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1065, -1}: "expected charset or charater set or one of [CHARACTER, CHARSET, COLLATE]",
		yyXError{1251, -1}: "expected charset or charater set or one of [CHARACTER, CHARSET, COLLATE]",
		yyXError{26, -1}:   "expected charset or charater set or set variable value list or one of [$end, ',', ';', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARACTER, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, USER_VAR, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1221, -1}: "expected column definition option or one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{923, -1}:  "expected column name or one of [$end, ';', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{337, -1}:  "expected column name or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{419, -1}:  "expected column name or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{914, -1}:  "expected column name or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1277, -1}: "expected column name or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1294, -1}: "expected column name or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1059, -1}: "expected create table option list opt or one of [$end, ';', AUTO_INCREMENT, AVG_ROW_LENGTH, CHARACTER, CHARSET, CHECKSUM, COLLATE, COMMENT, COMPRESSION, CONNECTION, DEFAULT, ENGINE, KEY_BLOCK_SIZE, MAX_ROWS, MIN_ROWS, PASSWORD]",
		yyXError{1076, -1}: "expected create table option or one of [$end, ',', ';', AUTO_INCREMENT, AVG_ROW_LENGTH, CHARACTER, CHARSET, CHECKSUM, COLLATE, COMMENT, COMPRESSION, CONNECTION, DEFAULT, ENGINE, KEY_BLOCK_SIZE, MAX_ROWS, MIN_ROWS, PASSWORD]",
		yyXError{1079, -1}: "expected create table option or one of [AUTO_INCREMENT, AVG_ROW_LENGTH, CHARACTER, CHARSET, CHECKSUM, COLLATE, COMMENT, COMPRESSION, CONNECTION, DEFAULT, ENGINE, KEY_BLOCK_SIZE, MAX_ROWS, MIN_ROWS, PASSWORD]",
		yyXError{686, -1}:  "expected escaped table reference or one of ['(', '{', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{884, -1}:  "expected expression list list or '('",
		yyXError{900, -1}:  "expected expression list list or '('",
		yyXError{903, -1}:  "expected expression list list or '('",
		yyXError{908, -1}:  "expected expression list list or '('",
		yyXError{404, -1}:  "expected expression list opt or one of ['!', '(', ')', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{897, -1}:  "expected expression list or one of ['!', '(', ')', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{576, -1}:  "expected expression list or one of ['!', '(', '*', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{9, -1}:    "expected expression list or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{454, -1}:  "expected expression list or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{457, -1}:  "expected expression list or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{523, -1}:  "expected expression list or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{551, -1}:  "expected expression list or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{558, -1}:  "expected expression list or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{581, -1}:  "expected expression list or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{584, -1}:  "expected expression list or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{587, -1}:  "expected expression list or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{595, -1}:  "expected expression list or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{600, -1}:  "expected expression list or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{610, -1}:  "expected expression list or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{331, -1}:  "expected expression or one of ['!', '(', ')', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{468, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{3, -1}:    "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{191, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{194, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{285, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{287, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{288, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{289, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{302, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{327, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{340, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{390, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{392, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{396, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{399, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{409, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{460, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{463, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{473, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{476, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{480, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{486, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{490, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{492, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{494, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{497, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{499, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{500, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{503, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{508, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{511, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{520, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{526, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{530, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{533, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{537, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{540, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{542, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{545, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{548, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{554, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{563, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{566, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{569, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{572, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{590, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{593, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{603, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{606, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{684, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{700, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{708, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{733, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{765, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{767, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{769, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{775, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{778, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{799, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{822, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{837, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{892, -1}:  "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{1000, -1}: "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{1223, -1}: "expected expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{841, -1}:  "expected field expression or one of ['!', '(', '*', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{850, -1}:  "expected identifier or unreserved keyword or one of ['*', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{853, -1}:  "expected identifier or unreserved keyword or one of ['*', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{754, -1}:  "expected identifier or unreserved keyword or one of [=, ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{757, -1}:  "expected identifier or unreserved keyword or one of [=, ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{758, -1}:  "expected identifier or unreserved keyword or one of [=, ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1064, -1}: "expected identifier or unreserved keyword or one of [=, ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{846, -1}:  "expected identifier or unreserved keyword or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier, string literal]",
		yyXError{17, -1}:   "expected identifier or unreserved keyword or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{18, -1}:   "expected identifier or unreserved keyword or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{162, -1}:  "expected identifier or unreserved keyword or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{174, -1}:  "expected identifier or unreserved keyword or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{679, -1}:  "expected identifier or unreserved keyword or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{681, -1}:  "expected identifier or unreserved keyword or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{713, -1}:  "expected identifier or unreserved keyword or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{861, -1}:  "expected identifier or unreserved keyword or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{942, -1}:  "expected identifier or unreserved keyword or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1088, -1}: "expected identifier or unreserved keyword or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1109, -1}: "expected identifier or unreserved keyword or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1261, -1}: "expected identifier or unreserved keyword or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1279, -1}: "expected index name or one of [$end, ',', ';', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1007, -1}: "expected index name or one of ['(', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, INDEX, KEY, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1005, -1}: "expected index name or one of ['(', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1006, -1}: "expected index name or one of ['(', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1010, -1}: "expected index name or one of ['(', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1029, -1}: "expected index name or one of ['(', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1030, -1}: "expected index name or one of ['(', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1050, -1}: "expected index name or one of ['(', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{886, -1}:  "expected insert statement set value by column name list or one of [$end, ',', ';', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, ON, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{894, -1}:  "expected insert statement set value by column name or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{646, -1}:  "expected like escape option or one of [!=, $end, &&, ')', ',', ';', '<', '>', '}', <=, <=>, <>, =, >=, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, RIGHT, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{295, -1}:  "expected logical and operator or logical or operator or one of [$end, &&, ')', ',', ';', '}', ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, INNER, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, RIGHT, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{296, -1}:  "expected logical and operator or logical or operator or one of [$end, &&, ')', ',', ';', '}', ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, INNER, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, RIGHT, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{297, -1}:  "expected logical and operator or logical or operator or one of [$end, &&, ')', ',', ';', '}', ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, INNER, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, RIGHT, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{678, -1}:  "expected logical and operator or logical or operator or one of [$end, &&, ')', ',', ';', '}', ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, INNER, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, RIGHT, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{193, -1}:  "expected logical and operator or logical or operator or one of [$end, &&, ')', ',', ';', '}', AND, CROSS, FOR, GROUP, HAVING, INNER, JOIN, LEFT, LIMIT, LOCK, ON, OR, ORDER, RIGHT, SET, UNION, WHERE, XOR, ||]",
		yyXError{685, -1}:  "expected logical and operator or logical or operator or one of [$end, &&, ')', ',', ';', '}', AND, CROSS, FOR, GROUP, HAVING, INNER, JOIN, LEFT, LIMIT, LOCK, ON, OR, ORDER, RIGHT, SET, UNION, WHERE, XOR, ||]",
		yyXError{835, -1}:  "expected logical and operator or logical or operator or one of [$end, &&, ')', ',', ';', AND, FOR, HAVING, LIMIT, LOCK, ON, OR, ORDER, UNION, XOR, ||]",
		yyXError{838, -1}:  "expected logical and operator or logical or operator or one of [$end, &&, ')', ',', ';', AND, FOR, HAVING, LIMIT, LOCK, ON, OR, ORDER, UNION, XOR, ||]",
		yyXError{405, -1}:  "expected logical and operator or logical or operator or one of [$end, &&, ')', ',', ';', AND, OR, XOR, ||]",
		yyXError{410, -1}:  "expected logical and operator or logical or operator or one of [$end, &&, ')', ',', ';', AND, OR, XOR, ||]",
		yyXError{702, -1}:  "expected logical and operator or logical or operator or one of [$end, &&, ')', ';', AND, FOR, GROUP, HAVING, LIMIT, LOCK, ON, OR, ORDER, UNION, XOR, ||]",
		yyXError{833, -1}:  "expected logical and operator or logical or operator or one of [$end, &&, ')', ';', AND, FOR, LIMIT, LOCK, ON, OR, ORDER, UNION, XOR, ||]",
		yyXError{709, -1}:  "expected logical and operator or logical or operator or one of [$end, &&, ',', ';', AND, LIMIT, OR, ORDER, WHERE, XOR, ||]",
		yyXError{893, -1}:  "expected logical and operator or logical or operator or one of [$end, &&, ',', ';', AND, ON, OR, XOR, ||]",
		yyXError{766, -1}:  "expected logical and operator or logical or operator or one of [$end, &&, ',', ';', AND, OR, XOR, ||]",
		yyXError{768, -1}:  "expected logical and operator or logical or operator or one of [$end, &&, ',', ';', AND, OR, XOR, ||]",
		yyXError{770, -1}:  "expected logical and operator or logical or operator or one of [$end, &&, ',', ';', AND, OR, XOR, ||]",
		yyXError{776, -1}:  "expected logical and operator or logical or operator or one of [$end, &&, ',', ';', AND, OR, XOR, ||]",
		yyXError{779, -1}:  "expected logical and operator or logical or operator or one of [$end, &&, ',', ';', AND, OR, XOR, ||]",
		yyXError{800, -1}:  "expected logical and operator or logical or operator or one of [$end, &&, ',', ';', AND, OR, XOR, ||]",
		yyXError{734, -1}:  "expected logical and operator or logical or operator or one of [$end, &&, ';', AND, OR, XOR, ||]",
		yyXError{1298, -1}: "expected logical and operator or logical or operator or one of [$end, &&, AND, OR, XOR, ||]",
		yyXError{422, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', ',', AND, OR, XOR, ||]",
		yyXError{506, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', ',', AND, OR, XOR, ||]",
		yyXError{543, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', ',', AND, OR, XOR, ||]",
		yyXError{501, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', AND, FOR, OR, XOR, ||]",
		yyXError{467, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', AND, FROM, OR, XOR, ||]",
		yyXError{299, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', AND, OR, WHEN, XOR, ||]",
		yyXError{286, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', AND, OR, XOR, ||]",
		yyXError{303, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', AND, OR, XOR, ||]",
		yyXError{328, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', AND, OR, XOR, ||]",
		yyXError{332, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', AND, OR, XOR, ||]",
		yyXError{461, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', AND, OR, XOR, ||]",
		yyXError{464, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', AND, OR, XOR, ||]",
		yyXError{474, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', AND, OR, XOR, ||]",
		yyXError{477, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', AND, OR, XOR, ||]",
		yyXError{481, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', AND, OR, XOR, ||]",
		yyXError{487, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', AND, OR, XOR, ||]",
		yyXError{495, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', AND, OR, XOR, ||]",
		yyXError{504, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', AND, OR, XOR, ||]",
		yyXError{509, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', AND, OR, XOR, ||]",
		yyXError{512, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', AND, OR, XOR, ||]",
		yyXError{521, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', AND, OR, XOR, ||]",
		yyXError{527, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', AND, OR, XOR, ||]",
		yyXError{531, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', AND, OR, XOR, ||]",
		yyXError{534, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', AND, OR, XOR, ||]",
		yyXError{538, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', AND, OR, XOR, ||]",
		yyXError{546, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', AND, OR, XOR, ||]",
		yyXError{549, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', AND, OR, XOR, ||]",
		yyXError{555, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', AND, OR, XOR, ||]",
		yyXError{564, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', AND, OR, XOR, ||]",
		yyXError{567, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', AND, OR, XOR, ||]",
		yyXError{570, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', AND, OR, XOR, ||]",
		yyXError{573, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', AND, OR, XOR, ||]",
		yyXError{591, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', AND, OR, XOR, ||]",
		yyXError{604, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', AND, OR, XOR, ||]",
		yyXError{607, -1}:  "expected logical and operator or logical or operator or one of [&&, ')', AND, OR, XOR, ||]",
		yyXError{1001, -1}: "expected logical and operator or logical or operator or one of [&&, ')', AND, OR, XOR, ||]",
		yyXError{1224, -1}: "expected logical and operator or logical or operator or one of [&&, ')', AND, OR, XOR, ||]",
		yyXError{498, -1}:  "expected logical and operator or logical or operator or one of [&&, ',', AND, FROM, OR, XOR, ||]",
		yyXError{341, -1}:  "expected logical and operator or logical or operator or one of [&&, ',', AND, OR, USING, XOR, ||]",
		yyXError{491, -1}:  "expected logical and operator or logical or operator or one of [&&, ',', AND, OR, XOR, ||]",
		yyXError{493, -1}:  "expected logical and operator or logical or operator or one of [&&, ',', AND, OR, XOR, ||]",
		yyXError{541, -1}:  "expected logical and operator or logical or operator or one of [&&, ',', AND, OR, XOR, ||]",
		yyXError{594, -1}:  "expected logical and operator or logical or operator or one of [&&, ',', AND, OR, XOR, ||]",
		yyXError{400, -1}:  "expected logical and operator or logical or operator or one of [&&, AND, AS, OR, XOR, ||]",
		yyXError{393, -1}:  "expected logical and operator or logical or operator or one of [&&, AND, ELSE, END, OR, WHEN, XOR, ||]",
		yyXError{397, -1}:  "expected logical and operator or logical or operator or one of [&&, AND, END, OR, XOR, ||]",
		yyXError{472, -1}:  "expected logical and operator or logical or operator or one of [&&, AND, FROM, OR, XOR, ||]",
		yyXError{391, -1}:  "expected logical and operator or logical or operator or one of [&&, AND, OR, THEN, XOR, ||]",
		yyXError{58, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{59, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{60, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{61, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{62, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{63, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{64, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{65, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{66, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{67, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{68, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{69, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{70, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{71, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{72, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{73, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{74, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{75, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{76, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{77, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{78, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{79, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{80, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{81, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{82, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{83, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{84, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{85, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{86, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{87, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{88, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{89, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{90, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{91, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{92, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{93, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{94, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{95, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{96, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{97, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{98, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{99, -1}:   "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{100, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{101, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{102, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{103, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{104, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{105, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{106, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{107, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{108, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{109, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{110, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{111, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{112, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{113, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{114, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{115, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{116, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{117, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{118, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{119, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{120, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{121, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{122, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{123, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{124, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{125, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{126, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{127, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{128, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{129, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{130, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{131, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{132, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{133, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{134, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{135, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{136, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{137, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{138, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{139, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{140, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{141, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{142, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{143, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{144, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{145, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{146, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{147, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{148, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{149, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{150, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{151, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{152, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, ADD, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DEFAULT, DESC, DIV, DO, DOUBLE, DROP, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOREIGN, FOUND_ROWS, FROM, FULL, FULLTEXT, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INDEX, INNER, INT, INTEGER, IS, JOIN, KEY, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, VALUES, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{192, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DESC, DIV, DO, DOUBLE, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, INT, INTEGER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{680, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DESC, DIV, DO, DOUBLE, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, INT, INTEGER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{198, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{199, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{200, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{201, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{202, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{203, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{204, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{205, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{206, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{207, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{208, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{209, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{210, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{211, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{212, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{213, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{214, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{215, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{216, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{217, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{218, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{219, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{220, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{221, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{222, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{223, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{224, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{225, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{226, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{227, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{228, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{229, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{230, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{231, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{232, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{233, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{234, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{669, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{670, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{682, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIGINT, BINARY, BIT, BLOB, BOOL, BOOLEAN, CHAR, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DECIMAL, DESC, DIV, DO, DOUBLE, ELSE, END, ENGINE, ENGINES, ENUM, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, INT, INTEGER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, LONGBLOB, LONGTEXT, MAX, MAX_ROWS, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, NUMERIC, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REAL, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SMALLINT, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYTEXT, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, VARBINARY, VARCHAR, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, float, float32, float64, identifier, int64, string, string literal, uint, uint64, ||]",
		yyXError{246, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{268, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{269, -1}:  "expected one of [!=, $end, &&, '%', '&', '(', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{807, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DIV, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, IN, IS, KEY_BLOCK_SIZE, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{851, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '.', '/', ';', '<', '>', '^', '|', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DIV, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, IN, IS, KEY_BLOCK_SIZE, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{381, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{382, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARACTER, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{235, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{236, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{237, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{238, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{239, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{240, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{241, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{242, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNIQUE, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{243, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{244, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{247, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{248, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{250, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{251, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{252, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{258, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{259, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{260, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{261, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{262, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{281, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{282, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{283, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{284, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{294, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{301, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{304, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{329, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{330, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{333, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{334, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{336, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{339, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{384, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{386, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{398, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{403, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{408, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{412, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{413, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{414, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{415, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{416, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{417, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{418, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{421, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{425, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{453, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{456, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{459, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{462, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{465, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{475, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{478, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{479, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{482, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{488, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{496, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{502, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{505, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{507, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{510, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{513, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{516, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{519, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{522, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{525, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{528, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{532, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{535, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{539, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{544, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{547, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{550, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{553, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{556, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{560, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{562, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{565, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{568, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{571, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{574, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{579, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{580, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{583, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{586, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{589, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{592, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{597, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{599, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{602, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{605, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{608, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{612, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{627, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{628, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{629, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{630, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{631, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{632, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{633, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{634, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{635, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{636, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{637, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{638, -1}:  "expected one of [!=, $end, &&, '%', '&', ')', '*', '+', ',', '-', '/', ';', '<', '>', '^', '|', '}', <<, <=, <=>, <>, =, >=, >>, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BETWEEN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DIV, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIKE, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MOD, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, REGEXP, RIGHT, RLIKE, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{645, -1}:  "expected one of [!=, $end, &&, ')', ',', ';', '<', '>', '}', <=, <=>, <>, =, >=, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, RIGHT, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{196, -1}:  "expected one of [!=, $end, &&, ')', ',', ';', '<', '>', '}', <=, <=>, <>, =, >=, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, RIGHT, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{647, -1}:  "expected one of [!=, $end, &&, ')', ',', ';', '<', '>', '}', <=, <=>, <>, =, >=, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, RIGHT, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{649, -1}:  "expected one of [!=, $end, &&, ')', ',', ';', '<', '>', '}', <=, <=>, <>, =, >=, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, RIGHT, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{652, -1}:  "expected one of [!=, $end, &&, ')', ',', ';', '<', '>', '}', <=, <=>, <>, =, >=, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, RIGHT, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{654, -1}:  "expected one of [!=, $end, &&, ')', ',', ';', '<', '>', '}', <=, <=>, <>, =, >=, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, RIGHT, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{656, -1}:  "expected one of [!=, $end, &&, ')', ',', ';', '<', '>', '}', <=, <=>, <>, =, >=, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, RIGHT, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{667, -1}:  "expected one of [!=, $end, &&, ')', ',', ';', '<', '>', '}', <=, <=>, <>, =, >=, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, RIGHT, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{672, -1}:  "expected one of [!=, $end, &&, ')', ',', ';', '<', '>', '}', <=, <=>, <>, =, >=, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, RIGHT, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{677, -1}:  "expected one of [!=, $end, &&, ')', ',', ';', '<', '>', '}', <=, <=>, <>, =, >=, ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, INNER, IS, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, RIGHT, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{674, -1}:  "expected one of [$end, &&, ')', ',', ';', '}', ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, INNER, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, RIGHT, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{675, -1}:  "expected one of [$end, &&, ')', ',', ';', '}', ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, INNER, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, RIGHT, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{676, -1}:  "expected one of [$end, &&, ')', ',', ';', '}', ABS, AFTER, AND, ANY, AS, ASC, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DESC, DO, ELSE, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, INNER, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, ON, OR, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, RIGHT, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, THEN, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHEN, WHERE, XOR, YEAR, YEARWEEK, identifier, string literal, ||]",
		yyXError{158, -1}:  "expected one of [$end, '(', ')', ',', '.', ';', '}', ABS, ADD, AFTER, ANY, AS, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARACTER, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, DROP, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, ON, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, RIGHT, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHERE, YEAR, YEARWEEK, identifier]",
		yyXError{714, -1}:  "expected one of [$end, '(', ')', ',', ';', '}', ABS, ADD, AFTER, ANY, AS, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARACTER, CHARSET, CHECKSUM, COALESCE, COLLATE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, DROP, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, IN, INNER, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, ON, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, RIGHT, ROLLBACK, ROW, SECOND, SELECT, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, USING, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHERE, YEAR, YEARWEEK, identifier]",
		yyXError{1137, -1}: "expected one of [$end, '(', ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRECISION, PRIMARY, UNIQUE, UNSIGNED, ZEROFILL]",
		yyXError{1125, -1}: "expected one of [$end, '(', ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE, UNSIGNED, ZEROFILL]",
		yyXError{1126, -1}: "expected one of [$end, '(', ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE, UNSIGNED, ZEROFILL]",
		yyXError{1127, -1}: "expected one of [$end, '(', ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE, UNSIGNED, ZEROFILL]",
		yyXError{1128, -1}: "expected one of [$end, '(', ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE, UNSIGNED, ZEROFILL]",
		yyXError{1129, -1}: "expected one of [$end, '(', ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE, UNSIGNED, ZEROFILL]",
		yyXError{1130, -1}: "expected one of [$end, '(', ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE, UNSIGNED, ZEROFILL]",
		yyXError{1131, -1}: "expected one of [$end, '(', ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE, UNSIGNED, ZEROFILL]",
		yyXError{1132, -1}: "expected one of [$end, '(', ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE, UNSIGNED, ZEROFILL]",
		yyXError{1133, -1}: "expected one of [$end, '(', ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE, UNSIGNED, ZEROFILL]",
		yyXError{1134, -1}: "expected one of [$end, '(', ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE, UNSIGNED, ZEROFILL]",
		yyXError{1135, -1}: "expected one of [$end, '(', ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE, UNSIGNED, ZEROFILL]",
		yyXError{1136, -1}: "expected one of [$end, '(', ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE, UNSIGNED, ZEROFILL]",
		yyXError{1199, -1}: "expected one of [$end, '(', ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE, UNSIGNED, ZEROFILL]",
		yyXError{1138, -1}: "expected one of [$end, '(', ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1012, -1}: "expected one of [$end, '(', ',', ';']",
		yyXError{163, -1}:  "expected one of [$end, ')', ',', ';', '}', CROSS, FOR, GROUP, HAVING, INNER, JOIN, LEFT, LIMIT, LOCK, ON, ORDER, RIGHT, SET, UNION, WHERE]",
		yyXError{164, -1}:  "expected one of [$end, ')', ',', ';', '}', CROSS, FOR, GROUP, HAVING, INNER, JOIN, LEFT, LIMIT, LOCK, ON, ORDER, RIGHT, SET, UNION, WHERE]",
		yyXError{172, -1}:  "expected one of [$end, ')', ',', ';', '}', CROSS, FOR, GROUP, HAVING, INNER, JOIN, LEFT, LIMIT, LOCK, ON, ORDER, RIGHT, SET, UNION, WHERE]",
		yyXError{173, -1}:  "expected one of [$end, ')', ',', ';', '}', CROSS, FOR, GROUP, HAVING, INNER, JOIN, LEFT, LIMIT, LOCK, ON, ORDER, RIGHT, SET, UNION, WHERE]",
		yyXError{175, -1}:  "expected one of [$end, ')', ',', ';', '}', CROSS, FOR, GROUP, HAVING, INNER, JOIN, LEFT, LIMIT, LOCK, ON, ORDER, RIGHT, SET, UNION, WHERE]",
		yyXError{687, -1}:  "expected one of [$end, ')', ',', ';', '}', CROSS, FOR, GROUP, HAVING, INNER, JOIN, LEFT, LIMIT, LOCK, ON, ORDER, RIGHT, SET, UNION, WHERE]",
		yyXError{689, -1}:  "expected one of [$end, ')', ',', ';', '}', CROSS, FOR, GROUP, HAVING, INNER, JOIN, LEFT, LIMIT, LOCK, ON, ORDER, RIGHT, SET, UNION, WHERE]",
		yyXError{690, -1}:  "expected one of [$end, ')', ',', ';', '}', CROSS, FOR, GROUP, HAVING, INNER, JOIN, LEFT, LIMIT, LOCK, ON, ORDER, RIGHT, SET, UNION, WHERE]",
		yyXError{358, -1}:  "expected one of [$end, ')', ',', ';', AFTER, ASC, AUTO_INCREMENT, BINARY, CHARACTER, CHARSET, CHECK, COLLATE, COMMENT, DEFAULT, DESC, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE, UNSIGNED, ZEROFILL]",
		yyXError{362, -1}:  "expected one of [$end, ')', ',', ';', AFTER, ASC, AUTO_INCREMENT, BINARY, CHARACTER, CHARSET, CHECK, COLLATE, COMMENT, DEFAULT, DESC, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE, UNSIGNED, ZEROFILL]",
		yyXError{1151, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, BINARY, CHARACTER, CHARSET, CHECK, COLLATE, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1153, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, BINARY, CHARACTER, CHARSET, CHECK, COLLATE, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1154, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, BINARY, CHARACTER, CHARSET, CHECK, COLLATE, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1164, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, BINARY, CHARACTER, CHARSET, CHECK, COLLATE, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{374, -1}:  "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHARACTER, CHARSET, CHECK, COLLATE, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{380, -1}:  "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COLLATE, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1215, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, KEY, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{365, -1}:  "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE, UNSIGNED, ZEROFILL]",
		yyXError{366, -1}:  "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE, UNSIGNED, ZEROFILL]",
		yyXError{370, -1}:  "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE, UNSIGNED, ZEROFILL]",
		yyXError{1203, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE, UNSIGNED, ZEROFILL]",
		yyXError{1204, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE, UNSIGNED, ZEROFILL]",
		yyXError{1205, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE, UNSIGNED, ZEROFILL]",
		yyXError{1112, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1113, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1114, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1115, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1116, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1117, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1118, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1119, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1120, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1142, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1147, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1149, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1150, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1155, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1160, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1161, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1162, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1163, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1165, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1173, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1175, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1180, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1183, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1184, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1185, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1191, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1195, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1198, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1200, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1212, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1213, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1220, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1222, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1225, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1226, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1228, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1229, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1230, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1231, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1232, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1233, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1234, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1235, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1236, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1239, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1240, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1241, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1242, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1243, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1244, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1245, -1}: "expected one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{1210, -1}: "expected one of [$end, ')', ',', ';', AFTER, FIRST]",
		yyXError{359, -1}:  "expected one of [$end, ')', ',', ';', AUTO_INCREMENT, AVG_ROW_LENGTH, CHARACTER, CHARSET, CHECKSUM, COLLATE, COMMENT, COMPRESSION, CONNECTION, DEFAULT, ENGINE, FOR, KEY_BLOCK_SIZE, LOCK, MAX_ROWS, MIN_ROWS, OFFSET, ON, PASSWORD, UNION]",
		yyXError{360, -1}:  "expected one of [$end, ')', ',', ';', AUTO_INCREMENT, AVG_ROW_LENGTH, CHARACTER, CHARSET, CHECKSUM, COLLATE, COMMENT, COMPRESSION, CONNECTION, DEFAULT, ENGINE, FOR, KEY_BLOCK_SIZE, LOCK, MAX_ROWS, MIN_ROWS, OFFSET, ON, PASSWORD, UNION]",
		yyXError{809, -1}:  "expected one of [$end, ')', ',', ';', FOR, FROM, LIMIT, LOCK, ON, UNION]",
		yyXError{810, -1}:  "expected one of [$end, ')', ',', ';', FOR, FROM, LIMIT, LOCK, ON, UNION]",
		yyXError{811, -1}:  "expected one of [$end, ')', ',', ';', FOR, FROM, LIMIT, LOCK, ON, UNION]",
		yyXError{842, -1}:  "expected one of [$end, ')', ',', ';', FOR, FROM, LIMIT, LOCK, ON, UNION]",
		yyXError{843, -1}:  "expected one of [$end, ')', ',', ';', FOR, FROM, LIMIT, LOCK, ON, UNION]",
		yyXError{844, -1}:  "expected one of [$end, ')', ',', ';', FOR, FROM, LIMIT, LOCK, ON, UNION]",
		yyXError{845, -1}:  "expected one of [$end, ')', ',', ';', FOR, FROM, LIMIT, LOCK, ON, UNION]",
		yyXError{847, -1}:  "expected one of [$end, ')', ',', ';', FOR, FROM, LIMIT, LOCK, ON, UNION]",
		yyXError{848, -1}:  "expected one of [$end, ')', ',', ';', FOR, FROM, LIMIT, LOCK, ON, UNION]",
		yyXError{849, -1}:  "expected one of [$end, ')', ',', ';', FOR, FROM, LIMIT, LOCK, ON, UNION]",
		yyXError{852, -1}:  "expected one of [$end, ')', ',', ';', FOR, FROM, LIMIT, LOCK, ON, UNION]",
		yyXError{854, -1}:  "expected one of [$end, ')', ',', ';', FOR, FROM, LIMIT, LOCK, ON, UNION]",
		yyXError{159, -1}:  "expected one of [$end, ')', ',', ';', FOR, GROUP, HAVING, LIMIT, LOCK, ON, ORDER, SET, UNION, WHERE]",
		yyXError{688, -1}:  "expected one of [$end, ')', ',', ';', FOR, GROUP, HAVING, LIMIT, LOCK, ON, ORDER, SET, UNION, WHERE]",
		yyXError{693, -1}:  "expected one of [$end, ')', ',', ';', FOR, GROUP, HAVING, LIMIT, LOCK, ON, ORDER, SET, UNION, WHERE]",
		yyXError{817, -1}:  "expected one of [$end, ')', ',', ';', FOR, GROUP, HAVING, LIMIT, LOCK, ON, ORDER, UNION, WHERE]",
		yyXError{836, -1}:  "expected one of [$end, ')', ',', ';', FOR, HAVING, LIMIT, LOCK, ON, ORDER, UNION]",
		yyXError{446, -1}:  "expected one of [$end, ')', ',', ';', FOR, LIMIT, LOCK, ON, UNION]",
		yyXError{447, -1}:  "expected one of [$end, ')', ',', ';', FOR, LIMIT, LOCK, ON, UNION]",
		yyXError{449, -1}:  "expected one of [$end, ')', ',', ';', FOR, LIMIT, LOCK, ON, UNION]",
		yyXError{450, -1}:  "expected one of [$end, ')', ',', ';', FOR, LIMIT, LOCK, ON, UNION]",
		yyXError{451, -1}:  "expected one of [$end, ')', ',', ';', FOR, LIMIT, LOCK, ON, UNION]",
		yyXError{452, -1}:  "expected one of [$end, ')', ',', ';', FOR, LIMIT, LOCK, ON, UNION]",
		yyXError{439, -1}:  "expected one of [$end, ')', ',', ';', FOR, LOCK, OFFSET, ON, UNION]",
		yyXError{792, -1}:  "expected one of [$end, ')', ',', ';']",
		yyXError{1009, -1}: "expected one of [$end, ')', ',', ';']",
		yyXError{1022, -1}: "expected one of [$end, ')', ',', ';']",
		yyXError{1027, -1}: "expected one of [$end, ')', ',', ';']",
		yyXError{1034, -1}: "expected one of [$end, ')', ',', ';']",
		yyXError{1038, -1}: "expected one of [$end, ')', ',', ';']",
		yyXError{1041, -1}: "expected one of [$end, ')', ',', ';']",
		yyXError{1045, -1}: "expected one of [$end, ')', ',', ';']",
		yyXError{1049, -1}: "expected one of [$end, ')', ',', ';']",
		yyXError{1054, -1}: "expected one of [$end, ')', ',', ';']",
		yyXError{1058, -1}: "expected one of [$end, ')', ',', ';']",
		yyXError{701, -1}:  "expected one of [$end, ')', ';', FOR, GROUP, HAVING, LIMIT, LOCK, ON, ORDER, UNION]",
		yyXError{821, -1}:  "expected one of [$end, ')', ';', FOR, HAVING, LIMIT, LOCK, ON, ORDER, UNION]",
		yyXError{434, -1}:  "expected one of [$end, ')', ';', FOR, LIMIT, LOCK, ON, UNION]",
		yyXError{816, -1}:  "expected one of [$end, ')', ';', FOR, LIMIT, LOCK, ON, UNION]",
		yyXError{442, -1}:  "expected one of [$end, ')', ';', FOR, LOCK, ON, UNION]",
		yyXError{443, -1}:  "expected one of [$end, ')', ';', FOR, LOCK, ON, UNION]",
		yyXError{428, -1}:  "expected one of [$end, ')', ';', LIMIT, ON, ORDER, UNION]",
		yyXError{432, -1}:  "expected one of [$end, ')', ';', LIMIT, ON, ORDER, UNION]",
		yyXError{436, -1}:  "expected one of [$end, ')', ';', LIMIT, ON, ORDER, UNION]",
		yyXError{826, -1}:  "expected one of [$end, ')', ';', ON, UNION]",
		yyXError{831, -1}:  "expected one of [$end, ')', ';', ON, UNION]",
		yyXError{832, -1}:  "expected one of [$end, ')', ';', ON, UNION]",
		yyXError{840, -1}:  "expected one of [$end, ')', ';', ON, UNION]",
		yyXError{857, -1}:  "expected one of [$end, ')', ';', ON, UNION]",
		yyXError{859, -1}:  "expected one of [$end, ')', ';', ON, UNION]",
		yyXError{860, -1}:  "expected one of [$end, ')', ';', ON, UNION]",
		yyXError{437, -1}:  "expected one of [$end, ')', ';', ON]",
		yyXError{785, -1}:  "expected one of [$end, ',', ';', =, IDENTIFIED]",
		yyXError{1281, -1}: "expected one of [$end, ',', ';', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1282, -1}: "expected one of [$end, ',', ';', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1077, -1}: "expected one of [$end, ',', ';', AUTO_INCREMENT, AVG_ROW_LENGTH, CHARACTER, CHARSET, CHECKSUM, COLLATE, COMMENT, COMPRESSION, CONNECTION, DEFAULT, ENGINE, KEY_BLOCK_SIZE, MAX_ROWS, MIN_ROWS, PASSWORD]",
		yyXError{1078, -1}: "expected one of [$end, ',', ';', AUTO_INCREMENT, AVG_ROW_LENGTH, CHARACTER, CHARSET, CHECKSUM, COLLATE, COMMENT, COMPRESSION, CONNECTION, DEFAULT, ENGINE, KEY_BLOCK_SIZE, MAX_ROWS, MIN_ROWS, PASSWORD]",
		yyXError{1080, -1}: "expected one of [$end, ',', ';', AUTO_INCREMENT, AVG_ROW_LENGTH, CHARACTER, CHARSET, CHECKSUM, COLLATE, COMMENT, COMPRESSION, CONNECTION, DEFAULT, ENGINE, KEY_BLOCK_SIZE, MAX_ROWS, MIN_ROWS, PASSWORD]",
		yyXError{1083, -1}: "expected one of [$end, ',', ';', AUTO_INCREMENT, AVG_ROW_LENGTH, CHARACTER, CHARSET, CHECKSUM, COLLATE, COMMENT, COMPRESSION, CONNECTION, DEFAULT, ENGINE, KEY_BLOCK_SIZE, MAX_ROWS, MIN_ROWS, PASSWORD]",
		yyXError{1085, -1}: "expected one of [$end, ',', ';', AUTO_INCREMENT, AVG_ROW_LENGTH, CHARACTER, CHARSET, CHECKSUM, COLLATE, COMMENT, COMPRESSION, CONNECTION, DEFAULT, ENGINE, KEY_BLOCK_SIZE, MAX_ROWS, MIN_ROWS, PASSWORD]",
		yyXError{1087, -1}: "expected one of [$end, ',', ';', AUTO_INCREMENT, AVG_ROW_LENGTH, CHARACTER, CHARSET, CHECKSUM, COLLATE, COMMENT, COMPRESSION, CONNECTION, DEFAULT, ENGINE, KEY_BLOCK_SIZE, MAX_ROWS, MIN_ROWS, PASSWORD]",
		yyXError{1089, -1}: "expected one of [$end, ',', ';', AUTO_INCREMENT, AVG_ROW_LENGTH, CHARACTER, CHARSET, CHECKSUM, COLLATE, COMMENT, COMPRESSION, CONNECTION, DEFAULT, ENGINE, KEY_BLOCK_SIZE, MAX_ROWS, MIN_ROWS, PASSWORD]",
		yyXError{1091, -1}: "expected one of [$end, ',', ';', AUTO_INCREMENT, AVG_ROW_LENGTH, CHARACTER, CHARSET, CHECKSUM, COLLATE, COMMENT, COMPRESSION, CONNECTION, DEFAULT, ENGINE, KEY_BLOCK_SIZE, MAX_ROWS, MIN_ROWS, PASSWORD]",
		yyXError{1093, -1}: "expected one of [$end, ',', ';', AUTO_INCREMENT, AVG_ROW_LENGTH, CHARACTER, CHARSET, CHECKSUM, COLLATE, COMMENT, COMPRESSION, CONNECTION, DEFAULT, ENGINE, KEY_BLOCK_SIZE, MAX_ROWS, MIN_ROWS, PASSWORD]",
		yyXError{1095, -1}: "expected one of [$end, ',', ';', AUTO_INCREMENT, AVG_ROW_LENGTH, CHARACTER, CHARSET, CHECKSUM, COLLATE, COMMENT, COMPRESSION, CONNECTION, DEFAULT, ENGINE, KEY_BLOCK_SIZE, MAX_ROWS, MIN_ROWS, PASSWORD]",
		yyXError{1097, -1}: "expected one of [$end, ',', ';', AUTO_INCREMENT, AVG_ROW_LENGTH, CHARACTER, CHARSET, CHECKSUM, COLLATE, COMMENT, COMPRESSION, CONNECTION, DEFAULT, ENGINE, KEY_BLOCK_SIZE, MAX_ROWS, MIN_ROWS, PASSWORD]",
		yyXError{1099, -1}: "expected one of [$end, ',', ';', AUTO_INCREMENT, AVG_ROW_LENGTH, CHARACTER, CHARSET, CHECKSUM, COLLATE, COMMENT, COMPRESSION, CONNECTION, DEFAULT, ENGINE, KEY_BLOCK_SIZE, MAX_ROWS, MIN_ROWS, PASSWORD]",
		yyXError{1101, -1}: "expected one of [$end, ',', ';', AUTO_INCREMENT, AVG_ROW_LENGTH, CHARACTER, CHARSET, CHECKSUM, COLLATE, COMMENT, COMPRESSION, CONNECTION, DEFAULT, ENGINE, KEY_BLOCK_SIZE, MAX_ROWS, MIN_ROWS, PASSWORD]",
		yyXError{1105, -1}: "expected one of [$end, ',', ';', AUTO_INCREMENT, AVG_ROW_LENGTH, CHARACTER, CHARSET, CHECKSUM, COLLATE, COMMENT, COMPRESSION, CONNECTION, DEFAULT, ENGINE, KEY_BLOCK_SIZE, MAX_ROWS, MIN_ROWS, PASSWORD]",
		yyXError{1107, -1}: "expected one of [$end, ',', ';', AUTO_INCREMENT, AVG_ROW_LENGTH, CHARACTER, CHARSET, CHECKSUM, COLLATE, COMMENT, COMPRESSION, CONNECTION, DEFAULT, ENGINE, KEY_BLOCK_SIZE, MAX_ROWS, MIN_ROWS, PASSWORD]",
		yyXError{1108, -1}: "expected one of [$end, ',', ';', AUTO_INCREMENT, AVG_ROW_LENGTH, CHARACTER, CHARSET, CHECKSUM, COLLATE, COMMENT, COMPRESSION, CONNECTION, DEFAULT, ENGINE, KEY_BLOCK_SIZE, MAX_ROWS, MIN_ROWS, PASSWORD]",
		yyXError{1110, -1}: "expected one of [$end, ',', ';', AUTO_INCREMENT, AVG_ROW_LENGTH, CHARACTER, CHARSET, CHECKSUM, COLLATE, COMMENT, COMPRESSION, CONNECTION, DEFAULT, ENGINE, KEY_BLOCK_SIZE, MAX_ROWS, MIN_ROWS, PASSWORD]",
		yyXError{1247, -1}: "expected one of [$end, ',', ';', FOREIGN, FULLTEXT, INDEX, KEY, PRIMARY, UNIQUE]",
		yyXError{941, -1}:  "expected one of [$end, ',', ';', FROM, USING]",
		yyXError{937, -1}:  "expected one of [$end, ',', ';', FROM]",
		yyXError{696, -1}:  "expected one of [$end, ',', ';', LIMIT, ORDER, WHERE]",
		yyXError{707, -1}:  "expected one of [$end, ',', ';', LIMIT, ORDER, WHERE]",
		yyXError{889, -1}:  "expected one of [$end, ',', ';', ON]",
		yyXError{891, -1}:  "expected one of [$end, ',', ';', ON]",
		yyXError{895, -1}:  "expected one of [$end, ',', ';', ON]",
		yyXError{899, -1}:  "expected one of [$end, ',', ';', ON]",
		yyXError{902, -1}:  "expected one of [$end, ',', ';', ON]",
		yyXError{759, -1}:  "expected one of [$end, ',', ';']",
		yyXError{764, -1}:  "expected one of [$end, ',', ';']",
		yyXError{773, -1}:  "expected one of [$end, ',', ';']",
		yyXError{865, -1}:  "expected one of [$end, ',', ';']",
		yyXError{866, -1}:  "expected one of [$end, ',', ';']",
		yyXError{868, -1}:  "expected one of [$end, ',', ';']",
		yyXError{922, -1}:  "expected one of [$end, ',', ';']",
		yyXError{935, -1}:  "expected one of [$end, ',', ';']",
		yyXError{939, -1}:  "expected one of [$end, ',', ';']",
		yyXError{967, -1}:  "expected one of [$end, ',', ';']",
		yyXError{975, -1}:  "expected one of [$end, ',', ';']",
		yyXError{977, -1}:  "expected one of [$end, ',', ';']",
		yyXError{978, -1}:  "expected one of [$end, ',', ';']",
		yyXError{981, -1}:  "expected one of [$end, ',', ';']",
		yyXError{983, -1}:  "expected one of [$end, ',', ';']",
		yyXError{984, -1}:  "expected one of [$end, ',', ';']",
		yyXError{986, -1}:  "expected one of [$end, ',', ';']",
		yyXError{1272, -1}: "expected one of [$end, ',', ';']",
		yyXError{1273, -1}: "expected one of [$end, ',', ';']",
		yyXError{1276, -1}: "expected one of [$end, ',', ';']",
		yyXError{1285, -1}: "expected one of [$end, ',', ';']",
		yyXError{1286, -1}: "expected one of [$end, ',', ';']",
		yyXError{1287, -1}: "expected one of [$end, ',', ';']",
		yyXError{1288, -1}: "expected one of [$end, ',', ';']",
		yyXError{1290, -1}: "expected one of [$end, ',', ';']",
		yyXError{1292, -1}: "expected one of [$end, ',', ';']",
		yyXError{1293, -1}: "expected one of [$end, ',', ';']",
		yyXError{1295, -1}: "expected one of [$end, ',', ';']",
		yyXError{1297, -1}: "expected one of [$end, ',', ';']",
		yyXError{57, -1}:   "expected one of [$end, ';', CHARACTER, CHARSET, COLLATE, DEFAULT, LIKE, WHERE]",
		yyXError{1253, -1}: "expected one of [$end, ';', CHARACTER, CHARSET, COLLATE, DEFAULT]",
		yyXError{1254, -1}: "expected one of [$end, ';', CHARACTER, CHARSET, COLLATE, DEFAULT]",
		yyXError{1258, -1}: "expected one of [$end, ';', CHARACTER, CHARSET, COLLATE, DEFAULT]",
		yyXError{1260, -1}: "expected one of [$end, ';', CHARACTER, CHARSET, COLLATE, DEFAULT]",
		yyXError{735, -1}:  "expected one of [$end, ';', COLLATE]",
		yyXError{795, -1}:  "expected one of [$end, ';', COLLATE]",
		yyXError{743, -1}:  "expected one of [$end, ';', FROM, IN]",
		yyXError{744, -1}:  "expected one of [$end, ';', FROM, IN]",
		yyXError{748, -1}:  "expected one of [$end, ';', LIKE, WHERE]",
		yyXError{749, -1}:  "expected one of [$end, ';', LIKE, WHERE]",
		yyXError{885, -1}:  "expected one of [$end, ';', ON]",
		yyXError{896, -1}:  "expected one of [$end, ';', ON]",
		yyXError{901, -1}:  "expected one of [$end, ';', ON]",
		yyXError{904, -1}:  "expected one of [$end, ';', ON]",
		yyXError{909, -1}:  "expected one of [$end, ';', ON]",
		yyXError{910, -1}:  "expected one of [$end, ';', ON]",
		yyXError{863, -1}:  "expected one of [$end, ';', USING]",
		yyXError{2, -1}:    "expected one of [$end, ';']",
		yyXError{5, -1}:    "expected one of [$end, ';']",
		yyXError{7, -1}:    "expected one of [$end, ';']",
		yyXError{21, -1}:   "expected one of [$end, ';']",
		yyXError{28, -1}:   "expected one of [$end, ';']",
		yyXError{29, -1}:   "expected one of [$end, ';']",
		yyXError{30, -1}:   "expected one of [$end, ';']",
		yyXError{31, -1}:   "expected one of [$end, ';']",
		yyXError{32, -1}:   "expected one of [$end, ';']",
		yyXError{33, -1}:   "expected one of [$end, ';']",
		yyXError{34, -1}:   "expected one of [$end, ';']",
		yyXError{35, -1}:   "expected one of [$end, ';']",
		yyXError{36, -1}:   "expected one of [$end, ';']",
		yyXError{37, -1}:   "expected one of [$end, ';']",
		yyXError{38, -1}:   "expected one of [$end, ';']",
		yyXError{39, -1}:   "expected one of [$end, ';']",
		yyXError{40, -1}:   "expected one of [$end, ';']",
		yyXError{41, -1}:   "expected one of [$end, ';']",
		yyXError{42, -1}:   "expected one of [$end, ';']",
		yyXError{43, -1}:   "expected one of [$end, ';']",
		yyXError{44, -1}:   "expected one of [$end, ';']",
		yyXError{45, -1}:   "expected one of [$end, ';']",
		yyXError{46, -1}:   "expected one of [$end, ';']",
		yyXError{47, -1}:   "expected one of [$end, ';']",
		yyXError{48, -1}:   "expected one of [$end, ';']",
		yyXError{49, -1}:   "expected one of [$end, ';']",
		yyXError{50, -1}:   "expected one of [$end, ';']",
		yyXError{51, -1}:   "expected one of [$end, ';']",
		yyXError{52, -1}:   "expected one of [$end, ';']",
		yyXError{53, -1}:   "expected one of [$end, ';']",
		yyXError{153, -1}:  "expected one of [$end, ';']",
		yyXError{705, -1}:  "expected one of [$end, ';']",
		yyXError{706, -1}:  "expected one of [$end, ';']",
		yyXError{712, -1}:  "expected one of [$end, ';']",
		yyXError{716, -1}:  "expected one of [$end, ';']",
		yyXError{717, -1}:  "expected one of [$end, ';']",
		yyXError{718, -1}:  "expected one of [$end, ';']",
		yyXError{719, -1}:  "expected one of [$end, ';']",
		yyXError{722, -1}:  "expected one of [$end, ';']",
		yyXError{730, -1}:  "expected one of [$end, ';']",
		yyXError{731, -1}:  "expected one of [$end, ';']",
		yyXError{737, -1}:  "expected one of [$end, ';']",
		yyXError{745, -1}:  "expected one of [$end, ';']",
		yyXError{751, -1}:  "expected one of [$end, ';']",
		yyXError{752, -1}:  "expected one of [$end, ';']",
		yyXError{771, -1}:  "expected one of [$end, ';']",
		yyXError{787, -1}:  "expected one of [$end, ';']",
		yyXError{788, -1}:  "expected one of [$end, ';']",
		yyXError{793, -1}:  "expected one of [$end, ';']",
		yyXError{794, -1}:  "expected one of [$end, ';']",
		yyXError{797, -1}:  "expected one of [$end, ';']",
		yyXError{862, -1}:  "expected one of [$end, ';']",
		yyXError{871, -1}:  "expected one of [$end, ';']",
		yyXError{872, -1}:  "expected one of [$end, ';']",
		yyXError{873, -1}:  "expected one of [$end, ';']",
		yyXError{917, -1}:  "expected one of [$end, ';']",
		yyXError{924, -1}:  "expected one of [$end, ';']",
		yyXError{925, -1}:  "expected one of [$end, ';']",
		yyXError{926, -1}:  "expected one of [$end, ';']",
		yyXError{927, -1}:  "expected one of [$end, ';']",
		yyXError{928, -1}:  "expected one of [$end, ';']",
		yyXError{929, -1}:  "expected one of [$end, ';']",
		yyXError{947, -1}:  "expected one of [$end, ';']",
		yyXError{949, -1}:  "expected one of [$end, ';']",
		yyXError{958, -1}:  "expected one of [$end, ';']",
		yyXError{963, -1}:  "expected one of [$end, ';']",
		yyXError{966, -1}:  "expected one of [$end, ';']",
		yyXError{1062, -1}: "expected one of [$end, ';']",
		yyXError{1250, -1}: "expected one of [$end, ';']",
		yyXError{1267, -1}: "expected one of [$end, ';']",
		yyXError{1268, -1}: "expected one of [$end, ';']",
		yyXError{1300, -1}: "expected one of [$end, ';']",
		yyXError{485, -1}:  "expected one of ['!', '(', '*', '+', '-', '~', ABS, AFTER, ALL, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{484, -1}:  "expected one of ['!', '(', '*', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{489, -1}:  "expected one of ['!', '(', '*', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{802, -1}:  "expected one of ['!', '(', '*', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{803, -1}:  "expected one of ['!', '(', '*', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{805, -1}:  "expected one of ['!', '(', '*', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{806, -1}:  "expected one of ['!', '(', '*', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{659, -1}:  "expected one of ['!', '(', '+', '-', '~', ABS, AFTER, ALL, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{660, -1}:  "expected one of ['!', '(', '+', '-', '~', ABS, AFTER, ALL, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{661, -1}:  "expected one of ['!', '(', '+', '-', '~', ABS, AFTER, ALL, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{662, -1}:  "expected one of ['!', '(', '+', '-', '~', ABS, AFTER, ALL, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{663, -1}:  "expected one of ['!', '(', '+', '-', '~', ABS, AFTER, ALL, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{664, -1}:  "expected one of ['!', '(', '+', '-', '~', ABS, AFTER, ALL, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{665, -1}:  "expected one of ['!', '(', '+', '-', '~', ABS, AFTER, ALL, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{666, -1}:  "expected one of ['!', '(', '+', '-', '~', ABS, AFTER, ALL, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{469, -1}:  "expected one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{470, -1}:  "expected one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{471, -1}:  "expected one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{290, -1}:  "expected one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{291, -1}:  "expected one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{292, -1}:  "expected one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{293, -1}:  "expected one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOT, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{643, -1}:  "expected one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{644, -1}:  "expected one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{650, -1}:  "expected one of ['%', '&', '*', '+', '-', '/', '^', '|', <<, >>, AND, DIV, MOD]",
		yyXError{154, -1}:  "expected one of ['(', '{', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, IGNORE, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{156, -1}:  "expected one of ['(', '{', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, INTO, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLE, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{12, -1}:   "expected one of ['(', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DELETE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, INSERT, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SELECT, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPDATE, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{13, -1}:   "expected one of ['(', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DELETE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, INSERT, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SELECT, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPDATE, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{14, -1}:   "expected one of ['(', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DELETE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, INSERT, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SELECT, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPDATE, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{182, -1}:  "expected one of ['(', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{185, -1}:  "expected one of ['(', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{186, -1}:  "expected one of ['(', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{430, -1}:  "expected one of ['(', SELECT]",
		yyXError{431, -1}:  "expected one of ['(', SELECT]",
		yyXError{167, -1}:  "expected one of [')', ',']",
		yyXError{367, -1}:  "expected one of [')', ',']",
		yyXError{406, -1}:  "expected one of [')', ',']",
		yyXError{455, -1}:  "expected one of [')', ',']",
		yyXError{458, -1}:  "expected one of [')', ',']",
		yyXError{524, -1}:  "expected one of [')', ',']",
		yyXError{552, -1}:  "expected one of [')', ',']",
		yyXError{559, -1}:  "expected one of [')', ',']",
		yyXError{577, -1}:  "expected one of [')', ',']",
		yyXError{582, -1}:  "expected one of [')', ',']",
		yyXError{585, -1}:  "expected one of [')', ',']",
		yyXError{588, -1}:  "expected one of [')', ',']",
		yyXError{596, -1}:  "expected one of [')', ',']",
		yyXError{601, -1}:  "expected one of [')', ',']",
		yyXError{611, -1}:  "expected one of [')', ',']",
		yyXError{655, -1}:  "expected one of [')', ',']",
		yyXError{898, -1}:  "expected one of [')', ',']",
		yyXError{911, -1}:  "expected one of [')', ',']",
		yyXError{912, -1}:  "expected one of [')', ',']",
		yyXError{916, -1}:  "expected one of [')', ',']",
		yyXError{994, -1}:  "expected one of [')', ',']",
		yyXError{996, -1}:  "expected one of [')', ',']",
		yyXError{997, -1}:  "expected one of [')', ',']",
		yyXError{999, -1}:  "expected one of [')', ',']",
		yyXError{1002, -1}: "expected one of [')', ',']",
		yyXError{1014, -1}: "expected one of [')', ',']",
		yyXError{1016, -1}: "expected one of [')', ',']",
		yyXError{1018, -1}: "expected one of [')', ',']",
		yyXError{1021, -1}: "expected one of [')', ',']",
		yyXError{1026, -1}: "expected one of [')', ',']",
		yyXError{1033, -1}: "expected one of [')', ',']",
		yyXError{1037, -1}: "expected one of [')', ',']",
		yyXError{1040, -1}: "expected one of [')', ',']",
		yyXError{1044, -1}: "expected one of [')', ',']",
		yyXError{1048, -1}: "expected one of [')', ',']",
		yyXError{1053, -1}: "expected one of [')', ',']",
		yyXError{1057, -1}: "expected one of [')', ',']",
		yyXError{1061, -1}: "expected one of [')', ',']",
		yyXError{1167, -1}: "expected one of [')', ',']",
		yyXError{1168, -1}: "expected one of [')', ',']",
		yyXError{1171, -1}: "expected one of [')', ',']",
		yyXError{1177, -1}: "expected one of [')', ',']",
		yyXError{1266, -1}: "expected one of [')', ',']",
		yyXError{955, -1}:  "expected one of [',', FROM]",
		yyXError{160, -1}:  "expected one of [',', SET]",
		yyXError{960, -1}:  "expected one of [',', USING]",
		yyXError{378, -1}:  "expected one of [=, ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier, string literal]",
		yyXError{379, -1}:  "expected one of [=, ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier, string literal]",
		yyXError{753, -1}:  "expected one of [=, ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier, string literal]",
		yyXError{756, -1}:  "expected one of [=, FOR]",
		yyXError{952, -1}:  "expected one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FROM, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, IGNORE, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{930, -1}:  "expected one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{931, -1}:  "expected one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{875, -1}:  "expected one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, IGNORE, INTO, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{876, -1}:  "expected one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, IGNORE, INTO, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{877, -1}:  "expected one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, IGNORE, INTO, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1081, -1}: "expected one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier, integer literal, string literal]",
		yyXError{988, -1}:  "expected one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier, string literal]",
		yyXError{880, -1}:  "expected one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{944, -1}:  "expected one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1283, -1}: "expected one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{614, -1}:  "expected one of [BETWEEN, IN, LIKE, NULL, REGEXP, RLIKE, UNKNOWN, false, true]",
		yyXError{1139, -1}: "expected one of [CHAR, VARCHAR]",
		yyXError{1146, -1}: "expected one of [CHAR, VARCHAR]",
		yyXError{1063, -1}: "expected one of [CHARACTER, CHARSET, COLLATE]",
		yyXError{721, -1}:  "expected one of [COLUMNS, TABLES]",
		yyXError{728, -1}:  "expected one of [COLUMNS, TABLES]",
		yyXError{389, -1}:  "expected one of [ELSE, END, WHEN]",
		yyXError{395, -1}:  "expected one of [ELSE, END, WHEN]",
		yyXError{1246, -1}: "expected one of [FOREIGN, FULLTEXT, INDEX, KEY, PRIMARY, UNIQUE]",
		yyXError{180, -1}:  "expected one of [JOIN, OUTER]",
		yyXError{181, -1}:  "expected one of [JOIN, OUTER]",
		yyXError{673, -1}:  "expected one of [NULL, UNKNOWN, false, true]",
		yyXError{657, -1}:  "expected optional NOT or one of [NOT, NULL, UNKNOWN, false, true]",
		yyXError{179, -1}:  "expected optional OUTER clause or one of [JOIN, OUTER]",
		yyXError{1111, -1}: "expected optional column definition option list or one of [$end, ')', ',', ';', AFTER, AUTO_INCREMENT, CHECK, COMMENT, DEFAULT, FIRST, NOT, NULL, ON, PRIMARY, UNIQUE]",
		yyXError{615, -1}:  "expected primary expression factor or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{616, -1}:  "expected primary expression factor or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{617, -1}:  "expected primary expression factor or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{618, -1}:  "expected primary expression factor or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{619, -1}:  "expected primary expression factor or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{620, -1}:  "expected primary expression factor or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{621, -1}:  "expected primary expression factor or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{622, -1}:  "expected primary expression factor or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{623, -1}:  "expected primary expression factor or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{624, -1}:  "expected primary expression factor or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{625, -1}:  "expected primary expression factor or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{626, -1}:  "expected primary expression factor or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{640, -1}:  "expected primary expression factor or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{253, -1}:  "expected primary expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{254, -1}:  "expected primary expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{255, -1}:  "expected primary expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{256, -1}:  "expected primary expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{257, -1}:  "expected primary expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{641, -1}:  "expected primary expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{642, -1}:  "expected primary expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{732, -1}:  "expected primary expression or one of ['!', '(', '+', '-', '~', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BINARY, BIT, BOOL, BOOLEAN, CASE, CAST, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONVERT, COUNT, CURDATE, CURRENT_DATE, CURRENT_TIMESTAMP, CURRENT_USER, DATABASE, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DEFAULT, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, EXISTS, EXTRACT, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IF, IFNULL, KEY_BLOCK_SIZE, LEFT, LENGTH, LOCAL, LOCATE, LOWER, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULL, NULLIF, OFFSET, PASSWORD, PLACEHOLDER, PREPARE, QUARTER, QUICK, RAND, REPEAT, ROLLBACK, ROW, SCHEMA, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYSDATE, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, UPPER, USER, USER_VAR, VALUE, VALUES, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, bit literal, false, floating-point literal, hexadecimal literal, identifier, integer literal, string literal, true]",
		yyXError{772, -1}:  "expected set variable value or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, SYS_VAR, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, USER_VAR, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1299, -1}: "expected statement or one of [$end, '(', ';', ALTER, BEGIN, COMMIT, CREATE, DEALLOCATE, DELETE, DESC, DESCRIBE, DO, DROP, EXECUTE, EXPLAIN, INSERT, PREPARE, ROLLBACK, SELECT, SET, SHOW, START, TRUNCATE, UPDATE, USE]",
		yyXError{1166, -1}: "expected string list or string literal",
		yyXError{1176, -1}: "expected string list or string literal",
		yyXError{648, -1}:  "expected string literal",
		yyXError{784, -1}:  "expected string literal",
		yyXError{1090, -1}: "expected string literal",
		yyXError{1094, -1}: "expected string literal",
		yyXError{1098, -1}: "expected string literal",
		yyXError{1170, -1}: "expected string literal",
		yyXError{1218, -1}: "expected string literal",
		yyXError{755, -1}:  "expected string literal or identifier or one of [=, ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier, string literal]",
		yyXError{342, -1}:  "expected string literal or identifier or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier, string literal]",
		yyXError{376, -1}:  "expected string literal or identifier or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier, string literal]",
		yyXError{411, -1}:  "expected string literal or identifier or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier, string literal]",
		yyXError{760, -1}:  "expected string literal or identifier or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier, string literal]",
		yyXError{796, -1}:  "expected string literal or identifier or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier, string literal]",
		yyXError{1104, -1}: "expected string literal or identifier or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier, string literal]",
		yyXError{1106, -1}: "expected string literal or identifier or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier, string literal]",
		yyXError{1174, -1}: "expected string literal or identifier or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier, string literal]",
		yyXError{1257, -1}: "expected string literal or identifier or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier, string literal]",
		yyXError{1259, -1}: "expected string literal or identifier or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier, string literal]",
		yyXError{165, -1}:  "expected table alias name optional or one of [$end, ')', ',', ';', '}', ABS, AFTER, ANY, AS, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, CROSS, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOR, FOUND_ROWS, FULL, GLOBAL, GROUP, GROUP_CONCAT, HAVING, HOUR, IDENTIFIED, IFNULL, INNER, JOIN, KEY_BLOCK_SIZE, LEFT, LENGTH, LIMIT, LOCAL, LOCATE, LOCK, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, ON, ORDER, PASSWORD, PREPARE, QUARTER, QUICK, RAND, RIGHT, ROLLBACK, ROW, SECOND, SESSION, SET, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, WHERE, YEAR, YEARWEEK, identifier]",
		yyXError{177, -1}:  "expected table alias name or one of [ABS, AFTER, ANY, AS, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNION, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{171, -1}:  "expected table alias name or one of [ABS, AFTER, ANY, AS, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1289, -1}: "expected table column definition or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{995, -1}:  "expected table constraint element or one of [FOREIGN, FULLTEXT, INDEX, KEY, PRIMARY, UNIQUE]",
		yyXError{991, -1}:  "expected table definition element list or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONSTRAINT, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOREIGN, FOUND_ROWS, FULL, FULLTEXT, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, INDEX, KEY, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNIQUE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{1060, -1}: "expected table definition element or one of [ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECK, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, CONSTRAINT, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOREIGN, FOUND_ROWS, FULL, FULLTEXT, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, INDEX, KEY, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, PRIMARY, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNIQUE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{178, -1}:  "expected table reference or one of ['(', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{189, -1}:  "expected table reference or one of ['(', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{691, -1}:  "expected table reference or one of ['(', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{157, -1}:  "expected table reference or table references or one of ['(', '{', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{956, -1}:  "expected table references or one of ['(', '{', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
		yyXError{961, -1}:  "expected table references or one of ['(', '{', ABS, AFTER, ANY, AUTO_INCREMENT, AVG, AVG_ROW_LENGTH, BEGIN, BIT, BOOL, BOOLEAN, CHARSET, CHECKSUM, COALESCE, COLLATION, COLUMNS, COMMENT, COMMIT, COMPRESSION, CONCAT, CONCAT_WS, CONNECTION, COUNT, DATE, DATETIME, DAY, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, DEALLOCATE, DO, END, ENGINE, ENGINES, ESCAPE, EXECUTE, FIRST, FOUND_ROWS, FULL, GLOBAL, GROUP_CONCAT, HOUR, IDENTIFIED, IFNULL, KEY_BLOCK_SIZE, LENGTH, LOCAL, LOCATE, MAX, MAX_ROWS, MICROSECOND, MIN, MINUTE, MIN_ROWS, MODE, MONTH, NAMES, NATIONAL, NOW, NULLIF, OFFSET, PASSWORD, PREPARE, QUARTER, QUICK, RAND, ROLLBACK, ROW, SECOND, SESSION, SIGNED, SOME, SQL_CALC_FOUND_ROWS, START, SUBSTRING, SUBSTRING_INDEX, SUM, TABLES, TEXT, TIME, TIMESTAMP, TRANSACTION, TRIM, TRUNCATE, UNKNOWN, USER, VALUE, WARNINGS, WEEK, WEEKDAY, WEEKOFYEAR, YEAR, YEARWEEK, identifier]",
	}

	yyParseTab = [1301][]uint16{
		// 0
		{4: 635, 635, 19: 760, 27: 748, 750, 763, 752, 761, 34: 764, 36: 749, 797, 101: 768, 121: 769, 129: 757, 196: 766, 199: 767, 217: 754, 261: 765, 790, 272: 798, 279: 753, 281: 759, 305: 751, 776, 311: 787, 321: 794, 323: 747, 325: 772, 327: 773, 333: 774, 779, 780, 781, 782, 340: 775, 762, 756, 783, 784, 785, 786, 771, 777, 755, 778, 758, 365: 788, 789, 368: 791, 770, 371: 792, 796, 376: 793, 380: 799, 382: 795, 448: 746, 466: 744, 745},
		{4: 743},
		{4: 742, 2042},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 2041, 938},
		{258: 899, 278: 561, 294: 2012},
		// 5
		{4: 714, 714},
		{59: 2011},
		{4: 703, 703},
		{60: 1715, 161: 1712, 175: 1673, 1674, 211: 667, 278: 1714, 339: 1713, 401: 1711},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1148, 938, 255: 1710},
		// 10
		{274, 274, 274, 274, 6: 274, 9: 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 115: 274, 258: 274, 312: 897, 357: 1693},
		{19: 257, 175: 1673, 1674, 211: 1676, 278: 1677, 339: 1675},
		{634, 634, 634, 634, 6: 634, 9: 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 101: 634, 199: 634, 272: 634, 279: 634, 281: 634},
		{633, 633, 633, 633, 6: 633, 9: 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 101: 633, 199: 633, 272: 633, 279: 633, 281: 633},
		{632, 632, 632, 632, 6: 632, 9: 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 101: 632, 199: 632, 272: 632, 279: 632, 281: 632},
		// 15
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 101: 768, 163: 901, 803, 802, 196: 766, 199: 767, 252: 1666, 261: 765, 1668, 272: 798, 279: 753, 281: 759, 306: 1669, 311: 1671, 321: 1670, 415: 1667},
		{278, 278, 278, 278, 6: 278, 9: 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 258: 278, 276: 278, 312: 1618, 411: 1620, 430: 1619, 451: 1617},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 1612, 803, 802},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 1606, 803, 802},
		{19: 1604},
		// 20
		{19: 258},
		{4: 256, 256},
		{4: 255, 255, 7: 255, 98: 255, 106: 1599, 377: 1600, 476: 1598},
		{106: 1170, 320: 1171, 378: 1169},
		{218, 218, 218, 218, 6: 218, 9: 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 99: 218, 218, 218, 218, 218, 218, 218, 135: 218, 146: 218, 159: 218, 166: 218, 168: 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 254: 1545, 271: 1546, 459: 1547, 462: 1544},
		// 25
		{101: 768, 196: 766, 199: 767, 261: 765, 1167},
		{804, 852, 805, 822, 184, 184, 1496, 8: 184, 1499, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 1501, 875, 880, 882, 845, 884, 860, 862, 887, 1500, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 1497, 878, 879, 881, 1498, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 1504, 803, 802, 167: 1120, 169: 1506, 177: 1505, 266: 1503, 384: 1507, 479: 1502},
		{20: 157, 24: 157, 43: 1467, 45: 1460, 1471, 1469, 56: 1470, 61: 1465, 167: 1463, 298: 160, 305: 1468, 404: 1461, 425: 1466, 445: 1464, 456: 1462},
		{4: 150, 150},
		{4: 149, 149},
		// 30
		{4: 148, 148},
		{4: 147, 147},
		{4: 146, 146},
		{4: 145, 145},
		{4: 144, 144},
		// 35
		{4: 143, 143},
		{4: 142, 142},
		{4: 141, 141},
		{4: 140, 140},
		{4: 139, 139},
		// 40
		{4: 138, 138},
		{4: 137, 137},
		{4: 136, 136},
		{4: 135, 135},
		{4: 134, 134},
		// 45
		{4: 133, 133},
		{4: 132, 132},
		{4: 131, 131},
		{4: 130, 130},
		{4: 129, 129},
		// 50
		{4: 128, 128},
		{4: 127, 127},
		{4: 126, 126},
		{4: 121, 121},
		{278: 1458},
		// 55
		{274, 274, 274, 274, 6: 274, 9: 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 101: 274, 258: 274, 263: 274, 312: 897, 357: 898},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 800, 803, 802, 287: 896},
		{4: 660, 660, 660, 104: 660, 117: 660, 660, 145: 660, 167: 660},
		{},
		{},
		// 60
		{},
		{},
		{},
		{},
		{},
		// 65
		{},
		{548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 167: 548, 195: 548, 199: 548, 210: 548, 548, 213: 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548},
		{},
		{},
		{},
		// 70
		{},
		{},
		{},
		{},
		{},
		// 75
		{},
		{},
		{},
		{},
		{},
		// 80
		{},
		{},
		{},
		{},
		{},
		// 85
		{529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 167: 529, 195: 529, 199: 529, 210: 529, 529, 213: 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529},
		{},
		{},
		{},
		{},
		// 90
		{},
		{},
		{},
		{},
		{},
		// 95
		{},
		{},
		{},
		{},
		{},
		// 100
		{514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 167: 514, 195: 514, 199: 514, 210: 514, 514, 213: 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514},
		{},
		{},
		{},
		{},
		// 105
		{},
		{},
		{},
		{},
		{},
		// 110
		{},
		{},
		{},
		{},
		{},
		// 115
		{},
		{},
		{},
		{},
		{},
		// 120
		{494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 167: 494, 195: 494, 199: 494, 210: 494, 494, 213: 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494},
		{},
		{},
		{},
		{490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 167: 490, 195: 490, 199: 490, 210: 490, 490, 213: 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490, 490},
		// 125
		{489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 167: 489, 195: 489, 199: 489, 210: 489, 489, 213: 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489},
		{},
		{},
		{},
		{},
		// 130
		{},
		{},
		{482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 167: 482, 195: 482, 199: 482, 210: 482, 482, 213: 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482, 482},
		{},
		{},
		// 135
		{},
		{},
		{},
		{},
		{},
		// 140
		{},
		{},
		{},
		{},
		{},
		// 145
		{},
		{},
		{},
		{466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 167: 466, 195: 466, 199: 466, 210: 466, 466, 213: 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466, 466},
		{},
		// 150
		{},
		{},
		{},
		{4: 14, 14},
		{273, 273, 273, 273, 6: 273, 9: 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 101: 273, 115: 273, 258: 273, 263: 273},
		// 155
		{561, 561, 561, 561, 6: 561, 9: 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 101: 561, 258: 899, 263: 561, 294: 900},
		{560, 560, 560, 560, 6: 560, 9: 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 101: 560, 115: 560, 263: 560, 276: 560, 278: 560},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 101: 909, 163: 901, 803, 802, 252: 908, 263: 905, 268: 907, 906, 904, 275: 902, 283: 903},
		{272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 98: 272, 100: 272, 272, 104: 272, 106: 272, 109: 272, 113: 272, 272, 272, 272, 272, 272, 120: 272, 272, 272, 272, 272, 272, 272, 272, 272, 130: 272, 144: 272, 159: 272, 167: 272, 195: 1456, 199: 272, 217: 272, 220: 272},
		{4: 247, 247, 7: 247, 247, 98: 247, 106: 247, 109: 247, 113: 247, 247, 116: 247, 118: 247, 120: 247, 247, 123: 247},
		// 160
		{8: 1429, 121: 1453},
		{8: 245, 100: 923, 121: 1437, 925, 124: 926, 927, 924, 286: 921, 288: 922},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 1434, 803, 802},
		{4: 243, 243, 7: 243, 243, 98: 243, 100: 243, 106: 243, 109: 243, 113: 243, 243, 116: 243, 118: 243, 120: 243, 243, 243, 243, 243, 243, 243, 243},
		{4: 242, 242, 7: 242, 242, 98: 242, 100: 242, 106: 242, 109: 242, 113: 242, 242, 116: 242, 118: 242, 120: 242, 242, 242, 242, 242, 242, 242, 242},
		// 165
		{804, 852, 805, 822, 238, 238, 811, 238, 238, 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 98: 238, 100: 238, 106: 238, 109: 238, 113: 238, 238, 116: 238, 118: 238, 120: 238, 238, 238, 238, 238, 238, 238, 238, 917, 163: 916, 803, 802, 317: 1433, 469: 1432},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 101: 912, 163: 901, 803, 802, 196: 766, 199: 767, 252: 908, 261: 765, 913, 905, 268: 907, 906, 911, 275: 902, 283: 910},
		{7: 1430, 1429},
		{4: 245, 245, 7: 245, 245, 98: 245, 100: 923, 106: 245, 109: 245, 113: 245, 245, 116: 245, 118: 245, 120: 245, 245, 925, 245, 926, 927, 924, 286: 921, 288: 922},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 101: 912, 163: 901, 803, 802, 196: 766, 199: 767, 252: 908, 261: 765, 919, 905, 268: 907, 906, 911, 275: 902, 283: 910},
		// 170
		{7: 914},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 128: 917, 163: 916, 803, 802, 317: 915},
		{4: 240, 240, 7: 240, 240, 98: 240, 100: 240, 106: 240, 109: 240, 113: 240, 240, 116: 240, 118: 240, 120: 240, 240, 240, 240, 240, 240, 240, 240},
		{4: 236, 236, 7: 236, 236, 98: 236, 100: 236, 106: 236, 109: 236, 113: 236, 236, 116: 236, 118: 236, 120: 236, 236, 236, 236, 236, 236, 236, 236},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 918, 803, 802},
		// 175
		{4: 235, 235, 7: 235, 235, 98: 235, 100: 235, 106: 235, 109: 235, 113: 235, 235, 116: 235, 118: 235, 120: 235, 235, 235, 235, 235, 235, 235, 235},
		{7: 920},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 106: 209, 128: 917, 163: 916, 803, 802, 317: 915},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 101: 909, 163: 901, 803, 802, 252: 908, 268: 907, 906, 1426},
		{122: 229, 313: 931, 447: 930},
		// 180
		{122: 231, 313: 231},
		{122: 230, 313: 230},
		{227, 227, 227, 227, 6: 227, 9: 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 101: 227},
		{122: 929},
		{122: 928},
		// 185
		{225, 225, 225, 225, 6: 225, 9: 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 101: 225},
		{226, 226, 226, 226, 6: 226, 9: 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 101: 226},
		{122: 932},
		{122: 228},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 101: 909, 163: 901, 803, 802, 252: 908, 268: 907, 906, 933},
		// 190
		{98: 934, 100: 923, 122: 925, 124: 926, 927, 924, 286: 921, 288: 922},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 936, 938},
		{},
		{4: 232, 232, 7: 232, 232, 98: 232, 100: 232, 106: 232, 1036, 1035, 232, 1034, 1033, 1031, 232, 232, 116: 232, 118: 232, 120: 232, 232, 232, 232, 232, 232, 232, 232, 248: 1032, 1030},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1421, 938},
		// 195
		{619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 98: 619, 619, 619, 106: 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 118: 619, 1408, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 136: 1405, 1403, 1402, 1400, 1404, 1406, 1407, 1409, 399: 1401},
		{606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 98: 606, 606, 606, 106: 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 118: 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 136: 606, 606, 606, 606, 606, 606, 606, 606},
		{589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 1357, 589, 589, 589, 102: 1362, 1363, 106: 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 118: 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 1364, 589, 589, 589, 589, 589, 589, 589, 589, 584, 584, 147: 584, 584, 584, 1366, 1359, 1365, 1369, 1358, 1367, 1360, 1368, 1361, 358: 1356},
		{},
		{},
		// 200
		{},
		{},
		{},
		{},
		{},
		// 205
		{},
		{},
		{},
		{},
		{},
		// 210
		{},
		{},
		{},
		{},
		{},
		// 215
		{},
		{},
		{},
		{},
		{},
		// 220
		{},
		{},
		{},
		{},
		{},
		// 225
		{472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 1260, 472, 472, 106: 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 147: 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 472, 195: 472},
		{},
		{},
		{},
		{},
		// 230
		{},
		{},
		{},
		{},
		{},
		// 235
		{441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 102: 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 147: 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 441, 160: 441, 441, 441},
		{},
		{},
		{},
		{},
		// 240
		{},
		{},
		{},
		{},
		{},
		// 245
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 1166, 1025, 986, 767, 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1165, 938, 261: 765, 1167},
		{},
		{},
		{},
		{101: 768, 196: 1161},
		// 250
		{414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 102: 414, 414, 106: 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 147: 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414, 414},
		{},
		{},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1160, 1024, 990},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1159, 1024, 990},
		// 255
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1158, 1024, 990},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1157, 1024, 990},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1156, 1024, 990},
		{},
		{},
		// 260
		{},
		{},
		{402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 102: 402, 402, 106: 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 147: 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402, 402},
		{101: 401},
		{101: 400},
		// 265
		{101: 399},
		{101: 398},
		{101: 397},
		{},
		{},
		// 270
		{101: 1147},
		{101: 1142},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 131: 306, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1042, 938, 293: 1130},
		{101: 1083},
		{101: 1080},
		// 275
		{101: 1078},
		{},
		{101: 1048},
		{101: 1045},
		{101: 1041},
		// 280
		{101: 1028},
		{},
		{},
		{},
		{},
		// 285
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1029, 938},
		{7: 1037, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1040, 938},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1039, 938},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1038, 938},
		// 290
		{618, 618, 618, 618, 6: 618, 9: 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 99: 618, 618, 618, 618, 618, 618, 618, 146: 618, 159: 618, 166: 618, 168: 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618},
		{617, 617, 617, 617, 6: 617, 9: 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 99: 617, 617, 617, 617, 617, 617, 617, 146: 617, 159: 617, 166: 617, 168: 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617},
		{616, 616, 616, 616, 6: 616, 9: 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 99: 616, 616, 616, 616, 616, 616, 616, 146: 616, 159: 616, 166: 616, 168: 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616},
		{615, 615, 615, 615, 6: 615, 9: 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 99: 615, 615, 615, 615, 615, 615, 615, 146: 615, 159: 615, 166: 615, 168: 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615},
		{},
		// 295
		{},
		{625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 98: 625, 625, 625, 106: 625, 1036, 1035, 625, 625, 625, 625, 625, 625, 625, 625, 118: 625, 120: 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 248: 1032, 1030},
		{626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 98: 626, 626, 626, 106: 626, 1036, 1035, 626, 626, 626, 1031, 626, 626, 626, 626, 118: 626, 120: 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 248: 1032, 1030},
		{804, 852, 805, 822, 6: 811, 306, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1042, 938, 293: 1043},
		{7: 305, 107: 1036, 1035, 110: 1034, 1033, 1031, 131: 305, 248: 1032, 1030},
		// 300
		{7: 1044},
		{},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1046, 938},
		{7: 1047, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{},
		// 305
		{39: 1058, 44: 1054, 48: 1053, 1050, 1052, 52: 1056, 54: 1057, 1051, 62: 1055, 406: 1068, 1065, 1067, 1066, 431: 1062, 1064, 1063, 440: 1060, 1061, 457: 1059, 472: 1049, 481: 1069},
		{115: 1070},
		{115: 326},
		{115: 325},
		{115: 324},
		// 310
		{115: 323},
		{115: 322},
		{115: 321},
		{115: 320},
		{115: 319},
		// 315
		{115: 318},
		{115: 317},
		{115: 316},
		{115: 315},
		{115: 314},
		// 320
		{115: 313},
		{115: 312},
		{115: 311},
		{115: 310},
		{115: 309},
		// 325
		{115: 308},
		{115: 307},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1071, 938},
		{7: 1072, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{},
		// 330
		{},
		{804, 852, 805, 822, 6: 811, 1076, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1075, 938},
		{7: 1077, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{},
		{},
		// 335
		{7: 1079},
		{},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 935, 803, 802, 194: 1081},
		{7: 1082},
		{380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 102: 380, 380, 106: 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 147: 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380, 380},
		// 340
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1084, 938},
		{8: 1086, 107: 1036, 1035, 110: 1034, 1033, 1031, 130: 1085, 248: 1032, 1030},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 99: 1124, 163: 1125, 803, 802, 265: 1128},
		{21: 1091, 1090, 25: 1093, 35: 1094, 146: 1088, 213: 1089, 216: 1092, 250: 1095, 328: 1087},
		{7: 1127},
		// 345
		{7: 38, 101: 1100, 253: 1101, 256: 1126},
		{6: 38, 38, 101: 1100, 146: 38, 167: 38, 253: 1101, 256: 1115},
		{7: 297},
		{7: 38, 101: 1100, 253: 1101, 256: 1114},
		{7: 32, 101: 1107, 253: 1108, 309: 1106, 314: 1109},
		// 350
		{7: 38, 101: 1100, 253: 1101, 256: 1099},
		{7: 72, 218: 1097, 361: 1098},
		{7: 72, 218: 1097, 361: 1096},
		{7: 292},
		{7: 71},
		// 355
		{7: 293},
		{7: 294},
		{166: 1103, 259: 1104, 1102},
		{37, 37, 37, 37, 37, 37, 37, 37, 37, 97: 37, 37, 104: 37, 37, 117: 37, 129: 37, 132: 37, 146: 37, 160: 37, 37, 37, 167: 37, 250: 37, 37},
		{628, 628, 4: 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 23: 628, 98: 628, 104: 628, 106: 628, 113: 628, 628, 117: 628, 167: 628},
		// 360
		{627, 627, 4: 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 23: 627, 98: 627, 104: 627, 106: 627, 113: 627, 627, 117: 627, 167: 627},
		{7: 1105},
		{39, 39, 39, 39, 39, 39, 39, 39, 39, 97: 39, 39, 104: 39, 39, 117: 39, 129: 39, 132: 39, 146: 39, 160: 39, 39, 39, 167: 39, 250: 39, 39},
		{7: 295},
		{166: 1103, 259: 1110, 1102},
		// 365
		{31, 31, 31, 31, 31, 31, 7: 31, 31, 97: 31, 31, 104: 31, 31, 160: 31, 31, 31, 250: 31, 31},
		{30, 30, 30, 30, 30, 30, 7: 30, 30, 97: 30, 30, 104: 30, 30, 160: 30, 30, 30, 250: 30, 30},
		{7: 1105, 1111},
		{166: 1103, 259: 1112, 1102},
		{7: 1113},
		// 370
		{29, 29, 29, 29, 29, 29, 7: 29, 29, 97: 29, 29, 104: 29, 29, 160: 29, 29, 29, 250: 29, 29},
		{7: 296},
		{6: 28, 28, 146: 1117, 167: 28, 289: 1116},
		{6: 1121, 26, 167: 1120, 266: 1119, 277: 1118},
		{27, 27, 27, 27, 27, 27, 27, 27, 27, 97: 27, 27, 104: 27, 27, 117: 27, 160: 27, 27, 27, 167: 27},
		// 375
		{7: 298},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 99: 1124, 163: 1125, 803, 802, 265: 1123},
		{121: 1122},
		{23, 23, 23, 23, 6: 23, 9: 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 99: 23, 119: 23},
		{24, 24, 24, 24, 6: 24, 9: 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 99: 24, 119: 24},
		// 380
		{25, 25, 25, 25, 25, 25, 7: 25, 25, 97: 25, 25, 104: 25, 25, 117: 25, 160: 25, 25, 25},
		{18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 102: 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 147: 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 160: 18, 18, 18, 167: 18},
		{17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 102: 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 147: 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 160: 17, 17, 17, 167: 17},
		{7: 299},
		{},
		// 385
		{7: 1129},
		{},
		{131: 1133, 385: 1132, 480: 1131},
		{18: 301, 131: 1133, 133: 1139, 385: 1138, 414: 1137},
		{18: 304, 131: 304, 133: 304},
		// 390
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1134, 938},
		{107: 1036, 1035, 110: 1034, 1033, 1031, 134: 1135, 248: 1032, 1030},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1136, 938},
		{18: 302, 107: 1036, 1035, 110: 1034, 1033, 1031, 131: 302, 133: 302, 248: 1032, 1030},
		{18: 1141},
		// 395
		{18: 303, 131: 303, 133: 303},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1140, 938},
		{18: 300, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1143, 938},
		// 400
		{107: 1036, 1035, 110: 1034, 1033, 1031, 128: 1144, 248: 1032, 1030},
		{21: 1091, 1090, 25: 1093, 35: 1094, 146: 1088, 213: 1089, 216: 1092, 250: 1095, 328: 1145},
		{7: 1146},
		{},
		{804, 852, 805, 822, 6: 811, 611, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1148, 938, 255: 1149, 416: 1150},
		// 405
		{4: 613, 613, 7: 613, 613, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{7: 610, 1152},
		{7: 1151},
		{},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1153, 938},
		// 410
		{4: 612, 612, 7: 612, 612, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 99: 1124, 163: 1125, 803, 802, 265: 1155},
		{},
		{},
		{},
		// 415
		{},
		{},
		{},
		{},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 935, 803, 802, 194: 1163},
		// 420
		{7: 1164},
		{},
		{7: 1196, 1197, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{7: 412, 412, 97: 412, 102: 412, 412, 106: 1170, 412, 412, 110: 412, 412, 412, 117: 412, 119: 412, 135: 412, 412, 412, 412, 412, 412, 412, 412, 412, 412, 412, 147: 412, 412, 412, 412, 412, 412, 412, 412, 412, 412, 412, 412, 320: 1171, 378: 1169},
		{7: 1168},
		// 425
		{},
		{4: 416, 416, 7: 416, 98: 416, 106: 1170, 109: 416, 116: 1176, 295: 1177, 1178, 320: 1179},
		{101: 199, 254: 1173, 271: 1174, 379: 1172},
		{4: 201, 201, 7: 201, 98: 201, 106: 201, 109: 201, 116: 201},
		{101: 768, 196: 1175},
		// 430
		{101: 198, 199: 198},
		{101: 197, 199: 197},
		{4: 204, 204, 7: 204, 98: 204, 106: 204, 109: 204, 116: 204},
		{300: 1187},
		{4: 415, 415, 7: 415, 98: 415, 106: 415, 109: 415, 113: 415, 415},
		// 435
		{4: 222, 222, 7: 222, 98: 222, 109: 1181, 315: 1180},
		{4: 200, 200, 7: 200, 98: 200, 106: 200, 109: 200, 116: 200},
		{4: 253, 253, 7: 253, 98: 253},
		{166: 1103, 259: 1182, 1102},
		{4: 221, 221, 7: 221, 1183, 23: 1184, 98: 221, 106: 221, 113: 221, 221},
		// 440
		{166: 1103, 259: 1186, 1102},
		{166: 1103, 259: 1185, 1102},
		{4: 219, 219, 7: 219, 98: 219, 106: 219, 113: 219, 219},
		{4: 220, 220, 7: 220, 98: 220, 106: 220, 113: 220, 220},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1188, 938, 363: 1190, 446: 1189},
		// 445
		{4: 419, 419, 7: 419, 419, 98: 419, 106: 419, 1036, 1035, 419, 1034, 1033, 1031, 419, 419, 129: 1195, 132: 1194, 248: 1032, 1030, 362: 1193},
		{4: 423, 423, 7: 423, 1191, 98: 423, 106: 423, 109: 423, 113: 423, 423},
		{4: 422, 422, 7: 422, 422, 98: 422, 106: 422, 109: 422, 113: 422, 422},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1188, 938, 363: 1192},
		{4: 421, 421, 7: 421, 421, 98: 421, 106: 421, 109: 421, 113: 421, 421},
		// 450
		{4: 420, 420, 7: 420, 420, 98: 420, 106: 420, 109: 420, 113: 420, 420},
		{4: 418, 418, 7: 418, 418, 98: 418, 106: 418, 109: 418, 113: 418, 418},
		{4: 417, 417, 7: 417, 417, 98: 417, 106: 417, 109: 417, 113: 417, 417},
		{},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1148, 938, 255: 1198},
		// 455
		{7: 1199, 1152},
		{},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1148, 938, 255: 1201},
		{7: 1202, 1152},
		{},
		// 460
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1204, 938},
		{7: 1205, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1207, 938},
		{7: 1208, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		// 465
		{},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1210, 938, 392: 1212, 438: 1213, 473: 1214, 1211},
		{7: 1222, 107: 1036, 1035, 110: 1034, 1033, 1031, 115: 1223, 248: 1032, 1030},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 115: 1216, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1215, 938},
		{338, 338, 338, 338, 6: 338, 9: 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 99: 338, 338, 338, 338, 338, 338, 338, 115: 338, 146: 338, 159: 338, 166: 338, 168: 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338},
		// 470
		{337, 337, 337, 337, 6: 337, 9: 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 99: 337, 337, 337, 337, 337, 337, 337, 115: 337, 146: 337, 159: 337, 166: 337, 168: 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337},
		{336, 336, 336, 336, 6: 336, 9: 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 99: 336, 336, 336, 336, 336, 336, 336, 115: 336, 146: 336, 159: 336, 166: 336, 168: 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336, 336},
		{107: 1036, 1035, 110: 1034, 1033, 1031, 115: 1219, 248: 1032, 1030},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1217, 938},
		{7: 1218, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		// 475
		{},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1220, 938},
		{7: 1221, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{},
		{},
		// 480
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1224, 938},
		{7: 1225, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{},
		{391, 391, 391, 391, 6: 391, 9: 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 99: 391, 391, 391, 391, 391, 391, 391, 146: 391, 159: 391, 166: 391, 168: 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 254: 1227, 271: 1228, 280: 1229},
		{390, 390, 390, 390, 6: 390, 9: 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 99: 390, 390, 390, 390, 390, 390, 390, 135: 390, 146: 390, 159: 390, 166: 390, 168: 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390, 390},
		// 485
		{389, 389, 389, 389, 6: 389, 9: 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 99: 389, 389, 389, 389, 389, 389, 389, 135: 389, 146: 389, 159: 389, 166: 389, 168: 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 389, 254: 1232},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1230, 938},
		{7: 1231, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{},
		{388, 388, 388, 388, 6: 388, 9: 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 99: 388, 388, 388, 388, 388, 388, 388, 135: 388, 146: 388, 159: 388, 166: 388, 168: 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388, 388},
		// 490
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1234, 938},
		{8: 1235, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1236, 938},
		{8: 1237, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1238, 938},
		// 495
		{7: 1239, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1241, 938},
		{8: 1242, 107: 1036, 1035, 110: 1034, 1033, 1031, 115: 1243, 248: 1032, 1030},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1249, 938},
		// 500
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1244, 938},
		{7: 1245, 107: 1036, 1035, 110: 1034, 1033, 1031, 1246, 248: 1032, 1030},
		{},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1247, 938},
		{7: 1248, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		// 505
		{},
		{7: 1250, 1251, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 102: 352, 352, 106: 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 147: 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1252, 938},
		{7: 1253, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		// 510
		{},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1255, 938},
		{7: 1256, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{},
		{804, 852, 805, 822, 6: 811, 306, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1042, 938, 293: 1258},
		// 515
		{7: 1259},
		{},
		{804, 852, 805, 822, 6: 811, 306, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1042, 938, 293: 1261},
		{7: 1262},
		{},
		// 520
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1264, 938},
		{7: 1265, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1148, 938, 255: 1267},
		{7: 1268, 1152},
		// 525
		{},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1270, 938},
		{7: 1271, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{},
		{391, 391, 391, 391, 6: 391, 9: 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 99: 391, 391, 391, 391, 391, 391, 391, 146: 391, 159: 391, 166: 391, 168: 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 254: 1227, 271: 1228, 280: 1273},
		// 530
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1274, 938},
		{7: 1275, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1277, 938},
		{7: 1278, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		// 535
		{359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 102: 359, 359, 106: 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 147: 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359, 359},
		{391, 391, 391, 391, 6: 391, 9: 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 99: 391, 391, 391, 391, 391, 391, 391, 146: 391, 159: 391, 166: 391, 168: 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 254: 1227, 271: 1228, 280: 1280},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1281, 938},
		{7: 1282, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{},
		// 540
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1284, 938},
		{8: 1285, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1286, 938},
		{7: 1287, 1288, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 102: 362, 362, 106: 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 147: 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362, 362},
		// 545
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1289, 938},
		{7: 1290, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 102: 361, 361, 106: 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 147: 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1292, 938},
		{7: 1293, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		// 550
		{},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1148, 938, 255: 1295},
		{7: 1296, 1152},
		{},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1298, 938},
		// 555
		{7: 1299, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{},
		{391, 391, 391, 391, 6: 391, 9: 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 99: 391, 391, 391, 391, 391, 391, 391, 146: 391, 159: 391, 166: 391, 168: 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 254: 1227, 271: 1228, 280: 1301},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1148, 938, 255: 1302},
		{7: 1303, 1152},
		// 560
		{},
		{7: 1305},
		{},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1307, 938},
		{7: 1308, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		// 565
		{},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1310, 938},
		{7: 1311, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1313, 938},
		// 570
		{7: 1314, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1316, 938},
		{7: 1317, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 102: 371, 371, 106: 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 147: 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371, 371},
		// 575
		{391, 391, 391, 391, 6: 391, 9: 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 99: 391, 391, 391, 391, 391, 391, 391, 135: 391, 146: 391, 159: 391, 166: 391, 168: 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 254: 1227, 271: 1228, 280: 1319},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 135: 1321, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1148, 938, 255: 1320},
		{7: 1323, 1152},
		{7: 1322},
		{},
		// 580
		{},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1148, 938, 255: 1325},
		{7: 1326, 1152},
		{},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1148, 938, 255: 1328},
		// 585
		{7: 1329, 1152},
		{},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1148, 938, 255: 1331},
		{7: 1332, 1152},
		{},
		// 590
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1334, 938},
		{7: 1335, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1337, 938},
		{8: 1338, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		// 595
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1148, 938, 255: 1339},
		{7: 1340, 1152},
		{426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 102: 426, 426, 106: 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 147: 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426, 426},
		{7: 1342},
		{},
		// 600
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1148, 938, 255: 1344},
		{7: 1345, 1152},
		{},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1347, 938},
		{7: 1348, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		// 605
		{},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1350, 938},
		{7: 1351, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{},
		{391, 391, 391, 391, 6: 391, 9: 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 99: 391, 391, 391, 391, 391, 391, 391, 146: 391, 159: 391, 166: 391, 168: 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 391, 254: 1227, 271: 1228, 280: 1353},
		// 610
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1148, 938, 255: 1354},
		{7: 1355, 1152},
		{},
		{144: 1382, 1384, 147: 1383, 1386, 1387, 455: 1385},
		{26: 583, 105: 583, 144: 583, 583, 147: 583, 583, 583, 170: 583, 583},
		// 615
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 1381},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 1380},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 1379},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 1378},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 1377},
		// 620
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 1376},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 1375},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 1374},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 1373},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 1372},
		// 625
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 1371},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 1370},
		{280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 102: 280, 280, 106: 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 118: 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 147: 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280},
		{},
		{},
		// 630
		{},
		{},
		{},
		{},
		{},
		// 635
		{},
		{},
		{},
		{},
		{101: 1396, 196: 1397},
		// 640
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 1393},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1389, 1024, 990},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1388, 1024, 990},
		{588, 588, 588, 588, 6: 588, 9: 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 99: 588, 588, 588, 588, 588, 588, 588, 146: 588, 159: 588, 166: 588, 168: 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588},
		{587, 587, 587, 587, 6: 587, 9: 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 99: 587, 587, 587, 587, 587, 587, 587, 146: 587, 159: 587, 166: 587, 168: 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587},
		// 645
		{590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 98: 590, 590, 590, 106: 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 1154, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 136: 590, 590, 590, 590, 590, 590, 590, 590},
		{586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 1391, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 98: 586, 586, 586, 106: 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 1154, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 136: 586, 586, 586, 586, 586, 586, 586, 586, 439: 1390},
		{591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 98: 591, 591, 591, 106: 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 118: 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 136: 591, 591, 591, 591, 591, 591, 591, 591},
		{99: 1392},
		{585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 98: 585, 585, 585, 106: 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 118: 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 136: 585, 585, 585, 585, 585, 585, 585, 585},
		// 650
		{102: 1362, 1363, 107: 1394, 135: 1364, 150: 1366, 1359, 1365, 1369, 1358, 1367, 1360, 1368, 1361},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 1395},
		{592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 98: 592, 592, 592, 106: 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 118: 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 136: 592, 592, 592, 592, 592, 592, 592, 592},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 1166, 1025, 986, 767, 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1148, 938, 255: 1398, 261: 765, 1167},
		{593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 98: 593, 593, 593, 106: 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 118: 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 136: 593, 593, 593, 593, 593, 593, 593, 593},
		// 655
		{7: 1399, 1152},
		{594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 98: 594, 594, 594, 106: 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 118: 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 136: 594, 594, 594, 594, 594, 594, 594, 594},
		{26: 584, 97: 1357, 105: 584, 170: 584, 584, 358: 1416},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 1412, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 1413, 971, 972, 973, 974, 975, 976, 977, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 1410, 254: 1414, 387: 1411},
		{605, 605, 605, 605, 6: 605, 9: 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 99: 605, 605, 605, 605, 605, 605, 605, 146: 605, 159: 605, 166: 605, 168: 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 254: 605},
		// 660
		{604, 604, 604, 604, 6: 604, 9: 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 99: 604, 604, 604, 604, 604, 604, 604, 146: 604, 159: 604, 166: 604, 168: 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 254: 604},
		{603, 603, 603, 603, 6: 603, 9: 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 99: 603, 603, 603, 603, 603, 603, 603, 146: 603, 159: 603, 166: 603, 168: 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 254: 603},
		{602, 602, 602, 602, 6: 602, 9: 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 99: 602, 602, 602, 602, 602, 602, 602, 146: 602, 159: 602, 166: 602, 168: 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 254: 602},
		{601, 601, 601, 601, 6: 601, 9: 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 99: 601, 601, 601, 601, 601, 601, 601, 146: 601, 159: 601, 166: 601, 168: 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 254: 601},
		{600, 600, 600, 600, 6: 600, 9: 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 99: 600, 600, 600, 600, 600, 600, 600, 146: 600, 159: 600, 166: 600, 168: 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 254: 600},
		// 665
		{599, 599, 599, 599, 6: 599, 9: 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 99: 599, 599, 599, 599, 599, 599, 599, 146: 599, 159: 599, 166: 599, 168: 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 254: 599},
		{598, 598, 598, 598, 6: 598, 9: 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 99: 598, 598, 598, 598, 598, 598, 598, 146: 598, 159: 598, 166: 598, 168: 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 254: 598},
		{608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 98: 608, 608, 608, 106: 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 118: 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 136: 608, 608, 608, 608, 608, 608, 608, 608},
		{101: 768, 196: 1415},
		{},
		// 670
		{},
		{101: 595},
		{607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 98: 607, 607, 607, 106: 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 118: 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 136: 607, 607, 607, 607, 607, 607, 607, 607},
		{26: 1419, 105: 1420, 170: 1418, 1417},
		{},
		// 675
		{},
		{},
		{609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 98: 609, 609, 609, 106: 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 118: 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 136: 609, 609, 609, 609, 609, 609, 609, 609},
		{},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 1423, 803, 802},
		// 680
		{},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 1425, 803, 802},
		{709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 106: 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 213: 709, 216: 709, 218: 709, 709, 221: 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709, 709},
		{4: 234, 234, 7: 234, 234, 98: 1427, 100: 234, 106: 234, 109: 234, 113: 234, 234, 116: 234, 118: 234, 120: 234, 234, 234, 234, 234, 234, 234, 234, 286: 921, 288: 922},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1428, 938},
		// 685
		{4: 233, 233, 7: 233, 233, 98: 233, 100: 233, 106: 233, 1036, 1035, 233, 1034, 1033, 1031, 233, 233, 116: 233, 118: 233, 120: 233, 233, 233, 233, 233, 233, 233, 233, 248: 1032, 1030},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 101: 909, 163: 901, 803, 802, 252: 908, 263: 905, 268: 907, 906, 911, 275: 1431},
		{4: 239, 239, 7: 239, 239, 98: 239, 100: 239, 106: 239, 109: 239, 113: 239, 239, 116: 239, 118: 239, 120: 239, 239, 239, 239, 239, 239, 239, 239},
		{4: 246, 246, 7: 246, 246, 98: 246, 106: 246, 109: 246, 113: 246, 246, 116: 246, 118: 246, 120: 246, 246, 123: 246},
		{4: 241, 241, 7: 241, 241, 98: 241, 100: 241, 106: 241, 109: 241, 113: 241, 241, 116: 241, 118: 241, 120: 241, 241, 241, 241, 241, 241, 241, 241},
		// 690
		{4: 237, 237, 7: 237, 237, 98: 237, 100: 237, 106: 237, 109: 237, 113: 237, 237, 116: 237, 118: 237, 120: 237, 237, 237, 237, 237, 237, 237, 237},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 101: 909, 163: 901, 803, 802, 252: 908, 268: 907, 906, 1435},
		{100: 923, 122: 925, 124: 926, 927, 924, 1436, 286: 921, 288: 922},
		{4: 244, 244, 7: 244, 244, 98: 244, 106: 244, 109: 244, 113: 244, 244, 116: 244, 118: 244, 120: 244, 244, 123: 244},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 935, 803, 802, 194: 1438, 291: 1439, 299: 1440},
		// 695
		{119: 1451},
		{4: 718, 718, 8: 718, 109: 718, 116: 718, 118: 718},
		{4: 12, 12, 8: 1441, 109: 12, 116: 12, 118: 1443, 284: 1444, 1442},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 935, 803, 802, 194: 1438, 291: 1450},
		{4: 416, 416, 109: 416, 116: 1176, 295: 1177, 1446},
		// 700
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1445, 938},
		{4: 11, 11, 7: 11, 98: 11, 106: 11, 109: 11, 113: 11, 11, 116: 11, 120: 11, 123: 11},
		{4: 13, 13, 7: 13, 98: 13, 106: 13, 1036, 1035, 13, 1034, 1033, 1031, 13, 13, 116: 13, 120: 13, 123: 13, 248: 1032, 1030},
		{4: 224, 224, 109: 1447, 354: 1448},
		{166: 1103, 259: 1449, 1102},
		// 705
		{4: 16, 16},
		{4: 223, 223},
		{4: 717, 717, 8: 717, 109: 717, 116: 717, 118: 717},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1452, 938},
		{4: 719, 719, 8: 719, 107: 1036, 1035, 719, 1034, 1033, 1031, 116: 719, 118: 719, 248: 1032, 1030},
		// 710
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 935, 803, 802, 194: 1438, 291: 1439, 299: 1454},
		{4: 12, 12, 8: 1441, 118: 1443, 284: 1444, 1455},
		{4: 15, 15},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 1457, 803, 802},
		{271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 98: 271, 100: 271, 271, 104: 271, 106: 271, 109: 271, 113: 271, 271, 271, 271, 271, 271, 120: 271, 271, 271, 271, 271, 271, 271, 271, 271, 130: 271, 144: 271, 159: 271, 167: 271, 199: 271, 217: 271, 220: 271},
		// 715
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 901, 803, 802, 252: 1459},
		{4: 94, 94},
		{4: 173, 173},
		{4: 172, 172},
		{4: 171, 171},
		// 720
		{121: 1495},
		{20: 1482, 24: 1481},
		{4: 167, 167},
		{298: 1479},
		{4: 163, 163, 118: 1476, 145: 1475, 316: 1474},
		// 725
		{278: 1472},
		{298: 159},
		{298: 158},
		{20: 156, 24: 156},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 901, 803, 802, 252: 1473},
		// 730
		{4: 164, 164},
		{4: 165, 165},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1478, 1024, 990},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1477, 938},
		{4: 161, 161, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		// 735
		{4: 162, 162, 117: 1154},
		{4: 163, 163, 118: 1476, 145: 1475, 316: 1480},
		{4: 166, 166},
		{4: 155, 155, 115: 1489, 118: 155, 144: 1490, 155, 370: 1493},
		{115: 1484, 144: 1485, 464: 1483},
		// 740
		{4: 155, 155, 115: 1489, 144: 1490, 370: 1488},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 901, 803, 802, 252: 1487},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 901, 803, 802, 252: 1486},
		{4: 151, 151, 115: 151, 144: 151},
		{4: 152, 152, 115: 152, 144: 152},
		// 745
		{4: 168, 168},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 800, 803, 802, 287: 1492},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 800, 803, 802, 287: 1491},
		{4: 153, 153, 118: 153, 145: 153},
		{4: 154, 154, 118: 154, 145: 154},
		// 750
		{4: 163, 163, 118: 1476, 145: 1475, 316: 1494},
		{4: 169, 169},
		{4: 170, 170},
		{23, 23, 23, 23, 6: 23, 9: 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 99: 23, 119: 546},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 119: 533, 163: 1541, 803, 802},
		// 755
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 99: 1124, 119: 532, 163: 1125, 803, 802, 265: 1538},
		{113: 1524, 119: 1523},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 119: 526, 163: 1520, 803, 802},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 119: 523, 163: 1517, 803, 802},
		{4: 196, 196, 8: 1515},
		// 760
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 99: 1124, 163: 1125, 803, 802, 265: 1514},
		{119: 1512},
		{119: 1510},
		{119: 1508},
		{4: 183, 183, 8: 183},
		// 765
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1509, 938},
		{4: 185, 185, 8: 185, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1511, 938},
		{4: 186, 186, 8: 186, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1513, 938},
		// 770
		{4: 190, 190, 8: 190, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{4: 193, 193},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 1501, 875, 880, 882, 845, 884, 860, 862, 887, 1500, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 1497, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 1504, 803, 802, 169: 1506, 177: 1505, 384: 1516},
		{4: 182, 182, 8: 182},
		{119: 1518},
		// 775
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1519, 938},
		{4: 189, 189, 8: 189, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{119: 1521},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1522, 938},
		{4: 188, 188, 8: 188, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		// 780
		{9: 1532, 99: 1531, 364: 1537},
		{99: 1526, 322: 1525},
		{119: 1529},
		{388: 1527},
		{99: 1528},
		// 785
		{4: 177, 177, 8: 177, 32: 177, 119: 177},
		{9: 1532, 99: 1531, 364: 1530},
		{4: 191, 191},
		{4: 176, 176},
		{101: 1533},
		// 790
		{99: 1535, 326: 1534},
		{7: 1536},
		{4: 174, 174, 7: 174, 174},
		{4: 175, 175},
		{4: 192, 192},
		// 795
		{4: 195, 195, 117: 1539},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 99: 1124, 163: 1125, 803, 802, 265: 1540},
		{4: 194, 194},
		{119: 1542},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1543, 938},
		// 800
		{4: 187, 187, 8: 187, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 135: 1552, 146: 1000, 159: 1017, 163: 1550, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1551, 938, 352: 1553, 419: 1554, 460: 1555},
		{217, 217, 217, 217, 6: 217, 9: 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 99: 217, 217, 217, 217, 217, 217, 217, 135: 217, 146: 217, 159: 217, 166: 217, 168: 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217},
		{216, 216, 216, 216, 6: 216, 9: 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 99: 216, 216, 216, 216, 216, 216, 216, 135: 216, 146: 216, 159: 216, 166: 216, 168: 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216},
		{214, 214, 214, 214, 6: 214, 9: 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 1549, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 99: 214, 214, 214, 214, 214, 214, 214, 135: 214, 146: 214, 159: 214, 166: 214, 168: 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 458: 1548},
		// 805
		{215, 215, 215, 215, 6: 215, 9: 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 99: 215, 215, 215, 215, 215, 215, 215, 135: 215, 146: 215, 159: 215, 166: 215, 168: 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215},
		{213, 213, 213, 213, 6: 213, 9: 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 99: 213, 213, 213, 213, 213, 213, 213, 135: 213, 146: 213, 159: 213, 166: 213, 168: 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213},
		{},
		{804, 852, 805, 822, 578, 578, 811, 578, 578, 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 98: 578, 1590, 106: 578, 1036, 1035, 578, 1034, 1033, 1031, 578, 578, 578, 128: 1589, 163: 1588, 803, 802, 248: 1032, 1030, 417: 1587, 1586},
		{4: 582, 582, 7: 582, 582, 98: 582, 106: 582, 109: 582, 113: 582, 582, 582},
		// 810
		{4: 572, 572, 7: 572, 572, 98: 572, 106: 572, 109: 572, 113: 572, 572, 572},
		{4: 212, 212, 7: 212, 1584, 98: 212, 106: 212, 109: 212, 113: 212, 212, 212},
		{4: 250, 250, 7: 250, 98: 250, 106: 250, 109: 250, 113: 250, 250, 1557, 423: 1556},
		{4: 222, 222, 7: 222, 98: 222, 106: 222, 109: 1181, 113: 222, 222, 315: 1582},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 101: 909, 163: 901, 803, 802, 252: 908, 263: 905, 268: 907, 906, 911, 275: 902, 283: 1560, 412: 1559, 422: 1558},
		// 815
		{4: 12, 12, 7: 12, 98: 12, 106: 12, 109: 12, 113: 12, 12, 116: 12, 118: 1443, 120: 12, 123: 12, 284: 1444, 1561},
		{4: 249, 249, 7: 249, 98: 249, 106: 249, 109: 249, 113: 249, 249},
		{4: 248, 248, 7: 248, 1429, 98: 248, 106: 248, 109: 248, 113: 248, 248, 116: 248, 118: 248, 120: 248, 123: 248},
		{4: 211, 211, 7: 211, 98: 211, 106: 211, 109: 211, 113: 211, 211, 116: 211, 120: 211, 123: 1562, 426: 1564, 461: 1563},
		{300: 1577},
		// 820
		{4: 567, 567, 7: 567, 98: 567, 106: 567, 109: 567, 113: 567, 567, 116: 567, 120: 1565, 429: 1566},
		{4: 210, 210, 7: 210, 98: 210, 106: 210, 109: 210, 113: 210, 210, 116: 210, 120: 210},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1576, 938},
		{4: 416, 416, 7: 416, 98: 416, 106: 416, 109: 416, 113: 416, 416, 116: 1176, 295: 1177, 1567},
		{4: 222, 222, 7: 222, 98: 222, 106: 222, 109: 1181, 113: 222, 222, 315: 1568},
		// 825
		{4: 208, 208, 7: 208, 98: 208, 106: 208, 113: 1570, 1571, 367: 1569},
		{4: 251, 251, 7: 251, 98: 251, 106: 251},
		{272: 1575},
		{144: 1572},
		{463: 1573},
		// 830
		{51: 1574},
		{4: 206, 206, 7: 206, 98: 206, 106: 206},
		{4: 207, 207, 7: 207, 98: 207, 106: 207},
		{4: 566, 566, 7: 566, 98: 566, 106: 566, 1036, 1035, 566, 1034, 1033, 1031, 566, 566, 116: 566, 248: 1032, 1030},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1578, 938, 427: 1579},
		// 835
		{4: 569, 569, 7: 569, 569, 98: 569, 106: 569, 1036, 1035, 569, 1034, 1033, 1031, 569, 569, 116: 569, 120: 569, 248: 1032, 1030},
		{4: 570, 570, 7: 570, 1580, 98: 570, 106: 570, 109: 570, 113: 570, 570, 116: 570, 120: 570},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1581, 938},
		{4: 568, 568, 7: 568, 568, 98: 568, 106: 568, 1036, 1035, 568, 1034, 1033, 1031, 568, 568, 116: 568, 120: 568, 248: 1032, 1030},
		{4: 208, 208, 7: 208, 98: 208, 106: 208, 113: 1570, 1571, 367: 1583},
		// 840
		{4: 252, 252, 7: 252, 98: 252, 106: 252},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 135: 1552, 146: 1000, 159: 1017, 163: 1550, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1551, 938, 352: 1585},
		{4: 571, 571, 7: 571, 571, 98: 571, 106: 571, 109: 571, 113: 571, 571, 571},
		{4: 579, 579, 7: 579, 579, 98: 579, 106: 579, 109: 579, 113: 579, 579, 579},
		{4: 577, 577, 7: 577, 577, 98: 577, 106: 577, 109: 577, 113: 577, 577, 577},
		// 845
		{4: 576, 576, 7: 576, 576, 98: 576, 106: 576, 109: 576, 113: 576, 576, 576},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 99: 1592, 163: 1591, 803, 802},
		{4: 574, 574, 7: 574, 574, 98: 574, 106: 574, 109: 574, 113: 574, 574, 574},
		{4: 575, 575, 7: 575, 575, 98: 575, 106: 575, 109: 575, 113: 575, 575, 575},
		{4: 573, 573, 7: 573, 573, 98: 573, 106: 573, 109: 573, 113: 573, 573, 573},
		// 850
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 135: 1595, 163: 1594, 803, 802},
		{},
		{4: 581, 581, 7: 581, 581, 98: 581, 106: 581, 109: 581, 113: 581, 581, 581},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 135: 1597, 163: 1425, 803, 802},
		{4: 580, 580, 7: 580, 580, 98: 580, 106: 580, 109: 580, 113: 580, 580, 580},
		// 855
		{4: 254, 254, 7: 254, 98: 254, 106: 1599, 377: 1603},
		{199: 199, 254: 1173, 271: 1174, 379: 1601},
		{4: 203, 203, 7: 203, 98: 203, 106: 203},
		{199: 767, 261: 1602},
		{4: 205, 205, 7: 205, 98: 205, 106: 205},
		// 860
		{4: 202, 202, 7: 202, 98: 202, 106: 202},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 1605, 803, 802},
		{4: 259, 259},
		{4: 263, 263, 130: 1607},
		{169: 1027, 197: 1609, 478: 1608},
		// 865
		{4: 262, 262, 8: 1610},
		{4: 261, 261, 8: 261},
		{169: 1027, 197: 1611},
		{4: 260, 260, 8: 260},
		{115: 1613},
		// 870
		{99: 1615, 169: 1027, 197: 1616, 450: 1614},
		{4: 266, 266},
		{4: 265, 265},
		{4: 264, 264},
		{561, 561, 561, 561, 6: 561, 9: 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 258: 899, 276: 561, 294: 1621},
		// 875
		{277, 277, 277, 277, 6: 277, 9: 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 258: 277, 276: 277},
		{276, 276, 276, 276, 6: 276, 9: 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 258: 276, 276: 276},
		{275, 275, 275, 275, 6: 275, 9: 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 258: 275, 276: 275},
		{460, 460, 460, 460, 6: 460, 9: 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 460, 276: 1623, 436: 1622},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 901, 803, 802, 252: 1624},
		// 880
		{459, 459, 459, 459, 6: 459, 9: 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459, 459},
		{38: 1630, 101: 1626, 121: 1629, 159: 1631, 196: 766, 199: 767, 261: 765, 1628, 383: 1627, 434: 1625},
		{4: 443, 443, 98: 1661, 444: 1660},
		{7: 706, 101: 1648, 196: 766, 199: 767, 261: 765, 1167, 394: 1649},
		{101: 1640, 292: 1639},
		// 885
		{4: 455, 455, 98: 455},
		{804, 852, 805, 822, 446, 446, 811, 8: 446, 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 98: 446, 163: 935, 803, 802, 194: 1633, 332: 1634, 398: 1632},
		{101: 453},
		{101: 452},
		{4: 454, 454, 8: 1637, 98: 454},
		// 890
		{119: 1635},
		{4: 445, 445, 8: 445, 98: 445},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1636, 938},
		{4: 447, 447, 8: 447, 98: 447, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 935, 803, 802, 194: 1633, 332: 1638},
		// 895
		{4: 444, 444, 8: 444, 98: 444},
		{4: 456, 456, 98: 456},
		{804, 852, 805, 822, 6: 811, 1642, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1148, 938, 255: 1641},
		{7: 1645, 1152},
		{4: 451, 451, 8: 1643, 98: 451},
		// 900
		{101: 1640, 292: 1644},
		{4: 450, 450, 98: 450},
		{4: 449, 449, 8: 1646, 98: 449},
		{101: 1640, 292: 1647},
		{4: 448, 448, 98: 448},
		// 905
		{804, 852, 805, 822, 6: 811, 1656, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 101: 768, 163: 935, 803, 802, 194: 1654, 196: 766, 199: 767, 261: 765, 1167, 393: 1655},
		{7: 1650},
		{38: 1630, 101: 768, 159: 1631, 196: 766, 199: 767, 261: 765, 1652, 383: 1651},
		{101: 1640, 292: 1653},
		{4: 457, 457, 98: 457},
		// 910
		{4: 458, 458, 98: 458},
		{7: 708, 708},
		{7: 1658, 1657},
		{7: 705},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 935, 803, 802, 194: 1659},
		// 915
		{7: 704},
		{7: 707, 707},
		{4: 461, 461},
		{413: 1662},
		{210: 1663},
		// 920
		{272: 1664},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 935, 803, 802, 194: 1438, 291: 1439, 299: 1665},
		{4: 442, 442, 8: 1441},
		{804, 852, 805, 822, 631, 631, 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 935, 803, 802, 194: 1672},
		{4: 629, 629},
		// 925
		{4: 125, 125},
		{4: 124, 124},
		{4: 123, 123},
		{4: 122, 122},
		{4: 630, 630},
		// 930
		{643, 643, 643, 643, 6: 643, 9: 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 168: 643},
		{642, 642, 642, 642, 6: 642, 9: 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 168: 642},
		{565, 565, 565, 565, 6: 565, 9: 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 168: 1686, 353: 1691},
		{565, 565, 565, 565, 6: 565, 9: 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 168: 1686, 353: 1685},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 901, 803, 802, 168: 1679, 252: 1680, 297: 1678},
		// 935
		{4: 639, 639, 8: 1683},
		{172: 1681},
		{4: 270, 270, 8: 270, 115: 270},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 901, 803, 802, 252: 1680, 297: 1682},
		{4: 638, 638, 8: 1683},
		// 940
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 901, 803, 802, 252: 1684},
		{4: 269, 269, 8: 269, 115: 269, 130: 269},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 1688, 803, 802},
		{172: 1687},
		{564, 564, 564, 564, 6: 564, 9: 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564},
		// 945
		{98: 1689},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 901, 803, 802, 252: 1690},
		{4: 640, 640},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 800, 803, 802, 287: 1692},
		{4: 641, 641},
		// 950
		{268, 268, 268, 268, 6: 268, 9: 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 1695, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 115: 268, 258: 268, 452: 1694},
		{561, 561, 561, 561, 6: 561, 9: 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 115: 561, 258: 899, 294: 1696},
		{267, 267, 267, 267, 6: 267, 9: 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 115: 267, 258: 267},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 115: 1697, 163: 901, 803, 802, 252: 1680, 297: 1698},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 901, 803, 802, 252: 1702, 297: 1703},
		// 955
		{8: 1683, 115: 1699},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 101: 909, 163: 901, 803, 802, 252: 908, 263: 905, 268: 907, 906, 911, 275: 902, 283: 1700},
		{4: 12, 12, 8: 1429, 118: 1443, 284: 1444, 1701},
		{4: 645, 645},
		{4: 12, 12, 8: 270, 109: 12, 116: 12, 118: 1443, 130: 270, 284: 1444, 1707},
		// 960
		{8: 1683, 130: 1704},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 101: 909, 163: 901, 803, 802, 252: 908, 263: 905, 268: 907, 906, 911, 275: 902, 283: 1705},
		{4: 12, 12, 8: 1429, 118: 1443, 284: 1444, 1706},
		{4: 644, 644},
		{4: 416, 416, 109: 416, 116: 1176, 295: 1177, 1708},
		// 965
		{4: 224, 224, 109: 1447, 354: 1709},
		{4: 646, 646},
		{4: 647, 647, 8: 1152},
		{211: 2004},
		{211: 666},
		// 970
		{563, 563, 563, 563, 6: 563, 9: 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 168: 1716, 310: 1991},
		{563, 563, 563, 563, 6: 563, 9: 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 168: 1716, 310: 1732},
		{99: 563, 168: 1716, 310: 1717},
		{97: 1730},
		{99: 1526, 322: 1719, 381: 1720, 477: 1718},
		// 975
		{4: 8, 8, 8: 1728},
		{4: 4, 4, 8: 4, 32: 1722, 389: 1721},
		{4: 6, 6, 8: 6},
		{4: 7, 7, 8: 7},
		{300: 1723},
		// 980
		{9: 1725, 99: 1535, 326: 1724},
		{4: 3, 3, 8: 3},
		{99: 1727, 428: 1726},
		{4: 2, 2, 8: 2},
		{4: 1, 1, 8: 1},
		// 985
		{99: 1526, 322: 1719, 381: 1729},
		{4: 5, 5, 8: 5},
		{172: 1731},
		{562, 562, 562, 562, 6: 562, 9: 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 99: 562},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 901, 803, 802, 252: 1733},
		// 990
		{101: 1734},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 160: 723, 723, 1741, 935, 803, 802, 194: 1736, 210: 723, 723, 214: 723, 723, 301: 1739, 1735, 1740, 1738, 375: 1742, 470: 1737},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 160: 722, 722, 163: 1990, 803, 802, 210: 722, 722, 214: 722, 722, 374: 1989},
		{21: 1899, 1898, 25: 1901, 39: 1902, 1881, 1875, 1874, 53: 1889, 57: 1895, 1900, 121: 1888, 146: 1883, 213: 54, 216: 1876, 218: 1872, 54, 221: 1873, 1891, 1880, 1887, 1858, 1859, 1878, 1860, 1871, 1893, 1897, 1892, 1870, 1896, 1877, 1879, 1869, 1861, 1890, 1868, 1894, 1863, 1862, 1884, 390: 1867, 1885, 405: 1857, 420: 1865, 1866, 435: 1864, 442: 1882, 1855, 468: 1856, 471: 1886, 475: 1854},
		{7: 1802, 1803},
		// 995
		{160: 1746, 1750, 210: 1749, 1748, 214: 1751, 1747, 400: 1752},
		{7: 118, 118},
		{7: 117, 117},
		{101: 1743},
		{7: 115, 115},
		// 1000
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1744, 938},
		{7: 1745, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{7: 116, 116},
		{210: 1798},
		{210: 1793},
		// 1005
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 101: 559, 163: 1755, 803, 802, 273: 1789},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 101: 559, 163: 1755, 803, 802, 273: 1785},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 101: 559, 163: 1755, 803, 802, 210: 1773, 1772, 273: 1771},
		{210: 1753},
		{4: 119, 119, 7: 119, 119},
		// 1010
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 101: 559, 163: 1755, 803, 802, 273: 1754},
		{101: 1756},
		{4: 558, 558, 8: 558, 101: 558},
		{804, 852, 805, 822, 6: 811, 664, 664, 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 935, 803, 802, 194: 1758, 264: 1759, 267: 1757},
		{7: 1762, 1763},
		// 1015
		{7: 38, 38, 101: 1100, 129: 38, 132: 38, 253: 1101, 256: 1760},
		{7: 663, 663},
		{7: 419, 419, 129: 1195, 132: 1194, 362: 1761},
		{7: 665, 665},
		{453: 1765, 1766},
		// 1020
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 935, 803, 802, 194: 1758, 264: 1764},
		{7: 662, 662},
		{4: 681, 681, 7: 681, 681},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 901, 803, 802, 252: 1767},
		{101: 1768},
		// 1025
		{804, 852, 805, 822, 6: 811, 664, 664, 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 935, 803, 802, 194: 1758, 264: 1759, 267: 1769},
		{7: 1770, 1763},
		{4: 680, 680, 7: 680, 680},
		{101: 1782},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 101: 559, 163: 1755, 803, 802, 273: 1778},
		// 1030
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 101: 559, 163: 1755, 803, 802, 273: 1774},
		{101: 1775},
		{804, 852, 805, 822, 6: 811, 664, 664, 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 935, 803, 802, 194: 1758, 264: 1759, 267: 1776},
		{7: 1777, 1763},
		{4: 682, 682, 7: 682, 682},
		// 1035
		{101: 1779},
		{804, 852, 805, 822, 6: 811, 664, 664, 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 935, 803, 802, 194: 1758, 264: 1759, 267: 1780},
		{7: 1781, 1763},
		{4: 683, 683, 7: 683, 683},
		{804, 852, 805, 822, 6: 811, 664, 664, 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 935, 803, 802, 194: 1758, 264: 1759, 267: 1783},
		// 1040
		{7: 1784, 1763},
		{4: 684, 684, 7: 684, 684},
		{101: 1786},
		{804, 852, 805, 822, 6: 811, 664, 664, 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 935, 803, 802, 194: 1758, 264: 1759, 267: 1787},
		{7: 1788, 1763},
		// 1045
		{4: 685, 685, 7: 685, 685},
		{101: 1790},
		{804, 852, 805, 822, 6: 811, 664, 664, 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 935, 803, 802, 194: 1758, 264: 1759, 267: 1791},
		{7: 1792, 1763},
		{4: 686, 686, 7: 686, 686},
		// 1050
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 101: 559, 163: 1755, 803, 802, 273: 1794},
		{101: 1795},
		{804, 852, 805, 822, 6: 811, 664, 664, 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 935, 803, 802, 194: 1758, 264: 1759, 267: 1796},
		{7: 1797, 1763},
		{4: 687, 687, 7: 687, 687},
		// 1055
		{101: 1799},
		{804, 852, 805, 822, 6: 811, 664, 664, 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 935, 803, 802, 194: 1758, 264: 1759, 267: 1800},
		{7: 1801, 1763},
		{4: 688, 688, 7: 688, 688},
		{1809, 1810, 4: 99, 99, 649, 9: 1814, 1811, 1813, 1815, 1812, 1807, 1816, 1817, 1818, 104: 1806, 117: 649, 167: 649, 274: 1808, 290: 1820, 318: 1819, 1805},
		// 1060
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 160: 723, 723, 1741, 935, 803, 802, 194: 1736, 210: 723, 723, 214: 723, 723, 301: 1739, 1735, 1740, 1738, 375: 1804},
		{7: 114, 114},
		{4: 653, 653},
		{6: 648, 117: 648, 167: 648},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 119: 1852, 163: 1851, 803, 802},
		// 1065
		{6: 1121, 117: 1846, 167: 1120, 266: 1845},
		{119: 1843},
		{99: 637, 119: 1824, 257: 1841},
		{119: 1824, 166: 637, 257: 1839},
		{99: 637, 119: 1824, 257: 1837},
		// 1070
		{119: 1824, 166: 637, 257: 1835},
		{99: 637, 119: 1824, 257: 1833},
		{637, 637, 637, 637, 6: 637, 9: 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 119: 1824, 257: 1831},
		{119: 1824, 166: 637, 257: 1829},
		{119: 1824, 166: 637, 257: 1827},
		// 1075
		{119: 1824, 166: 637, 257: 1825},
		{1809, 1810, 4: 98, 98, 649, 8: 1822, 1814, 1811, 1813, 1815, 1812, 1807, 1816, 1817, 1818, 104: 1806, 117: 649, 167: 649, 274: 1808, 290: 1821},
		{97, 97, 4: 97, 97, 97, 8: 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 104: 97, 117: 97, 167: 97},
		{96, 96, 4: 96, 96, 96, 8: 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 104: 96, 117: 96, 167: 96},
		{1809, 1810, 6: 649, 9: 1814, 1811, 1813, 1815, 1812, 1807, 1816, 1817, 1818, 104: 1806, 117: 649, 167: 649, 274: 1808, 290: 1823},
		// 1080
		{95, 95, 4: 95, 95, 95, 8: 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 104: 95, 117: 95, 167: 95},
		{636, 636, 636, 636, 6: 636, 9: 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 99: 636, 166: 636},
		{166: 1103, 259: 1826, 1102},
		{100, 100, 4: 100, 100, 100, 8: 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 104: 100, 117: 100, 167: 100},
		{166: 1103, 259: 1828, 1102},
		// 1085
		{101, 101, 4: 101, 101, 101, 8: 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 104: 101, 117: 101, 167: 101},
		{166: 1103, 259: 1830, 1102},
		{102, 102, 4: 102, 102, 102, 8: 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 104: 102, 117: 102, 167: 102},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 1832, 803, 802},
		{103, 103, 4: 103, 103, 103, 8: 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 104: 103, 117: 103, 167: 103},
		// 1090
		{99: 1834},
		{104, 104, 4: 104, 104, 104, 8: 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104: 104, 117: 104, 167: 104},
		{166: 1103, 259: 1836, 1102},
		{105, 105, 4: 105, 105, 105, 8: 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 104: 105, 117: 105, 167: 105},
		{99: 1838},
		// 1095
		{106, 106, 4: 106, 106, 106, 8: 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 104: 106, 117: 106, 167: 106},
		{166: 1103, 259: 1840, 1102},
		{107, 107, 4: 107, 107, 107, 8: 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 104: 107, 117: 107, 167: 107},
		{99: 1842},
		{108, 108, 4: 108, 108, 108, 8: 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 104: 108, 117: 108, 167: 108},
		// 1100
		{166: 1103, 259: 1844, 1102},
		{109, 109, 4: 109, 109, 109, 8: 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 104: 109, 117: 109, 167: 109},
		{637, 637, 637, 637, 6: 637, 9: 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 99: 637, 119: 1824, 257: 1849},
		{637, 637, 637, 637, 6: 637, 9: 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 99: 637, 119: 1824, 257: 1847},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 99: 1124, 163: 1125, 803, 802, 265: 1848},
		// 1105
		{110, 110, 4: 110, 110, 110, 8: 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 104: 110, 117: 110, 167: 110},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 99: 1124, 163: 1125, 803, 802, 265: 1850},
		{111, 111, 4: 111, 111, 111, 8: 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 104: 111, 117: 111, 167: 111},
		{113, 113, 4: 113, 113, 113, 8: 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 104: 113, 117: 113, 167: 113},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 1853, 803, 802},
		// 1110
		{112, 112, 4: 112, 112, 112, 8: 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 104: 112, 117: 112, 167: 112},
		{1956, 1961, 690, 690, 690, 690, 7: 690, 690, 97: 1954, 1960, 104: 1959, 1955, 160: 1957, 1958, 1962, 331: 1963, 395: 1964, 1953},
		{93, 93, 93, 93, 93, 93, 7: 93, 93, 97: 93, 93, 104: 93, 93, 160: 93, 93, 93},
		{92, 92, 92, 92, 92, 92, 7: 92, 92, 97: 92, 92, 104: 92, 92, 160: 92, 92, 92},
		{91, 91, 91, 91, 91, 91, 7: 91, 91, 97: 91, 91, 104: 91, 91, 160: 91, 91, 91},
		// 1115
		{90, 90, 90, 90, 90, 90, 7: 90, 90, 97: 90, 90, 104: 90, 90, 160: 90, 90, 90},
		{89, 89, 89, 89, 89, 89, 7: 89, 89, 97: 89, 89, 104: 89, 89, 160: 89, 89, 89},
		{88, 88, 88, 88, 88, 88, 7: 88, 88, 97: 88, 88, 104: 88, 88, 160: 88, 88, 88},
		{87, 87, 87, 87, 87, 87, 7: 87, 87, 97: 87, 87, 104: 87, 87, 160: 87, 87, 87},
		{86, 86, 86, 86, 86, 86, 7: 86, 86, 97: 86, 86, 104: 86, 86, 160: 86, 86, 86},
		// 1120
		{85, 85, 85, 85, 85, 85, 7: 85, 85, 97: 85, 85, 104: 85, 85, 160: 85, 85, 85},
		{38, 38, 38, 38, 38, 38, 7: 38, 38, 97: 38, 38, 101: 1100, 104: 38, 38, 160: 38, 38, 38, 250: 38, 38, 253: 1101, 256: 1951},
		{32, 32, 32, 32, 32, 32, 7: 32, 32, 97: 32, 32, 101: 1107, 104: 32, 32, 160: 32, 32, 32, 250: 32, 32, 253: 1108, 309: 1949, 314: 1109},
		{32, 32, 32, 32, 32, 32, 7: 32, 32, 97: 32, 32, 101: 1107, 104: 32, 32, 160: 32, 32, 32, 250: 32, 32, 253: 1108, 309: 1944, 314: 1109},
		{38, 38, 38, 38, 38, 38, 7: 38, 38, 97: 38, 38, 101: 1100, 104: 38, 38, 160: 38, 38, 38, 253: 1101, 256: 1943},
		// 1125
		{80, 80, 80, 80, 80, 80, 7: 80, 80, 97: 80, 80, 101: 80, 104: 80, 80, 160: 80, 80, 80, 250: 80, 80},
		{79, 79, 79, 79, 79, 79, 7: 79, 79, 97: 79, 79, 101: 79, 104: 79, 79, 160: 79, 79, 79, 250: 79, 79},
		{78, 78, 78, 78, 78, 78, 7: 78, 78, 97: 78, 78, 101: 78, 104: 78, 78, 160: 78, 78, 78, 250: 78, 78},
		{77, 77, 77, 77, 77, 77, 7: 77, 77, 97: 77, 77, 101: 77, 104: 77, 77, 160: 77, 77, 77, 250: 77, 77},
		{76, 76, 76, 76, 76, 76, 7: 76, 76, 97: 76, 76, 101: 76, 104: 76, 76, 160: 76, 76, 76, 250: 76, 76},
		// 1130
		{75, 75, 75, 75, 75, 75, 7: 75, 75, 97: 75, 75, 101: 75, 104: 75, 75, 160: 75, 75, 75, 250: 75, 75},
		{74, 74, 74, 74, 74, 74, 7: 74, 74, 97: 74, 74, 101: 74, 104: 74, 74, 160: 74, 74, 74, 250: 74, 74},
		{73, 73, 73, 73, 73, 73, 7: 73, 73, 97: 73, 73, 101: 73, 104: 73, 73, 160: 73, 73, 73, 250: 73, 73},
		{70, 70, 70, 70, 70, 70, 7: 70, 70, 97: 70, 70, 101: 70, 104: 70, 70, 160: 70, 70, 70, 250: 70, 70},
		{69, 69, 69, 69, 69, 69, 7: 69, 69, 97: 69, 69, 101: 69, 104: 69, 69, 160: 69, 69, 69, 250: 69, 69},
		// 1135
		{68, 68, 68, 68, 68, 68, 7: 68, 68, 97: 68, 68, 101: 68, 104: 68, 68, 160: 68, 68, 68, 250: 68, 68},
		{67, 67, 67, 67, 67, 67, 7: 67, 67, 97: 67, 67, 101: 67, 104: 67, 67, 160: 67, 67, 67, 250: 67, 67},
		{66, 66, 66, 66, 66, 66, 7: 66, 66, 97: 66, 66, 101: 66, 104: 66, 66, 160: 66, 66, 66, 250: 66, 66, 449: 1942},
		{64, 64, 64, 64, 64, 64, 7: 64, 64, 97: 64, 64, 101: 64, 104: 64, 64, 160: 64, 64, 64},
		{213: 1929, 219: 1930},
		// 1140
		{38, 38, 38, 38, 38, 38, 7: 38, 38, 97: 38, 38, 101: 1100, 104: 38, 38, 160: 38, 38, 38, 253: 1101, 256: 1928},
		{101: 1100, 253: 1927},
		{58, 58, 58, 58, 58, 58, 7: 58, 58, 97: 58, 58, 104: 58, 58, 160: 58, 58, 58},
		{28, 28, 28, 28, 28, 28, 28, 28, 28, 97: 28, 28, 104: 28, 28, 117: 28, 146: 1117, 160: 28, 28, 28, 167: 28, 289: 1924},
		{101: 1919},
		// 1145
		{101: 1909},
		{213: 53, 219: 53},
		{52, 52, 52, 52, 52, 52, 7: 52, 52, 97: 52, 52, 104: 52, 52, 160: 52, 52, 52},
		{38, 38, 38, 38, 38, 38, 7: 38, 38, 97: 38, 38, 101: 1100, 104: 38, 38, 160: 38, 38, 38, 253: 1101, 256: 1908},
		{50, 50, 50, 50, 50, 50, 7: 50, 50, 97: 50, 50, 104: 50, 50, 160: 50, 50, 50},
		// 1150
		{49, 49, 49, 49, 49, 49, 7: 49, 49, 97: 49, 49, 104: 49, 49, 160: 49, 49, 49},
		{48, 48, 48, 48, 48, 48, 48, 48, 48, 97: 48, 48, 104: 48, 48, 117: 48, 146: 48, 160: 48, 48, 48, 167: 48},
		{38, 38, 38, 38, 38, 38, 38, 38, 38, 97: 38, 38, 101: 1100, 104: 38, 38, 117: 38, 146: 38, 160: 38, 38, 38, 167: 38, 253: 1101, 256: 1907},
		{46, 46, 46, 46, 46, 46, 46, 46, 46, 97: 46, 46, 104: 46, 46, 117: 46, 146: 46, 160: 46, 46, 46, 167: 46},
		{45, 45, 45, 45, 45, 45, 45, 45, 45, 97: 45, 45, 104: 45, 45, 117: 45, 146: 45, 160: 45, 45, 45, 167: 45},
		// 1155
		{44, 44, 44, 44, 44, 44, 7: 44, 44, 97: 44, 44, 104: 44, 44, 160: 44, 44, 44},
		{38, 38, 38, 38, 38, 38, 7: 38, 38, 97: 38, 38, 101: 1100, 104: 38, 38, 160: 38, 38, 38, 253: 1101, 256: 1906},
		{38, 38, 38, 38, 38, 38, 7: 38, 38, 97: 38, 38, 101: 1100, 104: 38, 38, 160: 38, 38, 38, 253: 1101, 256: 1905},
		{38, 38, 38, 38, 38, 38, 7: 38, 38, 97: 38, 38, 101: 1100, 104: 38, 38, 160: 38, 38, 38, 253: 1101, 256: 1904},
		{38, 38, 38, 38, 38, 38, 7: 38, 38, 97: 38, 38, 101: 1100, 104: 38, 38, 160: 38, 38, 38, 253: 1101, 256: 1903},
		// 1160
		{40, 40, 40, 40, 40, 40, 7: 40, 40, 97: 40, 40, 104: 40, 40, 160: 40, 40, 40},
		{41, 41, 41, 41, 41, 41, 7: 41, 41, 97: 41, 41, 104: 41, 41, 160: 41, 41, 41},
		{42, 42, 42, 42, 42, 42, 7: 42, 42, 97: 42, 42, 104: 42, 42, 160: 42, 42, 42},
		{43, 43, 43, 43, 43, 43, 7: 43, 43, 97: 43, 43, 104: 43, 43, 160: 43, 43, 43},
		{47, 47, 47, 47, 47, 47, 47, 47, 47, 97: 47, 47, 104: 47, 47, 117: 47, 146: 47, 160: 47, 47, 47, 167: 47},
		// 1165
		{51, 51, 51, 51, 51, 51, 7: 51, 51, 97: 51, 51, 104: 51, 51, 160: 51, 51, 51},
		{99: 1911, 373: 1910},
		{7: 1912, 1913},
		{7: 20, 20},
		{26, 26, 26, 26, 26, 26, 1121, 26, 26, 97: 26, 26, 104: 26, 26, 117: 26, 160: 26, 26, 26, 167: 1120, 266: 1119, 277: 1915},
		// 1170
		{99: 1914},
		{7: 19, 19},
		{22, 22, 22, 22, 22, 22, 7: 22, 22, 97: 22, 22, 104: 22, 22, 117: 1917, 160: 22, 22, 22, 282: 1916},
		{55, 55, 55, 55, 55, 55, 7: 55, 55, 97: 55, 55, 104: 55, 55, 160: 55, 55, 55},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 99: 1124, 163: 1125, 803, 802, 265: 1918},
		// 1175
		{21, 21, 21, 21, 21, 21, 7: 21, 21, 97: 21, 21, 104: 21, 21, 160: 21, 21, 21},
		{99: 1911, 373: 1920},
		{7: 1921, 1913},
		{26, 26, 26, 26, 26, 26, 1121, 26, 26, 97: 26, 26, 104: 26, 26, 117: 26, 160: 26, 26, 26, 167: 1120, 266: 1119, 277: 1922},
		{22, 22, 22, 22, 22, 22, 7: 22, 22, 97: 22, 22, 104: 22, 22, 117: 1917, 160: 22, 22, 22, 282: 1923},
		// 1180
		{56, 56, 56, 56, 56, 56, 7: 56, 56, 97: 56, 56, 104: 56, 56, 160: 56, 56, 56},
		{26, 26, 26, 26, 26, 26, 1121, 26, 26, 97: 26, 26, 104: 26, 26, 117: 26, 160: 26, 26, 26, 167: 1120, 266: 1119, 277: 1925},
		{22, 22, 22, 22, 22, 22, 7: 22, 22, 97: 22, 22, 104: 22, 22, 117: 1917, 160: 22, 22, 22, 282: 1926},
		{57, 57, 57, 57, 57, 57, 7: 57, 57, 97: 57, 57, 104: 57, 57, 160: 57, 57, 57},
		{59, 59, 59, 59, 59, 59, 7: 59, 59, 97: 59, 59, 104: 59, 59, 160: 59, 59, 59},
		// 1185
		{60, 60, 60, 60, 60, 60, 7: 60, 60, 97: 60, 60, 104: 60, 60, 160: 60, 60, 60},
		{28, 28, 28, 28, 28, 28, 28, 28, 28, 97: 28, 28, 101: 1100, 104: 28, 28, 117: 28, 146: 1117, 160: 28, 28, 28, 167: 28, 253: 1935, 289: 1936},
		{101: 1100, 253: 1931},
		{28, 28, 28, 28, 28, 28, 28, 28, 28, 97: 28, 28, 104: 28, 28, 117: 28, 146: 1117, 160: 28, 28, 28, 167: 28, 289: 1932},
		{26, 26, 26, 26, 26, 26, 1121, 26, 26, 97: 26, 26, 104: 26, 26, 117: 26, 160: 26, 26, 26, 167: 1120, 266: 1119, 277: 1933},
		// 1190
		{22, 22, 22, 22, 22, 22, 7: 22, 22, 97: 22, 22, 104: 22, 22, 117: 1917, 160: 22, 22, 22, 282: 1934},
		{61, 61, 61, 61, 61, 61, 7: 61, 61, 97: 61, 61, 104: 61, 61, 160: 61, 61, 61},
		{28, 28, 28, 28, 28, 28, 28, 28, 28, 97: 28, 28, 104: 28, 28, 117: 28, 146: 1117, 160: 28, 28, 28, 167: 28, 289: 1939},
		{26, 26, 26, 26, 26, 26, 1121, 26, 26, 97: 26, 26, 104: 26, 26, 117: 26, 160: 26, 26, 26, 167: 1120, 266: 1119, 277: 1937},
		{22, 22, 22, 22, 22, 22, 7: 22, 22, 97: 22, 22, 104: 22, 22, 117: 1917, 160: 22, 22, 22, 282: 1938},
		// 1195
		{62, 62, 62, 62, 62, 62, 7: 62, 62, 97: 62, 62, 104: 62, 62, 160: 62, 62, 62},
		{26, 26, 26, 26, 26, 26, 1121, 26, 26, 97: 26, 26, 104: 26, 26, 117: 26, 160: 26, 26, 26, 167: 1120, 266: 1119, 277: 1940},
		{22, 22, 22, 22, 22, 22, 7: 22, 22, 97: 22, 22, 104: 22, 22, 117: 1917, 160: 22, 22, 22, 282: 1941},
		{63, 63, 63, 63, 63, 63, 7: 63, 63, 97: 63, 63, 104: 63, 63, 160: 63, 63, 63},
		{65, 65, 65, 65, 65, 65, 7: 65, 65, 97: 65, 65, 101: 65, 104: 65, 65, 160: 65, 65, 65, 250: 65, 65},
		// 1200
		{81, 81, 81, 81, 81, 81, 7: 81, 81, 97: 81, 81, 104: 81, 81, 160: 81, 81, 81},
		{34, 34, 34, 34, 34, 34, 7: 34, 34, 97: 34, 34, 104: 34, 34, 160: 34, 34, 34, 250: 34, 34, 308: 1945},
		{82, 82, 82, 82, 82, 82, 7: 82, 82, 97: 82, 82, 104: 82, 82, 160: 82, 82, 82, 250: 1946, 1947, 307: 1948},
		{36, 36, 36, 36, 36, 36, 7: 36, 36, 97: 36, 36, 104: 36, 36, 160: 36, 36, 36, 250: 36, 36},
		{35, 35, 35, 35, 35, 35, 7: 35, 35, 97: 35, 35, 104: 35, 35, 160: 35, 35, 35, 250: 35, 35},
		// 1205
		{33, 33, 33, 33, 33, 33, 7: 33, 33, 97: 33, 33, 104: 33, 33, 160: 33, 33, 33, 250: 33, 33},
		{34, 34, 34, 34, 34, 34, 7: 34, 34, 97: 34, 34, 104: 34, 34, 160: 34, 34, 34, 250: 34, 34, 308: 1950},
		{83, 83, 83, 83, 83, 83, 7: 83, 83, 97: 83, 83, 104: 83, 83, 160: 83, 83, 83, 250: 1946, 1947, 307: 1948},
		{34, 34, 34, 34, 34, 34, 7: 34, 34, 97: 34, 34, 104: 34, 34, 160: 34, 34, 34, 250: 34, 34, 308: 1952},
		{84, 84, 84, 84, 84, 84, 7: 84, 84, 97: 84, 84, 104: 84, 84, 160: 84, 84, 84, 250: 1946, 1947, 307: 1948},
		// 1210
		{2: 712, 712, 712, 712, 7: 712, 712},
		{105: 1988},
		{701, 701, 701, 701, 701, 701, 7: 701, 701, 97: 701, 701, 104: 701, 701, 160: 701, 701, 701},
		{700, 700, 700, 700, 700, 700, 7: 700, 700, 97: 700, 700, 104: 700, 700, 160: 700, 700, 700},
		{210: 1987},
		// 1215
		{698, 698, 698, 698, 698, 698, 7: 698, 698, 97: 698, 698, 104: 698, 698, 160: 698, 698, 698, 210: 1986},
		{33: 1975, 99: 983, 102: 1980, 1981, 105: 979, 166: 982, 170: 978, 980, 173: 981, 1972, 178: 985, 984, 198: 1979, 355: 1973, 1974, 359: 1977, 410: 1976, 465: 1978},
		{272: 1970},
		{99: 1969},
		{101: 1966},
		// 1220
		{692, 692, 692, 692, 692, 692, 7: 692, 692, 97: 692, 692, 104: 692, 692, 160: 692, 692, 692},
		{1956, 1961, 689, 689, 689, 689, 7: 689, 689, 97: 1954, 1960, 104: 1959, 1955, 160: 1957, 1958, 1962, 331: 1965},
		{691, 691, 691, 691, 691, 691, 7: 691, 691, 97: 691, 691, 104: 691, 691, 160: 691, 691, 691},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 942, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 968, 830, 832, 833, 840, 842, 943, 808, 810, 809, 851, 952, 820, 823, 834, 958, 963, 965, 845, 967, 860, 862, 970, 831, 836, 838, 839, 945, 843, 944, 947, 847, 941, 888, 948, 949, 950, 951, 953, 954, 955, 863, 956, 957, 801, 959, 960, 824, 961, 962, 964, 825, 966, 829, 969, 946, 848, 971, 972, 973, 974, 975, 976, 977, 937, 99: 983, 1009, 988, 999, 998, 989, 979, 146: 1000, 159: 1017, 163: 935, 803, 802, 982, 168: 1008, 1027, 978, 980, 992, 981, 1019, 1006, 1007, 1026, 985, 984, 996, 997, 1015, 1014, 1016, 1018, 1012, 1011, 1020, 1021, 991, 1010, 1022, 1023, 987, 196: 995, 1025, 986, 200: 994, 1005, 1004, 1002, 1003, 1013, 993, 1001, 1024, 990, 212: 940, 245: 939, 1967, 938},
		{7: 1968, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		// 1225
		{693, 693, 693, 693, 693, 693, 7: 693, 693, 97: 693, 693, 104: 693, 693, 160: 693, 693, 693},
		{694, 694, 694, 694, 694, 694, 7: 694, 694, 97: 694, 694, 104: 694, 694, 160: 694, 694, 694},
		{33: 1975, 174: 1972, 355: 1973, 1974, 359: 1971},
		{695, 695, 695, 695, 695, 695, 7: 695, 695, 97: 695, 695, 104: 695, 695, 160: 695, 695, 695},
		{677, 677, 677, 677, 677, 677, 7: 677, 677, 97: 677, 677, 104: 677, 677, 160: 677, 677, 677},
		// 1230
		{676, 676, 676, 676, 676, 676, 7: 676, 676, 97: 676, 676, 104: 676, 676, 160: 676, 676, 676},
		{675, 675, 675, 675, 675, 675, 7: 675, 675, 97: 675, 675, 104: 675, 675, 160: 675, 675, 675},
		{674, 674, 674, 674, 674, 674, 7: 674, 674, 97: 674, 674, 104: 674, 674, 160: 674, 674, 674},
		{696, 696, 696, 696, 696, 696, 7: 696, 696, 97: 696, 696, 104: 696, 696, 160: 696, 696, 696},
		{679, 679, 679, 679, 679, 679, 7: 679, 679, 97: 679, 679, 104: 679, 679, 160: 679, 679, 679},
		// 1235
		{678, 678, 678, 678, 678, 678, 7: 678, 678, 97: 678, 678, 104: 678, 678, 160: 678, 678, 678},
		{673, 673, 673, 673, 673, 673, 7: 673, 673, 97: 673, 673, 104: 673, 673, 160: 673, 673, 673},
		{166: 1983, 173: 1984, 360: 1985},
		{166: 1983, 173: 1984, 360: 1982},
		{671, 671, 671, 671, 671, 671, 7: 671, 671, 97: 671, 671, 104: 671, 671, 160: 671, 671, 671},
		// 1240
		{670, 670, 670, 670, 670, 670, 7: 670, 670, 97: 670, 670, 104: 670, 670, 160: 670, 670, 670},
		{669, 669, 669, 669, 669, 669, 7: 669, 669, 97: 669, 669, 104: 669, 669, 160: 669, 669, 669},
		{672, 672, 672, 672, 672, 672, 7: 672, 672, 97: 672, 672, 104: 672, 672, 160: 672, 672, 672},
		{697, 697, 697, 697, 697, 697, 7: 697, 697, 97: 697, 697, 104: 697, 697, 160: 697, 697, 697},
		{699, 699, 699, 699, 699, 699, 7: 699, 699, 97: 699, 699, 104: 699, 699, 160: 699, 699, 699},
		// 1245
		{702, 702, 702, 702, 702, 702, 7: 702, 702, 97: 702, 702, 104: 702, 702, 160: 702, 702, 702},
		{160: 721, 721, 210: 721, 721, 214: 721, 721},
		{4: 720, 720, 8: 720, 160: 720, 720, 210: 720, 720, 214: 720, 720},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 800, 803, 802, 287: 1992},
		{4: 657, 657, 649, 104: 1806, 117: 649, 167: 649, 274: 1994, 338: 1996, 402: 1995, 1993},
		// 1250
		{4: 661, 661},
		{6: 1121, 117: 1999, 167: 1120, 266: 1998},
		{4: 656, 656, 649, 104: 1806, 117: 649, 167: 649, 274: 1994, 338: 1997},
		{4: 655, 655, 655, 104: 655, 117: 655, 167: 655},
		{4: 654, 654, 654, 104: 654, 117: 654, 167: 654},
		// 1255
		{637, 637, 637, 637, 6: 637, 9: 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 99: 637, 119: 1824, 257: 2002},
		{637, 637, 637, 637, 6: 637, 9: 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 99: 637, 119: 1824, 257: 2000},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 99: 1124, 163: 1125, 803, 802, 265: 2001},
		{4: 658, 658, 658, 104: 658, 117: 658, 167: 658},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 99: 1124, 163: 1125, 803, 802, 265: 2003},
		// 1260
		{4: 659, 659, 659, 104: 659, 117: 659, 167: 659},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 2005, 803, 802},
		{98: 2006},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 901, 803, 802, 252: 2007},
		{101: 2008},
		// 1265
		{804, 852, 805, 822, 6: 811, 664, 664, 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 935, 803, 802, 194: 1758, 264: 1759, 267: 2009},
		{7: 2010, 1763},
		{4: 668, 668},
		{4: 713, 713},
		{278: 2013},
		// 1270
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 901, 803, 802, 252: 2014},
		{1809, 1810, 4: 99, 99, 649, 8: 99, 1814, 1811, 1813, 1815, 1812, 1807, 1816, 1817, 1818, 104: 1806, 117: 649, 167: 649, 217: 2018, 220: 2017, 274: 1808, 290: 1820, 318: 1819, 2016, 324: 2019, 386: 2015},
		{4: 740, 740, 8: 2039},
		{4: 739, 739, 8: 739},
		{730, 730, 730, 730, 6: 730, 9: 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 160: 723, 723, 210: 723, 723, 214: 723, 723, 302: 1735, 2033, 1738, 329: 2026, 2032},
		// 1275
		{730, 730, 730, 730, 6: 730, 9: 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 160: 2021, 210: 2024, 2025, 214: 2023, 329: 2026, 2020, 437: 2022},
		{4: 725, 725, 8: 725},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 935, 803, 802, 194: 2031},
		{210: 2030},
		{804, 852, 805, 822, 559, 559, 811, 8: 559, 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 1755, 803, 802, 273: 2029},
		// 1280
		{210: 2027},
		{732, 732, 732, 732, 732, 732, 732, 8: 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732, 732},
		{731, 731, 731, 731, 731, 731, 731, 8: 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731, 731},
		{729, 729, 729, 729, 6: 729, 9: 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729, 729},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 1990, 803, 802, 374: 2028},
		// 1285
		{4: 733, 733, 8: 733},
		{4: 734, 734, 8: 734},
		{4: 735, 735, 8: 735},
		{4: 736, 736, 8: 736},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 935, 803, 802, 194: 1736, 301: 2034},
		// 1290
		{4: 737, 737, 8: 737},
		{2: 2037, 2036, 728, 728, 8: 728, 397: 2035},
		{4: 738, 738, 8: 738},
		{4: 727, 727, 8: 727},
		{804, 852, 805, 822, 6: 811, 9: 827, 853, 855, 856, 854, 819, 857, 858, 859, 818, 828, 812, 815, 814, 826, 835, 837, 841, 807, 813, 816, 817, 821, 850, 885, 830, 832, 833, 840, 842, 844, 808, 810, 809, 851, 869, 820, 823, 834, 875, 880, 882, 845, 884, 860, 862, 887, 831, 836, 838, 839, 849, 843, 846, 864, 847, 806, 888, 865, 866, 867, 868, 870, 871, 872, 863, 873, 874, 801, 876, 877, 824, 878, 879, 881, 825, 883, 829, 886, 861, 848, 889, 890, 891, 892, 893, 894, 895, 163: 935, 803, 802, 194: 2038},
		// 1295
		{4: 726, 726, 8: 726},
		{1809, 1810, 4: 99, 99, 649, 8: 99, 1814, 1811, 1813, 1815, 1812, 1807, 1816, 1817, 1818, 104: 1806, 117: 649, 167: 649, 217: 2018, 220: 2017, 274: 1808, 290: 1820, 318: 1819, 2016, 324: 2040},
		{4: 724, 724, 8: 724},
		{4: 741, 107: 1036, 1035, 110: 1034, 1033, 1031, 248: 1032, 1030},
		{4: 635, 635, 19: 760, 27: 748, 750, 763, 752, 761, 34: 764, 36: 749, 797, 101: 768, 121: 769, 129: 757, 196: 766, 199: 767, 217: 754, 261: 765, 790, 272: 798, 279: 753, 281: 759, 305: 751, 776, 311: 787, 321: 794, 323: 747, 325: 772, 327: 773, 333: 774, 779, 780, 781, 782, 340: 775, 762, 756, 783, 784, 785, 786, 771, 777, 755, 778, 758, 365: 788, 789, 368: 791, 770, 371: 792, 2043, 376: 793, 380: 799, 382: 795},
		// 1300
		{4: 120, 120},
	}
)

var yyDebug = 0

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyLexerEx interface {
	yyLexer
	Reduced(rule, state int, lval *yySymType) bool
}

func yySymName(c int) (s string) {
	x, ok := yyXLAT[c]
	if ok {
		return yySymNames[x]
	}

	return __yyfmt__.Sprintf("%d", c)
}

func yylex1(yylex yyLexer, lval *yySymType) (n int) {
	n = yylex.Lex(lval)
	if n <= 0 {
		n = yyEOFCode
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("\nlex %s(%#x %d), lval: %+v\n", yySymName(n), n, n, lval)
	}
	return n
}

func yyParse(yylex yyLexer) int {
	const yyError = 489

	yyEx, _ := yylex.(yyLexerEx)
	var yyn int
	var yylval yySymType
	var yyVAL yySymType
	yyS := make([]yySymType, 200)

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yyerrok := func() {
		if yyDebug >= 2 {
			__yyfmt__.Printf("yyerrok()\n")
		}
		Errflag = 0
	}
	_ = yyerrok
	yystate := 0
	yychar := -1
	var yyxchar int
	var yyshift int
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	if yychar < 0 {
		yychar = yylex1(yylex, &yylval)
		var ok bool
		if yyxchar, ok = yyXLAT[yychar]; !ok {
			yyxchar = len(yySymNames) // > tab width
		}
	}
	if yyDebug >= 4 {
		var a []int
		for _, v := range yyS[:yyp+1] {
			a = append(a, v.yys)
		}
		__yyfmt__.Printf("state stack %v\n", a)
	}
	row := yyParseTab[yystate]
	yyn = 0
	if yyxchar < len(row) {
		if yyn = int(row[yyxchar]); yyn != 0 {
			yyn += yyTabOfs
		}
	}
	switch {
	case yyn > 0: // shift
		yychar = -1
		yyVAL = yylval
		yystate = yyn
		yyshift = yyn
		if yyDebug >= 2 {
			__yyfmt__.Printf("shift, and goto state %d\n", yystate)
		}
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	case yyn < 0: // reduce
	case yystate == 1: // accept
		if yyDebug >= 2 {
			__yyfmt__.Println("accept")
		}
		goto ret0
	}

	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			if yyDebug >= 1 {
				__yyfmt__.Printf("no action for %s in state %d\n", yySymName(yychar), yystate)
			}
			msg, ok := yyXErrors[yyXError{yystate, yyxchar}]
			if !ok {
				msg, ok = yyXErrors[yyXError{yystate, -1}]
			}
			if !ok && yyshift != 0 {
				msg, ok = yyXErrors[yyXError{yyshift, yyxchar}]
			}
			if !ok {
				msg, ok = yyXErrors[yyXError{yyshift, -1}]
			}
			if !ok || msg == "" {
				msg = "syntax error"
			}
			yylex.Error(msg)
			Nerrs++
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				row := yyParseTab[yyS[yyp].yys]
				if yyError < len(row) {
					yyn = int(row[yyError]) + yyTabOfs
					if yyn > 0 { // hit
						if yyDebug >= 2 {
							__yyfmt__.Printf("error recovery found error shift in state %d\n", yyS[yyp].yys)
						}
						yystate = yyn /* simulate a shift of "error" */
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery failed\n")
			}
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yySymName(yychar))
			}
			if yychar == yyEOFCode {
				goto ret1
			}

			yychar = -1
			goto yynewstate /* try again in the same state */
		}
	}

	r := -yyn
	x0 := yyReductions[r]
	x, n := x0.xsym, x0.components
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= n
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	exState := yystate
	yystate = int(yyParseTab[yyS[yyp].yys][x]) + yyTabOfs
	/* reduction by production r */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce using rule %v (%s), and goto state %d\n", r, yySymNames[x], yystate)
	}

	switch r {
	case 2:
		{
			yylex.(*lexer).expr = yyS[yypt-0].item.(ast.ExprNode)
		}
	case 3:
		{
			yyVAL.item = &ast.AlterTableStmt{
				Table: yyS[yypt-1].item.(*ast.TableName),
				Specs: yyS[yypt-0].item.([]*ast.AlterTableSpec),
			}
		}
	case 4:
		{
			yyVAL.item = &ast.AlterTableSpec{
				Tp:      ast.AlterTableOption,
				Options: yyS[yypt-0].item.([]*ast.TableOption),
			}
		}
	case 5:
		{
			yyVAL.item = &ast.AlterTableSpec{
				Tp:       ast.AlterTableAddColumn,
				Column:   yyS[yypt-1].item.(*ast.ColumnDef),
				Position: yyS[yypt-0].item.(*ast.ColumnPosition),
			}
		}
	case 6:
		{
			constraint := yyS[yypt-0].item.(*ast.Constraint)
			yyVAL.item = &ast.AlterTableSpec{
				Tp:         ast.AlterTableAddConstraint,
				Constraint: constraint,
			}
		}
	case 7:
		{
			yyVAL.item = &ast.AlterTableSpec{
				Tp:         ast.AlterTableDropColumn,
				ColumnName: yyS[yypt-0].item.(*ast.ColumnName),
			}
		}
	case 8:
		{
			yyVAL.item = &ast.AlterTableSpec{Tp: ast.AlterTableDropPrimaryKey}
		}
	case 9:
		{
			yyVAL.item = &ast.AlterTableSpec{
				Tp:   ast.AlterTableDropIndex,
				Name: yyS[yypt-0].item.(string),
			}
		}
	case 10:
		{
			yyVAL.item = &ast.AlterTableSpec{
				Tp:   ast.AlterTableDropForeignKey,
				Name: yyS[yypt-0].item.(string),
			}
		}
	case 15:
		{
			yyVAL.item = &ast.ColumnPosition{Tp: ast.ColumnPositionNone}
		}
	case 16:
		{
			yyVAL.item = &ast.ColumnPosition{Tp: ast.ColumnPositionFirst}
		}
	case 17:
		{
			yyVAL.item = &ast.ColumnPosition{
				Tp:             ast.ColumnPositionAfter,
				RelativeColumn: yyS[yypt-0].item.(*ast.ColumnName),
			}
		}
	case 18:
		{
			yyVAL.item = []*ast.AlterTableSpec{yyS[yypt-0].item.(*ast.AlterTableSpec)}
		}
	case 19:
		{
			yyVAL.item = append(yyS[yypt-2].item.([]*ast.AlterTableSpec), yyS[yypt-0].item.(*ast.AlterTableSpec))
		}
	case 20:
		{
			yyVAL.item = nil
		}
	case 21:
		{
			yyVAL.item = nil
		}
	case 22:
		{
			yyVAL.item = yyS[yypt-0].item.(string)
		}
	case 24:
		{
			yyVAL.item = &ast.Assignment{Column: yyS[yypt-2].item.(*ast.ColumnName), Expr: yyS[yypt-0].item.(ast.ExprNode)}
		}
	case 25:
		{
			yyVAL.item = []*ast.Assignment{yyS[yypt-0].item.(*ast.Assignment)}
		}
	case 26:
		{
			yyVAL.item = append(yyS[yypt-2].item.([]*ast.Assignment), yyS[yypt-0].item.(*ast.Assignment))
		}
	case 27:
		{
			yyVAL.item = []*ast.Assignment{}
		}
	case 29:
		{
			yyVAL.item = &ast.BeginStmt{}
		}
	case 30:
		{
			yyVAL.item = &ast.BeginStmt{}
		}
	case 31:
		{
			yyVAL.item = &ast.ColumnDef{Name: yyS[yypt-2].item.(*ast.ColumnName), Tp: yyS[yypt-1].item.(*types.FieldType), Options: yyS[yypt-0].item.([]*ast.ColumnOption)}
		}
	case 32:
		{
			yyVAL.item = &ast.ColumnName{Name: model.NewCIStr(yyS[yypt-0].item.(string))}
		}
	case 33:
		{
			yyVAL.item = &ast.ColumnName{Table: model.NewCIStr(yyS[yypt-2].item.(string)), Name: model.NewCIStr(yyS[yypt-0].item.(string))}
		}
	case 34:
		{
			yyVAL.item = &ast.ColumnName{Schema: model.NewCIStr(yyS[yypt-4].item.(string)), Table: model.NewCIStr(yyS[yypt-2].item.(string)), Name: model.NewCIStr(yyS[yypt-0].item.(string))}
		}
	case 35:
		{
			yyVAL.item = []*ast.ColumnName{yyS[yypt-0].item.(*ast.ColumnName)}
		}
	case 36:
		{
			yyVAL.item = append(yyS[yypt-2].item.([]*ast.ColumnName), yyS[yypt-0].item.(*ast.ColumnName))
		}
	case 37:
		{
			yyVAL.item = []*ast.ColumnName{}
		}
	case 38:
		{
			yyVAL.item = []*ast.ColumnName{}
		}
	case 39:
		{
			yyVAL.item = yyS[yypt-1].item.([]*ast.ColumnName)
		}
	case 40:
		{
			yyVAL.item = &ast.CommitStmt{}
		}
	case 41:
		{
			yyVAL.item = &ast.ColumnOption{Tp: ast.ColumnOptionNotNull}
		}
	case 42:
		{
			yyVAL.item = &ast.ColumnOption{Tp: ast.ColumnOptionNull}
		}
	case 43:
		{
			yyVAL.item = &ast.ColumnOption{Tp: ast.ColumnOptionAutoIncrement}
		}
	case 44:
		{
			yyVAL.item = &ast.ColumnOption{Tp: ast.ColumnOptionPrimaryKey}
		}
	case 45:
		{
			yyVAL.item = &ast.ColumnOption{Tp: ast.ColumnOptionUniq}
		}
	case 46:
		{
			yyVAL.item = &ast.ColumnOption{Tp: ast.ColumnOptionUniqKey}
		}
	case 47:
		{
			yyVAL.item = &ast.ColumnOption{Tp: ast.ColumnOptionDefaultValue, Expr: yyS[yypt-0].item.(ast.ExprNode)}
		}
	case 48:
		{
			yyVAL.item = &ast.ColumnOption{Tp: ast.ColumnOptionOnUpdate, Expr: yyS[yypt-0].item.(ast.ExprNode)}
		}
	case 49:
		{
			yyVAL.item = &ast.ColumnOption{Tp: ast.ColumnOptionComment}
		}
	case 50:
		{
			// See: https://dev.mysql.com/doc/refman/5.7/en/create-table.html
			// The CHECK clause is parsed but ignored by all storage engines.
			yyVAL.item = nil
		}
	case 51:
		{
			yyVAL.item = []*ast.ColumnOption{yyS[yypt-0].item.(*ast.ColumnOption)}
		}
	case 52:
		{
			yyVAL.item = append(yyS[yypt-1].item.([]*ast.ColumnOption), yyS[yypt-0].item.(*ast.ColumnOption))
		}
	case 53:
		{
			yyVAL.item = []*ast.ColumnOption{}
		}
	case 54:
		{
			yyVAL.item = yyS[yypt-0].item.([]*ast.ColumnOption)
		}
	case 55:
		{
			yyVAL.item = &ast.Constraint{Tp: ast.ConstraintPrimaryKey, Keys: yyS[yypt-1].item.([]*ast.IndexColName)}
		}
	case 56:
		{
			yyVAL.item = &ast.Constraint{
				Tp:   ast.ConstraintFulltext,
				Keys: yyS[yypt-1].item.([]*ast.IndexColName),
				Name: yyS[yypt-3].item.(string),
			}
		}
	case 57:
		{
			yyVAL.item = &ast.Constraint{
				Tp:   ast.ConstraintIndex,
				Keys: yyS[yypt-1].item.([]*ast.IndexColName),
				Name: yyS[yypt-3].item.(string),
			}
		}
	case 58:
		{
			yyVAL.item = &ast.Constraint{
				Tp:   ast.ConstraintKey,
				Keys: yyS[yypt-1].item.([]*ast.IndexColName),
				Name: yyS[yypt-3].item.(string)}
		}
	case 59:
		{
			yyVAL.item = &ast.Constraint{
				Tp:   ast.ConstraintUniq,
				Keys: yyS[yypt-1].item.([]*ast.IndexColName),
				Name: yyS[yypt-3].item.(string)}
		}
	case 60:
		{
			yyVAL.item = &ast.Constraint{
				Tp:   ast.ConstraintUniqIndex,
				Keys: yyS[yypt-1].item.([]*ast.IndexColName),
				Name: yyS[yypt-3].item.(string)}
		}
	case 61:
		{
			yyVAL.item = &ast.Constraint{
				Tp:   ast.ConstraintUniqKey,
				Keys: yyS[yypt-1].item.([]*ast.IndexColName),
				Name: yyS[yypt-3].item.(string)}
		}
	case 62:
		{
			yyVAL.item = &ast.Constraint{
				Tp:    ast.ConstraintForeignKey,
				Keys:  yyS[yypt-2].item.([]*ast.IndexColName),
				Name:  yyS[yypt-4].item.(string),
				Refer: yyS[yypt-0].item.(*ast.ReferenceDef),
			}
		}
	case 63:
		{
			yyVAL.item = &ast.ReferenceDef{Table: yyS[yypt-3].item.(*ast.TableName), IndexColNames: yyS[yypt-1].item.([]*ast.IndexColName)}
		}
	case 66:
		{
			yyVAL.item = &ast.IdentifierExpr{Name: model.NewCIStr("CURRENT_TIMESTAMP")}
		}
	case 70:
		{
			yyVAL.item = ast.ValueExpr{Val: yyS[yypt-0].item}
		}
	case 71:
		{
			yyVAL.item = &ast.UnaryOperationExpr{Op: opcode.Plus, V: &ast.ValueExpr{Val: yyS[yypt-0].item}}
		}
	case 72:
		{
			yyVAL.item = &ast.UnaryOperationExpr{Op: opcode.Minus, V: &ast.ValueExpr{Val: yyS[yypt-0].item}}
		}
	case 75:
		{
			yyVAL.item = &ast.CreateIndexStmt{
				Unique:        yyS[yypt-7].item.(bool),
				IndexName:     yyS[yypt-5].item.(string),
				Table:         yyS[yypt-3].item.(*ast.TableName),
				IndexColNames: yyS[yypt-1].item.([]*ast.IndexColName),
			}
			if yylex.(*lexer).root {
				break
			}
		}
	case 76:
		{
			yyVAL.item = false
		}
	case 77:
		{
			yyVAL.item = true
		}
	case 78:
		{
			//Order is parsed but just ignored as MySQL did
			yyVAL.item = &ast.IndexColName{Column: yyS[yypt-2].item.(*ast.ColumnName), Length: yyS[yypt-1].item.(int)}
		}
	case 79:
		{
			yyVAL.item = []*ast.IndexColName{}
		}
	case 80:
		{
			yyVAL.item = []*ast.IndexColName{yyS[yypt-0].item.(*ast.IndexColName)}
		}
	case 81:
		{
			yyVAL.item = append(yyS[yypt-2].item.([]*ast.IndexColName), yyS[yypt-0].item.(*ast.IndexColName))
		}
	case 82:
		{
			yyVAL.item = &ast.CreateDatabaseStmt{
				IfNotExists: yyS[yypt-2].item.(bool),
				Name:        yyS[yypt-1].item.(string),
				Options:     yyS[yypt-0].item.([]*ast.DatabaseOption),
			}

			if yylex.(*lexer).root {
				break
			}
		}
	case 84:
		{
			yyVAL.item = &ast.DatabaseOption{Tp: ast.DatabaseOptionCharset, Value: yyS[yypt-0].item.(string)}
		}
	case 85:
		{
			yyVAL.item = &ast.DatabaseOption{Tp: ast.DatabaseOptionCollate, Value: yyS[yypt-0].item.(string)}
		}
	case 86:
		{
			yyVAL.item = []*ast.DatabaseOption{}
		}
	case 88:
		{
			yyVAL.item = []*ast.DatabaseOption{yyS[yypt-0].item.(*ast.DatabaseOption)}
		}
	case 89:
		{
			yyVAL.item = append(yyS[yypt-1].item.([]*ast.DatabaseOption), yyS[yypt-0].item.(*ast.DatabaseOption))
		}
	case 90:
		{
			tes := yyS[yypt-2].item.([]interface{})
			var columnDefs []*ast.ColumnDef
			var constraints []*ast.Constraint
			for _, te := range tes {
				switch te := te.(type) {
				case *ast.ColumnDef:
					columnDefs = append(columnDefs, te)
				case *ast.Constraint:
					constraints = append(constraints, te)
				}
			}
			if len(columnDefs) == 0 {
				yylex.(*lexer).err("Column Definition List can't be empty.")
				return 1
			}
			yyVAL.item = &ast.CreateTableStmt{
				Table:       yyS[yypt-4].item.(*ast.TableName),
				IfNotExists: yyS[yypt-5].item.(bool),
				Cols:        columnDefs,
				Constraints: constraints,
				Options:     yyS[yypt-0].item.([]*ast.TableOption),
			}
		}
	case 91:
		{
			yyVAL.item = yyS[yypt-0].item
		}
	case 92:
		{
			yyVAL.item = nil
		}
	case 96:
		{
			yyVAL.item = &ast.DoStmt{
				Exprs: yyS[yypt-0].item.([]ast.ExprNode),
			}
		}
	case 97:
		{
			// Single Table
			x := &ast.DeleteStmt{
				TableRefs:   &ast.Join{Left: &ast.TableSource{Source: yyS[yypt-3].item.(ast.Node)}, Right: nil},
				LowPriority: yyS[yypt-7].item.(bool),
				Quick:       yyS[yypt-6].item.(bool),
				Ignore:      yyS[yypt-5].item.(bool),
				Order:       yyS[yypt-1].item.([]*ast.OrderByItem),
			}
			if yyS[yypt-2].item != nil {
				x.Where = yyS[yypt-2].item.(ast.ExprNode)
			}

			if yyS[yypt-0].item != nil {
				x.Limit = yyS[yypt-0].item.(*ast.Limit)
			}

			yyVAL.item = x
			if yylex.(*lexer).root {
				break
			}
		}
	case 98:
		{
			// Multiple Table
			x := &ast.DeleteStmt{
				LowPriority: yyS[yypt-6].item.(bool),
				Quick:       yyS[yypt-5].item.(bool),
				Ignore:      yyS[yypt-4].item.(bool),
				MultiTable:  true,
				BeforeFrom:  true,
				Tables:      yyS[yypt-3].item.([]*ast.TableName),
				TableRefs:   yyS[yypt-1].item.(*ast.Join),
			}
			if yyS[yypt-0].item != nil {
				x.Where = yyS[yypt-0].item.(ast.ExprNode)
			}
			yyVAL.item = x
			if yylex.(*lexer).root {
				break
			}
		}
	case 99:
		{
			// Multiple Table
			x := &ast.DeleteStmt{
				LowPriority: yyS[yypt-7].item.(bool),
				Quick:       yyS[yypt-6].item.(bool),
				Ignore:      yyS[yypt-5].item.(bool),
				MultiTable:  true,
				Tables:      yyS[yypt-3].item.([]*ast.TableName),
				TableRefs:   yyS[yypt-1].item.(*ast.Join),
			}
			if yyS[yypt-0].item != nil {
				x.Where = yyS[yypt-0].item.(ast.ExprNode)
			}
			yyVAL.item = x
			if yylex.(*lexer).root {
				break
			}
		}
	case 102:
		{
			yyVAL.item = &ast.DropDatabaseStmt{IfExists: yyS[yypt-1].item.(bool), Name: yyS[yypt-0].item.(string)}
			if yylex.(*lexer).root {
				break
			}
		}
	case 103:
		{
			yyVAL.item = &ast.DropIndexStmt{IfExists: yyS[yypt-3].item.(bool), IndexName: yyS[yypt-2].item.(string), Table: yyS[yypt-0].item.(*ast.TableName)}
		}
	case 104:
		{
			yyVAL.item = &ast.DropTableStmt{Tables: yyS[yypt-0].item.([]*ast.TableName)}
			if yylex.(*lexer).root {
				break
			}
		}
	case 105:
		{
			yyVAL.item = &ast.DropTableStmt{IfExists: true, Tables: yyS[yypt-0].item.([]*ast.TableName)}
			if yylex.(*lexer).root {
				break
			}
		}
	case 108:
		{
			yyVAL.item = nil
		}
	case 112:
		{
			yyVAL.item = &ast.ExplainStmt{
				Stmt: &ast.ShowStmt{
					Tp:    ast.ShowTables,
					Table: yyS[yypt-0].item.(*ast.TableName),
				},
			}
		}
	case 113:
		{
			yyVAL.item = &ast.ExplainStmt{
				Stmt: &ast.ShowStmt{
					Tp:     ast.ShowColumns,
					Table:  yyS[yypt-1].item.(*ast.TableName),
					Column: yyS[yypt-0].item.(*ast.ColumnName),
				},
			}
		}
	case 114:
		{
			yyVAL.item = &ast.ExplainStmt{Stmt: yyS[yypt-0].item.(ast.StmtNode)}
		}
	case 115:
		{
			switch v := yyS[yypt-0].item.(type) {
			case int64:
				yyVAL.item = uint64(v)
			case uint64:
				yyVAL.item = uint64(v)
			}
		}
	case 117:
		{
			yyVAL.item = &ast.BinaryOperationExpr{Op: opcode.OrOr, L: yyS[yypt-2].item.(ast.ExprNode), R: yyS[yypt-0].item.(ast.ExprNode)}
		}
	case 118:
		{
			yyVAL.item = &ast.BinaryOperationExpr{Op: opcode.LogicXor, L: yyS[yypt-2].item.(ast.ExprNode), R: yyS[yypt-0].item.(ast.ExprNode)}
		}
	case 119:
		{
			yyVAL.item = &ast.BinaryOperationExpr{Op: opcode.AndAnd, L: yyS[yypt-2].item.(ast.ExprNode), R: yyS[yypt-0].item.(ast.ExprNode)}
		}
	case 120:
		{
			yyVAL.item = &ast.UnaryOperationExpr{Op: opcode.Not, V: yyS[yypt-0].item.(ast.ExprNode)}
		}
	case 121:
		{
			yyVAL.item = &ast.IsTruthExpr{Expr: yyS[yypt-3].item.(ast.ExprNode), Not: yyS[yypt-1].item.(bool), True: int64(1)}
		}
	case 122:
		{
			yyVAL.item = &ast.IsTruthExpr{Expr: yyS[yypt-3].item.(ast.ExprNode), Not: yyS[yypt-1].item.(bool), True: int64(0)}
		}
	case 123:
		{
			/* https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html#operator_is */
			yyVAL.item = &ast.IsNullExpr{Expr: yyS[yypt-3].item.(ast.ExprNode), Not: yyS[yypt-1].item.(bool)}
		}
	case 130:
		{
			yyVAL.item = []ast.ExprNode{yyS[yypt-0].item.(ast.ExprNode)}
		}
	case 131:
		{
			yyVAL.item = append(yyS[yypt-2].item.([]ast.ExprNode), yyS[yypt-0].item.(ast.ExprNode))
		}
	case 132:
		{
			yyVAL.item = []ast.ExprNode{}
		}
	case 134:
		{
			yyVAL.item = &ast.IsNullExpr{Expr: yyS[yypt-3].item.(ast.ExprNode), Not: yyS[yypt-1].item.(bool)}
		}
	case 135:
		{
			yyVAL.item = &ast.BinaryOperationExpr{Op: yyS[yypt-1].item.(opcode.Op), L: yyS[yypt-2].item.(ast.ExprNode), R: yyS[yypt-0].item.(ast.ExprNode)}
		}
	case 136:
		{
			yyVAL.item = &ast.CompareSubqueryExpr{Op: yyS[yypt-2].item.(opcode.Op), L: yyS[yypt-3].item.(ast.ExprNode), R: yyS[yypt-0].item.(*ast.SubqueryExpr), All: yyS[yypt-1].item.(bool)}
		}
	case 138:
		{
			yyVAL.item = opcode.GE
		}
	case 139:
		{
			yyVAL.item = opcode.GT
		}
	case 140:
		{
			yyVAL.item = opcode.LE
		}
	case 141:
		{
			yyVAL.item = opcode.LT
		}
	case 142:
		{
			yyVAL.item = opcode.NE
		}
	case 143:
		{
			yyVAL.item = opcode.NE
		}
	case 144:
		{
			yyVAL.item = opcode.EQ
		}
	case 145:
		{
			yyVAL.item = opcode.NullEQ
		}
	case 146:
		{
			yyVAL.item = false
		}
	case 147:
		{
			yyVAL.item = false
		}
	case 148:
		{
			yyVAL.item = true
		}
	case 149:
		{
			yyVAL.item = &ast.PatternInExpr{Expr: yyS[yypt-5].item.(ast.ExprNode), Not: yyS[yypt-4].item.(bool), List: yyS[yypt-1].item.([]ast.ExprNode)}
		}
	case 150:
		{
			yyVAL.item = &ast.PatternInExpr{Expr: yyS[yypt-3].item.(ast.ExprNode), Not: yyS[yypt-2].item.(bool), Sel: yyS[yypt-0].item.(*ast.SubqueryExpr)}
		}
	case 151:
		{
			yyVAL.item = &ast.BetweenExpr{
				Expr:  yyS[yypt-5].item.(ast.ExprNode),
				Left:  yyS[yypt-2].item.(ast.ExprNode),
				Right: yyS[yypt-0].item.(ast.ExprNode),
				Not:   yyS[yypt-4].item.(bool),
			}
		}
	case 152:
		{
			escape := yyS[yypt-0].item.(string)
			if len(escape) > 1 {
				yylex.(*lexer).errf("Incorrect arguments %s to ESCAPE", escape)
				return 1
			} else if len(escape) == 0 {
				escape = "\\"
			}
			yyVAL.item = &ast.PatternLikeExpr{
				Expr:    yyS[yypt-4].item.(ast.ExprNode),
				Pattern: yyS[yypt-1].item.(ast.ExprNode),
				Not:     yyS[yypt-3].item.(bool),
				Escape:  escape[0],
			}
		}
	case 153:
		{
			yyVAL.item = &ast.PatternRegexpExpr{Expr: yyS[yypt-3].item.(ast.ExprNode), Pattern: yyS[yypt-0].item.(ast.ExprNode), Not: yyS[yypt-2].item.(bool)}
		}
	case 157:
		{
			yyVAL.item = "\\"
		}
	case 158:
		{
			yyVAL.item = yyS[yypt-0].item
		}
	case 159:
		{
			yyVAL.item = false
		}
	case 160:
		{
			yyVAL.item = true
		}
	case 161:
		{
			yyVAL.item = &ast.SelectField{WildCard: &ast.WildCardField{}}
		}
	case 162:
		{
			tn := &ast.TableName{Name: model.NewCIStr(yyS[yypt-2].item.(string))}
			yyVAL.item = &ast.SelectField{WildCard: &ast.WildCardField{Table: tn}}
		}
	case 163:
		{
			tn := &ast.TableName{Schema: model.NewCIStr(yyS[yypt-4].item.(string)), Name: model.NewCIStr(yyS[yypt-2].item.(string))}
			yyVAL.item = &ast.SelectField{WildCard: &ast.WildCardField{Table: tn}}
		}
	case 164:
		{
			yyVAL.item = &ast.SelectField{Expr: yyS[yypt-1].item.(ast.ExprNode), Alias: yyS[yypt-0].item.(string)}
		}
	case 165:
		{
			yyVAL.item = ""
		}
	case 166:
		{
			yyVAL.item = yyS[yypt-0].item
		}
	case 167:
		{
			yyVAL.item = yyS[yypt-0].item
		}
	case 168:
		{
			yyVAL.item = yyS[yypt-0].item
		}
	case 169:
		{
			yyVAL.item = yyS[yypt-0].item
		}
	case 170:
		{
			yyVAL.item = yyS[yypt-0].item
		}
	case 171:
		{
			yyVAL.item = []*ast.SelectField{yyS[yypt-0].item.(*ast.SelectField)}
		}
	case 172:
		{
			yyVAL.item = append(yyS[yypt-2].item.([]*ast.SelectField), yyS[yypt-0].item.(*ast.SelectField))
		}
	case 173:
		{
			yyVAL.item = yyS[yypt-0].item.([]ast.ExprNode)
		}
	case 174:
		{
			yyVAL.item = []ast.ExprNode{yyS[yypt-0].item.(ast.ExprNode)}
		}
	case 175:
		{
			yyVAL.item = append(yyS[yypt-2].item.([]ast.ExprNode), yyS[yypt-0].item.(ast.ExprNode))
		}
	case 176:
		{
			yyVAL.item = nil
		}
	case 177:
		{
			yyVAL.item = yyS[yypt-0].item.(ast.ExprNode)
		}
	case 178:
		{
			yyVAL.item = false
		}
	case 179:
		{
			yyVAL.item = true
		}
	case 180:
		{
			yyVAL.item = false
		}
	case 181:
		{
			yyVAL.item = true
		}
	case 182:
		{
			yyVAL.item = false
		}
	case 183:
		{
			yyVAL.item = true
		}
	case 184:
		{
			yyVAL.item = ""
		}
	case 185:
		{
			//"index name"
			yyVAL.item = yyS[yypt-0].item.(string)
		}
	case 186:
		{
			// TODO: "index type"
			yyVAL.item = yyS[yypt-0].item.(string)
		}
	case 282:
		{
			x := yyS[yypt-1].item.(*ast.InsertStmt)
			x.Priority = yyS[yypt-5].item.(int)
			x.Table = yyS[yypt-2].item.(*ast.TableName)
			if yyS[yypt-0].item != nil {
				x.OnDuplicate = yyS[yypt-0].item.([]*ast.Assignment)
			}
			yyVAL.item = x
			if yylex.(*lexer).root {
				break
			}
		}
	case 285:
		{
			yyVAL.item = &ast.InsertStmt{
				Columns: yyS[yypt-3].item.([]*ast.ColumnName),
				Lists:   yyS[yypt-0].item.([][]ast.ExprNode)}
		}
	case 286:
		{
			yyVAL.item = &ast.InsertStmt{Columns: yyS[yypt-2].item.([]*ast.ColumnName), Select: yyS[yypt-0].item.(*ast.SelectStmt)}
		}
	case 287:
		{
			yyVAL.item = &ast.InsertStmt{Lists: yyS[yypt-0].item.([][]ast.ExprNode)}
		}
	case 288:
		{
			yyVAL.item = &ast.InsertStmt{Select: yyS[yypt-0].item.(*ast.SelectStmt)}
		}
	case 289:
		{
			yyVAL.item = &ast.InsertStmt{Setlist: yyS[yypt-0].item.([]*ast.Assignment)}
		}
	case 292:
		{
			yyVAL.item = [][]ast.ExprNode{[]ast.ExprNode{}}
		}
	case 293:
		{
			yyVAL.item = append([][]ast.ExprNode{[]ast.ExprNode{}}, yyS[yypt-0].item.([][]ast.ExprNode)...)
		}
	case 294:
		{
			yyVAL.item = [][]ast.ExprNode{yyS[yypt-1].item.([]ast.ExprNode)}
		}
	case 295:
		{
			yyVAL.item = append([][]ast.ExprNode{yyS[yypt-3].item.([]ast.ExprNode)}, yyS[yypt-0].item.([][]ast.ExprNode)...)
		}
	case 296:
		{
			yyVAL.item = &ast.Assignment{
				Column: yyS[yypt-2].item.(*ast.ColumnName),
				Expr:   yyS[yypt-0].item.(ast.ExprNode),
			}
		}
	case 297:
		{
			yyVAL.item = []*ast.Assignment{}
		}
	case 298:
		{
			yyVAL.item = []*ast.Assignment{yyS[yypt-0].item.(*ast.Assignment)}
		}
	case 299:
		{
			yyVAL.item = append(yyS[yypt-2].item.([]*ast.Assignment), yyS[yypt-0].item.(*ast.Assignment))
		}
	case 300:
		{
			yyVAL.item = nil
		}
	case 301:
		{
			yyVAL.item = yyS[yypt-0].item
		}
	case 302:
		{
			yyVAL.item = int64(0)
		}
	case 304:
		{
			yyVAL.item = int64(1)
		}
	case 310:
		{
			yyVAL.item = &ast.ValueExpr{Val: yyS[yypt-0].item}
		}
	case 311:
		{
			yyVAL.item = &ast.ColumnNameExpr{Name: yyS[yypt-0].item.(*ast.ColumnName)}
		}
	case 312:
		{
			yyVAL.item = &ast.ParenthesesExpr{Expr: yyS[yypt-1].item.(ast.ExprNode)}
		}
	case 313:
		{
			yyVAL.item = &ast.DefaultExpr{}
		}
	case 314:
		{
			yyVAL.item = &ast.DefaultExpr{Name: yyS[yypt-1].item.(*ast.ColumnName)}
		}
	case 315:
		{
			yyVAL.item = yyS[yypt-0].item
		}
	case 316:
		{
			yyVAL.item = &ast.ParamMarkerExpr{}
		}
	case 317:
		{
			values := append([]ast.ExprNode{yyS[yypt-3].item.(ast.ExprNode)}, yyS[yypt-1].item.([]ast.ExprNode)...)
			yyVAL.item = &ast.RowExpr{Values: values}
		}
	case 318:
		{
			values := append([]ast.ExprNode{yyS[yypt-3].item.(ast.ExprNode)}, yyS[yypt-1].item.([]ast.ExprNode)...)
			yyVAL.item = &ast.RowExpr{Values: values}
		}
	case 319:
		{
			yyVAL.item = &ast.ExistsSubqueryExpr{Sel: yyS[yypt-0].item.(*ast.SubqueryExpr)}
		}
	case 320:
		{
			yyVAL.item = yyS[yypt-0].item.([]*ast.OrderByItem)
		}
	case 321:
		{
			yyVAL.item = []*ast.OrderByItem{yyS[yypt-0].item.(*ast.OrderByItem)}
		}
	case 322:
		{
			yyVAL.item = append(yyS[yypt-2].item.([]*ast.OrderByItem), yyS[yypt-0].item.(*ast.OrderByItem))
		}
	case 323:
		{
			yyVAL.item = &ast.OrderByItem{Expr: yyS[yypt-1].item.(ast.ExprNode), Desc: yyS[yypt-0].item.(bool)}
		}
	case 324:
		{
			yyVAL.item = false // ASC by default
		}
	case 325:
		{
			yyVAL.item = false
		}
	case 326:
		{
			yyVAL.item = true
		}
	case 327:
		{
			yyVAL.item = nil
		}
	case 328:
		{
			yyVAL.item = yyS[yypt-0].item
		}
	case 332:
		{
			yyVAL.item = &ast.UnaryOperationExpr{Op: opcode.Not, V: yyS[yypt-0].item.(ast.ExprNode)}
		}
	case 333:
		{
			yyVAL.item = &ast.UnaryOperationExpr{Op: opcode.BitNeg, V: yyS[yypt-0].item.(ast.ExprNode)}
		}
	case 334:
		{
			yyVAL.item = &ast.UnaryOperationExpr{Op: opcode.Minus, V: yyS[yypt-0].item.(ast.ExprNode)}
		}
	case 335:
		{
			yyVAL.item = &ast.UnaryOperationExpr{Op: opcode.Plus, V: yyS[yypt-0].item.(ast.ExprNode)}
		}
	case 336:
		{
			// See: https://dev.mysql.com/doc/refman/5.7/en/cast-functions.html#operator_binary
			x := types.NewFieldType(mysql.TypeString)
			x.Charset = charset.CharsetBin
			x.Collate = charset.CharsetBin
			yyVAL.item = &ast.FuncCastExpr{
				Expr:         yyS[yypt-0].item.(ast.ExprNode),
				Tp:           x,
				FunctionType: ast.CastBinaryOperator,
			}
		}
	case 337:
		{
			// TODO: Create a builtin function hold expr and collation. When do evaluation, convert expr result using the collation.
			yyVAL.item = yyS[yypt-2].item
		}
	case 349:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-3].item.(string), Args: yyS[yypt-1].item.([]ast.ExprNode), Distinct: false}
		}
	case 350:
		{
			// See: https://dev.mysql.com/doc/refman/5.7/en/information-functions.html#function_current-user
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-0].item.(string)}
		}
	case 351:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-0].item.(string)}
		}
	case 352:
		{
			yyVAL.item = false
		}
	case 353:
		{
			yyVAL.item = false
		}
	case 354:
		{
			yyVAL.item = true
		}
	case 355:
		{
			yyVAL.item = true
		}
	case 356:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-4].item.(string), Args: yyS[yypt-2].item.([]ast.ExprNode), Distinct: yyS[yypt-2].item.(bool)}
		}
	case 357:
		{
			/* See: https://dev.mysql.com/doc/refman/5.7/en/cast-functions.html#function_cast */
			yyVAL.item = &ast.FuncCastExpr{
				Expr:         yyS[yypt-3].item.(ast.ExprNode),
				Tp:           yyS[yypt-1].item.(*types.FieldType),
				FunctionType: ast.CastFunction,
			}
		}
	case 358:
		{
			x := &ast.CaseExpr{WhenClauses: yyS[yypt-2].item.([]*ast.WhenClause)}
			if yyS[yypt-3].item != nil {
				x.Value = yyS[yypt-3].item.(ast.ExprNode)
			}
			if yyS[yypt-1].item != nil {
				x.ElseClause = yyS[yypt-1].item.(ast.ExprNode)
			}
			yyVAL.item = x
		}
	case 359:
		{
			// See: https://dev.mysql.com/doc/refman/5.7/en/cast-functions.html#function_convert
			yyVAL.item = &ast.FuncConvertExpr{
				Expr:    yyS[yypt-3].item.(ast.ExprNode),
				Charset: yyS[yypt-1].item.(string),
			}
		}
	case 360:
		{
			// See: https://dev.mysql.com/doc/refman/5.7/en/cast-functions.html#function_convert
			yyVAL.item = &ast.FuncCastExpr{
				Expr:         yyS[yypt-3].item.(ast.ExprNode),
				Tp:           yyS[yypt-1].item.(*types.FieldType),
				FunctionType: ast.CastConvertFunction,
			}
		}
	case 361:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-3].item.(string), Args: []ast.ExprNode{yyS[yypt-1].item.(ast.ExprNode)}}
		}
	case 362:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-2].item.(string)}
		}
	case 363:
		{
			// TODO: support qualified identifier for column_name
			yyVAL.item = &ast.ColumnNameExpr{Name: yyS[yypt-1].item.(*ast.ColumnName)}
		}
	case 364:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-3].item.(string), Args: yyS[yypt-1].item.([]ast.ExprNode)}
		}
	case 365:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-3].item.(string), Args: yyS[yypt-1].item.([]ast.ExprNode)}
		}
	case 366:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-3].item.(string), Args: yyS[yypt-1].item.([]ast.ExprNode)}
		}
	case 367:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-2].item.(string)}
		}
	case 368:
		{
			args := []ast.ExprNode{}
			if yyS[yypt-0].item != nil {
				args = append(args, yyS[yypt-0].item.(ast.ExprNode))
			}
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-1].item.(string), Args: args}
		}
	case 369:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-3].item.(string), Args: []ast.ExprNode{yyS[yypt-1].item.(ast.ExprNode)}}
		}
	case 370:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-3].item.(string), Args: yyS[yypt-1].item.([]ast.ExprNode)}
		}
	case 371:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-3].item.(string), Args: yyS[yypt-1].item.([]ast.ExprNode)}
		}
	case 372:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-3].item.(string), Args: []ast.ExprNode{yyS[yypt-1].item.(ast.ExprNode)}}
		}
	case 373:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-3].item.(string), Args: []ast.ExprNode{yyS[yypt-1].item.(ast.ExprNode)}}
		}
	case 374:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-3].item.(string), Args: []ast.ExprNode{yyS[yypt-1].item.(ast.ExprNode)}}
		}
	case 375:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-3].item.(string), Args: []ast.ExprNode{yyS[yypt-1].item.(ast.ExprNode)}}
		}
	case 376:
		{
			yyVAL.item = &ast.FuncExtractExpr{
				Unit: yyS[yypt-3].item.(string),
				Date: yyS[yypt-1].item.(ast.ExprNode),
			}
		}
	case 377:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-2].item.(string)}
		}
	case 378:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-3].item.(string), Args: []ast.ExprNode{yyS[yypt-1].item.(ast.ExprNode)}}
		}
	case 379:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-3].item.(string), Args: []ast.ExprNode{yyS[yypt-1].item.(ast.ExprNode)}}
		}
	case 380:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-3].item.(string), Args: []ast.ExprNode{yyS[yypt-1].item.(ast.ExprNode)}}
		}
	case 381:
		{
			yyVAL.item = &ast.FuncLocateExpr{
				SubStr: yyS[yypt-3].item.(ast.ExprNode),
				Str:    yyS[yypt-1].item.(ast.ExprNode),
			}
		}
	case 382:
		{
			yyVAL.item = &ast.FuncLocateExpr{
				SubStr: yyS[yypt-5].item.(ast.ExprNode),
				Str:    yyS[yypt-3].item.(ast.ExprNode),
				Pos:    yyS[yypt-1].item.(ast.ExprNode),
			}
		}
	case 383:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-3].item.(string), Args: []ast.ExprNode{yyS[yypt-1].item.(ast.ExprNode)}}
		}
	case 384:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-3].item.(string), Args: []ast.ExprNode{yyS[yypt-1].item.(ast.ExprNode)}}
		}
	case 385:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-3].item.(string), Args: []ast.ExprNode{yyS[yypt-1].item.(ast.ExprNode)}}
		}
	case 386:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-3].item.(string), Args: []ast.ExprNode{yyS[yypt-1].item.(ast.ExprNode)}}
		}
	case 387:
		{
			args := []ast.ExprNode{}
			if yyS[yypt-1].item != nil {
				args = append(args, yyS[yypt-1].item.(ast.ExprNode))
			}
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-3].item.(string), Args: args}
		}
	case 388:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-3].item.(string), Args: yyS[yypt-1].item.([]ast.ExprNode)}
		}
	case 389:
		{

			args := []ast.ExprNode{}
			if yyS[yypt-1].item != nil {
				args = append(args, yyS[yypt-1].item.(ast.ExprNode))
			}
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-3].item.(string), Args: args}
		}
	case 390:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-3].item.(string), Args: []ast.ExprNode{yyS[yypt-1].item.(ast.ExprNode)}}
		}
	case 391:
		{
			yyVAL.item = &ast.FuncSubstringExpr{
				StrExpr: yyS[yypt-3].item.(ast.ExprNode),
				Pos:     yyS[yypt-1].item.(ast.ExprNode),
			}
		}
	case 392:
		{
			yyVAL.item = &ast.FuncSubstringExpr{
				StrExpr: yyS[yypt-3].item.(ast.ExprNode),
				Pos:     yyS[yypt-1].item.(ast.ExprNode),
			}
		}
	case 393:
		{
			yyVAL.item = &ast.FuncSubstringExpr{
				StrExpr: yyS[yypt-5].item.(ast.ExprNode),
				Pos:     yyS[yypt-3].item.(ast.ExprNode),
				Len:     yyS[yypt-1].item.(ast.ExprNode),
			}
		}
	case 394:
		{
			yyVAL.item = &ast.FuncSubstringExpr{
				StrExpr: yyS[yypt-5].item.(ast.ExprNode),
				Pos:     yyS[yypt-3].item.(ast.ExprNode),
				Len:     yyS[yypt-1].item.(ast.ExprNode),
			}
		}
	case 395:
		{
			yyVAL.item = &ast.FuncSubstringIndexExpr{
				StrExpr: yyS[yypt-5].item.(ast.ExprNode),
				Delim:   yyS[yypt-3].item.(ast.ExprNode),
				Count:   yyS[yypt-1].item.(ast.ExprNode),
			}
		}
	case 396:
		{
			args := []ast.ExprNode{}
			if yyS[yypt-1].item != nil {
				args = append(args, yyS[yypt-1].item.(ast.ExprNode))
			}
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-3].item.(string), Args: args}
		}
	case 397:
		{
			yyVAL.item = &ast.FuncTrimExpr{
				Str: yyS[yypt-1].item.(ast.ExprNode),
			}
		}
	case 398:
		{
			yyVAL.item = &ast.FuncTrimExpr{
				Str:    yyS[yypt-1].item.(ast.ExprNode),
				RemStr: yyS[yypt-3].item.(ast.ExprNode),
			}
		}
	case 399:
		{
			yyVAL.item = &ast.FuncTrimExpr{
				Str:       yyS[yypt-1].item.(ast.ExprNode),
				Direction: yyS[yypt-3].item.(ast.TrimDirectionType),
			}
		}
	case 400:
		{
			yyVAL.item = &ast.FuncTrimExpr{
				Str:       yyS[yypt-1].item.(ast.ExprNode),
				RemStr:    yyS[yypt-3].item.(ast.ExprNode),
				Direction: yyS[yypt-4].item.(ast.TrimDirectionType),
			}
		}
	case 401:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-3].item.(string), Args: []ast.ExprNode{yyS[yypt-1].item.(ast.ExprNode)}}
		}
	case 402:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-3].item.(string), Args: []ast.ExprNode{yyS[yypt-1].item.(ast.ExprNode)}}
		}
	case 403:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-3].item.(string), Args: []ast.ExprNode{yyS[yypt-1].item.(ast.ExprNode)}}
		}
	case 404:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-3].item.(string), Args: yyS[yypt-1].item.([]ast.ExprNode)}
		}
	case 405:
		{
			yyVAL.item = ast.TrimBoth
		}
	case 406:
		{
			yyVAL.item = ast.TrimLeading
		}
	case 407:
		{
			yyVAL.item = ast.TrimTrailing
		}
	case 408:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-4].item.(string), Args: yyS[yypt-1].item.([]ast.ExprNode), Distinct: yyS[yypt-2].item.(bool)}
		}
	case 409:
		{
			args := []ast.ExprNode{&ast.ValueExpr{Val: ast.TypeStar("*")}}
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-4].item.(string), Args: args, Distinct: yyS[yypt-2].item.(bool)}
		}
	case 410:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-4].item.(string), Args: yyS[yypt-1].item.([]ast.ExprNode), Distinct: yyS[yypt-2].item.(bool)}
		}
	case 411:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-4].item.(string), Args: []ast.ExprNode{yyS[yypt-1].item.(ast.ExprNode)}, Distinct: yyS[yypt-2].item.(bool)}
		}
	case 412:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-4].item.(string), Args: []ast.ExprNode{yyS[yypt-1].item.(ast.ExprNode)}, Distinct: yyS[yypt-2].item.(bool)}
		}
	case 413:
		{
			yyVAL.item = &ast.FuncCallExpr{F: yyS[yypt-4].item.(string), Args: []ast.ExprNode{yyS[yypt-1].item.(ast.ExprNode)}, Distinct: yyS[yypt-2].item.(bool)}
		}
	case 414:
		{
			yyVAL.item = nil
		}
	case 415:
		{
			yyVAL.item = nil
		}
	case 416:
		{
			yyVAL.item = yyS[yypt-1].item
		}
	case 437:
		{
			yyVAL.item = nil
		}
	case 438:
		{
			yyVAL.item = yyS[yypt-0].item
		}
	case 439:
		{
			yyVAL.item = []*ast.WhenClause{yyS[yypt-0].item.(*ast.WhenClause)}
		}
	case 440:
		{
			yyVAL.item = append(yyS[yypt-1].item.([]*ast.WhenClause), yyS[yypt-0].item.(*ast.WhenClause))
		}
	case 441:
		{
			yyVAL.item = &ast.WhenClause{
				Expr:   yyS[yypt-2].item.(ast.ExprNode),
				Result: yyS[yypt-0].item.(ast.ExprNode),
			}
		}
	case 442:
		{
			yyVAL.item = nil
		}
	case 443:
		{
			yyVAL.item = yyS[yypt-0].item
		}
	case 444:
		{
			x := types.NewFieldType(mysql.TypeString)
			x.Flen = yyS[yypt-0].item.(int)
			x.Charset = charset.CharsetBin
			x.Collate = charset.CharsetBin
			yyVAL.item = x
		}
	case 445:
		{
			x := types.NewFieldType(mysql.TypeString)
			x.Flen = yyS[yypt-2].item.(int)
			if yyS[yypt-1].item.(bool) {
				x.Flag |= mysql.BinaryFlag
			}
			x.Charset = yyS[yypt-0].item.(string)
			yyVAL.item = x
		}
	case 446:
		{
			x := types.NewFieldType(mysql.TypeDate)
			yyVAL.item = x
		}
	case 447:
		{
			x := types.NewFieldType(mysql.TypeDatetime)
			x.Decimal = yyS[yypt-0].item.(int)
			yyVAL.item = x
		}
	case 448:
		{
			fopt := yyS[yypt-0].item.(*ast.FloatOpt)
			x := types.NewFieldType(mysql.TypeNewDecimal)
			x.Flen = fopt.Flen
			x.Decimal = fopt.Decimal
			yyVAL.item = x
		}
	case 449:
		{
			x := types.NewFieldType(mysql.TypeDuration)
			x.Decimal = yyS[yypt-0].item.(int)
			yyVAL.item = x
		}
	case 450:
		{
			x := types.NewFieldType(mysql.TypeLonglong)
			yyVAL.item = x
		}
	case 451:
		{
			x := types.NewFieldType(mysql.TypeLonglong)
			x.Flag |= mysql.UnsignedFlag
			yyVAL.item = x
		}
	case 452:
		{
			yyVAL.item = &ast.BinaryOperationExpr{Op: opcode.Or, L: yyS[yypt-2].item.(ast.ExprNode), R: yyS[yypt-0].item.(ast.ExprNode)}
		}
	case 453:
		{
			yyVAL.item = &ast.BinaryOperationExpr{Op: opcode.And, L: yyS[yypt-2].item.(ast.ExprNode), R: yyS[yypt-0].item.(ast.ExprNode)}
		}
	case 454:
		{
			yyVAL.item = &ast.BinaryOperationExpr{Op: opcode.LeftShift, L: yyS[yypt-2].item.(ast.ExprNode), R: yyS[yypt-0].item.(ast.ExprNode)}
		}
	case 455:
		{
			yyVAL.item = &ast.BinaryOperationExpr{Op: opcode.RightShift, L: yyS[yypt-2].item.(ast.ExprNode), R: yyS[yypt-0].item.(ast.ExprNode)}
		}
	case 456:
		{
			yyVAL.item = &ast.BinaryOperationExpr{Op: opcode.Plus, L: yyS[yypt-2].item.(ast.ExprNode), R: yyS[yypt-0].item.(ast.ExprNode)}
		}
	case 457:
		{
			yyVAL.item = &ast.BinaryOperationExpr{Op: opcode.Minus, L: yyS[yypt-2].item.(ast.ExprNode), R: yyS[yypt-0].item.(ast.ExprNode)}
		}
	case 458:
		{
			yyVAL.item = &ast.BinaryOperationExpr{Op: opcode.Mul, L: yyS[yypt-2].item.(ast.ExprNode), R: yyS[yypt-0].item.(ast.ExprNode)}
		}
	case 459:
		{
			yyVAL.item = &ast.BinaryOperationExpr{Op: opcode.Div, L: yyS[yypt-2].item.(ast.ExprNode), R: yyS[yypt-0].item.(ast.ExprNode)}
		}
	case 460:
		{
			yyVAL.item = &ast.BinaryOperationExpr{Op: opcode.Mod, L: yyS[yypt-2].item.(ast.ExprNode), R: yyS[yypt-0].item.(ast.ExprNode)}
		}
	case 461:
		{
			yyVAL.item = &ast.BinaryOperationExpr{Op: opcode.IntDiv, L: yyS[yypt-2].item.(ast.ExprNode), R: yyS[yypt-0].item.(ast.ExprNode)}
		}
	case 462:
		{
			yyVAL.item = &ast.BinaryOperationExpr{Op: opcode.Mod, L: yyS[yypt-2].item.(ast.ExprNode), R: yyS[yypt-0].item.(ast.ExprNode)}
		}
	case 463:
		{
			yyVAL.item = &ast.BinaryOperationExpr{Op: opcode.Xor, L: yyS[yypt-2].item.(ast.ExprNode), R: yyS[yypt-0].item.(ast.ExprNode)}
		}
	case 465:
		{
			yyVAL.item = ast.NoPriority
		}
	case 466:
		{
			yyVAL.item = ast.LowPriority
		}
	case 467:
		{
			yyVAL.item = ast.HighPriority
		}
	case 468:
		{
			yyVAL.item = ast.DelayedPriority
		}
	case 469:
		{
			yyVAL.item = false
		}
	case 470:
		{
			yyVAL.item = true
		}
	case 471:
		{
			yyVAL.item = &ast.TableName{Name: model.NewCIStr(yyS[yypt-0].item.(string))}
		}
	case 472:
		{
			yyVAL.item = &ast.TableName{Schema: model.NewCIStr(yyS[yypt-2].item.(string)), Name: model.NewCIStr(yyS[yypt-0].item.(string))}
		}
	case 473:
		{
			tbl := []*ast.TableName{yyS[yypt-0].item.(*ast.TableName)}
			yyVAL.item = tbl
		}
	case 474:
		{
			yyVAL.item = append(yyS[yypt-2].item.([]*ast.TableName), yyS[yypt-0].item.(*ast.TableName))
		}
	case 475:
		{
			yyVAL.item = false
		}
	case 476:
		{
			yyVAL.item = true
		}
	case 477:
		{
			var sqlText string
			var sqlVar *ast.VariableExpr
			switch yyS[yypt-0].item.(type) {
			case string:
				sqlText = yyS[yypt-0].item.(string)
			case *ast.VariableExpr:
				sqlVar = yyS[yypt-0].item.(*ast.VariableExpr)
			}
			yyVAL.item = &ast.PrepareStmt{
				InPrepare: true,
				Name:      yyS[yypt-2].item.(string),
				SQLText:   sqlText,
				SQLVar:    sqlVar,
			}
		}
	case 480:
		{
			yyVAL.item = &ast.ExecuteStmt{Name: yyS[yypt-0].item.(string)}
		}
	case 481:
		{
			yyVAL.item = &ast.ExecuteStmt{
				Name:      yyS[yypt-2].item.(string),
				UsingVars: yyS[yypt-0].item.([]ast.ExprNode),
			}
		}
	case 482:
		{
			yyVAL.item = []ast.ExprNode{yyS[yypt-0].item.(ast.ExprNode)}
		}
	case 483:
		{
			yyVAL.item = append(yyS[yypt-2].item.([]ast.ExprNode), yyS[yypt-0].item.(ast.ExprNode))
		}
	case 484:
		{
			yyVAL.item = &ast.DeallocateStmt{Name: yyS[yypt-0].item.(string)}
		}
	case 487:
		{
			yyVAL.item = &ast.RollbackStmt{}
		}
	case 489:
		{
			st := yyS[yypt-1].item.(*ast.SelectStmt)
			st.Unions = yyS[yypt-0].item.([]*ast.UnionClause)
			yyVAL.item = st
		}
	case 490:
		{
			st := yyS[yypt-3].item.(*ast.SubqueryExpr).Query
			st.Unions = yyS[yypt-2].item.([]*ast.UnionClause)
			st.UnionOrderBy = yyS[yypt-1].item.([]*ast.OrderByItem)
			st.UnionLimit = yyS[yypt-0].item.(*ast.Limit)
			yyVAL.item = st
		}
	case 491:
		{
			yyVAL.item = &ast.SelectStmt{
				Distinct: yyS[yypt-4].item.(bool),
				Fields:   yyS[yypt-3].item.([]*ast.SelectField),
				From:     nil,
				LockTp:   yyS[yypt-0].item.(ast.SelectLockType),
			}
		}
	case 492:
		{
			st := &ast.SelectStmt{
				Distinct: yyS[yypt-9].item.(bool),
				Fields:   yyS[yypt-8].item.([]*ast.SelectField),
				From:     yyS[yypt-6].item.(*ast.Join),
				LockTp:   yyS[yypt-0].item.(ast.SelectLockType),
			}

			if yyS[yypt-5].item != nil {
				st.Where = yyS[yypt-5].item.(ast.ExprNode)
			}

			if yyS[yypt-4].item != nil {
				st.GroupBy = yyS[yypt-4].item.([]ast.ExprNode)
			}

			if yyS[yypt-3].item != nil {
				st.Having = yyS[yypt-3].item.(ast.ExprNode)
			}

			if yyS[yypt-2].item != nil {
				st.OrderBy = yyS[yypt-2].item.([]*ast.OrderByItem)
			}

			if yyS[yypt-1].item != nil {
				st.Limit = yyS[yypt-1].item.(*ast.Limit)
			}

			yyVAL.item = st
		}
	case 495:
		{
			yyVAL.item = yyS[yypt-0].item
		}
	case 496:
		{
			if j, ok := yyS[yypt-0].item.(*ast.Join); ok {
				// if $1 is JoinRset, use it directly
				yyVAL.item = j
			} else {
				yyVAL.item = &ast.Join{Left: yyS[yypt-0].item.(ast.Node), Right: nil}
			}
		}
	case 497:
		{
			/* from a, b is default cross join */
			yyVAL.item = &ast.Join{Left: yyS[yypt-2].item.(ast.Node), Right: yyS[yypt-0].item.(ast.Node), Tp: ast.CrossJoin}
		}
	case 498:
		{
			yyVAL.item = yyS[yypt-0].item
		}
	case 499:
		{
			/*
			* ODBC escape syntax for outer join is { OJ join_table }
			* Use an Identifier for OJ
			 */
			yyVAL.item = yyS[yypt-1].item
		}
	case 500:
		{
			yyVAL.item = yyS[yypt-0].item
		}
	case 501:
		{
			yyVAL.item = yyS[yypt-0].item
		}
	case 502:
		{
			yyVAL.item = &ast.TableSource{Source: yyS[yypt-1].item.(*ast.TableName), Alias: yyS[yypt-0].item.(string)}
		}
	case 503:
		{
			yyVAL.item = &ast.TableSource{Source: yyS[yypt-2].item.(*ast.SelectStmt), Alias: yyS[yypt-0].item.(string)}
		}
	case 504:
		{
			yyVAL.item = yyS[yypt-1].item
		}
	case 505:
		{
			yyVAL.item = ""
		}
	case 506:
		{
			yyVAL.item = yyS[yypt-0].item
		}
	case 507:
		{
			yyVAL.item = yyS[yypt-0].item
		}
	case 508:
		{
			yyVAL.item = yyS[yypt-0].item
		}
	case 509:
		{
			yyVAL.item = &ast.Join{Left: yyS[yypt-2].item.(ast.Node), Right: yyS[yypt-0].item.(ast.Node), Tp: ast.CrossJoin}
		}
	case 510:
		{
			yyVAL.item = &ast.Join{Left: yyS[yypt-4].item.(ast.Node), Right: yyS[yypt-2].item.(ast.Node), Tp: ast.CrossJoin, On: yyS[yypt-0].item.(ast.ExprNode)}
		}
	case 511:
		{
			yyVAL.item = &ast.Join{Left: yyS[yypt-6].item.(ast.Node), Right: yyS[yypt-2].item.(ast.Node), Tp: yyS[yypt-5].item.(ast.JoinType), On: yyS[yypt-0].item.(ast.ExprNode)}
		}
	case 512:
		{
			yyVAL.item = ast.LeftJoin
		}
	case 513:
		{
			yyVAL.item = ast.RightJoin
		}
	case 514:
		{
			yyVAL.item = nil
		}
	case 519:
		{
			yyVAL.item = nil
		}
	case 520:
		{
			yyVAL.item = &ast.Limit{Count: yyS[yypt-0].item.(uint64)}
		}
	case 521:
		{
			yyVAL.item = nil
		}
	case 522:
		{
			yyVAL.item = &ast.Limit{Count: yyS[yypt-0].item.(uint64)}
		}
	case 523:
		{
			yyVAL.item = &ast.Limit{Offset: yyS[yypt-2].item.(uint64), Count: yyS[yypt-0].item.(uint64)}
		}
	case 524:
		{
			yyVAL.item = &ast.Limit{Offset: yyS[yypt-2].item.(uint64), Count: yyS[yypt-0].item.(uint64)}
		}
	case 525:
		{
			yyVAL.item = false
		}
	case 526:
		{
			yyVAL.item = false
		}
	case 527:
		{
			yyVAL.item = true
		}
	case 528:
		{
			// TODO: return calc_found_rows opt and support more other options
			yyVAL.item = yyS[yypt-1].item
		}
	case 529:
		{
			yyVAL.item = false
		}
	case 530:
		{
			yyVAL.item = true
		}
	case 531:
		{
			yyVAL.item = yyS[yypt-0].item
		}
	case 532:
		{
			yyVAL.item = nil
		}
	case 534:
		{
			s := yyS[yypt-1].item.(*ast.SelectStmt)
			src := yylex.(*lexer).src
			// See the implemention of yyParse function
			s.SetText(src[yyS[yypt-1].offset-1 : yyS[yypt].offset-1])
			yyVAL.item = &ast.SubqueryExpr{Query: s}
		}
	case 535:
		{
			yyVAL.item = ast.SelectLockNone
		}
	case 536:
		{
			yyVAL.item = ast.SelectLockForUpdate
		}
	case 537:
		{
			yyVAL.item = ast.SelectLockInShareMode
		}
	case 538:
		{
			yyVAL.item = &ast.UnionClause{Distinct: yyS[yypt-1].item.(bool), Select: yyS[yypt-0].item.(*ast.SelectStmt)}
		}
	case 539:
		{
			yyVAL.item = &ast.UnionClause{Distinct: yyS[yypt-1].item.(bool), Select: yyS[yypt-0].item.(*ast.SubqueryExpr).Query}
		}
	case 540:
		{
			yyVAL.item = []*ast.UnionClause{yyS[yypt-0].item.(*ast.UnionClause)}
		}
	case 541:
		{
			yyVAL.item = append(yyS[yypt-1].item.([]*ast.UnionClause), yyS[yypt-0].item.(*ast.UnionClause))
		}
	case 542:
		{
			yyVAL.item = []*ast.UnionClause{yyS[yypt-0].item.(*ast.UnionClause)}
		}
	case 543:
		{
			yyVAL.item = append(yyS[yypt-1].item.([]*ast.UnionClause), yyS[yypt-0].item.(*ast.UnionClause))
		}
	case 544:
		{
			yyVAL.item = true
		}
	case 545:
		{
			yyVAL.item = false
		}
	case 546:
		{
			yyVAL.item = true
		}
	case 547:
		{
			yyVAL.item = &ast.SetStmt{Variables: yyS[yypt-0].item.([]*ast.VariableAssignment)}
		}
	case 548:
		{
			yyVAL.item = &ast.SetCharsetStmt{Charset: yyS[yypt-0].item.(string)}
		}
	case 549:
		{
			yyVAL.item = &ast.SetCharsetStmt{
				Charset: yyS[yypt-2].item.(string),
				Collate: yyS[yypt-0].item.(string),
			}
		}
	case 550:
		{
			yyVAL.item = &ast.SetCharsetStmt{Charset: yyS[yypt-0].item.(string)}
		}
	case 551:
		{
			yyVAL.item = &ast.SetPwdStmt{Password: yyS[yypt-0].item.(string)}
		}
	case 552:
		{
			yyVAL.item = &ast.SetPwdStmt{User: yyS[yypt-2].item.(string), Password: yyS[yypt-0].item.(string)}
		}
	case 553:
		{
			yyVAL.item = &ast.VariableAssignment{Name: yyS[yypt-2].item.(string), Value: yyS[yypt-0].item.(ast.ExprNode), IsSystem: true}
		}
	case 554:
		{
			yyVAL.item = &ast.VariableAssignment{Name: yyS[yypt-2].item.(string), Value: yyS[yypt-0].item.(ast.ExprNode), IsGlobal: true, IsSystem: true}
		}
	case 555:
		{
			yyVAL.item = &ast.VariableAssignment{Name: yyS[yypt-2].item.(string), Value: yyS[yypt-0].item.(ast.ExprNode), IsSystem: true}
		}
	case 556:
		{
			yyVAL.item = &ast.VariableAssignment{Name: yyS[yypt-2].item.(string), Value: yyS[yypt-0].item.(ast.ExprNode), IsSystem: true}
		}
	case 557:
		{
			v := strings.ToLower(yyS[yypt-2].item.(string))
			var isGlobal bool
			if strings.HasPrefix(v, "@@global.") {
				isGlobal = true
				v = strings.TrimPrefix(v, "@@global.")
			} else if strings.HasPrefix(v, "@@session.") {
				v = strings.TrimPrefix(v, "@@session.")
			} else if strings.HasPrefix(v, "@@local.") {
				v = strings.TrimPrefix(v, "@@local.")
			} else if strings.HasPrefix(v, "@@") {
				v = strings.TrimPrefix(v, "@@")
			}
			yyVAL.item = &ast.VariableAssignment{Name: v, Value: yyS[yypt-0].item.(ast.ExprNode), IsGlobal: isGlobal, IsSystem: true}
		}
	case 558:
		{
			v := yyS[yypt-2].item.(string)
			v = strings.TrimPrefix(v, "@")
			yyVAL.item = &ast.VariableAssignment{Name: v, Value: yyS[yypt-0].item.(ast.ExprNode)}
		}
	case 559:
		{
			yyVAL.item = []*ast.VariableAssignment{}
		}
	case 560:
		{
			yyVAL.item = []*ast.VariableAssignment{yyS[yypt-0].item.(*ast.VariableAssignment)}
		}
	case 561:
		{
			yyVAL.item = append(yyS[yypt-2].item.([]*ast.VariableAssignment), yyS[yypt-0].item.(*ast.VariableAssignment))
		}
	case 564:
		{
			v := strings.ToLower(yyS[yypt-0].item.(string))
			var isGlobal bool
			if strings.HasPrefix(v, "@@global.") {
				isGlobal = true
				v = strings.TrimPrefix(v, "@@global.")
			} else if strings.HasPrefix(v, "@@session.") {
				v = strings.TrimPrefix(v, "@@session.")
			} else if strings.HasPrefix(v, "@@local.") {
				v = strings.TrimPrefix(v, "@@local.")
			} else if strings.HasPrefix(v, "@@") {
				v = strings.TrimPrefix(v, "@@")
			}
			yyVAL.item = &ast.VariableExpr{Name: v, IsGlobal: isGlobal, IsSystem: true}
		}
	case 565:
		{
			v := yyS[yypt-0].item.(string)
			v = strings.TrimPrefix(v, "@")
			yyVAL.item = &ast.VariableExpr{Name: v, IsGlobal: false, IsSystem: false}
		}
	case 566:
		{
			yyVAL.item = yyS[yypt-2].item.(string) + "@" + yyS[yypt-0].item.(string)
		}
	case 567:
		{
			yyVAL.item = yyS[yypt-0].item.(string)
		}
	case 568:
		{
			yyVAL.item = yyS[yypt-1].item.(string)
		}
	case 569:
		{
			yyVAL.item = yyS[yypt-0].item.(string)
		}
	case 570:
		{
			yyVAL.item = &ast.ShowStmt{Tp: ast.ShowEngines}
		}
	case 571:
		{
			yyVAL.item = &ast.ShowStmt{Tp: ast.ShowDatabases}
		}
	case 572:
		{
			yyVAL.item = &ast.ShowStmt{Tp: ast.ShowDatabases}
		}
	case 573:
		{
			yyVAL.item = &ast.ShowStmt{Tp: ast.ShowCharset}
		}
	case 574:
		{
			yyVAL.item = &ast.ShowStmt{
				Tp:     ast.ShowTables,
				DBName: yyS[yypt-1].item.(string),
				Full:   yyS[yypt-3].item.(bool),
				Where:  yyS[yypt-0].item.(ast.ExprNode),
			}
		}
	case 575:
		{
			yyVAL.item = &ast.ShowStmt{
				Tp:     ast.ShowColumns,
				Table:  yyS[yypt-1].item.(*ast.TableName),
				DBName: yyS[yypt-0].item.(string),
				Full:   yyS[yypt-3].item.(bool),
			}
		}
	case 576:
		{
			yyVAL.item = &ast.ShowStmt{Tp: ast.ShowWarnings}
		}
	case 577:
		{
			yyVAL.item = &ast.ShowStmt{
				Tp:          ast.ShowVariables,
				GlobalScope: yyS[yypt-2].item.(bool),
				Where:       yyS[yypt-0].item.(ast.ExprNode),
			}
		}
	case 578:
		{
			yyVAL.item = &ast.ShowStmt{
				Tp:    ast.ShowCollation,
				Where: yyS[yypt-0].item.(ast.ExprNode),
			}
		}
	case 579:
		{
			yyVAL.item = &ast.ShowStmt{
				Tp:    ast.ShowCreateTable,
				Table: yyS[yypt-0].item.(*ast.TableName),
			}
		}
	case 580:
		{
			yyVAL.item = nil
		}
	case 581:
		{
			yyVAL.item = &ast.PatternLikeExpr{Pattern: yyS[yypt-0].item.(ast.ExprNode)}
		}
	case 582:
		{
			yyVAL.item = yyS[yypt-0].item.(ast.ExprNode)
		}
	case 583:
		{
			yyVAL.item = false
		}
	case 584:
		{
			yyVAL.item = true
		}
	case 585:
		{
			yyVAL.item = false
		}
	case 586:
		{
			yyVAL.item = false
		}
	case 587:
		{
			yyVAL.item = true
		}
	case 588:
		{
			yyVAL.item = ""
		}
	case 589:
		{
			yyVAL.item = yyS[yypt-0].item.(string)
		}
	case 590:
		{
			yyVAL.item = yyS[yypt-0].item.(string)
		}
	case 591:
		{
			yyVAL.item = yyS[yypt-0].item.(*ast.TableName)
		}
	case 592:
		{
			yyVAL.item = yyS[yypt-0].item.(*ast.TableName)
		}
	case 622:
		{
			if yyS[yypt-0].item != nil {
				s := yyS[yypt-0].item.(ast.StmtNode)
				s.SetText(yylex.(*lexer).stmtText())
				yylex.(*lexer).list = append(yylex.(*lexer).list, s)
			}
		}
	case 623:
		{
			if yyS[yypt-0].item != nil {
				s := yyS[yypt-0].item.(ast.StmtNode)
				s.SetText(yylex.(*lexer).stmtText())
				yylex.(*lexer).list = append(yylex.(*lexer).list, s)
			}
		}
	case 624:
		{
			cst := yyS[yypt-0].item.(*ast.Constraint)
			if yyS[yypt-1].item != nil {
				cst.Name = yyS[yypt-1].item.(string)
			}
			yyVAL.item = cst
		}
	case 625:
		{
			yyVAL.item = yyS[yypt-0].item.(*ast.ColumnDef)
		}
	case 626:
		{
			yyVAL.item = yyS[yypt-0].item.(*ast.Constraint)
		}
	case 627:
		{
			/* Nothing to do now */
			yyVAL.item = nil
		}
	case 628:
		{
			if yyS[yypt-0].item != nil {
				yyVAL.item = []interface{}{yyS[yypt-0].item.(interface{})}
			} else {
				yyVAL.item = []interface{}{}
			}
		}
	case 629:
		{
			if yyS[yypt-0].item != nil {
				yyVAL.item = append(yyS[yypt-2].item.([]interface{}), yyS[yypt-0].item)
			} else {
				yyVAL.item = yyS[yypt-2].item
			}
		}
	case 630:
		{
			yyVAL.item = &ast.TableOption{Tp: ast.TableOptionEngine, StrValue: yyS[yypt-0].item.(string)}
		}
	case 631:
		{
			yyVAL.item = &ast.TableOption{Tp: ast.TableOptionEngine, StrValue: yyS[yypt-0].item.(string)}
		}
	case 632:
		{
			yyVAL.item = &ast.TableOption{Tp: ast.TableOptionCharset, StrValue: yyS[yypt-0].item.(string)}
		}
	case 633:
		{
			yyVAL.item = &ast.TableOption{Tp: ast.TableOptionCollate, StrValue: yyS[yypt-0].item.(string)}
		}
	case 634:
		{
			yyVAL.item = &ast.TableOption{Tp: ast.TableOptionAutoIncrement, UintValue: yyS[yypt-0].item.(uint64)}
		}
	case 635:
		{
			yyVAL.item = &ast.TableOption{Tp: ast.TableOptionComment, StrValue: yyS[yypt-0].item.(string)}
		}
	case 636:
		{
			yyVAL.item = &ast.TableOption{Tp: ast.TableOptionAvgRowLength, UintValue: yyS[yypt-0].item.(uint64)}
		}
	case 637:
		{
			yyVAL.item = &ast.TableOption{Tp: ast.TableOptionConnection, StrValue: yyS[yypt-0].item.(string)}
		}
	case 638:
		{
			yyVAL.item = &ast.TableOption{Tp: ast.TableOptionCheckSum, UintValue: yyS[yypt-0].item.(uint64)}
		}
	case 639:
		{
			yyVAL.item = &ast.TableOption{Tp: ast.TableOptionPassword, StrValue: yyS[yypt-0].item.(string)}
		}
	case 640:
		{
			yyVAL.item = &ast.TableOption{Tp: ast.TableOptionCompression, StrValue: yyS[yypt-0].item.(string)}
		}
	case 641:
		{
			yyVAL.item = &ast.TableOption{Tp: ast.TableOptionKeyBlockSize, UintValue: yyS[yypt-0].item.(uint64)}
		}
	case 642:
		{
			yyVAL.item = &ast.TableOption{Tp: ast.TableOptionMaxRows, UintValue: yyS[yypt-0].item.(uint64)}
		}
	case 643:
		{
			yyVAL.item = &ast.TableOption{Tp: ast.TableOptionMinRows, UintValue: yyS[yypt-0].item.(uint64)}
		}
	case 644:
		{
			yyVAL.item = []*ast.TableOption{}
		}
	case 646:
		{
			yyVAL.item = []*ast.TableOption{yyS[yypt-0].item.(*ast.TableOption)}
		}
	case 647:
		{
			yyVAL.item = append(yyS[yypt-1].item.([]*ast.TableOption), yyS[yypt-0].item.(*ast.TableOption))
		}
	case 648:
		{
			yyVAL.item = append(yyS[yypt-2].item.([]*ast.TableOption), yyS[yypt-0].item.(*ast.TableOption))
		}
	case 649:
		{
			yyVAL.item = &ast.TruncateTableStmt{Table: yyS[yypt-0].item.(*ast.TableName)}
		}
	case 650:
		{
			yyVAL.item = yyS[yypt-0].item
		}
	case 651:
		{
			yyVAL.item = yyS[yypt-0].item
		}
	case 652:
		{
			yyVAL.item = yyS[yypt-0].item
		}
	case 653:
		{
			x := types.NewFieldType(yyS[yypt-0].item.(byte))
			yyVAL.item = x
		}
	case 654:
		{
			x := types.NewFieldType(yyS[yypt-0].item.(byte))
			yyVAL.item = x
		}
	case 655:
		{
			x := types.NewFieldType(yyS[yypt-0].item.(byte))
			yyVAL.item = x
		}
	case 656:
		{
			x := types.NewFieldType(yyS[yypt-0].item.(byte))
			yyVAL.item = x
		}
	case 657:
		{
			x := types.NewFieldType(yyS[yypt-0].item.(byte))
			yyVAL.item = x
		}
	case 658:
		{
			x := types.NewFieldType(yyS[yypt-0].item.(byte))
			yyVAL.item = x
		}
	case 659:
		{
			// TODO: check flen 0
			x := types.NewFieldType(yyS[yypt-2].item.(byte))
			x.Flen = yyS[yypt-1].item.(int)
			for _, o := range yyS[yypt-0].item.([]*field.Opt) {
				if o.IsUnsigned {
					x.Flag |= mysql.UnsignedFlag
				}
				if o.IsZerofill {
					x.Flag |= mysql.ZerofillFlag
				}
			}
			yyVAL.item = x
		}
	case 660:
		{
			fopt := yyS[yypt-1].item.(*ast.FloatOpt)
			x := types.NewFieldType(yyS[yypt-2].item.(byte))
			x.Flen = fopt.Flen
			x.Decimal = fopt.Decimal
			for _, o := range yyS[yypt-0].item.([]*field.Opt) {
				if o.IsUnsigned {
					x.Flag |= mysql.UnsignedFlag
				}
				if o.IsZerofill {
					x.Flag |= mysql.ZerofillFlag
				}
			}
			yyVAL.item = x
		}
	case 661:
		{
			fopt := yyS[yypt-1].item.(*ast.FloatOpt)
			x := types.NewFieldType(yyS[yypt-2].item.(byte))
			x.Flen = fopt.Flen
			if x.Tp == mysql.TypeFloat {
				// Fix issue #312
				if x.Flen > 53 {
					yylex.(*lexer).errf("Float len(%d) should not be greater than 53", x.Flen)
					return 1
				}
				if x.Flen > 24 {
					x.Tp = mysql.TypeDouble
				}
			}
			x.Decimal = fopt.Decimal
			for _, o := range yyS[yypt-0].item.([]*field.Opt) {
				if o.IsUnsigned {
					x.Flag |= mysql.UnsignedFlag
				}
				if o.IsZerofill {
					x.Flag |= mysql.ZerofillFlag
				}
			}
			yyVAL.item = x
		}
	case 662:
		{
			x := types.NewFieldType(yyS[yypt-1].item.(byte))
			x.Flen = yyS[yypt-0].item.(int)
			if x.Flen == -1 || x.Flen == 0 {
				x.Flen = 1
			} else if x.Flen > 64 {
				yylex.(*lexer).errf("invalid field length %d for bit type, must in [1, 64]", x.Flen)
			}
			yyVAL.item = x
		}
	case 663:
		{
			yyVAL.item = mysql.TypeTiny
		}
	case 664:
		{
			yyVAL.item = mysql.TypeShort
		}
	case 665:
		{
			yyVAL.item = mysql.TypeInt24
		}
	case 666:
		{
			yyVAL.item = mysql.TypeLong
		}
	case 667:
		{
			yyVAL.item = mysql.TypeLong
		}
	case 668:
		{
			yyVAL.item = mysql.TypeLonglong
		}
	case 669:
		{
			yyVAL.item = mysql.TypeTiny
		}
	case 670:
		{
			yyVAL.item = mysql.TypeTiny
		}
	case 673:
		{
			yyVAL.item = mysql.TypeNewDecimal
		}
	case 674:
		{
			yyVAL.item = mysql.TypeNewDecimal
		}
	case 675:
		{
			yyVAL.item = mysql.TypeFloat
		}
	case 676:
		{
			yyVAL.item = mysql.TypeDouble
		}
	case 677:
		{
			yyVAL.item = mysql.TypeDouble
		}
	case 678:
		{
			yyVAL.item = mysql.TypeDouble
		}
	case 679:
		{
			yyVAL.item = mysql.TypeBit
		}
	case 680:
		{
			x := types.NewFieldType(mysql.TypeString)
			x.Flen = yyS[yypt-3].item.(int)
			if yyS[yypt-2].item.(bool) {
				x.Flag |= mysql.BinaryFlag
			}
			yyVAL.item = x
		}
	case 681:
		{
			x := types.NewFieldType(mysql.TypeString)
			if yyS[yypt-2].item.(bool) {
				x.Flag |= mysql.BinaryFlag
			}
			yyVAL.item = x
		}
	case 682:
		{
			x := types.NewFieldType(mysql.TypeVarchar)
			x.Flen = yyS[yypt-3].item.(int)
			if yyS[yypt-2].item.(bool) {
				x.Flag |= mysql.BinaryFlag
			}
			x.Charset = yyS[yypt-1].item.(string)
			x.Collate = yyS[yypt-0].item.(string)
			yyVAL.item = x
		}
	case 683:
		{
			x := types.NewFieldType(mysql.TypeString)
			x.Flen = yyS[yypt-0].item.(int)
			x.Charset = charset.CharsetBin
			x.Collate = charset.CharsetBin
			yyVAL.item = x
		}
	case 684:
		{
			x := types.NewFieldType(mysql.TypeVarchar)
			x.Flen = yyS[yypt-0].item.(int)
			x.Charset = charset.CharsetBin
			x.Collate = charset.CharsetBin
			yyVAL.item = x
		}
	case 685:
		{
			yyVAL.item = yyS[yypt-0].item.(*types.FieldType)
		}
	case 686:
		{
			x := yyS[yypt-3].item.(*types.FieldType)
			if yyS[yypt-2].item.(bool) {
				x.Flag |= mysql.BinaryFlag
			}
			x.Charset = yyS[yypt-1].item.(string)
			x.Collate = yyS[yypt-0].item.(string)
			yyVAL.item = x
		}
	case 687:
		{
			x := types.NewFieldType(mysql.TypeEnum)
			x.Elems = yyS[yypt-3].item.([]string)
			x.Charset = yyS[yypt-1].item.(string)
			x.Collate = yyS[yypt-0].item.(string)
			yyVAL.item = x
		}
	case 688:
		{
			x := types.NewFieldType(mysql.TypeSet)
			x.Elems = yyS[yypt-3].item.([]string)
			x.Charset = yyS[yypt-1].item.(string)
			x.Collate = yyS[yypt-0].item.(string)
			yyVAL.item = x
		}
	case 691:
		{
			x := types.NewFieldType(mysql.TypeTinyBlob)
			x.Charset = charset.CharsetBin
			x.Collate = charset.CharsetBin
			yyVAL.item = x
		}
	case 692:
		{
			x := types.NewFieldType(mysql.TypeBlob)
			x.Flen = yyS[yypt-0].item.(int)
			x.Charset = charset.CharsetBin
			x.Collate = charset.CharsetBin
			yyVAL.item = x
		}
	case 693:
		{
			x := types.NewFieldType(mysql.TypeMediumBlob)
			x.Charset = charset.CharsetBin
			x.Collate = charset.CharsetBin
			yyVAL.item = x
		}
	case 694:
		{
			x := types.NewFieldType(mysql.TypeLongBlob)
			x.Charset = charset.CharsetBin
			x.Collate = charset.CharsetBin
			yyVAL.item = x
		}
	case 695:
		{
			x := types.NewFieldType(mysql.TypeTinyBlob)
			yyVAL.item = x

		}
	case 696:
		{
			x := types.NewFieldType(mysql.TypeBlob)
			x.Flen = yyS[yypt-0].item.(int)
			yyVAL.item = x
		}
	case 697:
		{
			x := types.NewFieldType(mysql.TypeMediumBlob)
			yyVAL.item = x
		}
	case 698:
		{
			x := types.NewFieldType(mysql.TypeLongBlob)
			yyVAL.item = x
		}
	case 699:
		{
			x := types.NewFieldType(mysql.TypeDate)
			yyVAL.item = x
		}
	case 700:
		{
			x := types.NewFieldType(mysql.TypeDatetime)
			x.Decimal = yyS[yypt-0].item.(int)
			yyVAL.item = x
		}
	case 701:
		{
			x := types.NewFieldType(mysql.TypeTimestamp)
			x.Decimal = yyS[yypt-0].item.(int)
			yyVAL.item = x
		}
	case 702:
		{
			x := types.NewFieldType(mysql.TypeDuration)
			x.Decimal = yyS[yypt-0].item.(int)
			yyVAL.item = x
		}
	case 703:
		{
			x := types.NewFieldType(mysql.TypeYear)
			x.Flen = yyS[yypt-0].item.(int)
			yyVAL.item = x
		}
	case 704:
		{
			yyVAL.item = int(yyS[yypt-1].item.(uint64))
		}
	case 705:
		{
			/* -1 means unspecified field length*/
			yyVAL.item = types.UnspecifiedLength
		}
	case 706:
		{
			yyVAL.item = yyS[yypt-0].item.(int)
		}
	case 707:
		{
			yyVAL.item = &field.Opt{IsUnsigned: true}
		}
	case 708:
		{
			yyVAL.item = &field.Opt{IsZerofill: true, IsUnsigned: true}
		}
	case 709:
		{
			yyVAL.item = []*field.Opt{}
		}
	case 710:
		{
			yyVAL.item = append(yyS[yypt-1].item.([]*field.Opt), yyS[yypt-0].item.(*field.Opt))
		}
	case 711:
		{
			yyVAL.item = &ast.FloatOpt{Flen: types.UnspecifiedLength, Decimal: types.UnspecifiedLength}
		}
	case 712:
		{
			yyVAL.item = &ast.FloatOpt{Flen: yyS[yypt-0].item.(int), Decimal: types.UnspecifiedLength}
		}
	case 713:
		{
			yyVAL.item = yyS[yypt-0].item.(*ast.FloatOpt)
		}
	case 714:
		{
			yyVAL.item = &ast.FloatOpt{Flen: int(yyS[yypt-3].item.(uint64)), Decimal: int(yyS[yypt-1].item.(uint64))}
		}
	case 715:
		{
			yyVAL.item = false
		}
	case 716:
		{
			yyVAL.item = true
		}
	case 717:
		{
			yyVAL.item = ""
		}
	case 718:
		{
			yyVAL.item = yyS[yypt-0].item.(string)
		}
	case 721:
		{
			yyVAL.item = ""
		}
	case 722:
		{
			yyVAL.item = yyS[yypt-0].item.(string)
		}
	case 723:
		{
			yyVAL.item = []string{yyS[yypt-0].item.(string)}
		}
	case 724:
		{
			yyVAL.item = append(yyS[yypt-2].item.([]string), yyS[yypt-0].item.(string))
		}
	case 725:
		{
			yyVAL.item = yyS[yypt-0].item.(string)
		}
	case 726:
		{
			yyVAL.item = yyS[yypt-0].item.(string)
		}
	case 727:
		{
			// Single-table syntax
			r := &ast.Join{Left: yyS[yypt-5].item.(ast.Node), Right: nil}
			st := &ast.UpdateStmt{
				LowPriority: yyS[yypt-7].item.(bool),
				TableRefs:   r,
				List:        yyS[yypt-3].item.([]*ast.Assignment),
			}
			if yyS[yypt-2].item != nil {
				st.Where = yyS[yypt-2].item.(ast.ExprNode)
			}
			if yyS[yypt-1].item != nil {
				st.Order = yyS[yypt-1].item.([]*ast.OrderByItem)
			}
			if yyS[yypt-0].item != nil {
				st.Limit = yyS[yypt-0].item.(*ast.Limit)
			}
			yyVAL.item = st
			if yylex.(*lexer).root {
				break
			}
		}
	case 728:
		{
			// Multiple-table syntax
			st := &ast.UpdateStmt{
				LowPriority:   yyS[yypt-5].item.(bool),
				TableRefs:     yyS[yypt-3].item.(*ast.Join),
				List:          yyS[yypt-1].item.([]*ast.Assignment),
				MultipleTable: true,
			}
			if yyS[yypt-0].item != nil {
				st.Where = yyS[yypt-0].item.(ast.ExprNode)
			}
			yyVAL.item = st
			if yylex.(*lexer).root {
				break
			}
		}
	case 729:
		{
			yyVAL.item = &ast.UseStmt{DBName: yyS[yypt-0].item.(string)}
			if yylex.(*lexer).root {
				break
			}
		}
	case 730:
		{
			yyVAL.item = yyS[yypt-0].item.(ast.ExprNode)
		}
	case 731:
		{
			yyVAL.item = nil
		}
	case 732:
		{
			yyVAL.item = yyS[yypt-0].item
		}
	case 735:
		{
			// See: https://dev.mysql.com/doc/refman/5.7/en/create-user.html
			yyVAL.item = &ast.CreateUserStmt{
				IfNotExists: yyS[yypt-1].item.(bool),
				Specs:       yyS[yypt-0].item.([]*ast.UserSpec),
			}
		}
	case 736:
		{
			yyVAL.item = &ast.UserSpec{
				User:    yyS[yypt-1].item.(string),
				AuthOpt: yyS[yypt-0].item.(*ast.AuthOption),
			}
		}
	case 737:
		{
			yyVAL.item = []*ast.UserSpec{yyS[yypt-0].item.(*ast.UserSpec)}
		}
	case 738:
		{
			yyVAL.item = append(yyS[yypt-2].item.([]*ast.UserSpec), yyS[yypt-0].item.(*ast.UserSpec))
		}
	case 740:
		{
			yyVAL.item = &ast.AuthOption{
				AuthString:   yyS[yypt-0].item.(string),
				ByAuthString: true,
			}
		}
	case 741:
		{
			yyVAL.item = &ast.AuthOption{
				HashString: yyS[yypt-0].item.(string),
			}
		}

	}

	if yyEx != nil && yyEx.Reduced(r, exState, &yyVAL) {
		return -1
	}
	goto yystack /* stack new state and value */
}
