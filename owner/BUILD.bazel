load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "owner",
    srcs = [
        "manager.go",
        "mock.go",
    ],
    importpath = "github.com/pingcap/tidb/owner",
    visibility = ["//visibility:public"],
    deps = [
        "//metrics",
        "//util",
        "//util/logutil",
        "//vendor/github.com/pingcap/errors",
        "//vendor/github.com/pingcap/tidb/parser/terror",
        "//vendor/go.etcd.io/etcd/api/v3/mvccpb",
        "//vendor/go.etcd.io/etcd/api/v3/v3rpc/rpctypes",
        "//vendor/go.etcd.io/etcd/client/v3:client",
        "//vendor/go.etcd.io/etcd/client/v3/concurrency",
        "//vendor/go.uber.org/zap",
    ],
)

go_test(
    name = "owner_test",
    timeout = "short",
    srcs = [
        "fail_test.go",
        "main_test.go",
        "manager_test.go",
    ],
    embed = [":owner"],
    flaky = True,
    deps = [
        "//ddl",
        "//infoschema",
        "//store/mockstore",
        "//testkit/testsetup",
        "//util",
        "//util/logutil",
        "//vendor/github.com/pingcap/errors",
        "//vendor/github.com/pingcap/failpoint",
        "//vendor/github.com/pingcap/tidb/parser/terror",
        "//vendor/github.com/stretchr/testify/assert",
        "//vendor/github.com/stretchr/testify/require",
        "//vendor/go.etcd.io/etcd/client/v3:client",
        "//vendor/go.etcd.io/etcd/client/v3/concurrency",
        "//vendor/go.etcd.io/etcd/tests/v3/integration",
        "//vendor/go.uber.org/goleak",
        "//vendor/google.golang.org/grpc",
    ],
)
