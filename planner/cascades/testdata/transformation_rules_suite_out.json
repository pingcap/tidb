[
  {
    "Name": "TestPredicatePushDown",
    "Cases": [
      {
        "SQL": "select a, b from (select a, b from t as t1 order by a) as t2 where t2.b > 10",
        "Result": [
          "Group#0 Schema:[test.t.a,test.t.b], UniqueKey:[test.t.a]",
          "    Projection_5 input:[Group#1], test.t.a, test.t.b",
          "Group#1 Schema:[test.t.a,test.t.b], UniqueKey:[test.t.a]",
          "    Sort_3 input:[Group#2], test.t.a:asc",
          "Group#2 Schema:[test.t.a,test.t.b], UniqueKey:[test.t.a]",
          "    Projection_2 input:[Group#3], test.t.a, test.t.b",
          "Group#3 Schema:[test.t.a,test.t.b], UniqueKey:[test.t.a]",
          "    TableGather_7 input:[Group#4]",
          "Group#4 Schema:[test.t.a,test.t.b], UniqueKey:[test.t.a]",
          "    Selection_9 input:[Group#5], gt(test.t.b, 10)",
          "Group#5 Schema:[test.t.a,test.t.b], UniqueKey:[test.t.a]",
          "    TableScan_6 table:t1, pk col:test.t.a"
        ]
      },
      {
        "SQL": "select a, b from (select a, b from t as t1 order by a) as t2 where t2.a > 10",
        "Result": [
          "Group#0 Schema:[test.t.a,test.t.b], UniqueKey:[test.t.a]",
          "    Projection_5 input:[Group#1], test.t.a, test.t.b",
          "Group#1 Schema:[test.t.a,test.t.b], UniqueKey:[test.t.a]",
          "    Sort_3 input:[Group#2], test.t.a:asc",
          "Group#2 Schema:[test.t.a,test.t.b], UniqueKey:[test.t.a]",
          "    Projection_2 input:[Group#3], test.t.a, test.t.b",
          "Group#3 Schema:[test.t.a,test.t.b], UniqueKey:[test.t.a]",
          "    TableGather_7 input:[Group#4]",
          "Group#4 Schema:[test.t.a,test.t.b], UniqueKey:[test.t.a]",
          "    TableScan_10 table:t1, pk col:test.t.a, cond:[gt(test.t.a, 10)]"
        ]
      },
      {
        "SQL": "select a, b from (select a, b, a+b as a_b from t as t1) as t2 where a_b > 10 and b = 1",
        "Result": [
          "Group#0 Schema:[test.t.a,test.t.b], UniqueKey:[test.t.a]",
          "    Projection_4 input:[Group#1], test.t.a, test.t.b",
          "Group#1 Schema:[test.t.a,test.t.b,Column#13], UniqueKey:[test.t.a]",
          "    Projection_2 input:[Group#2], test.t.a, test.t.b, plus(test.t.a, test.t.b)->Column#13",
          "Group#2 Schema:[test.t.a,test.t.b], UniqueKey:[test.t.a]",
          "    TableGather_6 input:[Group#3]",
          "Group#3 Schema:[test.t.a,test.t.b], UniqueKey:[test.t.a]",
          "    Selection_8 input:[Group#4], eq(test.t.b, 1), gt(plus(test.t.a, test.t.b), 10)",
          "Group#4 Schema:[test.t.a,test.t.b], UniqueKey:[test.t.a]",
          "    TableScan_5 table:t1, pk col:test.t.a"
        ]
      },
      {
        "SQL": "select a, @i:=@i+1 as ii from (select a, @i:=0 from t as t1) as t2 where @i < 10",
        "Result": [
          "Group#0 Schema:[test.t.a,Column#14], UniqueKey:[test.t.a]",
          "    Projection_4 input:[Group#1], test.t.a, setvar(i, cast(plus(cast(getvar(i)), 1)))->Column#14",
          "Group#1 Schema:[test.t.a,Column#13], UniqueKey:[test.t.a]",
          "    Selection_3 input:[Group#2], lt(cast(getvar(\"i\")), 10)",
          "Group#2 Schema:[test.t.a,Column#13], UniqueKey:[test.t.a]",
          "    Projection_2 input:[Group#3], test.t.a, setvar(i, 0)->Column#13",
          "Group#3 Schema:[test.t.a], UniqueKey:[test.t.a]",
          "    TableGather_6 input:[Group#4]",
          "Group#4 Schema:[test.t.a], UniqueKey:[test.t.a]",
          "    TableScan_5 table:t1, pk col:test.t.a"
        ]
      },
      {
        "SQL": "select a, @i:=@i+1 as ii from (select a, @i:=0 from t as t1) as t2 where @i < 10 and a > 10",
        "Result": [
          "Group#0 Schema:[test.t.a,Column#14], UniqueKey:[test.t.a]",
          "    Projection_4 input:[Group#1], test.t.a, setvar(i, cast(plus(cast(getvar(i)), 1)))->Column#14",
          "Group#1 Schema:[test.t.a,Column#13], UniqueKey:[test.t.a]",
          "    Selection_8 input:[Group#2], lt(cast(getvar(\"i\")), 10)",
          "Group#2 Schema:[test.t.a,Column#13], UniqueKey:[test.t.a]",
          "    Projection_2 input:[Group#3], test.t.a, setvar(i, 0)->Column#13",
          "Group#3 Schema:[test.t.a], UniqueKey:[test.t.a]",
          "    TableGather_6 input:[Group#4]",
          "Group#4 Schema:[test.t.a], UniqueKey:[test.t.a]",
          "    TableScan_10 table:t1, pk col:test.t.a, cond:[gt(test.t.a, 10)]"
        ]
      },
      {
        "SQL": "select a, max(b) from t group by a having a > 1",
        "Result": [
          "Group#0 Schema:[test.t.a,Column#13], UniqueKey:[test.t.a,test.t.a]",
          "    Projection_3 input:[Group#1], test.t.a, Column#13",
          "Group#1 Schema:[Column#13,test.t.a], UniqueKey:[test.t.a,test.t.a]",
          "    Aggregation_2 input:[Group#2], group by:test.t.a, funcs:max(test.t.b), firstrow(test.t.a)",
          "Group#2 Schema:[test.t.a,test.t.b], UniqueKey:[test.t.a]",
          "    TableGather_6 input:[Group#3]",
          "Group#3 Schema:[test.t.a,test.t.b], UniqueKey:[test.t.a]",
          "    TableScan_10 table:t, pk col:test.t.a, cond:[gt(test.t.a, 1)]"
        ]
      },
      {
        "SQL": "select a, avg(b) from t group by a having a > 1 and max(b) > 10",
        "Result": [
          "Group#0 Schema:[test.t.a,Column#16], UniqueKey:[test.t.a,test.t.a]",
          "    Projection_5 input:[Group#1], test.t.a, Column#13",
          "Group#1 Schema:[test.t.a,Column#13,Column#14], UniqueKey:[test.t.a,test.t.a]",
          "    Projection_3 input:[Group#2], test.t.a, Column#13, Column#14",
          "Group#2 Schema:[Column#13,Column#14,test.t.a], UniqueKey:[test.t.a,test.t.a]",
          "    Selection_10 input:[Group#3], gt(Column#14, 10)",
          "Group#3 Schema:[Column#13,Column#14,test.t.a], UniqueKey:[test.t.a,test.t.a]",
          "    Aggregation_2 input:[Group#4], group by:test.t.a, funcs:avg(test.t.b), max(test.t.b), firstrow(test.t.a)",
          "Group#4 Schema:[test.t.a,test.t.b], UniqueKey:[test.t.a]",
          "    TableGather_7 input:[Group#5]",
          "Group#5 Schema:[test.t.a,test.t.b], UniqueKey:[test.t.a]",
          "    TableScan_12 table:t, pk col:test.t.a, cond:[gt(test.t.a, 1)]"
        ]
      },
      {
        "SQL": "select t1.a, t1.b, t2.b from t t1, t t2 where t1.a = t2.a and t2.b = t1.b and t1.a > 10 and t2.b > 10 and t1.a > t2.b",
        "Result": [
          "Group#0 Schema:[test.t.a,test.t.b,test.t.b]",
          "    Projection_5 input:[Group#1], test.t.a, test.t.b, test.t.b",
          "Group#1 Schema:[test.t.a,test.t.b,test.t.a,test.t.b]",
          "    Join_3 input:[Group#2,Group#3], inner join, equal:[eq(test.t.a, test.t.a) eq(test.t.b, test.t.b)], other cond:gt(test.t.a, test.t.b)",
          "Group#2 Schema:[test.t.a,test.t.b], UniqueKey:[test.t.a]",
          "    TableGather_7 input:[Group#4]",
          "Group#4 Schema:[test.t.a,test.t.b], UniqueKey:[test.t.a]",
          "    Selection_14 input:[Group#5], gt(test.t.a, test.t.b), gt(test.t.b, 10)",
          "Group#5 Schema:[test.t.a,test.t.b], UniqueKey:[test.t.a]",
          "    TableScan_13 table:t1, pk col:test.t.a, cond:[gt(test.t.a, 10)]",
          "Group#3 Schema:[test.t.a,test.t.b], UniqueKey:[test.t.a]",
          "    TableGather_9 input:[Group#6]",
          "Group#6 Schema:[test.t.a,test.t.b], UniqueKey:[test.t.a]",
          "    Selection_17 input:[Group#7], gt(test.t.a, test.t.b), gt(test.t.b, 10)",
          "Group#7 Schema:[test.t.a,test.t.b], UniqueKey:[test.t.a]",
          "    TableScan_16 table:t2, pk col:test.t.a, cond:[gt(test.t.a, 10)]"
        ]
      },
      {
        "SQL": "select t1.a, t1.b from t t1, t t2 where t1.a = t2.a and t1.a = 10 and t2.a = 5",
        "Result": [
          "Group#0 Schema:[test.t.a,test.t.b]",
          "    Projection_5 input:[Group#1], test.t.a, test.t.b",
          "Group#1 Schema:[test.t.a,test.t.b,test.t.a]",
          "    TableDual_10 rowcount:0"
        ]
      }
    ]
  },
  {
    "Name": "TestAggPushDownGather",
    "Cases": [
      {
        "SQL": "select a, sum(b) from t group by a",
        "Result": [
          "Group#0 Schema:[test.t.a,Column#13], UniqueKey:[test.t.a,test.t.a]",
          "    Projection_3 input:[Group#1], test.t.a, Column#13",
          "Group#1 Schema:[Column#13,test.t.a], UniqueKey:[test.t.a,test.t.a]",
          "    Aggregation_2 input:[Group#2], group by:test.t.a, funcs:sum(test.t.b), firstrow(test.t.a)",
          "    Aggregation_7 input:[Group#3], group by:test.t.a, funcs:sum(Column#14), firstrow(test.t.a)",
          "Group#2 Schema:[test.t.a,test.t.b], UniqueKey:[test.t.a]",
          "    TableGather_5 input:[Group#4]",
          "Group#4 Schema:[test.t.a,test.t.b], UniqueKey:[test.t.a]",
          "    TableScan_4 table:t, pk col:test.t.a",
          "Group#3 Schema:[Column#14,test.t.a]",
          "    TableGather_5 input:[Group#5]",
          "Group#5 Schema:[Column#14,test.t.a]",
          "    Aggregation_6 input:[Group#4], group by:test.t.a, funcs:sum(test.t.b)"
        ]
      },
      {
        "SQL": "select a, sum(b) from t group by a+c, a",
        "Result": [
          "Group#0 Schema:[test.t.a,Column#13], UniqueKey:[test.t.a]",
          "    Projection_3 input:[Group#1], test.t.a, Column#13",
          "Group#1 Schema:[Column#13,test.t.a], UniqueKey:[test.t.a]",
          "    Aggregation_2 input:[Group#2], group by:plus(test.t.a, test.t.c), test.t.a, funcs:sum(test.t.b), firstrow(test.t.a)",
          "    Aggregation_7 input:[Group#3], group by:Column#16, test.t.a, funcs:sum(Column#14), firstrow(test.t.a)",
          "Group#2 Schema:[test.t.a,test.t.b,test.t.c], UniqueKey:[test.t.a]",
          "    TableGather_5 input:[Group#4]",
          "Group#4 Schema:[test.t.a,test.t.b,test.t.c], UniqueKey:[test.t.a]",
          "    TableScan_4 table:t, pk col:test.t.a",
          "Group#3 Schema:[Column#14,Column#16,test.t.a]",
          "    TableGather_5 input:[Group#5]",
          "Group#5 Schema:[Column#14,Column#16,test.t.a]",
          "    Aggregation_6 input:[Group#4], group by:plus(test.t.a, test.t.c), test.t.a, funcs:sum(test.t.b)"
        ]
      },
      {
        "SQL": "select a, sum(b) from t group by sin(a)+sin(c)",
        "Result": [
          "Group#0 Schema:[test.t.a,Column#13], UniqueKey:[test.t.a]",
          "    Projection_3 input:[Group#1], test.t.a, Column#13",
          "Group#1 Schema:[Column#13,test.t.a], UniqueKey:[test.t.a]",
          "    Aggregation_2 input:[Group#2], group by:plus(sin(cast(test.t.a)), sin(cast(test.t.c))), funcs:sum(test.t.b), firstrow(test.t.a)",
          "Group#2 Schema:[test.t.a,test.t.b,test.t.c], UniqueKey:[test.t.a]",
          "    TableGather_5 input:[Group#3]",
          "Group#3 Schema:[test.t.a,test.t.b,test.t.c], UniqueKey:[test.t.a]",
          "    TableScan_4 table:t, pk col:test.t.a"
        ]
      }
    ]
  },
  {
    "Name": "TestTopNRules",
    "Cases": [
      {
        "SQL": "select b from t order by a limit 2",
        "Result": [
          "Group#0 Schema:[test.t.b]",
          "    Projection_5 input:[Group#1], test.t.b",
          "Group#1 Schema:[test.t.b,test.t.a], UniqueKey:[test.t.a]",
          "    TopN_8 input:[Group#2], test.t.a:asc, offset:0, count:2",
          "Group#2 Schema:[test.t.b,test.t.a], UniqueKey:[test.t.a]",
          "    Projection_2 input:[Group#3], test.t.b, test.t.a",
          "Group#3 Schema:[test.t.a,test.t.b], UniqueKey:[test.t.a]",
          "    TableGather_7 input:[Group#4]",
          "Group#4 Schema:[test.t.a,test.t.b], UniqueKey:[test.t.a]",
          "    TableScan_6 table:t, pk col:test.t.a"
        ]
      },
      {
        "SQL": "select a+b from t order by a limit 1 offset 2",
        "Result": [
          "Group#0 Schema:[Column#14]",
          "    Projection_5 input:[Group#1], Column#13",
          "Group#1 Schema:[Column#13,test.t.a], UniqueKey:[test.t.a]",
          "    TopN_8 input:[Group#2], test.t.a:asc, offset:2, count:1",
          "Group#2 Schema:[Column#13,test.t.a], UniqueKey:[test.t.a]",
          "    Projection_2 input:[Group#3], plus(test.t.a, test.t.b)->Column#13, test.t.a",
          "Group#3 Schema:[test.t.a,test.t.b], UniqueKey:[test.t.a]",
          "    TableGather_7 input:[Group#4]",
          "Group#4 Schema:[test.t.a,test.t.b], UniqueKey:[test.t.a]",
          "    TableScan_6 table:t, pk col:test.t.a"
        ]
      }
    ]
  }
]
