[
  {
    "Name": "TestPushDerivedTopnNegative",
    "Cases": [
      {
        "SQL": "select * from (select rank() over () as rank_order from t) DT where rank_order <= 3 -- rank not supported in pattern yet",
        "Plan": [
          "Projection 8000.00 root  Column#5",
          "└─Selection 8000.00 root  le(Column#5, 3)",
          "  └─Window 10000.00 root  rank()->Column#5 over()",
          "    └─TableReader 10000.00 root  data:TableFullScan",
          "      └─TableFullScan 10000.00 cop[tikv] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "select * from (select b, row_number() over () as rownumber from t) DT where rownumber <= 3 and b > 5 -- pattern is not applicable with complex filter on top of window",
        "Plan": [
          "Selection 8000.00 root  gt(test.t.b, 5), le(Column#5, 3)",
          "└─Window 10000.00 root  row_number()->Column#5 over(rows between current row and current row)",
          "  └─TableReader 10000.00 root  data:TableFullScan",
          "    └─TableFullScan 10000.00 cop[tikv] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "select * from (select b, row_number() over () as rownumber from t) DT where rownumber > 3  -- pattern is not applicable with filter is not < or <=",
        "Plan": [
          "Selection 8000.00 root  gt(Column#5, 3)",
          "└─Window 10000.00 root  row_number()->Column#5 over(rows between current row and current row)",
          "  └─TableReader 10000.00 root  data:TableFullScan",
          "    └─TableFullScan 10000.00 cop[tikv] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "select * from (select a,b, row_number() over () as rownumber from t) DT where  a > b  -- pattern is not applicable with filter is not < or <=",
        "Plan": [
          "Selection 8000.00 root  gt(test.t.a, test.t.b)",
          "└─Window 10000.00 root  row_number()->Column#5 over(rows between current row and current row)",
          "  └─TableReader 10000.00 root  data:TableFullScan",
          "    └─TableFullScan 10000.00 cop[tikv] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "select * from (select a,b, row_number() over () as rownumber from t) DT where  a <= 3 -- pattern is not applicable with filter is not on row number",
        "Plan": [
          "Selection 8000.00 root  le(test.t.a, 3)",
          "└─Window 10000.00 root  row_number()->Column#5 over(rows between current row and current row)",
          "  └─TableReader 10000.00 root  data:TableFullScan",
          "    └─TableFullScan 10000.00 cop[tikv] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "select * from (select a,b, row_number() over () as rownumber from t) DT where 3 >= rownumber  -- pattern is not applicable with filter is not < or <=",
        "Plan": [
          "Selection 8000.00 root  ge(3, Column#5)",
          "└─Window 10000.00 root  row_number()->Column#5 over(rows between current row and current row)",
          "  └─TableReader 10000.00 root  data:TableFullScan",
          "    └─TableFullScan 10000.00 cop[tikv] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "select * from (select a,b, row_number() over () as rownumber from t) DT where rownumber <= -4   -- pattern is not applicable with filter constant negative",
        "Plan": [
          "Selection 8000.00 root  le(Column#5, -4)",
          "└─Window 10000.00 root  row_number()->Column#5 over(rows between current row and current row)",
          "  └─TableReader 10000.00 root  data:TableFullScan",
          "    └─TableFullScan 10000.00 cop[tikv] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "select * from (select row_number() over () as rownumber from t) DT where rownumber <= 3 and rownumber >= 2 -- pattern is not applicable with complex filter",
        "Plan": [
          "Projection 8000.00 root  Column#5",
          "└─Selection 8000.00 root  ge(Column#5, 2), le(Column#5, 3)",
          "  └─Window 10000.00 root  row_number()->Column#5 over(rows between current row and current row)",
          "    └─TableReader 10000.00 root  data:TableFullScan",
          "      └─TableFullScan 10000.00 cop[tikv] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "select row_number() over (partition by a) from t -- pattern missing filter on row number",
        "Plan": [
          "Projection 10000.00 root  Column#5",
          "└─Shuffle 10000.00 root  execution info: concurrency:5, data sources:[TableReader]",
          "  └─Window 10000.00 root  row_number()->Column#5 over(partition by test.t.a rows between current row and current row)",
          "    └─Sort 10000.00 root  test.t.a",
          "      └─TableReader 10000.00 root  data:TableFullScan",
          "        └─TableFullScan 10000.00 cop[tikv] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "select * from (select row_number() over () as rownumber1, row_number() over (partition by a) as rownumber2 from t) DT where rownumber1 <= 3 -- pattern not applicable with multiple window functions",
        "Plan": [
          "Projection 8000.00 root  Column#7, Column#6",
          "└─Selection 8000.00 root  le(Column#7, 3)",
          "  └─Window 10000.00 root  row_number()->Column#7 over(rows between current row and current row)",
          "    └─Shuffle 10000.00 root  execution info: concurrency:5, data sources:[TableReader]",
          "      └─Window 10000.00 root  row_number()->Column#6 over(partition by test.t.a rows between current row and current row)",
          "        └─Sort 10000.00 root  test.t.a",
          "          └─TableReader 10000.00 root  data:TableFullScan",
          "            └─TableFullScan 10000.00 cop[tikv] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "select * from (select row_number() over (partition by a) as rownumber from t) DT where rownumber <= 3 -- pattern is not applicable with partition by not prefix of PK",
        "Plan": [
          "Projection 8000.00 root  Column#5",
          "└─Selection 8000.00 root  le(Column#5, 3)",
          "  └─Shuffle 10000.00 root  execution info: concurrency:5, data sources:[TableReader]",
          "    └─Window 10000.00 root  row_number()->Column#5 over(partition by test.t.a rows between current row and current row)",
          "      └─Sort 10000.00 root  test.t.a",
          "        └─TableReader 10000.00 root  data:TableFullScan",
          "          └─TableFullScan 10000.00 cop[tikv] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "select * from (select row_number() over (partition by a) as rownumber from tt) DT where rownumber <= 3 -- pattern is not applicable with no clustered index on table",
        "Plan": [
          "Projection 8000.00 root  Column#6",
          "└─Selection 8000.00 root  le(Column#6, 3)",
          "  └─Shuffle 10000.00 root  execution info: concurrency:5, data sources:[IndexReader]",
          "    └─Window 10000.00 root  row_number()->Column#6 over(partition by test.tt.a rows between current row and current row)",
          "      └─Sort 10000.00 root  test.tt.a",
          "        └─IndexReader 10000.00 root  index:IndexFullScan",
          "          └─IndexFullScan 10000.00 cop[tikv] table:tt, index:PRIMARY(b, a) keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "select * from (select row_number() over (partition by a) as rownumber from ti) DT where rownumber <= 3 -- pattern is not applicable. ti clustered on 'c' and partition by 'a'",
        "Plan": [
          "Projection 8000.00 root  Column#6",
          "└─Selection 8000.00 root  le(Column#6, 3)",
          "  └─Shuffle 10000.00 root  execution info: concurrency:5, data sources:[TableReader]",
          "    └─Window 10000.00 root  row_number()->Column#6 over(partition by test.ti.a rows between current row and current row)",
          "      └─Sort 10000.00 root  test.ti.a",
          "        └─TableReader 10000.00 root  data:TableFullScan",
          "          └─TableFullScan 10000.00 cop[tikv] table:ti keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "select * from (select a, row_number() over (partition by c) as rownumber from ti) DT where rownumber <= 1 -- pattern is applicable. ti clustered on 'c' and partition by 'c' - not supported yet",
        "Plan": [
          "Projection 8000.00 root  test.ti.a, Column#6",
          "└─Selection 8000.00 root  le(Column#6, 1)",
          "  └─Window 10000.00 root  row_number()->Column#6 over(partition by test.ti.c rows between current row and current row)",
          "    └─Projection 10000.00 root  test.ti.a, test.ti.c",
          "      └─IndexLookUp 10000.00 root  ",
          "        ├─IndexFullScan(Build) 10000.00 cop[tikv] table:ti, index:c(c) keep order:true, stats:pseudo",
          "        └─TableRowIDScan(Probe) 10000.00 cop[tikv] table:ti keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestPushDerivedTopnFlash",
    "Cases": [
      {
        "SQL": "select * from (select row_number() over (order by b) as rownumber from t) DT where rownumber <= 1 -- applicable with no partition by",
        "Plan": [
          "Projection 1.00 root  Column#4",
          "└─Window 1.00 root  row_number()->Column#4 over(order by test.t.b rows between current row and current row)",
          "  └─TopN 1.00 root  test.t.b, offset:0, count:1",
          "    └─TableReader 1.00 root  MppVersion: 1, data:ExchangeSender",
          "      └─ExchangeSender 1.00 mpp[tiflash]  ExchangeType: PassThrough",
          "        └─TopN 1.00 mpp[tiflash]  test.t.b, offset:0, count:1",
          "          └─TableFullScan 10000.00 mpp[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "select * from (select row_number() over (partition by b) as rownumber from t) DT where rownumber <= 1 -- applicable with partition by but no push down to tiflash",
        "Plan": [
          "Projection 1.00 root  Column#4",
          "└─Window 1.00 root  row_number()->Column#4 over(partition by test.t.b rows between current row and current row)",
          "  └─Sort 1.00 root  test.t.b",
          "    └─TopN 1.00 root  , offset:0, count:1",
          "      └─TableReader 10000.00 root  MppVersion: 1, data:ExchangeSender",
          "        └─ExchangeSender 10000.00 mpp[tiflash]  ExchangeType: PassThrough",
          "          └─TableFullScan 10000.00 mpp[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "select * from (select row_number() over (partition by b order by a) as rownumber from t) DT where rownumber <= 1 -- applicable with partition by and order by but no push down to tiflash",
        "Plan": [
          "Projection 1.00 root  Column#4",
          "└─Window 1.00 root  row_number()->Column#4 over(partition by test.t.b order by test.t.a rows between current row and current row)",
          "  └─Sort 1.00 root  test.t.b, test.t.a",
          "    └─TopN 1.00 root  test.t.a, offset:0, count:1",
          "      └─TableReader 1.00 root  MppVersion: 1, data:ExchangeSender",
          "        └─ExchangeSender 1.00 mpp[tiflash]  ExchangeType: PassThrough",
          "          └─TopN 1.00 mpp[tiflash]  test.t.a, offset:0, count:1",
          "            └─TableFullScan 10000.00 mpp[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "select * from (select row_number() over (partition by a) as rownumber from t) DT where rownumber <= 3 -- pattern is not applicable with partition by not prefix of PK",
        "Plan": [
          "TableReader 8000.00 root  MppVersion: 1, data:ExchangeSender",
          "└─ExchangeSender 8000.00 mpp[tiflash]  ExchangeType: PassThrough",
          "  └─Projection 8000.00 mpp[tiflash]  Column#4, stream_count: 8",
          "    └─Selection 8000.00 mpp[tiflash]  le(Column#4, 3), stream_count: 8",
          "      └─Window 10000.00 mpp[tiflash]  row_number()->Column#4 over(partition by test.t.a rows between current row and current row), stream_count: 8",
          "        └─Sort 10000.00 mpp[tiflash]  test.t.a, stream_count: 8",
          "          └─ExchangeReceiver 10000.00 mpp[tiflash]  stream_count: 8",
          "            └─ExchangeSender 10000.00 mpp[tiflash]  ExchangeType: HashPartition, Compression: FAST, Hash Cols: [name: test.t.a, collate: binary], stream_count: 8",
          "              └─TableFullScan 10000.00 mpp[tiflash] table:t keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestPushDerivedTopnPositive",
    "Cases": [
      {
        "SQL": "select * from (select a,b, row_number() over (order by a) as rownumber from t) DT where rownumber <= 3.5  -- pattern is applicable with N rounded down to an integer. No partition by",
        "Plan": [
          "Window 3.00 root  row_number()->Column#4 over(order by test.t.a rows between current row and current row)",
          "└─TopN 3.00 root  test.t.a, offset:0, count:3",
          "  └─TableReader 3.00 root  data:TopN",
          "    └─TopN 3.00 cop[tikv]  test.t.a, offset:0, count:3",
          "      └─TableFullScan 10000.00 cop[tikv] table:t keep order:false, stats:pseudo"
        ],
        "Res": [
          "1 1 1",
          "2 1 2",
          "3 2 3"
        ]
      },
      {
        "SQL": "select * from (select row_number() over (order by a) as rownumber from t) DT where rownumber <= 3 -- pattern is applicable. No partition by",
        "Plan": [
          "Projection 3.00 root  Column#4",
          "└─Window 3.00 root  row_number()->Column#4 over(order by test.t.a rows between current row and current row)",
          "  └─TopN 3.00 root  test.t.a, offset:0, count:3",
          "    └─TableReader 3.00 root  data:TopN",
          "      └─TopN 3.00 cop[tikv]  test.t.a, offset:0, count:3",
          "        └─TableFullScan 10000.00 cop[tikv] table:t keep order:false, stats:pseudo"
        ],
        "Res": [
          "1",
          "2",
          "3"
        ]
      },
      {
        "SQL": "select * from (select row_number() over (order by a) as rownumber from t) DT where rownumber < 3 -- pattern is applicable. No partition by",
        "Plan": [
          "Projection 2.00 root  Column#4",
          "└─Window 2.00 root  row_number()->Column#4 over(order by test.t.a rows between current row and current row)",
          "  └─TopN 2.00 root  test.t.a, offset:0, count:2",
          "    └─TableReader 2.00 root  data:TopN",
          "      └─TopN 2.00 cop[tikv]  test.t.a, offset:0, count:2",
          "        └─TableFullScan 10000.00 cop[tikv] table:t keep order:false, stats:pseudo"
        ],
        "Res": [
          "1",
          "2"
        ]
      },
      {
        "SQL": "select * from (select row_number() over(rows between 1 preceding and 1 following) as rownumber from t) DT where rownumber <= 3 -- pattern is applicable. No partition by",
        "Plan": [
          "Projection 3.00 root  Column#4",
          "└─Window 3.00 root  row_number()->Column#4 over(rows between current row and current row)",
          "  └─Limit 3.00 root  offset:0, count:3",
          "    └─TableReader 3.00 root  data:Limit",
          "      └─Limit 3.00 cop[tikv]  offset:0, count:3",
          "        └─TableFullScan 3.00 cop[tikv] table:t keep order:false, stats:pseudo"
        ],
        "Res": [
          "1",
          "2",
          "3"
        ]
      },
      {
        "SQL": "select * from (select a,row_number() over (order by a desc) as rownumber,b from t) DT where rownumber <= 3 -- pattern is applicable. Order by desc. No partition by",
        "Plan": [
          "Projection 3.00 root  test.t.a, Column#4, test.t.b",
          "└─Window 3.00 root  row_number()->Column#4 over(order by test.t.a desc rows between current row and current row)",
          "  └─TopN 3.00 root  test.t.a:desc, offset:0, count:3",
          "    └─TableReader 3.00 root  data:TopN",
          "      └─TopN 3.00 cop[tikv]  test.t.a:desc, offset:0, count:3",
          "        └─TableFullScan 10000.00 cop[tikv] table:t keep order:false, stats:pseudo"
        ],
        "Res": [
          "5 1 2",
          "4 2 2",
          "3 3 2"
        ]
      },
      {
        "SQL": "select count(*) from (select * from (select a,row_number() over (order by b) as rownumber,b from t) DT1 where rownumber <= 1) DT2  -- pattern is applicable. Window has column a + row_number",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(1)->Column#5",
          "└─Window 1.00 root  row_number()->Column#4 over(order by test.t.b rows between current row and current row)",
          "  └─Limit 1.00 root  offset:0, count:1",
          "    └─TableReader 1.00 root  data:Limit",
          "      └─Limit 1.00 cop[tikv]  offset:0, count:1",
          "        └─TableFullScan 1.00 cop[tikv] table:t keep order:true, stats:pseudo"
        ],
        "Res": [
          "1"
        ]
      },
      {
        "SQL": "select * from (select row_number() over (partition by b) as rownumber from t) DT where rownumber <= 1 -- pattern is applicable with partition by prefix of primary key",
        "Plan": [
          "Projection 1.00 root  Column#4",
          "└─Window 1.00 root  row_number()->Column#4 over(partition by test.t.b rows between current row and current row)",
          "  └─Sort 1.00 root  test.t.b",
          "    └─Limit 1.00 root  offset:0, count:1",
          "      └─TableReader 1.00 root  data:Limit",
          "        └─Limit 1.00 cop[tikv]  offset:0, count:1",
          "          └─TableFullScan 1.00 cop[tikv] table:t keep order:false, stats:pseudo"
        ],
        "Res": [
          "1"
        ]
      },
      {
        "SQL": "select * from (select row_number() over (partition by b order by a) as rownumber from t) DT where rownumber <= 1 -- pattern is applicable with order by, partition by prefix",
        "Plan": [
          "Projection 1.00 root  Column#4",
          "└─Window 1.00 root  row_number()->Column#4 over(partition by test.t.b order by test.t.a rows between current row and current row)",
          "  └─Sort 1.00 root  test.t.b, test.t.a",
          "    └─TopN 1.00 root  test.t.a, offset:0, count:1",
          "      └─TableReader 1.00 root  data:TopN",
          "        └─TopN 1.00 cop[tikv]  test.t.a, offset:0, count:1",
          "          └─TableFullScan 10000.00 cop[tikv] table:t keep order:false, stats:pseudo"
        ],
        "Res": [
          "1"
        ]
      },
      {
        "SQL": "select * from (select row_number() over (partition by b) as rownumber from t where a >= 2) DT where rownumber <= 3 order by rownumber  -- pattern is applicable with partition by prefix and filter on data source",
        "Plan": [
          "Sort 3.00 root  Column#4",
          "└─Projection 3.00 root  Column#4",
          "  └─Shuffle 3.00 root  execution info: concurrency:3, data sources:[Limit]",
          "    └─Window 3.00 root  row_number()->Column#4 over(partition by test.t.b rows between current row and current row)",
          "      └─Sort 3.00 root  test.t.b",
          "        └─Limit 3.00 root  offset:0, count:3",
          "          └─TableReader 3.00 root  data:Limit",
          "            └─Limit 3.00 cop[tikv]  offset:0, count:3",
          "              └─Selection 3.00 cop[tikv]  ge(test.t.a, 2)",
          "                └─TableFullScan 9.00 cop[tikv] table:t keep order:false, stats:pseudo"
        ],
        "Res": [
          "1",
          "1",
          "2"
        ]
      },
      {
        "SQL": "select * from (select row_number() over () as rownumber from tt) DT where rownumber <= 3 -- pattern is applicable with no partition on a non-clustered table",
        "Plan": [
          "Projection 3.00 root  Column#6",
          "└─Window 3.00 root  row_number()->Column#6 over(rows between current row and current row)",
          "  └─Limit 3.00 root  offset:0, count:3",
          "    └─IndexReader 3.00 root  index:Limit",
          "      └─Limit 3.00 cop[tikv]  offset:0, count:3",
          "        └─IndexFullScan 3.00 cop[tikv] table:tt, index:PRIMARY(b, a) keep order:false, stats:pseudo"
        ],
        "Res": [
          "1",
          "2",
          "3"
        ]
      }
    ]
  }
]
