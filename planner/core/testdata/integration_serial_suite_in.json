[
  {
    "name": "TestSelPushDownTiFlash",
    "cases": [
      "explain select * from t where t.a > 1 and t.b = \"flash\" or t.a + 3 * t.a = 5",
      "explain select * from t where cast(t.a as float) + 3 = 5.1",
      "explain select * from t where b > 'a' order by convert(b, unsigned) limit 2",
      "explain select * from t where b > 'a' order by b limit 2"
    ]
  },
  {
    "name": "TestMPPJoin",
    "cases": [
      "explain select count(*) from fact_t, d1_t where fact_t.d1_k = d1_t.d1_k",
      "explain select count(*) from fact_t, d1_t, d2_t, d3_t where fact_t.d1_k = d1_t.d1_k and fact_t.d2_k = d2_t.d2_k and fact_t.d3_k = d3_t.d3_k",
      "explain select count(*) from fact_t, d1_t where fact_t.d1_k = d1_t.d1_k",
      "explain select count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k",
      "explain select count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k",
      "explain select count(*) from fact_t join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col1 > d1_t.value",
      "explain select count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col1 > 10",
      "explain select count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col2 > 10 and fact_t.col1 > d1_t.value",
      "explain select count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k and d1_t.value > 10",
      "explain select count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k and d1_t.value > 10 and fact_t.col1 > d1_t.value",
      "explain select count(*) from fact_t where exists (select 1 from d1_t where d1_k = fact_t.d1_k)",
      "explain select count(*) from fact_t where exists (select 1 from d1_t where d1_k = fact_t.d1_k and value > fact_t.col1)",
      "explain select count(*) from fact_t where not exists (select 1 from d1_t where d1_k = fact_t.d1_k)",
      "explain select count(*) from fact_t where not exists (select 1 from d1_t where d1_k = fact_t.d1_k and value > fact_t.col1)"
    ]
  },
  {
    "name": "TestMPPShuffledJoin",
    "cases": [
      "explain select count(*) from fact_t, d1_t where fact_t.d1_k = d1_t.d1_k",
      "explain select count(*) from fact_t, d1_t, d2_t, d3_t where fact_t.d1_k = d1_t.d1_k and fact_t.d2_k = d2_t.d2_k and fact_t.d3_k = d3_t.d3_k",
      "explain select count(*) from fact_t, d1_t where fact_t.d1_k = d1_t.d1_k",
      "explain select count(*) from fact_t, d1_t, d2_t, d3_t where fact_t.d1_k = d1_t.d1_k and fact_t.d1_k = d2_t.value and fact_t.d1_k = d3_t.value",
      "explain select count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k",
      "explain select count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k",
      "explain select count(*) from fact_t join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col1 > d1_t.value",
      "explain select count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col1 > 10",
      "explain select count(*) from (select case when t1.col1 is null then t2.col1 + 5 else 10 end as col1, t2.d1_k as d1_k from fact_t t1 right join fact_t t2 on t1.d1_k = t2.d1_k) fact_t join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col1 > 5",
      "explain select count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col2 > 10 and fact_t.col1 > d1_t.value",
      "explain select count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k and d1_t.value > 10",
      "explain select count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k and d1_t.value > 10 and fact_t.col1 > d1_t.value",
      "explain select count(*) from fact_t where exists (select 1 from d1_t where d1_k = fact_t.d1_k)",
      "explain select count(*) from fact_t where exists (select 1 from d1_t where d1_k = fact_t.d1_k and value > fact_t.col1)",
      "explain select count(*) from fact_t where not exists (select 1 from d1_t where d1_k = fact_t.d1_k)",
      "explain select count(*) from fact_t where not exists (select 1 from d1_t where d1_k = fact_t.d1_k and value > fact_t.col1)"
    ]
  },
  {
    "name": "TestBroadcastJoin",
    "cases": [
      "explain select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t, d1_t where fact_t.d1_k = d1_t.d1_k",
      "explain select /*+ broadcast_join(fact_t,d1_t,d2_t,d3_t) */ count(*) from fact_t, d1_t, d2_t, d3_t where fact_t.d1_k = d1_t.d1_k and fact_t.d2_k = d2_t.d2_k and fact_t.d3_k = d3_t.d3_k",
      "explain select /*+ broadcast_join(fact_t,d1_t), broadcast_join_local(d1_t) */ count(*) from fact_t, d1_t where fact_t.d1_k = d1_t.d1_k",
      "explain select /*+ broadcast_join(fact_t,d1_t,d2_t,d3_t), broadcast_join_local(d2_t) */ count(*) from fact_t, d1_t, d2_t, d3_t where fact_t.d1_k = d1_t.d1_k and fact_t.d2_k = d2_t.d2_k and fact_t.d3_k = d3_t.d3_k",
      "explain select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k",
      "explain select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k",
      "explain select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col1 > d1_t.value",
      "explain select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col1 > 10",
      "explain select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col2 > 10 and fact_t.col1 > d1_t.value",
      "explain select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k and d1_t.value > 10",
      "explain select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k and d1_t.value > 10 and fact_t.col1 > d1_t.value",
      "explain select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t where exists (select 1 from d1_t where d1_k = fact_t.d1_k)",
      "explain select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t where exists (select 1 from d1_t where d1_k = fact_t.d1_k and value > fact_t.col1)",
      "explain select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t where not exists (select 1 from d1_t where d1_k = fact_t.d1_k)",
      "explain select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t where not exists (select 1 from d1_t where d1_k = fact_t.d1_k and value > fact_t.col1)"
    ]
  },
  {
    "name": "TestReadFromStorageHint",
    "cases": [
      "desc select avg(a) from t",
      "desc select /*+ read_from_storage(tiflash[t]) */ avg(a) from t",
      "desc select /*+ read_from_storage(tiflash[t]) */ sum(a) from t",
      "desc select /*+ read_from_storage(tiflash[t]) */ sum(a+1) from t",
      "desc select /*+ read_from_storage(tiflash[t]) */ sum(isnull(a)) from t",
      "desc select /*+ READ_FROM_STORAGE(TIKV[t1], TIKV[t2]) */ * from t t1, t t2 where t1.a = t2.a",
      "desc select /*+ READ_FROM_STORAGE(TIKV[t1], TIFLASH[t2]) */ * from t t1, t t2 where t1.a = t2.a",
      "desc select * from tt where (tt.a > 1 and tt.a < 20) or (tt.a >= 30 and tt.a < 55)",
      "desc select /*+ read_from_storage(tiflash[tt]) */ * from tt where (tt.a > 1 and tt.a < 20) or (tt.a >= 30 and tt.a < 55)",
      "desc select * from ttt order by ttt.a desc",
      "desc select /*+ read_from_storage(tiflash[ttt]) */ * from ttt order by ttt.a desc",
      "desc select /*+ read_from_storage(tiflash[ttt]) */ * from ttt order by ttt.a",
      "desc select /*+ read_from_storage(tikv[t, ttt]) */ * from ttt",
      "desc select /*+ read_from_storage(tiflash[t, ttt], tikv[tt]) */ * from ttt"
    ]
  },
  {
    "name": "TestReadFromStorageHintAndIsolationRead",
    "cases": [
      "desc select /*+ read_from_storage(tikv[t], tiflash[t]) */ avg(a) from t",
      "desc select /*+ read_from_storage(tikv[t]) */ avg(a) from t",
      "desc select /*+ read_from_storage(tiflash[t]) */ avg(a) from t"
    ]
  },
  {
    "name": "TestIsolationReadDoNotFilterSystemDB",
    "cases": [
      "desc select * from metrics_schema.tidb_query_duration where time >= '2019-12-23 16:10:13' and time <= '2019-12-23 16:30:13'",
      "desc select * from information_schema.tables",
      "desc select * from mysql.stats_meta"
    ]
  },
  {
    "name": "TestIsolationReadTiFlashNotChoosePointGet",
    "cases": [
      "explain select * from t where t.a = 1",
      "explain select * from t where t.a in (1, 2)"
    ]
  },
  {
    "name": "TestIsolationReadTiFlashUseIndexHint",
    "cases": [
      "explain select * from t",
      "explain select * from t use index();",
      "explain select /*+ use_index(t, idx)*/ * from t",
      "explain select /*+ use_index(t)*/ * from t"
    ]
  },
  {
    "name": "TestIssue20710",
    "cases": [
      "explain select /*+ inl_join(s) */ * from t join s on t.a=s.a and t.b = s.b",
      "explain select /*+ inl_join(s) */ * from t join s on t.a=s.a and t.b = s.a",
      "explain select /*+ inl_join(s) */ * from t join s on t.a=s.a and t.a = s.b",
      "explain select /*+ inl_hash_join(s) */ * from t join s on t.a=s.a and t.b = s.b",
      "explain select /*+ inl_hash_join(s) */ * from t join s on t.a=s.a and t.b = s.a",
      "explain select /*+ inl_hash_join(s) */ * from t join s on t.a=s.a and t.a = s.b"
    ]
  },
  {
    "name": "TestPushDownProjectionForTiFlash",
    "cases": [
      "desc select /*+ hash_agg()*/ count(b) from  (select id + 1 as b from t)A",
      "desc select /*+ hash_agg()*/ count(*) from  (select id + 1 as b from t)A",
      "desc select /*+ hash_agg()*/ sum(b) from  (select id + 1 as b from t)A",
      "desc select /*+ stream_agg()*/ count(b) from  (select id + 1 as b from t)A",
      "desc select /*+ stream_agg()*/ count(*) from  (select id + 1 as b from t)A",
      "desc select /*+ stream_agg()*/ sum(b) from  (select id + 1 as b from t)A",
      "desc select * from (select id-2 as b from t) B join (select id-2 as b from t) A on A.b=B.b",
      "desc select * from t join (select id-2 as b from t) A on A.b=t.id",
      "desc select * from t left join (select id-2 as b from t) A on A.b=t.id",
      "desc select * from t right join (select id-2 as b from t) A on A.b=t.id",
      "desc select A.b, B.b from (select id-2 as b from t) B join (select id-2 as b from t) A on A.b=B.b",
      "desc select A.id from t as A where exists (select 1 from t where t.id=A.id)",
      "desc select A.id from t as A where not exists  (select 1 from t where t.id=A.id)"
    ]
  },
  {
    "name": "TestPushDownProjectionForMPP",
    "cases": [
      "desc select /*+ hash_agg()*/ count(b) from  (select id + 1 as b from t)A",
      "desc select /*+ hash_agg()*/ count(*) from  (select id + 1 as b from t)A",
      "desc select /*+ hash_agg()*/ sum(b) from  (select id + 1 as b from t)A",
      "desc select /*+ stream_agg()*/ count(b) from  (select id + 1 as b from t)A",
      "desc select /*+ stream_agg()*/ count(*) from  (select id + 1 as b from t)A",
      "desc select /*+ stream_agg()*/ sum(b) from  (select id + 1 as b from t)A",
      "desc select * from (select id-2 as b from t) B join (select id-2 as b from t) A on A.b=B.b",
      "desc select * from t join (select id-2 as b from t) A on A.b=t.id",
      "desc select * from t left join (select id-2 as b from t) A on A.b=t.id",
      "desc select * from t right join (select id-2 as b from t) A on A.b=t.id",
      "desc select A.b, B.b from (select id-2 as b from t) B join (select id-2 as b from t) A on A.b=B.b",
      "desc select id from t as A where exists (select 1 from t where t.id=A.id)",
      "desc select id from t as A where not exists (select 1 from t where t.id=A.id)"
    ]
  },
  {
    "name": "TestPushDownAggForMPP",
    "cases": [
      "desc select /*+ hash_agg()*/ count(b) from  (select id + 1 as b from t)A",
      "desc select /*+ hash_agg()*/ count(*) from  (select id+1 from t)A",
      "desc select /*+ hash_agg()*/ sum(b) from  (select id + 1 as b from t)A",
      "desc select count(*) from t",
      "desc select count(*), id from t group by id",
      "desc select * from t join ( select count(*), id from t group by id) as A on A.id = t.id",
      "desc select * from t join ( select /*+ hash_agg()*/  count(*) as a from t) as A on A.a = t.id",
      "desc select avg(value) as b,id from t group by id",
      "desc select /*+hash_agg()*/ sum(b),id from (select avg(value) as b, id from t group by id)A",
      "desc select id from t group by id having avg(value)>0",
      "desc select avg(value),id from t group by id having avg(value)>0",
      "desc select avg(value) +1,id from t group by id",
      "desc select sum(b) from (select t.id, t1.id as b from t join t t1 on t.id=t1.id)A group by id",
      "desc select * from (select id from t group by id) C join (select sum(b),id from (select t.id, t1.id as b from t join (select id, count(*) as c from t group by id) t1 on t.id=t1.id)A group by id)B on C.id=b.id",
      "desc select count(distinct value),id from t group by id",
      "desc select * from t join ( select count(distinct value), id from t group by id) as A on A.id = t.id",
      "desc select * from t join ( select count(1/value), id from t group by id) as A on A.id = t.id"
    ]
  },
  {
    "name": "TestMppAggWithJoin",
    "cases": [
      "desc select * from t join ( select count(*), id from t group by id) as A on A.id = t.id",
      "desc select * from t join ( select count(*)+id as v from t group by id) as A on A.v = t.id",
      "desc select * from t join ( select count(*) as v, id from t group by value,id having value+v <10) as A on A.id = t.id",
      "desc select * from t join ( select /*+ hash_agg()*/  count(*) as a from t) as A on A.a = t.id",
      "desc select sum(b) from (select t.id, t1.id as b from t join t t1 on t.id=t1.id)A group by id",
      "desc select * from (select id from t group by id) C join (select sum(value),id from t group by id)B on C.id=B.id",
      "desc select * from (select id from t group by id) C join (select sum(b),id from (select t.id, t1.id as b from t join (select id, count(*) as c from t group by id) t1 on t.id=t1.id)A group by id)B on C.id=b.id"
    ]
  }
]
