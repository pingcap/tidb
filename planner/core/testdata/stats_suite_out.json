[
  {
    "Name": "TestGroupNDVs",
    "Cases": [
      {
        "SQL": "select count(1) from t1 group by a, b",
        "AggInput": "[{[1 2] 4}]",
        "JoinInput": ""
      },
      {
        "SQL": "select * from t1, t2 where t1.a = t2.a and t1.b = t2.b",
        "AggInput": "",
        "JoinInput": "[{[6 7] 4}];[{[9 10] 9}]"
      },
      {
        "SQL": "select count(1) from t1 where a > 0 group by a, b",
        "AggInput": "[{[16 17] 4}]",
        "JoinInput": ""
      },
      {
        "SQL": "select count(1) from t1 where b > 0 group by a, b",
        "AggInput": "[{[21 22] 4}]",
        "JoinInput": ""
      },
      {
        "SQL": "select count(1) from t1 where cos(a) > 0 group by a, b",
        "AggInput": "[]",
        "JoinInput": ""
      },
      {
        "SQL": "select count(c3) from (select a as c1, b as c2, a+1 as c3 from t1) as tmp group by c2, c1",
        "AggInput": "[{[31 32] 4}]",
        "JoinInput": ""
      },
      {
        "SQL": "select count(c3) from (select a+b as c1, b as c2, a+1 as c3 from t1) as tmp group by c2, c1",
        "AggInput": "[]",
        "JoinInput": ""
      },
      {
        "SQL": "select count(tmp.cmp) from (select t1.a as a, t1.b as b, (t1.b > (select t2.b from t2 where t2.a = t1.a)) as cmp from t1) tmp group by tmp.a, tmp.b",
        "AggInput": "[{[53 54] 4}]",
        "JoinInput": ""
      },
      {
        "SQL": "select count(1) from (select t1.a as a, t1.b as b from t1 where t1.b > (select t2.b from t2 where t2.a = t1.a)) tmp group by tmp.a, tmp.b",
        "AggInput": "[]",
        "JoinInput": ""
      },
      {
        "SQL": "select count(tmp.cmp) from (select t1.a as a, t1.b as b, (t1.b in (select t2.b from t2 where t2.a = t1.a limit 3)) as cmp from t1) tmp group by tmp.a, tmp.b",
        "AggInput": "[{[81 82] 4}]",
        "JoinInput": ""
      },
      {
        "SQL": "select count(tmp.cmp) from (select t1.a as a, t1.b as b, (t1.b not in (select t2.b from t2 where t2.a = t1.a limit 3)) as cmp from t1) tmp group by tmp.a, tmp.b",
        "AggInput": "[{[97 98] 4}]",
        "JoinInput": ""
      },
      {
        "SQL": "select count(1) from (select t1.a as a, t1.b as b from t1 where t1.b in (select t2.b from t2 where t2.a = t1.a limit 3)) tmp group by tmp.a, tmp.b",
        "AggInput": "[]",
        "JoinInput": ""
      },
      {
        "SQL": "select count(1) from (select t1.a as a, t1.b as b from t1 where t1.b not in (select t2.b from t2 where t2.a = t1.a limit 3)) tmp group by tmp.a, tmp.b",
        "AggInput": "[]",
        "JoinInput": ""
      },
      {
        "SQL": "select count(1) from t1, t2 where t1.a = t2.a group by t1.a, t1.b",
        "AggInput": "[]",
        "JoinInput": "[];[]"
      },
      {
        "SQL": "select count(1) from t1 left join t2 on t1.a = t2.a group by t1.a, t1.b",
        "AggInput": "[{[143 144] 4}]",
        "JoinInput": "[{[143 144] 4}];[]"
      },
      {
        "SQL": "select count(1) from t1 left join t2 on t1.a = t2.a group by t2.a, t2.b",
        "AggInput": "[]",
        "JoinInput": "[];[]"
      },
      {
        "SQL": "select count(1) from t1 right join t2 on t1.a = t2.a group by t1.a, t1.b",
        "AggInput": "[]",
        "JoinInput": "[];[]"
      },
      {
        "SQL": "select count(1) from t1 right join t2 on t1.a = t2.a group by t2.a, t2.b",
        "AggInput": "[{[170 171] 9}]",
        "JoinInput": "[];[{[170 171] 9}]"
      },
      {
        "SQL": "select count(tmp.cmp) from (select t1.a as a, t1.b as b, (t1.b in (select t2.b from t2 where t2.a > t1.a)) as cmp from t1) tmp group by tmp.a, tmp.b",
        "AggInput": "[{[175 176] 4}]",
        "JoinInput": "[{[175 176] 4}];[]"
      },
      {
        "SQL": "select count(tmp.cmp) from (select t1.a as a, t1.b as b, (t1.b not in (select t2.b from t2 where t2.a > t1.a)) as cmp from t1) tmp group by tmp.a, tmp.b",
        "AggInput": "[{[191 192] 4}]",
        "JoinInput": "[{[191 192] 4}];[]"
      },
      {
        "SQL": "select count(1) from (select t1.a as a, t1.b as b from t1 where t1.b in (select t2.b from t2 where t2.a > t1.a)) tmp group by tmp.a, tmp.b",
        "AggInput": "[]",
        "JoinInput": "[];[]"
      },
      {
        "SQL": "select count(1) from (select t1.a as a, t1.b as b from t1 where t1.b not in (select t2.b from t2 where t2.a > t1.a)) tmp group by tmp.a, tmp.b",
        "AggInput": "[]",
        "JoinInput": "[];[]"
      },
      {
        "SQL": "select * from t1 left join (select t2.a as a, t2.b as b, count(1) as cnt from t2 group by t2.a, t2.b) as tmp on t1.a = tmp.a and t1.b = tmp.b",
        "AggInput": "[{[232 233] 9}]",
        "JoinInput": "[{[229 230] 4}];[{[232 233] 9}]"
      },
      {
        "SQL": "select count(1) from (select t1.a as a, t1.b as b from t1 limit 3) tmp group by tmp.a, tmp.b",
        "AggInput": "[]",
        "JoinInput": ""
      },
      {
        "SQL": "select count(tmp.a_sum) from (select t1.a as a, t1.b as b, sum(a) over() as a_sum from t1) tmp group by tmp.a, tmp.b",
        "AggInput": "[{[251 252] 4}]",
        "JoinInput": ""
      }
    ]
  },
  {
    "Name": "TestCardinalityGroupCols",
    "Cases": [
      {
        "SQL": "select count(1) from t1 group by a, b",
        "Plan": [
          "StreamAgg 4.00 root  group by:test.t1.a, test.t1.b, funcs:count(1)->Column#4",
          "└─IndexReader 4.00 root  index:IndexFullScan",
          "  └─IndexFullScan 4.00 cop[tikv] table:t1, index:a(a, b) keep order:true"
        ]
      },
      {
        "SQL": "select * from t1, t2 where t1.a = t2.a and t1.b = t2.b",
        "Plan": [
          "MergeJoin 4.00 root  inner join, left key:test.t1.a, test.t1.b, right key:test.t2.a, test.t2.b",
          "├─IndexReader(Build) 9.00 root  index:IndexFullScan",
          "│ └─IndexFullScan 9.00 cop[tikv] table:t2, index:a(a, b) keep order:true",
          "└─IndexReader(Probe) 4.00 root  index:IndexFullScan",
          "  └─IndexFullScan 4.00 cop[tikv] table:t1, index:a(a, b) keep order:true"
        ]
      },
      {
        "SQL": "select count(1) from t1 where a > 0 group by a, b",
        "Plan": [
          "StreamAgg 4.00 root  group by:test.t1.a, test.t1.b, funcs:count(1)->Column#4",
          "└─IndexReader 4.00 root  index:IndexRangeScan",
          "  └─IndexRangeScan 4.00 cop[tikv] table:t1, index:a(a, b) range:(0,+inf], keep order:true"
        ]
      },
      {
        "SQL": "select count(1) from t1 where b > 0 group by a, b",
        "Plan": [
          "StreamAgg 4.00 root  group by:test.t1.a, test.t1.b, funcs:count(1)->Column#4",
          "└─IndexReader 4.00 root  index:Selection",
          "  └─Selection 4.00 cop[tikv]  gt(test.t1.b, 0)",
          "    └─IndexFullScan 4.00 cop[tikv] table:t1, index:a(a, b) keep order:true"
        ]
      },
      {
        "SQL": "select count(c3) from (select a as c1, b as c2, a+1 as c3 from t1) as tmp group by c2, c1",
        "Plan": [
          "StreamAgg 4.00 root  group by:Column#14, Column#15, funcs:count(Column#13)->Column#8",
          "└─Projection 4.00 root  plus(test.t1.a, 1)->Column#13, test.t1.b, test.t1.a",
          "  └─IndexReader 4.00 root  index:IndexFullScan",
          "    └─IndexFullScan 4.00 cop[tikv] table:t1, index:a(a, b) keep order:true"
        ]
      },
      {
        "SQL": "select count(tmp.cmp) from (select t1.a as a, t1.b as b, (t1.b > (select t2.b from t2 where t2.a = t1.a)) as cmp from t1) tmp group by tmp.a, tmp.b",
        "Plan": [
          "StreamAgg 4.00 root  group by:Column#19, Column#20, funcs:count(Column#18)->Column#15",
          "└─Projection 4.00 root  gt(test.t1.b, test.t2.b)->Column#18, test.t1.a, test.t1.b",
          "  └─Apply 4.00 root  CARTESIAN left outer join",
          "    ├─IndexReader(Build) 4.00 root  index:IndexFullScan",
          "    │ └─IndexFullScan 4.00 cop[tikv] table:t1, index:a(a, b) keep order:true",
          "    └─MaxOneRow(Probe) 1.00 root  ",
          "      └─IndexReader 2.00 root  index:IndexRangeScan",
          "        └─IndexRangeScan 2.00 cop[tikv] table:t2, index:a(a, b) range: decided by [eq(test.t2.a, test.t1.a)], keep order:false"
        ]
      },
      {
        "SQL": "select count(tmp.cmp) from (select t1.a as a, t1.b as b, (t1.b in (select t2.b from t2 where t2.a = t1.a limit 3)) as cmp from t1) tmp group by tmp.a, tmp.b",
        "Plan": [
          "StreamAgg 4.00 root  group by:test.t1.a, test.t1.b, funcs:count(Column#11)->Column#15",
          "└─Apply 4.00 root  left outer semi join, equal:[eq(test.t1.b, test.t2.b)]",
          "  ├─IndexReader(Build) 4.00 root  index:IndexFullScan",
          "  │ └─IndexFullScan 4.00 cop[tikv] table:t1, index:a(a, b) keep order:true",
          "  └─Limit(Probe) 3.00 root  offset:0, count:3",
          "    └─IndexReader 3.00 root  index:Limit",
          "      └─Limit 3.00 cop[tikv]  offset:0, count:3",
          "        └─IndexRangeScan 3.00 cop[tikv] table:t2, index:a(a, b) range: decided by [eq(test.t2.a, test.t1.a)], keep order:false"
        ]
      },
      {
        "SQL": "select count(tmp.cmp) from (select t1.a as a, t1.b as b, (t1.b not in (select t2.b from t2 where t2.a = t1.a limit 3)) as cmp from t1) tmp group by tmp.a, tmp.b",
        "Plan": [
          "StreamAgg 4.00 root  group by:test.t1.a, test.t1.b, funcs:count(Column#11)->Column#15",
          "└─Apply 4.00 root  anti left outer semi join, equal:[eq(test.t1.b, test.t2.b)]",
          "  ├─IndexReader(Build) 4.00 root  index:IndexFullScan",
          "  │ └─IndexFullScan 4.00 cop[tikv] table:t1, index:a(a, b) keep order:true",
          "  └─Limit(Probe) 3.00 root  offset:0, count:3",
          "    └─IndexReader 3.00 root  index:Limit",
          "      └─Limit 3.00 cop[tikv]  offset:0, count:3",
          "        └─IndexRangeScan 3.00 cop[tikv] table:t2, index:a(a, b) range: decided by [eq(test.t2.a, test.t1.a)], keep order:false"
        ]
      },
      {
        "SQL": "select count(1) from t1 left join t2 on t1.a = t2.a group by t1.a, t1.b",
        "Plan": [
          "HashAgg 4.00 root  group by:test.t1.a, test.t1.b, funcs:count(1)->Column#7",
          "└─HashJoin 12.00 root  left outer join, equal:[eq(test.t1.a, test.t2.a)]",
          "  ├─TableReader(Build) 4.00 root  data:TableFullScan",
          "  │ └─TableFullScan 4.00 cop[tikv] table:t1 keep order:false",
          "  └─TableReader(Probe) 9.00 root  data:TableFullScan",
          "    └─TableFullScan 9.00 cop[tikv] table:t2 keep order:false"
        ]
      },
      {
        "SQL": "select count(1) from t1 right join t2 on t1.a = t2.a group by t2.a, t2.b",
        "Plan": [
          "HashAgg 9.00 root  group by:test.t2.a, test.t2.b, funcs:count(1)->Column#7",
          "└─HashJoin 12.00 root  right outer join, equal:[eq(test.t1.a, test.t2.a)]",
          "  ├─TableReader(Build) 4.00 root  data:TableFullScan",
          "  │ └─TableFullScan 4.00 cop[tikv] table:t1 keep order:false",
          "  └─TableReader(Probe) 9.00 root  data:TableFullScan",
          "    └─TableFullScan 9.00 cop[tikv] table:t2 keep order:false"
        ]
      },
      {
        "SQL": "select count(tmp.cmp) from (select t1.a as a, t1.b as b, (t1.b in (select t2.b from t2 where t2.a > t1.a)) as cmp from t1) tmp group by tmp.a, tmp.b",
        "Plan": [
          "HashAgg 4.00 root  group by:test.t1.a, test.t1.b, funcs:count(Column#11)->Column#15",
          "└─HashJoin 4.00 root  left outer semi join, equal:[eq(test.t1.b, test.t2.b)], other cond:gt(test.t2.a, test.t1.a)",
          "  ├─TableReader(Build) 9.00 root  data:TableFullScan",
          "  │ └─TableFullScan 9.00 cop[tikv] table:t2 keep order:false",
          "  └─TableReader(Probe) 4.00 root  data:TableFullScan",
          "    └─TableFullScan 4.00 cop[tikv] table:t1 keep order:false"
        ]
      },
      {
        "SQL": "select count(tmp.cmp) from (select t1.a as a, t1.b as b, (t1.b not in (select t2.b from t2 where t2.a > t1.a)) as cmp from t1) tmp group by tmp.a, tmp.b",
        "Plan": [
          "HashAgg 4.00 root  group by:test.t1.a, test.t1.b, funcs:count(Column#11)->Column#15",
          "└─HashJoin 4.00 root  anti left outer semi join, equal:[eq(test.t1.b, test.t2.b)], other cond:gt(test.t2.a, test.t1.a)",
          "  ├─TableReader(Build) 9.00 root  data:TableFullScan",
          "  │ └─TableFullScan 9.00 cop[tikv] table:t2 keep order:false",
          "  └─TableReader(Probe) 4.00 root  data:TableFullScan",
          "    └─TableFullScan 4.00 cop[tikv] table:t1 keep order:false"
        ]
      },
      {
        "SQL": "select * from t1 left join (select t2.a as a, t2.b as b, count(1) as cnt from t2 group by t2.a, t2.b) as tmp on t1.a = tmp.a and t1.b = tmp.b",
        "Plan": [
          "Projection 4.00 root  test.t1.a, test.t1.b, test.t2.a, test.t2.b, Column#7",
          "└─MergeJoin 4.00 root  left outer join, left key:test.t1.a, test.t1.b, right key:test.t2.a, test.t2.b",
          "  ├─StreamAgg(Build) 9.00 root  group by:test.t2.a, test.t2.b, funcs:count(1)->Column#7, funcs:firstrow(test.t2.a)->test.t2.a, funcs:firstrow(test.t2.b)->test.t2.b",
          "  │ └─IndexReader 9.00 root  index:IndexFullScan",
          "  │   └─IndexFullScan 9.00 cop[tikv] table:t2, index:a(a, b) keep order:true",
          "  └─IndexReader(Probe) 4.00 root  index:IndexFullScan",
          "    └─IndexFullScan 4.00 cop[tikv] table:t1, index:a(a, b) keep order:true"
        ]
      },
      {
        "SQL": "select count(tmp.a_sum) from (select t1.a as a, t1.b as b, sum(a) over() as a_sum from t1) tmp group by tmp.a, tmp.b",
        "Plan": [
          "HashAgg 4.00 root  group by:test.t1.a, test.t1.b, funcs:count(Column#6)->Column#10",
          "└─Window 4.00 root  sum(cast(test.t1.a, decimal(32,0) BINARY))->Column#6 over()",
          "  └─TableReader 4.00 root  data:TableFullScan",
          "    └─TableFullScan 4.00 cop[tikv] table:t1 keep order:false"
        ]
      }
    ]
  }
]
