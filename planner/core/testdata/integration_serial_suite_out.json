[
  {
    "Name": "TestSelPushDownTiFlash",
    "Cases": [
      {
        "SQL": "explain format = 'brief' select * from t where t.a > 1 and t.b = \"flash\" or t.a + 3 * t.a = 5",
        "Plan": [
          "TableReader 8000.67 root  data:Selection",
          "└─Selection 8000.67 cop[tiflash]  or(and(gt(test.t.a, 1), eq(test.t.b, \"flash\")), eq(plus(test.t.a, mul(3, test.t.a)), 5))",
          "  └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain format = 'brief' select * from t where cast(t.a as float) + 3 = 5.1",
        "Plan": [
          "Selection 10000.00 root  eq(plus(cast(test.t.a), 3), 5.1)",
          "└─TableReader 10000.00 root  data:TableFullScan",
          "  └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain format = 'brief' select * from t where b > 'a' order by convert(b, unsigned) limit 2",
        "Plan": [
          "Projection 2.00 root  test.t.a, test.t.b",
          "└─TopN 2.00 root  Column#3, offset:0, count:2",
          "  └─Projection 2.00 root  test.t.a, test.t.b, cast(test.t.b, bigint(22) UNSIGNED BINARY)->Column#3",
          "    └─TableReader 2.00 root  data:TopN",
          "      └─TopN 2.00 cop[tiflash]  cast(test.t.b), offset:0, count:2",
          "        └─Selection 3333.33 cop[tiflash]  gt(test.t.b, \"a\")",
          "          └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain format = 'brief' select * from t where b > 'a' order by b limit 2",
        "Plan": [
          "TopN 2.00 root  test.t.b, offset:0, count:2",
          "└─TableReader 2.00 root  data:TopN",
          "  └─TopN 2.00 cop[tiflash]  test.t.b, offset:0, count:2",
          "    └─Selection 3333.33 cop[tiflash]  gt(test.t.b, \"a\")",
          "      └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestMPPJoin",
    "Cases": [
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t, d1_t where fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 8.00 cop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)]",
          "        ├─ExchangeReceiver(Build) 2.00 cop[tiflash]  ",
          "        │ └─ExchangeSender 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "        │   └─Selection 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "        │     └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false",
          "        └─Selection(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "          └─TableFullScan 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t, d1_t, d2_t, d3_t where fact_t.d1_k = d1_t.d1_k and fact_t.d2_k = d2_t.d2_k and fact_t.d3_k = d3_t.d3_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#18)->Column#17",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#18",
          "      └─HashJoin 8.00 cop[tiflash]  inner join, equal:[eq(test.fact_t.d3_k, test.d3_t.d3_k)]",
          "        ├─ExchangeReceiver(Build) 2.00 cop[tiflash]  ",
          "        │ └─ExchangeSender 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "        │   └─Selection 2.00 cop[tiflash]  not(isnull(test.d3_t.d3_k))",
          "        │     └─TableFullScan 2.00 cop[tiflash] table:d3_t keep order:false",
          "        └─HashJoin(Probe) 8.00 cop[tiflash]  inner join, equal:[eq(test.fact_t.d2_k, test.d2_t.d2_k)]",
          "          ├─ExchangeReceiver(Build) 2.00 cop[tiflash]  ",
          "          │ └─ExchangeSender 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "          │   └─Selection 2.00 cop[tiflash]  not(isnull(test.d2_t.d2_k))",
          "          │     └─TableFullScan 2.00 cop[tiflash] table:d2_t keep order:false",
          "          └─HashJoin(Probe) 8.00 cop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)]",
          "            ├─ExchangeReceiver(Build) 2.00 cop[tiflash]  ",
          "            │ └─ExchangeSender 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "            │   └─Selection 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "            │     └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false",
          "            └─Selection(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k)), not(isnull(test.fact_t.d2_k)), not(isnull(test.fact_t.d3_k))",
          "              └─TableFullScan 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t, d1_t where fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 8.00 cop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)]",
          "        ├─ExchangeReceiver(Build) 2.00 cop[tiflash]  ",
          "        │ └─ExchangeSender 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "        │   └─Selection 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "        │     └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false",
          "        └─Selection(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "          └─TableFullScan 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader 8.00 root  data:ExchangeSender",
          "  └─ExchangeSender 8.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 8.00 cop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─ExchangeReceiver(Build) 2.00 cop[tiflash]  ",
          "      │ └─ExchangeSender 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │     └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─TableFullScan(Probe) 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader 8.00 root  data:ExchangeSender",
          "  └─ExchangeSender 8.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 8.00 cop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─ExchangeReceiver(Build) 8.00 cop[tiflash]  ",
          "      │ └─ExchangeSender 8.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "      │     └─TableFullScan 8.00 cop[tiflash] table:fact_t keep order:false",
          "      └─TableFullScan(Probe) 2.00 cop[tiflash] table:d1_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col1 > d1_t.value",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 8.00 cop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)], other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "        ├─ExchangeReceiver(Build) 2.00 cop[tiflash]  ",
          "        │ └─ExchangeSender 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "        │   └─Selection 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "        │     └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false",
          "        └─Selection(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "          └─TableFullScan 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col1 > 10",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader 8.00 root  data:ExchangeSender",
          "  └─ExchangeSender 8.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 8.00 cop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], left cond:[gt(test.fact_t.col1, 10)]",
          "      ├─ExchangeReceiver(Build) 2.00 cop[tiflash]  ",
          "      │ └─ExchangeSender 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │     └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─TableFullScan(Probe) 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col2 > 10 and fact_t.col1 > d1_t.value",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader 8.00 root  data:ExchangeSender",
          "  └─ExchangeSender 8.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 8.00 cop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], left cond:[gt(test.fact_t.col2, 10)], other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "      ├─ExchangeReceiver(Build) 2.00 cop[tiflash]  ",
          "      │ └─ExchangeSender 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "      │     └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─TableFullScan(Probe) 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k and d1_t.value > 10",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader 8.00 root  data:ExchangeSender",
          "  └─ExchangeSender 8.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 8.00 cop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], right cond:gt(test.d1_t.value, 10)",
          "      ├─ExchangeReceiver(Build) 8.00 cop[tiflash]  ",
          "      │ └─ExchangeSender 8.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "      │     └─TableFullScan 8.00 cop[tiflash] table:fact_t keep order:false",
          "      └─TableFullScan(Probe) 2.00 cop[tiflash] table:d1_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k and d1_t.value > 10 and fact_t.col1 > d1_t.value",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader 8.00 root  data:ExchangeSender",
          "  └─ExchangeSender 8.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 8.00 cop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], right cond:gt(test.d1_t.value, 10), other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "      ├─ExchangeReceiver(Build) 8.00 cop[tiflash]  ",
          "      │ └─ExchangeSender 8.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection 8.00 cop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "      │     └─TableFullScan 8.00 cop[tiflash] table:fact_t keep order:false",
          "      └─TableFullScan(Probe) 2.00 cop[tiflash] table:d1_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t where exists (select 1 from d1_t where d1_k = fact_t.d1_k)",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(1)->Column#12",
          "└─TableReader 6.40 root  data:ExchangeSender",
          "  └─ExchangeSender 6.40 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 6.40 cop[tiflash]  semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─ExchangeReceiver(Build) 2.00 cop[tiflash]  ",
          "      │ └─ExchangeSender 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │     └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─Selection(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t where exists (select 1 from d1_t where d1_k = fact_t.d1_k and value > fact_t.col1)",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(1)->Column#12",
          "└─TableReader 6.40 root  data:ExchangeSender",
          "  └─ExchangeSender 6.40 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 6.40 cop[tiflash]  semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], other cond:gt(test.d1_t.value, test.fact_t.col1)",
          "      ├─ExchangeReceiver(Build) 2.00 cop[tiflash]  ",
          "      │ └─ExchangeSender 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "      │     └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─Selection(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t where not exists (select 1 from d1_t where d1_k = fact_t.d1_k)",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(1)->Column#12",
          "└─TableReader 6.40 root  data:ExchangeSender",
          "  └─ExchangeSender 6.40 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 6.40 cop[tiflash]  anti semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─ExchangeReceiver(Build) 2.00 cop[tiflash]  ",
          "      │ └─ExchangeSender 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─TableFullScan(Probe) 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t where not exists (select 1 from d1_t where d1_k = fact_t.d1_k and value > fact_t.col1)",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(1)->Column#12",
          "└─TableReader 6.40 root  data:ExchangeSender",
          "  └─ExchangeSender 6.40 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 6.40 cop[tiflash]  anti semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], other cond:gt(test.d1_t.value, test.fact_t.col1)",
          "      ├─ExchangeReceiver(Build) 2.00 cop[tiflash]  ",
          "      │ └─ExchangeSender 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─TableFullScan(Probe) 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      }
    ]
  },
  {
    "Name": "TestMPPShuffledJoin",
    "Cases": [
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t, d1_t where fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 32.00 cop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)]",
          "        ├─ExchangeReceiver(Build) 4.00 cop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "        │   └─Selection 4.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "        │     └─TableFullScan 4.00 cop[tiflash] table:d1_t keep order:false",
          "        └─ExchangeReceiver(Probe) 16.00 cop[tiflash]  ",
          "          └─ExchangeSender 16.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "            └─Selection 16.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "              └─TableFullScan 16.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t, d1_t, d2_t, d3_t where fact_t.d1_k = d1_t.d1_k and fact_t.d2_k = d2_t.d2_k and fact_t.d3_k = d3_t.d3_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#18)->Column#17",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#18",
          "      └─HashJoin 128.00 cop[tiflash]  inner join, equal:[eq(test.fact_t.d3_k, test.d3_t.d3_k)]",
          "        ├─ExchangeReceiver(Build) 4.00 cop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d3_t.d3_k",
          "        │   └─Selection 4.00 cop[tiflash]  not(isnull(test.d3_t.d3_k))",
          "        │     └─TableFullScan 4.00 cop[tiflash] table:d3_t keep order:false",
          "        └─ExchangeReceiver(Probe) 64.00 cop[tiflash]  ",
          "          └─ExchangeSender 64.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d3_k",
          "            └─HashJoin 64.00 cop[tiflash]  inner join, equal:[eq(test.fact_t.d2_k, test.d2_t.d2_k)]",
          "              ├─ExchangeReceiver(Build) 4.00 cop[tiflash]  ",
          "              │ └─ExchangeSender 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d2_t.d2_k",
          "              │   └─Selection 4.00 cop[tiflash]  not(isnull(test.d2_t.d2_k))",
          "              │     └─TableFullScan 4.00 cop[tiflash] table:d2_t keep order:false",
          "              └─ExchangeReceiver(Probe) 32.00 cop[tiflash]  ",
          "                └─ExchangeSender 32.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d2_k",
          "                  └─HashJoin 32.00 cop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)]",
          "                    ├─ExchangeReceiver(Build) 4.00 cop[tiflash]  ",
          "                    │ └─ExchangeSender 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "                    │   └─Selection 4.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "                    │     └─TableFullScan 4.00 cop[tiflash] table:d1_t keep order:false",
          "                    └─ExchangeReceiver(Probe) 16.00 cop[tiflash]  ",
          "                      └─ExchangeSender 16.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "                        └─Selection 16.00 cop[tiflash]  not(isnull(test.fact_t.d1_k)), not(isnull(test.fact_t.d2_k)), not(isnull(test.fact_t.d3_k))",
          "                          └─TableFullScan 16.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t, d1_t where fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 32.00 cop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)]",
          "        ├─ExchangeReceiver(Build) 4.00 cop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "        │   └─Selection 4.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "        │     └─TableFullScan 4.00 cop[tiflash] table:d1_t keep order:false",
          "        └─ExchangeReceiver(Probe) 16.00 cop[tiflash]  ",
          "          └─ExchangeSender 16.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "            └─Selection 16.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "              └─TableFullScan 16.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t, d1_t, d2_t, d3_t where fact_t.d1_k = d1_t.d1_k and fact_t.d1_k = d2_t.value and fact_t.d1_k = d3_t.value",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#18)->Column#17",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#18",
          "      └─HashJoin 128.00 cop[tiflash]  inner join, equal:[eq(test.fact_t.d1_k, test.d3_t.value)]",
          "        ├─ExchangeReceiver(Build) 4.00 cop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d3_t.value",
          "        │   └─Selection 4.00 cop[tiflash]  not(isnull(test.d3_t.value))",
          "        │     └─TableFullScan 4.00 cop[tiflash] table:d3_t keep order:false",
          "        └─HashJoin(Probe) 64.00 cop[tiflash]  inner join, equal:[eq(test.fact_t.d1_k, test.d2_t.value)]",
          "          ├─ExchangeReceiver(Build) 4.00 cop[tiflash]  ",
          "          │ └─ExchangeSender 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d2_t.value",
          "          │   └─Selection 4.00 cop[tiflash]  not(isnull(test.d2_t.value))",
          "          │     └─TableFullScan 4.00 cop[tiflash] table:d2_t keep order:false",
          "          └─HashJoin(Probe) 32.00 cop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)]",
          "            ├─ExchangeReceiver(Build) 4.00 cop[tiflash]  ",
          "            │ └─ExchangeSender 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "            │   └─Selection 4.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "            │     └─TableFullScan 4.00 cop[tiflash] table:d1_t keep order:false",
          "            └─ExchangeReceiver(Probe) 16.00 cop[tiflash]  ",
          "              └─ExchangeSender 16.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "                └─Selection 16.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "                  └─TableFullScan 16.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 32.00 cop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "        ├─ExchangeReceiver(Build) 4.00 cop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "        │   └─Selection 4.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "        │     └─TableFullScan 4.00 cop[tiflash] table:d1_t keep order:false",
          "        └─ExchangeReceiver(Probe) 16.00 cop[tiflash]  ",
          "          └─ExchangeSender 16.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "            └─TableFullScan 16.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 32.00 cop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "        ├─ExchangeReceiver(Build) 16.00 cop[tiflash]  ",
          "        │ └─ExchangeSender 16.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "        │   └─Selection 16.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        │     └─TableFullScan 16.00 cop[tiflash] table:fact_t keep order:false",
          "        └─ExchangeReceiver(Probe) 4.00 cop[tiflash]  ",
          "          └─ExchangeSender 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "            └─TableFullScan 4.00 cop[tiflash] table:d1_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col1 > d1_t.value",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 32.00 cop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)], other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "        ├─ExchangeReceiver(Build) 4.00 cop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "        │   └─Selection 4.00 cop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "        │     └─TableFullScan 4.00 cop[tiflash] table:d1_t keep order:false",
          "        └─ExchangeReceiver(Probe) 16.00 cop[tiflash]  ",
          "          └─ExchangeSender 16.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "            └─Selection 16.00 cop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "              └─TableFullScan 16.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col1 > 10",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 32.00 cop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], left cond:[gt(test.fact_t.col1, 10)]",
          "        ├─ExchangeReceiver(Build) 4.00 cop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "        │   └─Selection 4.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "        │     └─TableFullScan 4.00 cop[tiflash] table:d1_t keep order:false",
          "        └─ExchangeReceiver(Probe) 16.00 cop[tiflash]  ",
          "          └─ExchangeSender 16.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "            └─TableFullScan 16.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from (select case when t1.col1 is null then t2.col1 + 5 else 10 end as col1, t2.d1_k as d1_k from fact_t t1 right join fact_t t2 on t1.d1_k = t2.d1_k) fact_t join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col1 > 5",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#22)->Column#19",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#22",
          "      └─HashJoin 204.80 cop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)]",
          "        ├─ExchangeReceiver(Build) 4.00 cop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "        │   └─Selection 4.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "        │     └─TableFullScan 4.00 cop[tiflash] table:d1_t keep order:false",
          "        └─Projection(Probe) 102.40 cop[tiflash]  test.fact_t.d1_k",
          "          └─Selection 102.40 cop[tiflash]  gt(case(isnull(test.fact_t.col1), plus(test.fact_t.col1, 5), 10), 5)",
          "            └─HashJoin 128.00 cop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.fact_t.d1_k)]",
          "              ├─ExchangeReceiver(Build) 16.00 cop[tiflash]  ",
          "              │ └─ExchangeSender 16.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "              │   └─Selection 16.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "              │     └─TableFullScan 16.00 cop[tiflash] table:t1 keep order:false",
          "              └─ExchangeReceiver(Probe) 16.00 cop[tiflash]  ",
          "                └─ExchangeSender 16.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "                  └─Selection 16.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "                    └─TableFullScan 16.00 cop[tiflash] table:t2 keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col2 > 10 and fact_t.col1 > d1_t.value",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 32.00 cop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], left cond:[gt(test.fact_t.col2, 10)], other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "        ├─ExchangeReceiver(Build) 4.00 cop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "        │   └─Selection 4.00 cop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "        │     └─TableFullScan 4.00 cop[tiflash] table:d1_t keep order:false",
          "        └─ExchangeReceiver(Probe) 16.00 cop[tiflash]  ",
          "          └─ExchangeSender 16.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "            └─TableFullScan 16.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k and d1_t.value > 10",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 32.00 cop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], right cond:gt(test.d1_t.value, 10)",
          "        ├─ExchangeReceiver(Build) 16.00 cop[tiflash]  ",
          "        │ └─ExchangeSender 16.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "        │   └─Selection 16.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        │     └─TableFullScan 16.00 cop[tiflash] table:fact_t keep order:false",
          "        └─ExchangeReceiver(Probe) 4.00 cop[tiflash]  ",
          "          └─ExchangeSender 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "            └─TableFullScan 4.00 cop[tiflash] table:d1_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k and d1_t.value > 10 and fact_t.col1 > d1_t.value",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 32.00 cop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], right cond:gt(test.d1_t.value, 10), other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "        ├─ExchangeReceiver(Build) 16.00 cop[tiflash]  ",
          "        │ └─ExchangeSender 16.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "        │   └─Selection 16.00 cop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "        │     └─TableFullScan 16.00 cop[tiflash] table:fact_t keep order:false",
          "        └─ExchangeReceiver(Probe) 4.00 cop[tiflash]  ",
          "          └─ExchangeSender 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "            └─TableFullScan 4.00 cop[tiflash] table:d1_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t where exists (select 1 from d1_t where d1_k = fact_t.d1_k)",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#13)->Column#12",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#13",
          "      └─HashJoin 12.80 cop[tiflash]  semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "        ├─ExchangeReceiver(Build) 4.00 cop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "        │   └─Selection 4.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "        │     └─TableFullScan 4.00 cop[tiflash] table:d1_t keep order:false",
          "        └─ExchangeReceiver(Probe) 16.00 cop[tiflash]  ",
          "          └─ExchangeSender 16.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "            └─Selection 16.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "              └─TableFullScan 16.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t where exists (select 1 from d1_t where d1_k = fact_t.d1_k and value > fact_t.col1)",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#13)->Column#12",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#13",
          "      └─HashJoin 12.80 cop[tiflash]  semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], other cond:gt(test.d1_t.value, test.fact_t.col1)",
          "        ├─ExchangeReceiver(Build) 4.00 cop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "        │   └─Selection 4.00 cop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "        │     └─TableFullScan 4.00 cop[tiflash] table:d1_t keep order:false",
          "        └─ExchangeReceiver(Probe) 16.00 cop[tiflash]  ",
          "          └─ExchangeSender 16.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "            └─Selection 16.00 cop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "              └─TableFullScan 16.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t where not exists (select 1 from d1_t where d1_k = fact_t.d1_k)",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#13)->Column#12",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#13",
          "      └─HashJoin 12.80 cop[tiflash]  anti semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "        ├─ExchangeReceiver(Build) 4.00 cop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "        │   └─TableFullScan 4.00 cop[tiflash] table:d1_t keep order:false",
          "        └─ExchangeReceiver(Probe) 16.00 cop[tiflash]  ",
          "          └─ExchangeSender 16.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "            └─TableFullScan 16.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t where not exists (select 1 from d1_t where d1_k = fact_t.d1_k and value > fact_t.col1)",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#13)->Column#12",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#13",
          "      └─HashJoin 12.80 cop[tiflash]  anti semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], other cond:gt(test.d1_t.value, test.fact_t.col1)",
          "        ├─ExchangeReceiver(Build) 4.00 cop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "        │   └─TableFullScan 4.00 cop[tiflash] table:d1_t keep order:false",
          "        └─ExchangeReceiver(Probe) 16.00 cop[tiflash]  ",
          "          └─ExchangeSender 16.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "            └─TableFullScan 16.00 cop[tiflash] table:fact_t keep order:false"
        ]
      }
    ]
  },
  {
    "Name": "TestBroadcastJoin",
    "Cases": [
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t, d1_t where fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin 8.00 cop[tiflash]  inner join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─Selection(Build) 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │ └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false, global read",
          "      └─Selection(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t,d2_t,d3_t) */ count(*) from fact_t, d1_t, d2_t, d3_t where fact_t.d1_k = d1_t.d1_k and fact_t.d2_k = d2_t.d2_k and fact_t.d3_k = d3_t.d3_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#18)->Column#17",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#18",
          "    └─HashJoin 8.00 cop[tiflash]  inner join, equal:[eq(test.fact_t.d3_k, test.d3_t.d3_k)]",
          "      ├─Selection(Build) 2.00 cop[tiflash]  not(isnull(test.d3_t.d3_k))",
          "      │ └─TableFullScan 2.00 cop[tiflash] table:d3_t keep order:false, global read",
          "      └─HashJoin(Probe) 8.00 cop[tiflash]  inner join, equal:[eq(test.fact_t.d2_k, test.d2_t.d2_k)]",
          "        ├─Selection(Build) 2.00 cop[tiflash]  not(isnull(test.d2_t.d2_k))",
          "        │ └─TableFullScan 2.00 cop[tiflash] table:d2_t keep order:false, global read",
          "        └─HashJoin(Probe) 8.00 cop[tiflash]  inner join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "          ├─Selection(Build) 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "          │ └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false, global read",
          "          └─Selection(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k)), not(isnull(test.fact_t.d2_k)), not(isnull(test.fact_t.d3_k))",
          "            └─TableFullScan 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t), broadcast_join_local(d1_t) */ count(*) from fact_t, d1_t where fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin 8.00 cop[tiflash]  inner join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─Selection(Build) 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │ └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─Selection(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan 8.00 cop[tiflash] table:fact_t keep order:false, global read"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t,d2_t,d3_t), broadcast_join_local(d2_t) */ count(*) from fact_t, d1_t, d2_t, d3_t where fact_t.d1_k = d1_t.d1_k and fact_t.d2_k = d2_t.d2_k and fact_t.d3_k = d3_t.d3_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#18)->Column#17",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#18",
          "    └─HashJoin 8.00 cop[tiflash]  inner join, equal:[eq(test.fact_t.d3_k, test.d3_t.d3_k)]",
          "      ├─Selection(Build) 2.00 cop[tiflash]  not(isnull(test.d3_t.d3_k))",
          "      │ └─TableFullScan 2.00 cop[tiflash] table:d3_t keep order:false, global read",
          "      └─HashJoin(Probe) 8.00 cop[tiflash]  inner join, equal:[eq(test.fact_t.d2_k, test.d2_t.d2_k)]",
          "        ├─Selection(Build) 2.00 cop[tiflash]  not(isnull(test.d2_t.d2_k))",
          "        │ └─TableFullScan 2.00 cop[tiflash] table:d2_t keep order:false",
          "        └─HashJoin(Probe) 8.00 cop[tiflash]  inner join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "          ├─Selection(Build) 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "          │ └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false, global read",
          "          └─Selection(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k)), not(isnull(test.fact_t.d2_k)), not(isnull(test.fact_t.d3_k))",
          "            └─TableFullScan 8.00 cop[tiflash] table:fact_t keep order:false, global read"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin 8.00 cop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─Selection(Build) 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │ └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false, global read",
          "      └─TableFullScan(Probe) 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin 8.00 cop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─TableFullScan(Build) 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─Selection(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan 8.00 cop[tiflash] table:fact_t keep order:false, global read"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col1 > d1_t.value",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin 8.00 cop[tiflash]  inner join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "      ├─Selection(Build) 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "      │ └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false, global read",
          "      └─Selection(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col1 > 10",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin 8.00 cop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], left cond:[gt(test.fact_t.col1, 10)]",
          "      ├─Selection(Build) 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │ └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false, global read",
          "      └─TableFullScan(Probe) 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col2 > 10 and fact_t.col1 > d1_t.value",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin 8.00 cop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], left cond:[gt(test.fact_t.col2, 10)], other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "      ├─Selection(Build) 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "      │ └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false, global read",
          "      └─TableFullScan(Probe) 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k and d1_t.value > 10",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin 8.00 cop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], right cond:gt(test.d1_t.value, 10)",
          "      ├─TableFullScan(Build) 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─Selection(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan 8.00 cop[tiflash] table:fact_t keep order:false, global read"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k and d1_t.value > 10 and fact_t.col1 > d1_t.value",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin 8.00 cop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], right cond:gt(test.d1_t.value, 10), other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "      ├─Selection(Build) 8.00 cop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "      │ └─TableFullScan 8.00 cop[tiflash] table:fact_t keep order:false, global read",
          "      └─TableFullScan(Probe) 2.00 cop[tiflash] table:d1_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t where exists (select 1 from d1_t where d1_k = fact_t.d1_k)",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#13)->Column#12",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#13",
          "    └─HashJoin 6.40 cop[tiflash]  semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─Selection(Build) 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │ └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false, global read",
          "      └─Selection(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t where exists (select 1 from d1_t where d1_k = fact_t.d1_k and value > fact_t.col1)",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#13)->Column#12",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#13",
          "    └─HashJoin 6.40 cop[tiflash]  semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], other cond:gt(test.d1_t.value, test.fact_t.col1)",
          "      ├─Selection(Build) 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "      │ └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false, global read",
          "      └─Selection(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t where not exists (select 1 from d1_t where d1_k = fact_t.d1_k)",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#13)->Column#12",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#13",
          "    └─HashJoin 6.40 cop[tiflash]  anti semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─TableFullScan(Build) 2.00 cop[tiflash] table:d1_t keep order:false, global read",
          "      └─TableFullScan(Probe) 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t where not exists (select 1 from d1_t where d1_k = fact_t.d1_k and value > fact_t.col1)",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#13)->Column#12",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 cop[tiflash]  funcs:count(1)->Column#13",
          "    └─HashJoin 6.40 cop[tiflash]  anti semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], other cond:gt(test.d1_t.value, test.fact_t.col1)",
          "      ├─TableFullScan(Build) 2.00 cop[tiflash] table:d1_t keep order:false, global read",
          "      └─TableFullScan(Probe) 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      }
    ]
  },
  {
    "Name": "TestReadFromStorageHint",
    "Cases": [
      {
        "SQL": "desc select avg(a) from t",
        "Plan": [
          "StreamAgg_24 1.00 root  funcs:avg(Column#7, Column#8)->Column#4",
          "└─TableReader_25 1.00 root  data:StreamAgg_8",
          "  └─StreamAgg_8 1.00 cop[tiflash]  funcs:count(test.t.a)->Column#7, funcs:sum(test.t.a)->Column#8",
          "    └─TableFullScan_22 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[t]) */ avg(a) from t",
        "Plan": [
          "StreamAgg_16 1.00 root  funcs:avg(Column#7, Column#8)->Column#4",
          "└─TableReader_17 1.00 root  data:StreamAgg_8",
          "  └─StreamAgg_8 1.00 cop[tiflash]  funcs:count(test.t.a)->Column#7, funcs:sum(test.t.a)->Column#8",
          "    └─TableFullScan_15 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[t]) */ sum(a) from t",
        "Plan": [
          "StreamAgg_16 1.00 root  funcs:sum(Column#6)->Column#4",
          "└─TableReader_17 1.00 root  data:StreamAgg_8",
          "  └─StreamAgg_8 1.00 cop[tiflash]  funcs:sum(test.t.a)->Column#6",
          "    └─TableFullScan_15 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[t]) */ sum(a+1) from t",
        "Plan": [
          "StreamAgg_16 1.00 root  funcs:sum(Column#6)->Column#4",
          "└─TableReader_17 1.00 root  data:StreamAgg_8",
          "  └─StreamAgg_8 1.00 cop[tiflash]  funcs:sum(plus(test.t.a, 1))->Column#6",
          "    └─TableFullScan_15 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[t]) */ sum(isnull(a)) from t",
        "Plan": [
          "StreamAgg_16 1.00 root  funcs:sum(Column#6)->Column#4",
          "└─TableReader_17 1.00 root  data:StreamAgg_8",
          "  └─StreamAgg_8 1.00 cop[tiflash]  funcs:sum(isnull(test.t.a))->Column#6",
          "    └─TableFullScan_15 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ READ_FROM_STORAGE(TIKV[t1], TIKV[t2]) */ * from t t1, t t2 where t1.a = t2.a",
        "Plan": [
          "HashJoin_37 12487.50 root  inner join, equal:[eq(test.t.a, test.t.a)]",
          "├─TableReader_55(Build) 9990.00 root  data:Selection_54",
          "│ └─Selection_54 9990.00 cop[tikv]  not(isnull(test.t.a))",
          "│   └─TableFullScan_53 10000.00 cop[tikv] table:t2 keep order:false, stats:pseudo",
          "└─TableReader_49(Probe) 9990.00 root  data:Selection_48",
          "  └─Selection_48 9990.00 cop[tikv]  not(isnull(test.t.a))",
          "    └─TableFullScan_47 10000.00 cop[tikv] table:t1 keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ READ_FROM_STORAGE(TIKV[t1], TIFLASH[t2]) */ * from t t1, t t2 where t1.a = t2.a",
        "Plan": [
          "HashJoin_23 12487.50 root  inner join, equal:[eq(test.t.a, test.t.a)]",
          "├─TableReader_31(Build) 9990.00 root  data:Selection_30",
          "│ └─Selection_30 9990.00 cop[tiflash]  not(isnull(test.t.a))",
          "│   └─TableFullScan_29 10000.00 cop[tiflash] table:t2 keep order:false, stats:pseudo",
          "└─TableReader_34(Probe) 9990.00 root  data:Selection_33",
          "  └─Selection_33 9990.00 cop[tikv]  not(isnull(test.t.a))",
          "    └─TableFullScan_32 10000.00 cop[tikv] table:t1 keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select * from tt where (tt.a > 1 and tt.a < 20) or (tt.a >= 30 and tt.a < 55)",
        "Plan": [
          "TableReader_8 44.00 root  data:TableRangeScan_7",
          "└─TableRangeScan_7 44.00 cop[tiflash] table:tt range:(1,20), [30,55), keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[tt]) */ * from tt where (tt.a > 1 and tt.a < 20) or (tt.a >= 30 and tt.a < 55)",
        "Plan": [
          "TableReader_6 44.00 root  data:TableRangeScan_5",
          "└─TableRangeScan_5 44.00 cop[tiflash] table:tt range:(1,20), [30,55), keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select * from ttt order by ttt.a desc",
        "Plan": [
          "TableReader_13 10000.00 root  data:TableFullScan_12",
          "└─TableFullScan_12 10000.00 cop[tikv] table:ttt keep order:true, desc, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[ttt]) */ * from ttt order by ttt.a desc",
        "Plan": [
          "Sort_4 10000.00 root  test.ttt.a:desc",
          "└─TableReader_8 10000.00 root  data:TableFullScan_7",
          "  └─TableFullScan_7 10000.00 cop[tiflash] table:ttt keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[ttt]) */ * from ttt order by ttt.a",
        "Plan": [
          "TableReader_11 10000.00 root  data:TableFullScan_10",
          "└─TableFullScan_10 10000.00 cop[tiflash] table:ttt keep order:true, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tikv[t, ttt]) */ * from ttt",
        "Plan": [
          "TableReader_5 10000.00 root  data:TableFullScan_4",
          "└─TableFullScan_4 10000.00 cop[tikv] table:ttt keep order:false, stats:pseudo"
        ],
        "Warn": [
          "[planner:1815]There are no matching table names for (t) in optimizer hint /*+ READ_FROM_STORAGE(tikv[t, ttt]) */. Maybe you can use the table alias name"
        ]
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[t, ttt], tikv[tt]) */ * from ttt",
        "Plan": [
          "TableReader_5 10000.00 root  data:TableFullScan_4",
          "└─TableFullScan_4 10000.00 cop[tiflash] table:ttt keep order:false, stats:pseudo"
        ],
        "Warn": [
          "[planner:1815]There are no matching table names for (t, tt) in optimizer hint /*+ READ_FROM_STORAGE(tiflash[t, ttt], tikv[tt]) */. Maybe you can use the table alias name"
        ]
      }
    ]
  },
  {
    "Name": "TestReadFromStorageHintAndIsolationRead",
    "Cases": [
      {
        "SQL": "desc select /*+ read_from_storage(tikv[t], tiflash[t]) */ avg(a) from t",
        "Plan": [
          "StreamAgg_20 1.00 root  funcs:avg(Column#7, Column#8)->Column#4",
          "└─IndexReader_21 1.00 root  index:StreamAgg_8",
          "  └─StreamAgg_8 1.00 cop[tikv]  funcs:count(test.t.a)->Column#7, funcs:sum(test.t.a)->Column#8",
          "    └─IndexFullScan_19 10000.00 cop[tikv] table:t, index:ia(a) keep order:false, stats:pseudo"
        ],
        "Warn": [
          "[planner:1815]Storage hints are conflict, you can only specify one storage type of table test.t"
        ]
      },
      {
        "SQL": "desc select /*+ read_from_storage(tikv[t]) */ avg(a) from t",
        "Plan": [
          "StreamAgg_20 1.00 root  funcs:avg(Column#7, Column#8)->Column#4",
          "└─IndexReader_21 1.00 root  index:StreamAgg_8",
          "  └─StreamAgg_8 1.00 cop[tikv]  funcs:count(test.t.a)->Column#7, funcs:sum(test.t.a)->Column#8",
          "    └─IndexFullScan_19 10000.00 cop[tikv] table:t, index:ia(a) keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[t]) */ avg(a) from t",
        "Plan": [
          "StreamAgg_20 1.00 root  funcs:avg(Column#7, Column#8)->Column#4",
          "└─IndexReader_21 1.00 root  index:StreamAgg_8",
          "  └─StreamAgg_8 1.00 cop[tikv]  funcs:count(test.t.a)->Column#7, funcs:sum(test.t.a)->Column#8",
          "    └─IndexFullScan_19 10000.00 cop[tikv] table:t, index:ia(a) keep order:false, stats:pseudo"
        ],
        "Warn": [
          "[planner:1815]No available path for table test.t with the store type tiflash of the hint /*+ read_from_storage */, please check the status of the table replica and variable value of tidb_isolation_read_engines(map[0:{}])"
        ]
      }
    ]
  },
  {
    "Name": "TestIsolationReadDoNotFilterSystemDB",
    "Cases": [
      {
        "SQL": "desc select * from metrics_schema.tidb_query_duration where time >= '2019-12-23 16:10:13' and time <= '2019-12-23 16:30:13'",
        "Plan": [
          "MemTableScan_5 10000.00 root table:tidb_query_duration PromQL:histogram_quantile(0.9, sum(rate(tidb_server_handle_query_duration_seconds_bucket{}[60s])) by (le,sql_type,instance)), start_time:2019-12-23 16:10:13, end_time:2019-12-23 16:30:13, step:1m0s"
        ]
      },
      {
        "SQL": "desc select * from information_schema.tables",
        "Plan": [
          "MemTableScan_4 10000.00 root table:TABLES "
        ]
      },
      {
        "SQL": "desc select * from mysql.stats_meta",
        "Plan": [
          "TableReader_5 10000.00 root  data:TableFullScan_4",
          "└─TableFullScan_4 10000.00 cop[tikv] table:stats_meta keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestIsolationReadTiFlashNotChoosePointGet",
    "Cases": [
      {
        "SQL": "explain format = 'brief' select * from t where t.a = 1",
        "Result": [
          "TableReader 1.00 root  data:TableRangeScan",
          "└─TableRangeScan 1.00 cop[tiflash] table:t range:[1,1], keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain format = 'brief' select * from t where t.a in (1, 2)",
        "Result": [
          "TableReader 2.00 root  data:TableRangeScan",
          "└─TableRangeScan 2.00 cop[tiflash] table:t range:[1,1], [2,2], keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestIsolationReadTiFlashUseIndexHint",
    "Cases": [
      {
        "SQL": "explain format = 'brief' select * from t",
        "Plan": [
          "TableReader 10000.00 root  data:TableFullScan",
          "└─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "explain format = 'brief' select * from t use index();",
        "Plan": [
          "TableReader 10000.00 root  data:TableFullScan",
          "└─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "explain format = 'brief' select /*+ use_index(t, idx)*/ * from t",
        "Plan": [
          "TableReader 10000.00 root  data:TableFullScan",
          "└─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": [
          "TiDB doesn't support index in the isolation read engines(value: 'tiflash')"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ use_index(t)*/ * from t",
        "Plan": [
          "TableReader 10000.00 root  data:TableFullScan",
          "└─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      }
    ]
  },
  {
    "Name": "TestIssue20710",
    "Cases": [
      {
        "SQL": "explain format = 'brief' select /*+ inl_join(s) */ * from t join s on t.a=s.a and t.b = s.b",
        "Plan": [
          "IndexJoin 12475.01 root  inner join, inner:IndexLookUp, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.b, test.s.b)",
          "├─TableReader(Build) 9980.01 root  data:Selection",
          "│ └─Selection 9980.01 cop[tikv]  not(isnull(test.t.a)), not(isnull(test.t.b))",
          "│   └─TableFullScan 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp(Probe) 1.25 root  ",
          "  ├─Selection(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─Selection(Probe) 1.25 cop[tikv]  not(isnull(test.s.b))",
          "    └─TableRowIDScan 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ inl_join(s) */ * from t join s on t.a=s.a and t.b = s.a",
        "Plan": [
          "IndexJoin 12475.01 root  inner join, inner:IndexLookUp, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.b, test.s.a)",
          "├─TableReader(Build) 9980.01 root  data:Selection",
          "│ └─Selection 9980.01 cop[tikv]  not(isnull(test.t.a)), not(isnull(test.t.b))",
          "│   └─TableFullScan 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp(Probe) 1.25 root  ",
          "  ├─Selection(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─TableRowIDScan(Probe) 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ inl_join(s) */ * from t join s on t.a=s.a and t.a = s.b",
        "Plan": [
          "IndexJoin 12475.01 root  inner join, inner:IndexLookUp, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.a, test.s.b)",
          "├─TableReader(Build) 9990.00 root  data:Selection",
          "│ └─Selection 9990.00 cop[tikv]  not(isnull(test.t.a))",
          "│   └─TableFullScan 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp(Probe) 1.25 root  ",
          "  ├─Selection(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─Selection(Probe) 1.25 cop[tikv]  not(isnull(test.s.b))",
          "    └─TableRowIDScan 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ inl_hash_join(s) */ * from t join s on t.a=s.a and t.b = s.b",
        "Plan": [
          "IndexHashJoin 12475.01 root  inner join, inner:IndexLookUp, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.b, test.s.b)",
          "├─TableReader(Build) 9980.01 root  data:Selection",
          "│ └─Selection 9980.01 cop[tikv]  not(isnull(test.t.a)), not(isnull(test.t.b))",
          "│   └─TableFullScan 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp(Probe) 1.25 root  ",
          "  ├─Selection(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─Selection(Probe) 1.25 cop[tikv]  not(isnull(test.s.b))",
          "    └─TableRowIDScan 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ inl_hash_join(s) */ * from t join s on t.a=s.a and t.b = s.a",
        "Plan": [
          "IndexHashJoin 12475.01 root  inner join, inner:IndexLookUp, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.b, test.s.a)",
          "├─TableReader(Build) 9980.01 root  data:Selection",
          "│ └─Selection 9980.01 cop[tikv]  not(isnull(test.t.a)), not(isnull(test.t.b))",
          "│   └─TableFullScan 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp(Probe) 1.25 root  ",
          "  ├─Selection(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─TableRowIDScan(Probe) 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ inl_hash_join(s) */ * from t join s on t.a=s.a and t.a = s.b",
        "Plan": [
          "IndexHashJoin 12475.01 root  inner join, inner:IndexLookUp, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.a, test.s.b)",
          "├─TableReader(Build) 9990.00 root  data:Selection",
          "│ └─Selection 9990.00 cop[tikv]  not(isnull(test.t.a))",
          "│   └─TableFullScan 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp(Probe) 1.25 root  ",
          "  ├─Selection(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─Selection(Probe) 1.25 cop[tikv]  not(isnull(test.s.b))",
          "    └─TableRowIDScan 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestPushDownProjectionForTiFlash",
    "Cases": [
      {
        "SQL": "desc select /*+ hash_agg()*/ count(b) from  (select id + 1 as b from t)A",
        "Plan": [
          "HashAgg_12 1.00 root  funcs:count(Column#7)->Column#5",
          "└─TableReader_13 1.00 root  data:HashAgg_8",
          "  └─HashAgg_8 1.00 cop[tiflash]  funcs:count(Column#4)->Column#7",
          "    └─Projection_10 10000.00 cop[tiflash]  plus(test.t.id, 1)->Column#4",
          "      └─TableFullScan_11 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select /*+ hash_agg()*/ count(*) from  (select id + 1 as b from t)A",
        "Plan": [
          "HashAgg_12 1.00 root  funcs:count(Column#6)->Column#5",
          "└─TableReader_13 1.00 root  data:HashAgg_6",
          "  └─HashAgg_6 1.00 cop[tiflash]  funcs:count(1)->Column#6",
          "    └─TableFullScan_11 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select /*+ hash_agg()*/ sum(b) from  (select id + 1 as b from t)A",
        "Plan": [
          "HashAgg_12 1.00 root  funcs:sum(Column#7)->Column#5",
          "└─TableReader_13 1.00 root  data:HashAgg_8",
          "  └─HashAgg_8 1.00 cop[tiflash]  funcs:sum(Column#4)->Column#7",
          "    └─Projection_10 10000.00 cop[tiflash]  plus(test.t.id, 1)->Column#4",
          "      └─TableFullScan_11 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select /*+ stream_agg()*/ count(b) from  (select id + 1 as b from t)A",
        "Plan": [
          "StreamAgg_11 1.00 root  funcs:count(Column#4)->Column#5",
          "└─Projection_15 10000.00 root  plus(test.t.id, 1)->Column#4",
          "  └─TableReader_19 10000.00 root  data:TableFullScan_18",
          "    └─TableFullScan_18 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select /*+ stream_agg()*/ count(*) from  (select id + 1 as b from t)A",
        "Plan": [
          "StreamAgg_17 1.00 root  funcs:count(Column#6)->Column#5",
          "└─TableReader_18 1.00 root  data:StreamAgg_10",
          "  └─StreamAgg_10 1.00 cop[tiflash]  funcs:count(1)->Column#6",
          "    └─TableFullScan_16 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select /*+ stream_agg()*/ sum(b) from  (select id + 1 as b from t)A",
        "Plan": [
          "StreamAgg_11 1.00 root  funcs:sum(Column#7)->Column#5",
          "└─Projection_26 10000.00 root  cast(Column#4, decimal(41,0) BINARY)->Column#7",
          "  └─Projection_15 10000.00 root  plus(test.t.id, 1)->Column#4",
          "    └─TableReader_19 10000.00 root  data:TableFullScan_18",
          "      └─TableFullScan_18 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select * from (select id-2 as b from t) B join (select id-2 as b from t) A on A.b=B.b",
        "Plan": [
          "TableReader_19 10000.00 root  data:HashJoin_9",
          "└─HashJoin_9 10000.00 cop[tiflash]  inner join, equal:[eq(Column#4, Column#8)]",
          "  ├─Projection_13(Build) 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#4",
          "  │ └─Selection_15 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "  │   └─TableFullScan_14 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo, global read",
          "  └─Projection_16(Probe) 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#8",
          "    └─Selection_18 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "      └─TableFullScan_17 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select * from t join (select id-2 as b from t) A on A.b=t.id",
        "Plan": [
          "TableReader_23 10000.00 root  data:HashJoin_9",
          "└─HashJoin_9 10000.00 cop[tiflash]  inner join, equal:[eq(test.t.id, Column#7)]",
          "  ├─Projection_20(Build) 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#7",
          "  │ └─Selection_22 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "  │   └─TableFullScan_21 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo, global read",
          "  └─Selection_19(Probe) 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "    └─TableFullScan_18 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select * from t left join (select id-2 as b from t) A on A.b=t.id",
        "Plan": [
          "TableReader_14 10000.00 root  data:HashJoin_7",
          "└─HashJoin_7 10000.00 cop[tiflash]  left outer join, equal:[eq(test.t.id, Column#7)]",
          "  ├─Projection_11(Build) 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#7",
          "  │ └─Selection_13 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "  │   └─TableFullScan_12 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo, global read",
          "  └─TableFullScan_10(Probe) 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select * from t right join (select id-2 as b from t) A on A.b=t.id",
        "Plan": [
          "TableReader_14 12487.50 root  data:HashJoin_7",
          "└─HashJoin_7 12487.50 cop[tiflash]  right outer join, equal:[eq(test.t.id, Column#7)]",
          "  ├─Selection_11(Build) 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "  │ └─TableFullScan_10 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo, global read",
          "  └─Projection_12(Probe) 10000.00 cop[tiflash]  minus(test.t.id, 2)->Column#7",
          "    └─TableFullScan_13 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select A.b, B.b from (select id-2 as b from t) B join (select id-2 as b from t) A on A.b=B.b",
        "Plan": [
          "Projection_8 10000.00 root  Column#8, Column#4",
          "└─TableReader_19 10000.00 root  data:HashJoin_9",
          "  └─HashJoin_9 10000.00 cop[tiflash]  inner join, equal:[eq(Column#4, Column#8)]",
          "    ├─Projection_13(Build) 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#4",
          "    │ └─Selection_15 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "    │   └─TableFullScan_14 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo, global read",
          "    └─Projection_16(Probe) 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#8",
          "      └─Selection_18 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "        └─TableFullScan_17 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select A.id from t as A where exists (select 1 from t where t.id=A.id)",
        "Plan": [
          "TableReader_15 7992.00 root  data:HashJoin_9",
          "└─HashJoin_9 7992.00 cop[tiflash]  semi join, equal:[eq(test.t.id, test.t.id)]",
          "  ├─Selection_14(Build) 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "  │ └─TableFullScan_13 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo, global read",
          "  └─Selection_12(Probe) 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "    └─TableFullScan_11 10000.00 cop[tiflash] table:A keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select A.id from t as A where not exists  (select 1 from t where t.id=A.id)",
        "Plan": [
          "TableReader_13 8000.00 root  data:HashJoin_9",
          "└─HashJoin_9 8000.00 cop[tiflash]  anti semi join, equal:[eq(test.t.id, test.t.id)]",
          "  ├─TableFullScan_12(Build) 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo, global read",
          "  └─TableFullScan_11(Probe) 10000.00 cop[tiflash] table:A keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestPushDownProjectionForMPP",
    "Cases": [
      {
        "SQL": "desc select /*+ hash_agg()*/ count(b) from  (select id + 1 as b from t)A",
        "Plan": [
          "HashAgg_12 1.00 root  funcs:count(Column#7)->Column#5",
          "└─TableReader_14 1.00 root  data:ExchangeSender_13",
          "  └─ExchangeSender_13 1.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg_8 1.00 cop[tiflash]  funcs:count(Column#4)->Column#7",
          "      └─Projection_10 10000.00 cop[tiflash]  plus(test.t.id, 1)->Column#4",
          "        └─TableFullScan_11 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select /*+ hash_agg()*/ count(*) from  (select id + 1 as b from t)A",
        "Plan": [
          "HashAgg_15 1.00 root  funcs:count(Column#7)->Column#5",
          "└─TableReader_17 1.00 root  data:ExchangeSender_16",
          "  └─ExchangeSender_16 1.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg_8 1.00 cop[tiflash]  funcs:count(1)->Column#7",
          "      └─TableFullScan_14 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select /*+ hash_agg()*/ sum(b) from  (select id + 1 as b from t)A",
        "Plan": [
          "HashAgg_12 1.00 root  funcs:sum(Column#7)->Column#5",
          "└─TableReader_14 1.00 root  data:ExchangeSender_13",
          "  └─ExchangeSender_13 1.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg_8 1.00 cop[tiflash]  funcs:sum(Column#4)->Column#7",
          "      └─Projection_10 10000.00 cop[tiflash]  plus(test.t.id, 1)->Column#4",
          "        └─TableFullScan_11 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select /*+ stream_agg()*/ count(b) from  (select id + 1 as b from t)A",
        "Plan": [
          "StreamAgg_11 1.00 root  funcs:count(Column#4)->Column#5",
          "└─Projection_15 10000.00 root  plus(test.t.id, 1)->Column#4",
          "  └─TableReader_19 10000.00 root  data:TableFullScan_18",
          "    └─TableFullScan_18 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select /*+ stream_agg()*/ count(*) from  (select id + 1 as b from t)A",
        "Plan": [
          "StreamAgg_17 1.00 root  funcs:count(Column#6)->Column#5",
          "└─TableReader_18 1.00 root  data:StreamAgg_10",
          "  └─StreamAgg_10 1.00 cop[tiflash]  funcs:count(1)->Column#6",
          "    └─TableFullScan_16 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select /*+ stream_agg()*/ sum(b) from  (select id + 1 as b from t)A",
        "Plan": [
          "StreamAgg_11 1.00 root  funcs:sum(Column#7)->Column#5",
          "└─Projection_26 10000.00 root  cast(Column#4, decimal(41,0) BINARY)->Column#7",
          "  └─Projection_15 10000.00 root  plus(test.t.id, 1)->Column#4",
          "    └─TableReader_19 10000.00 root  data:TableFullScan_18",
          "      └─TableFullScan_18 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select * from (select id-2 as b from t) B join (select id-2 as b from t) A on A.b=B.b",
        "Plan": [
          "TableReader_22 10000.00 root  data:ExchangeSender_21",
          "└─ExchangeSender_21 10000.00 cop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin_9 10000.00 cop[tiflash]  inner join, equal:[eq(Column#4, Column#8)]",
          "    ├─ExchangeReceiver_17(Build) 8000.00 cop[tiflash]  ",
          "    │ └─ExchangeSender_16 8000.00 cop[tiflash]  ExchangeType: Broadcast",
          "    │   └─Projection_13 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#4",
          "    │     └─Selection_15 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "    │       └─TableFullScan_14 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─Projection_18(Probe) 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#8",
          "      └─Selection_20 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "        └─TableFullScan_19 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select * from t join (select id-2 as b from t) A on A.b=t.id",
        "Plan": [
          "TableReader_20 10000.00 root  data:ExchangeSender_19",
          "└─ExchangeSender_19 10000.00 cop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin_8 10000.00 cop[tiflash]  inner join, equal:[eq(test.t.id, Column#7)]",
          "    ├─ExchangeReceiver_18(Build) 8000.00 cop[tiflash]  ",
          "    │ └─ExchangeSender_17 8000.00 cop[tiflash]  ExchangeType: Broadcast",
          "    │   └─Projection_14 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#7",
          "    │     └─Selection_16 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "    │       └─TableFullScan_15 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─Selection_12(Probe) 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "      └─TableFullScan_11 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select * from t left join (select id-2 as b from t) A on A.b=t.id",
        "Plan": [
          "TableReader_18 10000.00 root  data:ExchangeSender_17",
          "└─ExchangeSender_17 10000.00 cop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin_7 10000.00 cop[tiflash]  left outer join, equal:[eq(test.t.id, Column#7)]",
          "    ├─ExchangeReceiver_16(Build) 8000.00 cop[tiflash]  ",
          "    │ └─ExchangeSender_15 8000.00 cop[tiflash]  ExchangeType: Broadcast",
          "    │   └─Projection_12 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#7",
          "    │     └─Selection_14 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "    │       └─TableFullScan_13 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─TableFullScan_10(Probe) 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select * from t right join (select id-2 as b from t) A on A.b=t.id",
        "Plan": [
          "TableReader_17 12487.50 root  data:ExchangeSender_16",
          "└─ExchangeSender_16 12487.50 cop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin_7 12487.50 cop[tiflash]  right outer join, equal:[eq(test.t.id, Column#7)]",
          "    ├─ExchangeReceiver_13(Build) 9990.00 cop[tiflash]  ",
          "    │ └─ExchangeSender_12 9990.00 cop[tiflash]  ExchangeType: Broadcast",
          "    │   └─Selection_11 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "    │     └─TableFullScan_10 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─Projection_14(Probe) 10000.00 cop[tiflash]  minus(test.t.id, 2)->Column#7",
          "      └─TableFullScan_15 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select A.b, B.b from (select id-2 as b from t) B join (select id-2 as b from t) A on A.b=B.b",
        "Plan": [
          "Projection_8 10000.00 root  Column#8, Column#4",
          "└─TableReader_22 10000.00 root  data:ExchangeSender_21",
          "  └─ExchangeSender_21 10000.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin_9 10000.00 cop[tiflash]  inner join, equal:[eq(Column#4, Column#8)]",
          "      ├─ExchangeReceiver_17(Build) 8000.00 cop[tiflash]  ",
          "      │ └─ExchangeSender_16 8000.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Projection_13 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#4",
          "      │     └─Selection_15 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "      │       └─TableFullScan_14 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "      └─Projection_18(Probe) 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#8",
          "        └─Selection_20 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "          └─TableFullScan_19 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select id from t as A where exists (select 1 from t where t.id=A.id)",
        "Plan": [
          "TableReader_18 7992.00 root  data:ExchangeSender_17",
          "└─ExchangeSender_17 7992.00 cop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin_9 7992.00 cop[tiflash]  semi join, equal:[eq(test.t.id, test.t.id)]",
          "    ├─ExchangeReceiver_16(Build) 9990.00 cop[tiflash]  ",
          "    │ └─ExchangeSender_15 9990.00 cop[tiflash]  ExchangeType: Broadcast",
          "    │   └─Selection_14 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "    │     └─TableFullScan_13 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─Selection_12(Probe) 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "      └─TableFullScan_11 10000.00 cop[tiflash] table:A keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select id from t as A where not exists (select 1 from t where t.id=A.id)",
        "Plan": [
          "TableReader_16 8000.00 root  data:ExchangeSender_15",
          "└─ExchangeSender_15 8000.00 cop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin_9 8000.00 cop[tiflash]  anti semi join, equal:[eq(test.t.id, test.t.id)]",
          "    ├─ExchangeReceiver_14(Build) 10000.00 cop[tiflash]  ",
          "    │ └─ExchangeSender_13 10000.00 cop[tiflash]  ExchangeType: Broadcast",
          "    │   └─TableFullScan_12 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─TableFullScan_11(Probe) 10000.00 cop[tiflash] table:A keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestPushDownAggForMPP",
    "Cases": [
      {
        "SQL": "desc select /*+ hash_agg()*/ count(b) from  (select id + 1 as b from t)A",
        "Plan": [
          "HashAgg_12 1.00 root  funcs:count(Column#7)->Column#5",
          "└─TableReader_14 1.00 root  data:ExchangeSender_13",
          "  └─ExchangeSender_13 1.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg_8 1.00 cop[tiflash]  funcs:count(Column#4)->Column#7",
          "      └─Projection_10 10000.00 cop[tiflash]  plus(test.t.id, 1)->Column#4",
          "        └─TableFullScan_11 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select /*+ hash_agg()*/ count(*) from  (select id+1 from t)A",
        "Plan": [
          "HashAgg_15 1.00 root  funcs:count(Column#7)->Column#5",
          "└─TableReader_17 1.00 root  data:ExchangeSender_16",
          "  └─ExchangeSender_16 1.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg_8 1.00 cop[tiflash]  funcs:count(1)->Column#7",
          "      └─TableFullScan_14 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select /*+ hash_agg()*/ sum(b) from  (select id + 1 as b from t)A",
        "Plan": [
          "HashAgg_12 1.00 root  funcs:sum(Column#7)->Column#5",
          "└─TableReader_14 1.00 root  data:ExchangeSender_13",
          "  └─ExchangeSender_13 1.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg_8 1.00 cop[tiflash]  funcs:sum(Column#4)->Column#7",
          "      └─Projection_10 10000.00 cop[tiflash]  plus(test.t.id, 1)->Column#4",
          "        └─TableFullScan_11 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select count(*) from t",
        "Plan": [
          "HashAgg_16 1.00 root  funcs:count(Column#6)->Column#4",
          "└─TableReader_18 1.00 root  data:ExchangeSender_17",
          "  └─ExchangeSender_17 1.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg_7 1.00 cop[tiflash]  funcs:count(1)->Column#6",
          "      └─TableFullScan_15 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select count(*), id from t group by id",
        "Plan": [
          "TableReader_27 8000.00 root  data:ExchangeSender_26",
          "└─ExchangeSender_26 8000.00 cop[tiflash]  ExchangeType: PassThrough",
          "  └─Projection_22 8000.00 cop[tiflash]  Column#4, test.t.id",
          "    └─HashAgg_23 8000.00 cop[tiflash]  group by:test.t.id, funcs:sum(Column#7)->Column#4, funcs:firstrow(test.t.id)->test.t.id",
          "      └─ExchangeReceiver_25 8000.00 cop[tiflash]  ",
          "        └─ExchangeSender_24 8000.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "          └─HashAgg_8 8000.00 cop[tiflash]  group by:test.t.id, funcs:count(1)->Column#7",
          "            └─TableFullScan_21 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select * from t join ( select count(*), id from t group by id) as A on A.id = t.id",
        "Plan": [
          "TableReader_37 9990.00 root  data:ExchangeSender_36",
          "└─ExchangeSender_36 9990.00 cop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin_9 9990.00 cop[tiflash]  inner join, equal:[eq(test.t.id, test.t.id)]",
          "    ├─Projection_27(Build) 7992.00 cop[tiflash]  Column#7, test.t.id",
          "    │ └─HashAgg_28 7992.00 cop[tiflash]  group by:test.t.id, funcs:sum(Column#8)->Column#7, funcs:firstrow(test.t.id)->test.t.id",
          "    │   └─ExchangeReceiver_30 7992.00 cop[tiflash]  ",
          "    │     └─ExchangeSender_29 7992.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "    │       └─HashAgg_17 7992.00 cop[tiflash]  group by:test.t.id, funcs:count(1)->Column#8",
          "    │         └─Selection_26 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "    │           └─TableFullScan_25 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─ExchangeReceiver_15(Probe) 9990.00 cop[tiflash]  ",
          "      └─ExchangeSender_14 9990.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "        └─Selection_13 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "          └─TableFullScan_12 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select * from t join ( select /*+ hash_agg()*/  count(*) as a from t) as A on A.a = t.id",
        "Plan": [
          "HashJoin_10 1.25 root  inner join, equal:[eq(test.t.id, Column#7)]",
          "├─HashAgg_39(Build) 1.00 root  funcs:count(Column#11)->Column#7",
          "│ └─TableReader_41 1.00 root  data:ExchangeSender_40",
          "│   └─ExchangeSender_40 1.00 cop[tiflash]  ExchangeType: PassThrough",
          "│     └─HashAgg_33 1.00 cop[tiflash]  funcs:count(1)->Column#11",
          "│       └─TableFullScan_18 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "└─TableReader_30(Probe) 9990.00 root  data:Selection_29",
          "  └─Selection_29 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "    └─TableFullScan_28 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select avg(value) as b,id from t group by id",
        "Plan": [
          "TableReader_27 8000.00 root  data:ExchangeSender_26",
          "└─ExchangeSender_26 8000.00 cop[tiflash]  ExchangeType: PassThrough",
          "  └─Projection_22 8000.00 cop[tiflash]  div(Column#4, cast(case(eq(Column#9, 0), 1, Column#9), decimal(20,0) BINARY))->Column#4, test.t.id",
          "    └─HashAgg_23 8000.00 cop[tiflash]  group by:test.t.id, funcs:sum(Column#10)->Column#9, funcs:sum(Column#11)->Column#4, funcs:firstrow(test.t.id)->test.t.id",
          "      └─ExchangeReceiver_25 8000.00 cop[tiflash]  ",
          "        └─ExchangeSender_24 8000.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "          └─HashAgg_8 8000.00 cop[tiflash]  group by:test.t.id, funcs:count(test.t.value)->Column#10, funcs:sum(test.t.value)->Column#11",
          "            └─TableFullScan_21 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select /*+hash_agg()*/ sum(b),id from (select avg(value) as b, id from t group by id)A",
        "Plan": [
          "HashAgg_7 1.00 root  funcs:sum(Column#4)->Column#5, funcs:firstrow(test.t.id)->test.t.id",
          "└─TableReader_30 8000.00 root  data:ExchangeSender_29",
          "  └─ExchangeSender_29 8000.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─Projection_25 8000.00 cop[tiflash]  div(Column#4, cast(case(eq(Column#10, 0), 1, Column#10), decimal(20,0) BINARY))->Column#4, test.t.id",
          "      └─HashAgg_26 8000.00 cop[tiflash]  group by:test.t.id, funcs:sum(Column#11)->Column#10, funcs:sum(Column#12)->Column#4, funcs:firstrow(test.t.id)->test.t.id",
          "        └─ExchangeReceiver_28 8000.00 cop[tiflash]  ",
          "          └─ExchangeSender_27 8000.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "            └─HashAgg_11 8000.00 cop[tiflash]  group by:test.t.id, funcs:count(test.t.value)->Column#11, funcs:sum(test.t.value)->Column#12",
          "              └─TableFullScan_24 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select id from t group by id having avg(value)>0",
        "Plan": [
          "Projection_6 6400.00 root  test.t.id",
          "└─Selection_7 6400.00 root  gt(Column#4, 0)",
          "  └─TableReader_30 8000.00 root  data:ExchangeSender_29",
          "    └─ExchangeSender_29 8000.00 cop[tiflash]  ExchangeType: PassThrough",
          "      └─Projection_25 8000.00 cop[tiflash]  div(Column#4, cast(case(eq(Column#10, 0), 1, Column#10), decimal(20,0) BINARY))->Column#4, test.t.id",
          "        └─HashAgg_26 8000.00 cop[tiflash]  group by:test.t.id, funcs:sum(Column#11)->Column#10, funcs:sum(Column#12)->Column#4, funcs:firstrow(test.t.id)->test.t.id",
          "          └─ExchangeReceiver_28 8000.00 cop[tiflash]  ",
          "            └─ExchangeSender_27 8000.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "              └─HashAgg_11 8000.00 cop[tiflash]  group by:test.t.id, funcs:count(test.t.value)->Column#11, funcs:sum(test.t.value)->Column#12",
          "                └─TableFullScan_24 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select avg(value),id from t group by id having avg(value)>0",
        "Plan": [
          "Selection_7 6400.00 root  gt(Column#4, 0)",
          "└─TableReader_30 8000.00 root  data:ExchangeSender_29",
          "  └─ExchangeSender_29 8000.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─Projection_25 8000.00 cop[tiflash]  div(Column#4, cast(case(eq(Column#11, 0), 1, Column#11), decimal(20,0) BINARY))->Column#4, test.t.id",
          "      └─HashAgg_26 8000.00 cop[tiflash]  group by:test.t.id, funcs:sum(Column#12)->Column#11, funcs:sum(Column#13)->Column#4, funcs:firstrow(test.t.id)->test.t.id",
          "        └─ExchangeReceiver_28 8000.00 cop[tiflash]  ",
          "          └─ExchangeSender_27 8000.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "            └─HashAgg_11 8000.00 cop[tiflash]  group by:test.t.id, funcs:count(test.t.value)->Column#12, funcs:sum(test.t.value)->Column#13",
          "              └─TableFullScan_24 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select avg(value) +1,id from t group by id",
        "Plan": [
          "Projection_4 8000.00 root  plus(Column#4, 1)->Column#5, test.t.id",
          "└─TableReader_27 8000.00 root  data:ExchangeSender_26",
          "  └─ExchangeSender_26 8000.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─Projection_22 8000.00 cop[tiflash]  div(Column#4, cast(case(eq(Column#11, 0), 1, Column#11), decimal(20,0) BINARY))->Column#4, test.t.id",
          "      └─HashAgg_23 8000.00 cop[tiflash]  group by:test.t.id, funcs:sum(Column#12)->Column#11, funcs:sum(Column#13)->Column#4, funcs:firstrow(test.t.id)->test.t.id",
          "        └─ExchangeReceiver_25 8000.00 cop[tiflash]  ",
          "          └─ExchangeSender_24 8000.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "            └─HashAgg_8 8000.00 cop[tiflash]  group by:test.t.id, funcs:count(test.t.value)->Column#12, funcs:sum(test.t.value)->Column#13",
          "              └─TableFullScan_21 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select sum(b) from (select t.id, t1.id as b from t join t t1 on t.id=t1.id)A group by id",
        "Plan": [
          "TableReader_36 7992.00 root  data:ExchangeSender_35",
          "└─ExchangeSender_35 7992.00 cop[tiflash]  ExchangeType: PassThrough",
          "  └─Projection_31 7992.00 cop[tiflash]  Column#7",
          "    └─HashAgg_32 7992.00 cop[tiflash]  group by:test.t.id, funcs:sum(Column#8)->Column#7",
          "      └─ExchangeReceiver_34 7992.00 cop[tiflash]  ",
          "        └─ExchangeSender_33 7992.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "          └─HashAgg_12 7992.00 cop[tiflash]  group by:test.t.id, funcs:sum(test.t.id)->Column#8",
          "            └─HashJoin_30 12487.50 cop[tiflash]  inner join, equal:[eq(test.t.id, test.t.id)]",
          "              ├─ExchangeReceiver_20(Build) 9990.00 cop[tiflash]  ",
          "              │ └─ExchangeSender_19 9990.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "              │   └─Selection_18 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "              │     └─TableFullScan_17 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "              └─ExchangeReceiver_24(Probe) 9990.00 cop[tiflash]  ",
          "                └─ExchangeSender_23 9990.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "                  └─Selection_22 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "                    └─TableFullScan_21 10000.00 cop[tiflash] table:t1 keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select * from (select id from t group by id) C join (select sum(b),id from (select t.id, t1.id as b from t join (select id, count(*) as c from t group by id) t1 on t.id=t1.id)A group by id)B on C.id=b.id",
        "Plan": [
          "TableReader_74 7992.00 root  data:ExchangeSender_73",
          "└─ExchangeSender_73 7992.00 cop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin_17 7992.00 cop[tiflash]  inner join, equal:[eq(test.t.id, test.t.id)]",
          "    ├─Projection_28(Build) 7992.00 cop[tiflash]  test.t.id",
          "    │ └─HashAgg_20 7992.00 cop[tiflash]  group by:test.t.id, funcs:firstrow(test.t.id)->test.t.id",
          "    │   └─ExchangeReceiver_27 9990.00 cop[tiflash]  ",
          "    │     └─ExchangeSender_26 9990.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "    │       └─Selection_25 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "    │         └─TableFullScan_24 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─Projection_70(Probe) 7992.00 cop[tiflash]  Column#11, test.t.id",
          "      └─HashAgg_40 7992.00 cop[tiflash]  group by:test.t.id, funcs:sum(test.t.id)->Column#11, funcs:firstrow(test.t.id)->test.t.id",
          "        └─HashJoin_44 9990.00 cop[tiflash]  inner join, equal:[eq(test.t.id, test.t.id)]",
          "          ├─Projection_58(Build) 7992.00 cop[tiflash]  test.t.id",
          "          │ └─HashAgg_50 7992.00 cop[tiflash]  group by:test.t.id, funcs:firstrow(test.t.id)->test.t.id",
          "          │   └─ExchangeReceiver_57 9990.00 cop[tiflash]  ",
          "          │     └─ExchangeSender_56 9990.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "          │       └─Selection_55 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "          │         └─TableFullScan_54 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "          └─ExchangeReceiver_49(Probe) 9990.00 cop[tiflash]  ",
          "            └─ExchangeSender_48 9990.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "              └─Selection_47 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "                └─TableFullScan_46 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select count(distinct value),id from t group by id",
        "Plan": [
          "HashAgg_5 8000.00 root  group by:test.t.id, funcs:count(distinct test.t.value)->Column#4, funcs:firstrow(test.t.id)->test.t.id",
          "└─TableReader_9 10000.00 root  data:TableFullScan_8",
          "  └─TableFullScan_8 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select * from t join ( select count(distinct value), id from t group by id) as A on A.id = t.id",
        "Plan": [
          "HashJoin_10 9990.00 root  inner join, equal:[eq(test.t.id, test.t.id)]",
          "├─HashAgg_22(Build) 7992.00 root  group by:test.t.id, funcs:count(distinct test.t.value)->Column#7, funcs:firstrow(test.t.id)->test.t.id",
          "│ └─TableReader_28 9990.00 root  data:Selection_27",
          "│   └─Selection_27 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "│     └─TableFullScan_26 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "└─TableReader_21(Probe) 9990.00 root  data:Selection_20",
          "  └─Selection_20 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "    └─TableFullScan_19 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select * from t join ( select count(1/value), id from t group by id) as A on A.id = t.id",
        "Plan": [
          "TableReader_37 9990.00 root  data:ExchangeSender_36",
          "└─ExchangeSender_36 9990.00 cop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin_9 9990.00 cop[tiflash]  inner join, equal:[eq(test.t.id, test.t.id)]",
          "    ├─Projection_27(Build) 7992.00 cop[tiflash]  Column#7, test.t.id",
          "    │ └─HashAgg_28 7992.00 cop[tiflash]  group by:test.t.id, funcs:sum(Column#8)->Column#7, funcs:firstrow(test.t.id)->test.t.id",
          "    │   └─ExchangeReceiver_30 7992.00 cop[tiflash]  ",
          "    │     └─ExchangeSender_29 7992.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "    │       └─HashAgg_17 7992.00 cop[tiflash]  group by:test.t.id, funcs:count(div(1, test.t.value))->Column#8",
          "    │         └─Selection_26 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "    │           └─TableFullScan_25 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─ExchangeReceiver_15(Probe) 9990.00 cop[tiflash]  ",
          "      └─ExchangeSender_14 9990.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "        └─Selection_13 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "          └─TableFullScan_12 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestMppAggWithJoin",
    "Cases": [
      {
        "SQL": "desc select * from t join ( select count(*), id from t group by id) as A on A.id = t.id",
        "Plan": [
          "TableReader_32 9990.00 root  data:ExchangeSender_31",
          "└─ExchangeSender_31 9990.00 cop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin_9 9990.00 cop[tiflash]  inner join, equal:[eq(test.t.id, test.t.id)]",
          "    ├─ExchangeReceiver_30(Build) 7992.00 cop[tiflash]  ",
          "    │ └─ExchangeSender_29 7992.00 cop[tiflash]  ExchangeType: Broadcast",
          "    │   └─Projection_25 7992.00 cop[tiflash]  Column#7, test.t.id",
          "    │     └─HashAgg_26 7992.00 cop[tiflash]  group by:test.t.id, funcs:sum(Column#8)->Column#7, funcs:firstrow(test.t.id)->test.t.id",
          "    │       └─ExchangeReceiver_28 7992.00 cop[tiflash]  ",
          "    │         └─ExchangeSender_27 7992.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "    │           └─HashAgg_15 7992.00 cop[tiflash]  group by:test.t.id, funcs:count(1)->Column#8",
          "    │             └─Selection_24 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "    │               └─TableFullScan_23 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─Selection_13(Probe) 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "      └─TableFullScan_12 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select * from t join ( select count(*)+id as v from t group by id) as A on A.v = t.id",
        "Plan": [
          "TableReader_33 8000.00 root  data:ExchangeSender_32",
          "└─ExchangeSender_32 8000.00 cop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin_10 8000.00 cop[tiflash]  inner join, equal:[eq(test.t.id, Column#8)]",
          "    ├─ExchangeReceiver_31(Build) 6400.00 cop[tiflash]  ",
          "    │ └─ExchangeSender_30 6400.00 cop[tiflash]  ExchangeType: Broadcast",
          "    │   └─Projection_16 6400.00 cop[tiflash]  plus(Column#7, test.t.id)->Column#8",
          "    │     └─Selection_18 6400.00 cop[tiflash]  not(isnull(plus(Column#7, test.t.id)))",
          "    │       └─Projection_26 8000.00 cop[tiflash]  Column#7, test.t.id",
          "    │         └─HashAgg_27 8000.00 cop[tiflash]  group by:test.t.id, funcs:sum(Column#11)->Column#7, funcs:firstrow(test.t.id)->test.t.id",
          "    │           └─ExchangeReceiver_29 8000.00 cop[tiflash]  ",
          "    │             └─ExchangeSender_28 8000.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "    │               └─HashAgg_20 8000.00 cop[tiflash]  group by:test.t.id, funcs:count(1)->Column#11",
          "    │                 └─TableFullScan_25 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─Selection_14(Probe) 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "      └─TableFullScan_13 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select * from t join ( select count(*) as v, id from t group by value,id having value+v <10) as A on A.id = t.id",
        "Plan": [
          "Projection_10 7992.00 root  test.t.id, test.t.value, Column#7, test.t.id",
          "└─TableReader_34 7992.00 root  data:ExchangeSender_33",
          "  └─ExchangeSender_33 7992.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin_11 7992.00 cop[tiflash]  inner join, equal:[eq(test.t.id, test.t.id)]",
          "      ├─ExchangeReceiver_32(Build) 6393.60 cop[tiflash]  ",
          "      │ └─ExchangeSender_31 6393.60 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection_17 6393.60 cop[tiflash]  lt(plus(test.t.value, cast(Column#7)), 10)",
          "      │     └─Projection_27 7992.00 cop[tiflash]  Column#7, test.t.id, test.t.value",
          "      │       └─HashAgg_28 7992.00 cop[tiflash]  group by:test.t.id, test.t.value, funcs:sum(Column#10)->Column#7, funcs:firstrow(test.t.id)->test.t.id, funcs:firstrow(test.t.value)->test.t.value",
          "      │         └─ExchangeReceiver_30 7992.00 cop[tiflash]  ",
          "      │           └─ExchangeSender_29 7992.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.value, test.t.id",
          "      │             └─HashAgg_19 7992.00 cop[tiflash]  group by:test.t.id, test.t.value, funcs:count(1)->Column#10",
          "      │               └─Selection_26 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "      │                 └─TableFullScan_25 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "      └─Selection_15(Probe) 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "        └─TableFullScan_14 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select * from t join ( select /*+ hash_agg()*/  count(*) as a from t) as A on A.a = t.id",
        "Plan": [
          "HashJoin_10 1.25 root  inner join, equal:[eq(test.t.id, Column#7)]",
          "├─HashAgg_33(Build) 1.00 root  funcs:count(Column#10)->Column#7",
          "│ └─TableReader_35 1.00 root  data:ExchangeSender_34",
          "│   └─ExchangeSender_34 1.00 cop[tiflash]  ExchangeType: PassThrough",
          "│     └─HashAgg_27 1.00 cop[tiflash]  funcs:count(1)->Column#10",
          "│       └─TableFullScan_15 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "└─TableReader_24(Probe) 9990.00 root  data:Selection_23",
          "  └─Selection_23 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "    └─TableFullScan_22 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select sum(b) from (select t.id, t1.id as b from t join t t1 on t.id=t1.id)A group by id",
        "Plan": [
          "TableReader_33 7992.00 root  data:ExchangeSender_32",
          "└─ExchangeSender_32 7992.00 cop[tiflash]  ExchangeType: PassThrough",
          "  └─Projection_28 7992.00 cop[tiflash]  Column#7",
          "    └─HashAgg_29 7992.00 cop[tiflash]  group by:test.t.id, funcs:sum(Column#8)->Column#7",
          "      └─ExchangeReceiver_31 7992.00 cop[tiflash]  ",
          "        └─ExchangeSender_30 7992.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "          └─HashAgg_12 7992.00 cop[tiflash]  group by:test.t.id, funcs:sum(test.t.id)->Column#8",
          "            └─HashJoin_27 12487.50 cop[tiflash]  inner join, equal:[eq(test.t.id, test.t.id)]",
          "              ├─ExchangeReceiver_19(Build) 9990.00 cop[tiflash]  ",
          "              │ └─ExchangeSender_18 9990.00 cop[tiflash]  ExchangeType: Broadcast",
          "              │   └─Selection_17 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "              │     └─TableFullScan_16 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "              └─Selection_21(Probe) 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "                └─TableFullScan_20 10000.00 cop[tiflash] table:t1 keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select * from (select id from t group by id) C join (select sum(value),id from t group by id)B on C.id=B.id",
        "Plan": [
          "TableReader_45 7992.00 root  data:ExchangeSender_44",
          "└─ExchangeSender_44 7992.00 cop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin_11 7992.00 cop[tiflash]  inner join, equal:[eq(test.t.id, test.t.id)]",
          "    ├─ExchangeReceiver_22(Build) 7992.00 cop[tiflash]  ",
          "    │ └─ExchangeSender_21 7992.00 cop[tiflash]  ExchangeType: Broadcast",
          "    │   └─Projection_20 7992.00 cop[tiflash]  test.t.id",
          "    │     └─HashAgg_14 7992.00 cop[tiflash]  group by:test.t.id, funcs:firstrow(test.t.id)->test.t.id",
          "    │       └─ExchangeReceiver_19 9990.00 cop[tiflash]  ",
          "    │         └─ExchangeSender_18 9990.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "    │           └─Selection_17 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "    │             └─TableFullScan_16 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─Projection_40(Probe) 7992.00 cop[tiflash]  Column#7, test.t.id",
          "      └─HashAgg_41 7992.00 cop[tiflash]  group by:test.t.id, funcs:sum(Column#9)->Column#7, funcs:firstrow(test.t.id)->test.t.id",
          "        └─ExchangeReceiver_43 7992.00 cop[tiflash]  ",
          "          └─ExchangeSender_42 7992.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "            └─HashAgg_32 7992.00 cop[tiflash]  group by:test.t.id, funcs:sum(test.t.value)->Column#9",
          "              └─Selection_39 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "                └─TableFullScan_38 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select * from (select id from t group by id) C join (select sum(b),id from (select t.id, t1.id as b from t join (select id, count(*) as c from t group by id) t1 on t.id=t1.id)A group by id)B on C.id=b.id",
        "Plan": [
          "TableReader_69 7992.00 root  data:ExchangeSender_68",
          "└─ExchangeSender_68 7992.00 cop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin_17 7992.00 cop[tiflash]  inner join, equal:[eq(test.t.id, test.t.id)]",
          "    ├─ExchangeReceiver_28(Build) 7992.00 cop[tiflash]  ",
          "    │ └─ExchangeSender_27 7992.00 cop[tiflash]  ExchangeType: Broadcast",
          "    │   └─Projection_26 7992.00 cop[tiflash]  test.t.id",
          "    │     └─HashAgg_20 7992.00 cop[tiflash]  group by:test.t.id, funcs:firstrow(test.t.id)->test.t.id",
          "    │       └─ExchangeReceiver_25 9990.00 cop[tiflash]  ",
          "    │         └─ExchangeSender_24 9990.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "    │           └─Selection_23 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "    │             └─TableFullScan_22 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─Projection_64(Probe) 7992.00 cop[tiflash]  Column#11, test.t.id",
          "      └─HashAgg_65 7992.00 cop[tiflash]  group by:test.t.id, funcs:sum(Column#14)->Column#11, funcs:firstrow(test.t.id)->test.t.id",
          "        └─ExchangeReceiver_67 7992.00 cop[tiflash]  ",
          "          └─ExchangeSender_66 7992.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "            └─HashAgg_38 7992.00 cop[tiflash]  group by:test.t.id, funcs:sum(test.t.id)->Column#14",
          "              └─HashJoin_63 9990.00 cop[tiflash]  inner join, equal:[eq(test.t.id, test.t.id)]",
          "                ├─ExchangeReceiver_51(Build) 7992.00 cop[tiflash]  ",
          "                │ └─ExchangeSender_50 7992.00 cop[tiflash]  ExchangeType: Broadcast",
          "                │   └─Projection_49 7992.00 cop[tiflash]  test.t.id",
          "                │     └─HashAgg_43 7992.00 cop[tiflash]  group by:test.t.id, funcs:firstrow(test.t.id)->test.t.id",
          "                │       └─ExchangeReceiver_48 9990.00 cop[tiflash]  ",
          "                │         └─ExchangeSender_47 9990.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "                │           └─Selection_46 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "                │             └─TableFullScan_45 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "                └─Selection_42(Probe) 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "                  └─TableFullScan_41 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      }
    ]
  }
]
