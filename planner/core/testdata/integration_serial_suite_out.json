[
  {
    "Name": "TestSelPushDownTiFlash",
    "Cases": [
      {
        "SQL": "explain select * from t where t.a > 1 and t.b = \"flash\" or t.a + 3 * t.a = 5",
        "Result": [
          "TableReader_7 8000.00 root  data:Selection_6",
          "└─Selection_6 8000.00 cop[tiflash]  or(and(gt(test.t.a, 1), eq(test.t.b, \"flash\")), eq(plus(test.t.a, mul(3, test.t.a)), 5))",
          "  └─TableFullScan_5 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain select * from t where cast(t.a as float) + 3 = 5.1",
        "Result": [
          "Selection_7 10000.00 root  eq(plus(cast(test.t.a), 3), 5.1)",
          "└─TableReader_6 10000.00 root  data:TableFullScan_5",
          "  └─TableFullScan_5 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain select * from t where b > 'a' order by convert(b, unsigned) limit 2",
        "Result": [
          "Projection_18 2.00 root  test.t.a, test.t.b",
          "└─TopN_8 2.00 root  Column#3:asc, offset:0, count:2",
          "  └─Projection_19 2.00 root  test.t.a, test.t.b, cast(test.t.b, bigint(22) UNSIGNED BINARY)->Column#3",
          "    └─TableReader_14 2.00 root  data:TopN_13",
          "      └─TopN_13 2.00 batchCop[tiflash]  cast(test.t.b):asc, offset:0, count:2",
          "        └─Selection_12 3333.33 batchCop[tiflash]  gt(test.t.b, \"a\")",
          "          └─TableFullScan_11 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain select * from t where b > 'a' order by b limit 2",
        "Result": [
          "TopN_8 2.00 root  test.t.b:asc, offset:0, count:2",
          "└─TableReader_17 2.00 root  data:TopN_16",
          "  └─TopN_16 2.00 batchCop[tiflash]  test.t.b:asc, offset:0, count:2",
          "    └─Selection_15 3333.33 batchCop[tiflash]  gt(test.t.b, \"a\")",
          "      └─TableFullScan_14 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestPushDownToTiFlashWithKeepOrder",
    "Cases": [
      {
        "SQL": "explain select max(a) from t",
        "Plan": [
          "StreamAgg_9 1.00 root  funcs:max(test.t.a)->Column#3",
          "└─TopN_10 1.00 root  test.t.a:desc, offset:0, count:1",
          "  └─TableReader_18 1.00 root  data:TopN_17",
          "    └─TopN_17 1.00 batchCop[tiflash]  test.t.a:desc, offset:0, count:1",
          "      └─TableFullScan_16 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain select min(a) from t",
        "Plan": [
          "StreamAgg_9 1.00 root  funcs:min(test.t.a)->Column#3",
          "└─Limit_13 1.00 root  offset:0, count:1",
          "  └─TableReader_23 1.00 root  data:Limit_22",
          "    └─Limit_22 1.00 cop[tiflash]  offset:0, count:1",
          "      └─TableFullScan_21 1.00 cop[tiflash] table:t keep order:true, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestBroadcastJoin",
    "Cases": [
      {
        "SQL": "explain select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t, d1_t where fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "StreamAgg_24 1.00 root  funcs:count(Column#13)->Column#11",
          "└─TableReader_25 1.00 root  data:StreamAgg_9",
          "  └─StreamAgg_9 1.00 batchCop[tiflash]  funcs:count(1)->Column#13",
          "    └─BroadcastJoin_23 8.00 batchCop[tiflash]  inner join, left key:test.fact_t.d1_k, right key:test.d1_t.d1_k",
          "      ├─Selection_19(Build) 2.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │ └─TableFullScan_18 2.00 batchCop[tiflash] table:d1_t keep order:false, global read",
          "      └─Selection_17(Probe) 8.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan_16 8.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain select /*+ broadcast_join(fact_t,d1_t,d2_t,d3_t) */ count(*) from fact_t, d1_t, d2_t, d3_t where fact_t.d1_k = d1_t.d1_k and fact_t.d2_k = d2_t.d2_k and fact_t.d3_k = d3_t.d3_k",
        "Plan": [
          "StreamAgg_44 1.00 root  funcs:count(Column#19)->Column#17",
          "└─TableReader_45 1.00 root  data:StreamAgg_13",
          "  └─StreamAgg_13 1.00 batchCop[tiflash]  funcs:count(1)->Column#19",
          "    └─BroadcastJoin_43 8.00 batchCop[tiflash]  inner join, left key:test.fact_t.d3_k, right key:test.d3_t.d3_k",
          "      ├─Selection_39(Build) 2.00 batchCop[tiflash]  not(isnull(test.d3_t.d3_k))",
          "      │ └─TableFullScan_38 2.00 batchCop[tiflash] table:d3_t keep order:false, global read",
          "      └─BroadcastJoin_29(Probe) 8.00 batchCop[tiflash]  inner join, left key:test.fact_t.d2_k, right key:test.d2_t.d2_k",
          "        ├─Selection_25(Build) 2.00 batchCop[tiflash]  not(isnull(test.d2_t.d2_k))",
          "        │ └─TableFullScan_24 2.00 batchCop[tiflash] table:d2_t keep order:false, global read",
          "        └─BroadcastJoin_33(Probe) 8.00 batchCop[tiflash]  inner join, left key:test.fact_t.d1_k, right key:test.d1_t.d1_k",
          "          ├─Selection_23(Build) 2.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "          │ └─TableFullScan_22 2.00 batchCop[tiflash] table:d1_t keep order:false, global read",
          "          └─Selection_37(Probe) 8.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k)), not(isnull(test.fact_t.d2_k)), not(isnull(test.fact_t.d3_k))",
          "            └─TableFullScan_36 8.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain select /*+ broadcast_join(fact_t,d1_t), broadcast_join_local(d1_t) */ count(*) from fact_t, d1_t where fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "StreamAgg_18 1.00 root  funcs:count(Column#13)->Column#11",
          "└─TableReader_19 1.00 root  data:StreamAgg_9",
          "  └─StreamAgg_9 1.00 batchCop[tiflash]  funcs:count(1)->Column#13",
          "    └─BroadcastJoin_17 8.00 batchCop[tiflash]  inner join, left key:test.fact_t.d1_k, right key:test.d1_t.d1_k",
          "      ├─Selection_14(Build) 2.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │ └─TableFullScan_13 2.00 batchCop[tiflash] table:d1_t keep order:false",
          "      └─Selection_12(Probe) 8.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan_11 8.00 batchCop[tiflash] table:fact_t keep order:false, global read"
        ]
      },
      {
        "SQL": "explain select /*+ broadcast_join(fact_t,d1_t,d2_t,d3_t), broadcast_join_local(d2_t) */ count(*) from fact_t, d1_t, d2_t, d3_t where fact_t.d1_k = d1_t.d1_k and fact_t.d2_k = d2_t.d2_k and fact_t.d3_k = d3_t.d3_k",
        "Plan": [
          "StreamAgg_29 1.00 root  funcs:count(Column#19)->Column#17",
          "└─TableReader_30 1.00 root  data:StreamAgg_13",
          "  └─StreamAgg_13 1.00 batchCop[tiflash]  funcs:count(1)->Column#19",
          "    └─BroadcastJoin_28 8.00 batchCop[tiflash]  inner join, left key:test.fact_t.d3_k, right key:test.d3_t.d3_k",
          "      ├─Selection_25(Build) 2.00 batchCop[tiflash]  not(isnull(test.d3_t.d3_k))",
          "      │ └─TableFullScan_24 2.00 batchCop[tiflash] table:d3_t keep order:false, global read",
          "      └─BroadcastJoin_15(Probe) 8.00 batchCop[tiflash]  inner join, left key:test.fact_t.d2_k, right key:test.d2_t.d2_k",
          "        ├─Selection_23(Build) 2.00 batchCop[tiflash]  not(isnull(test.d2_t.d2_k))",
          "        │ └─TableFullScan_22 2.00 batchCop[tiflash] table:d2_t keep order:false",
          "        └─BroadcastJoin_16(Probe) 8.00 batchCop[tiflash]  inner join, left key:test.fact_t.d1_k, right key:test.d1_t.d1_k",
          "          ├─Selection_21(Build) 2.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "          │ └─TableFullScan_20 2.00 batchCop[tiflash] table:d1_t keep order:false, global read",
          "          └─Selection_19(Probe) 8.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k)), not(isnull(test.fact_t.d2_k)), not(isnull(test.fact_t.d3_k))",
          "            └─TableFullScan_18 8.00 batchCop[tiflash] table:fact_t keep order:false, global read"
        ]
      },
      {
        "SQL": "explain select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "StreamAgg_16 1.00 root  funcs:count(Column#13)->Column#11",
          "└─TableReader_17 1.00 root  data:StreamAgg_8",
          "  └─StreamAgg_8 1.00 batchCop[tiflash]  funcs:count(1)->Column#13",
          "    └─BroadcastJoin_15 8.00 batchCop[tiflash]  left outer join, left key:test.fact_t.d1_k, right key:test.d1_t.d1_k",
          "      ├─Selection_12(Build) 2.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │ └─TableFullScan_11 2.00 batchCop[tiflash] table:d1_t keep order:false, global read",
          "      └─TableFullScan_10(Probe) 8.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "StreamAgg_16 1.00 root  funcs:count(Column#13)->Column#11",
          "└─TableReader_17 1.00 root  data:StreamAgg_8",
          "  └─StreamAgg_8 1.00 batchCop[tiflash]  funcs:count(1)->Column#13",
          "    └─BroadcastJoin_15 8.00 batchCop[tiflash]  right outer join, left key:test.fact_t.d1_k, right key:test.d1_t.d1_k",
          "      ├─TableFullScan_12(Build) 2.00 batchCop[tiflash] table:d1_t keep order:false",
          "      └─Selection_11(Probe) 8.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan_10 8.00 batchCop[tiflash] table:fact_t keep order:false, global read"
        ]
      }
    ]
  },
  {
    "Name": "TestReadFromStorageHint",
    "Cases": [
      {
        "SQL": "desc select avg(a) from t",
        "Plan": [
          "StreamAgg_24 1.00 root  funcs:avg(Column#7, Column#8)->Column#4",
          "└─TableReader_25 1.00 root  data:StreamAgg_8",
          "  └─StreamAgg_8 1.00 batchCop[tiflash]  funcs:count(test.t.a)->Column#7, funcs:sum(test.t.a)->Column#8",
          "    └─TableFullScan_22 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[t]) */ avg(a) from t",
        "Plan": [
          "StreamAgg_16 1.00 root  funcs:avg(Column#7, Column#8)->Column#4",
          "└─TableReader_17 1.00 root  data:StreamAgg_8",
          "  └─StreamAgg_8 1.00 batchCop[tiflash]  funcs:count(test.t.a)->Column#7, funcs:sum(test.t.a)->Column#8",
          "    └─TableFullScan_15 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[t]) */ sum(a) from t",
        "Plan": [
          "StreamAgg_16 1.00 root  funcs:sum(Column#6)->Column#4",
          "└─TableReader_17 1.00 root  data:StreamAgg_8",
          "  └─StreamAgg_8 1.00 batchCop[tiflash]  funcs:sum(test.t.a)->Column#6",
          "    └─TableFullScan_15 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[t]) */ sum(a+1) from t",
        "Plan": [
          "StreamAgg_16 1.00 root  funcs:sum(Column#6)->Column#4",
          "└─TableReader_17 1.00 root  data:StreamAgg_8",
          "  └─StreamAgg_8 1.00 batchCop[tiflash]  funcs:sum(plus(test.t.a, 1))->Column#6",
          "    └─TableFullScan_15 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[t]) */ sum(isnull(a)) from t",
        "Plan": [
          "StreamAgg_16 1.00 root  funcs:sum(Column#6)->Column#4",
          "└─TableReader_17 1.00 root  data:StreamAgg_8",
          "  └─StreamAgg_8 1.00 batchCop[tiflash]  funcs:sum(isnull(test.t.a))->Column#6",
          "    └─TableFullScan_15 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ READ_FROM_STORAGE(TIKV[t1], TIKV[t2]) */ * from t t1, t t2 where t1.a = t2.a",
        "Plan": [
          "HashJoin_23 12487.50 root  inner join, equal:[eq(test.t.a, test.t.a)]",
          "├─TableReader_41(Build) 9990.00 root  data:Selection_40",
          "│ └─Selection_40 9990.00 cop[tikv]  not(isnull(test.t.a))",
          "│   └─TableFullScan_39 10000.00 cop[tikv] table:t2 keep order:false, stats:pseudo",
          "└─TableReader_35(Probe) 9990.00 root  data:Selection_34",
          "  └─Selection_34 9990.00 cop[tikv]  not(isnull(test.t.a))",
          "    └─TableFullScan_33 10000.00 cop[tikv] table:t1 keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ READ_FROM_STORAGE(TIKV[t1], TIFLASH[t2]) */ * from t t1, t t2 where t1.a = t2.a",
        "Plan": [
          "HashJoin_16 12487.50 root  inner join, equal:[eq(test.t.a, test.t.a)]",
          "├─TableReader_24(Build) 9990.00 root  data:Selection_23",
          "│ └─Selection_23 9990.00 cop[tiflash]  not(isnull(test.t.a))",
          "│   └─TableFullScan_22 10000.00 cop[tiflash] table:t2 keep order:false, stats:pseudo",
          "└─TableReader_27(Probe) 9990.00 root  data:Selection_26",
          "  └─Selection_26 9990.00 cop[tikv]  not(isnull(test.t.a))",
          "    └─TableFullScan_25 10000.00 cop[tikv] table:t1 keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select * from tt where (tt.a > 1 and tt.a < 20) or (tt.a >= 30 and tt.a < 55)",
        "Plan": [
          "TableReader_8 44.00 root  data:TableRangeScan_7",
          "└─TableRangeScan_7 44.00 cop[tiflash] table:tt range:(1,20), [30,55), keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[tt]) */ * from tt where (tt.a > 1 and tt.a < 20) or (tt.a >= 30 and tt.a < 55)",
        "Plan": [
          "TableReader_6 44.00 root  data:TableRangeScan_5",
          "└─TableRangeScan_5 44.00 cop[tiflash] table:tt range:(1,20), [30,55), keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select * from ttt order by ttt.a desc",
        "Plan": [
          "TableReader_13 10000.00 root  data:TableFullScan_12",
          "└─TableFullScan_12 10000.00 cop[tikv] table:ttt keep order:true, desc, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[ttt]) */ * from ttt order by ttt.a desc",
        "Plan": [
          "Sort_4 10000.00 root  test.ttt.a:desc",
          "└─TableReader_8 10000.00 root  data:TableFullScan_7",
          "  └─TableFullScan_7 10000.00 cop[tiflash] table:ttt keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[ttt]) */ * from ttt order by ttt.a",
        "Plan": [
          "TableReader_11 10000.00 root  data:TableFullScan_10",
          "└─TableFullScan_10 10000.00 cop[tiflash] table:ttt keep order:true, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tikv[t, ttt]) */ * from ttt",
        "Plan": [
          "TableReader_5 10000.00 root  data:TableFullScan_4",
          "└─TableFullScan_4 10000.00 cop[tikv] table:ttt keep order:false, stats:pseudo"
        ],
        "Warn": [
          "[planner:1815]There are no matching table names for (t) in optimizer hint /*+ READ_FROM_STORAGE(tikv[t, ttt]) */. Maybe you can use the table alias name"
        ]
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[t, ttt], tikv[tt]) */ * from ttt",
        "Plan": [
          "TableReader_5 10000.00 root  data:TableFullScan_4",
          "└─TableFullScan_4 10000.00 cop[tiflash] table:ttt keep order:false, stats:pseudo"
        ],
        "Warn": [
          "[planner:1815]There are no matching table names for (t, tt) in optimizer hint /*+ READ_FROM_STORAGE(tiflash[t, ttt], tikv[tt]) */. Maybe you can use the table alias name"
        ]
      }
    ]
  },
  {
    "Name": "TestIsolationReadTiFlashUseIndexHint",
    "Cases": null
  },
  {
    "Name": "TestReadFromStorageHintAndIsolationRead",
    "Cases": [
      {
        "SQL": "desc select /*+ read_from_storage(tikv[t], tiflash[t]) */ avg(a) from t",
        "Plan": [
          "StreamAgg_20 1.00 root  funcs:avg(Column#7, Column#8)->Column#4",
          "└─IndexReader_21 1.00 root  index:StreamAgg_8",
          "  └─StreamAgg_8 1.00 cop[tikv]  funcs:count(test.t.a)->Column#7, funcs:sum(test.t.a)->Column#8",
          "    └─IndexFullScan_19 10000.00 cop[tikv] table:t, index:ia(a) keep order:false, stats:pseudo"
        ],
        "Warn": [
          "[planner:1815]Storage hints are conflict, you can only specify one storage type of table test.t"
        ]
      },
      {
        "SQL": "desc select /*+ read_from_storage(tikv[t]) */ avg(a) from t",
        "Plan": [
          "StreamAgg_20 1.00 root  funcs:avg(Column#7, Column#8)->Column#4",
          "└─IndexReader_21 1.00 root  index:StreamAgg_8",
          "  └─StreamAgg_8 1.00 cop[tikv]  funcs:count(test.t.a)->Column#7, funcs:sum(test.t.a)->Column#8",
          "    └─IndexFullScan_19 10000.00 cop[tikv] table:t, index:ia(a) keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[t]) */ avg(a) from t",
        "Plan": [
          "StreamAgg_20 1.00 root  funcs:avg(Column#7, Column#8)->Column#4",
          "└─IndexReader_21 1.00 root  index:StreamAgg_8",
          "  └─StreamAgg_8 1.00 cop[tikv]  funcs:count(test.t.a)->Column#7, funcs:sum(test.t.a)->Column#8",
          "    └─IndexFullScan_19 10000.00 cop[tikv] table:t, index:ia(a) keep order:false, stats:pseudo"
        ],
        "Warn": [
          "[planner:1815]No available path for table test.t with the store type tiflash of the hint /*+ read_from_storage */, please check the status of the table replica and variable value of tidb_isolation_read_engines(map[0:{}])"
        ]
      }
    ]
  },
  {
    "Name": "TestIsolationReadDoNotFilterSystemDB",
    "Cases": [
      {
        "SQL": "desc select * from metrics_schema.tidb_query_duration where time >= '2019-12-23 16:10:13' and time <= '2019-12-23 16:30:13'",
        "Plan": [
          "MemTableScan_5 10000.00 root table:tidb_query_duration PromQL:histogram_quantile(0.9, sum(rate(tidb_server_handle_query_duration_seconds_bucket{}[60s])) by (le,sql_type,instance)), start_time:2019-12-23 16:10:13, end_time:2019-12-23 16:30:13, step:1m0s"
        ]
      },
      {
        "SQL": "desc select * from information_schema.tables",
        "Plan": [
          "MemTableScan_4 10000.00 root table:TABLES "
        ]
      },
      {
        "SQL": "desc select * from mysql.stats_meta",
        "Plan": [
          "TableReader_5 10000.00 root  data:TableFullScan_4",
          "└─TableFullScan_4 10000.00 cop[tikv] table:stats_meta keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestIsolationReadTiFlashNotChoosePointGet",
    "Cases": [
      {
        "SQL": "explain select * from t where t.a = 1",
        "Result": [
          "TableReader_6 1.00 root  data:TableRangeScan_5",
          "└─TableRangeScan_5 1.00 cop[tiflash] table:t range:[1,1], keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain select * from t where t.a in (1, 2)",
        "Result": [
          "TableReader_6 2.00 root  data:TableRangeScan_5",
          "└─TableRangeScan_5 2.00 cop[tiflash] table:t range:[1,1], [2,2], keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestIsolationReadTiFlashUseIndexHint",
    "Cases": [
      {
        "SQL": "explain select * from t",
        "Plan": [
          "TableReader_5 10000.00 root  data:TableFullScan_4",
          "└─TableFullScan_4 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "explain select * from t use index();",
        "Plan": [
          "TableReader_5 10000.00 root  data:TableFullScan_4",
          "└─TableFullScan_4 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "explain select /*+ use_index(t, idx)*/ * from t",
        "Plan": [
          "TableReader_5 10000.00 root  data:TableFullScan_4",
          "└─TableFullScan_4 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": [
          "TiDB doesn't support index in the isolation read engines(value: 'tiflash')"
        ]
      },
      {
        "SQL": "explain select /*+ use_index(t)*/ * from t",
        "Plan": [
          "TableReader_5 10000.00 root  data:TableFullScan_4",
          "└─TableFullScan_4 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      }
    ]
  },
  {
    "Name": "TestIssue20710",
    "Cases": [
      {
        "SQL": "explain select /*+ inl_join(s) */ * from t join s on t.a=s.a and t.b = s.b",
        "Plan": [
          "IndexJoin_11 12475.01 root  inner join, inner:IndexLookUp_10, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.b, test.s.b)",
          "├─TableReader_16(Build) 9980.01 root  data:Selection_15",
          "│ └─Selection_15 9980.01 cop[tikv]  not(isnull(test.t.a)), not(isnull(test.t.b))",
          "│   └─TableFullScan_14 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp_10(Probe) 1.25 root  ",
          "  ├─Selection_8(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan_6 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─Selection_9(Probe) 1.25 cop[tikv]  not(isnull(test.s.b))",
          "    └─TableRowIDScan_7 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain select /*+ inl_join(s) */ * from t join s on t.a=s.a and t.b = s.a",
        "Plan": [
          "IndexJoin_10 12475.01 root  inner join, inner:IndexLookUp_9, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.b, test.s.a)",
          "├─TableReader_15(Build) 9980.01 root  data:Selection_14",
          "│ └─Selection_14 9980.01 cop[tikv]  not(isnull(test.t.a)), not(isnull(test.t.b))",
          "│   └─TableFullScan_13 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp_9(Probe) 1.25 root  ",
          "  ├─Selection_8(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan_6 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─TableRowIDScan_7(Probe) 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain select /*+ inl_join(s) */ * from t join s on t.a=s.a and t.a = s.b",
        "Plan": [
          "IndexJoin_11 12475.01 root  inner join, inner:IndexLookUp_10, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.a, test.s.b)",
          "├─TableReader_16(Build) 9990.00 root  data:Selection_15",
          "│ └─Selection_15 9990.00 cop[tikv]  not(isnull(test.t.a))",
          "│   └─TableFullScan_14 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp_10(Probe) 1.25 root  ",
          "  ├─Selection_8(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan_6 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─Selection_9(Probe) 1.25 cop[tikv]  not(isnull(test.s.b))",
          "    └─TableRowIDScan_7 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain select /*+ inl_hash_join(s) */ * from t join s on t.a=s.a and t.b = s.b",
        "Plan": [
          "IndexHashJoin_13 12475.01 root  inner join, inner:IndexLookUp_10, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.b, test.s.b)",
          "├─TableReader_16(Build) 9980.01 root  data:Selection_15",
          "│ └─Selection_15 9980.01 cop[tikv]  not(isnull(test.t.a)), not(isnull(test.t.b))",
          "│   └─TableFullScan_14 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp_10(Probe) 1.25 root  ",
          "  ├─Selection_8(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan_6 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─Selection_9(Probe) 1.25 cop[tikv]  not(isnull(test.s.b))",
          "    └─TableRowIDScan_7 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain select /*+ inl_hash_join(s) */ * from t join s on t.a=s.a and t.b = s.a",
        "Plan": [
          "IndexHashJoin_12 12475.01 root  inner join, inner:IndexLookUp_9, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.b, test.s.a)",
          "├─TableReader_15(Build) 9980.01 root  data:Selection_14",
          "│ └─Selection_14 9980.01 cop[tikv]  not(isnull(test.t.a)), not(isnull(test.t.b))",
          "│   └─TableFullScan_13 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp_9(Probe) 1.25 root  ",
          "  ├─Selection_8(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan_6 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─TableRowIDScan_7(Probe) 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain select /*+ inl_hash_join(s) */ * from t join s on t.a=s.a and t.a = s.b",
        "Plan": [
          "IndexHashJoin_13 12475.01 root  inner join, inner:IndexLookUp_10, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.a, test.s.b)",
          "├─TableReader_16(Build) 9990.00 root  data:Selection_15",
          "│ └─Selection_15 9990.00 cop[tikv]  not(isnull(test.t.a))",
          "│   └─TableFullScan_14 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp_10(Probe) 1.25 root  ",
          "  ├─Selection_8(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan_6 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─Selection_9(Probe) 1.25 cop[tikv]  not(isnull(test.s.b))",
          "    └─TableRowIDScan_7 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestLimitIndexLookUpKeepOrder",
    "Cases": [
      {
        "SQL": "desc select * from t where a = 1 and b > 2 and b < 10 and d = 10 order by b,c limit 10",
        "Plan": [
          "Limit_12 0.00 root  offset:0, count:10",
          "└─Projection_34 0.00 root  test.t.a, test.t.b, test.t.c, test.t.d",
          "  └─IndexLookUp_33 0.00 root  ",
          "    ├─IndexRangeScan_30(Build) 2.50 cop[tikv] table:t, index:idx(a, b, c) range:(1 2,1 10), keep order:true, stats:pseudo",
          "    └─Selection_32(Probe) 0.00 cop[tikv]  eq(test.t.d, 10)",
          "      └─TableRowIDScan_31 2.50 cop[tikv] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc select * from t where a = 1 and b > 2 and b < 10 and d = 10 order by b desc, c desc limit 10",
        "Plan": [
          "Limit_12 0.00 root  offset:0, count:10",
          "└─Projection_34 0.00 root  test.t.a, test.t.b, test.t.c, test.t.d",
          "  └─IndexLookUp_33 0.00 root  ",
          "    ├─IndexRangeScan_30(Build) 2.50 cop[tikv] table:t, index:idx(a, b, c) range:(1 2,1 10), keep order:true, desc, stats:pseudo",
          "    └─Selection_32(Probe) 0.00 cop[tikv]  eq(test.t.d, 10)",
          "      └─TableRowIDScan_31 2.50 cop[tikv] table:t keep order:false, stats:pseudo"
        ]
      }
    ]
  }
]
