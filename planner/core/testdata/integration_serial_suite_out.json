[
  {
    "Name": "TestSelPushDownTiFlash",
    "Cases": [
      {
<<<<<<< HEAD
        "SQL": "explain select * from t where t.a > 1 and t.b = \"flash\" or t.a + 3 * t.a = 5",
        "Result": [
          "TableReader_7 8000.00 root  data:Selection_6",
          "└─Selection_6 8000.00 cop[tiflash]  or(and(gt(test.t.a, 1), eq(test.t.b, \"flash\")), eq(plus(test.t.a, mul(3, test.t.a)), 5))",
          "  └─TableFullScan_5 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain select * from t where cast(t.a as float) + 3 = 5.1",
        "Result": [
          "Selection_7 10000.00 root  eq(plus(cast(test.t.a), 3), 5.1)",
          "└─TableReader_6 10000.00 root  data:TableFullScan_5",
          "  └─TableFullScan_5 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain select * from t where b > 'a' order by convert(b, unsigned) limit 2",
        "Result": [
          "Projection_18 2.00 root  test.t.a, test.t.b",
          "└─TopN_8 2.00 root  Column#3:asc, offset:0, count:2",
          "  └─Projection_19 2.00 root  test.t.a, test.t.b, cast(test.t.b, bigint(22) UNSIGNED BINARY)->Column#3",
          "    └─TableReader_14 2.00 root  data:TopN_13",
          "      └─TopN_13 2.00 cop[tiflash]  cast(test.t.b):asc, offset:0, count:2",
          "        └─Selection_12 3333.33 cop[tiflash]  gt(test.t.b, \"a\")",
          "          └─TableFullScan_11 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain select * from t where b > 'a' order by b limit 2",
        "Result": [
          "TopN_8 2.00 root  test.t.b:asc, offset:0, count:2",
          "└─TableReader_17 2.00 root  data:TopN_16",
          "  └─TopN_16 2.00 cop[tiflash]  test.t.b:asc, offset:0, count:2",
          "    └─Selection_15 3333.33 cop[tiflash]  gt(test.t.b, \"a\")",
          "      └─TableFullScan_14 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
=======
        "SQL": "explain format = 'brief' select * from t where t.a > 1 and t.b = \"flash\" or t.a + 3 * t.a = 5",
        "Plan": [
          "TableReader 8000.67 root  data:Selection",
          "└─Selection 8000.67 cop[tiflash]  or(and(gt(test.t.a, 1), eq(test.t.b, \"flash\")), eq(plus(test.t.a, mul(3, test.t.a)), 5))",
          "  └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain format = 'brief' select * from t where cast(t.a as float) + 3 = 5.1",
        "Plan": [
          "Selection 10000.00 root  eq(plus(cast(test.t.a), 3), 5.1)",
          "└─TableReader 10000.00 root  data:TableFullScan",
          "  └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain format = 'brief' select * from t where b > 'a' order by convert(b, unsigned) limit 2",
        "Plan": [
          "Projection 2.00 root  test.t.a, test.t.b",
          "└─TopN 2.00 root  Column#3, offset:0, count:2",
          "  └─Projection 2.00 root  test.t.a, test.t.b, cast(test.t.b, bigint(22) UNSIGNED BINARY)->Column#3",
          "    └─TableReader 2.00 root  data:TopN",
          "      └─TopN 2.00 batchCop[tiflash]  cast(test.t.b), offset:0, count:2",
          "        └─Selection 3333.33 batchCop[tiflash]  gt(test.t.b, \"a\")",
          "          └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain format = 'brief' select * from t where b > 'a' order by b limit 2",
        "Plan": [
          "TopN 2.00 root  test.t.b, offset:0, count:2",
          "└─TableReader 2.00 root  data:TopN",
          "  └─TopN 2.00 batchCop[tiflash]  test.t.b, offset:0, count:2",
          "    └─Selection 3333.33 batchCop[tiflash]  gt(test.t.b, \"a\")",
          "      └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestMPPJoin",
    "Cases": [
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t, d1_t where fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 8.00 batchCop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)]",
          "        ├─ExchangeReceiver(Build) 2.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 2.00 batchCop[tiflash]  ExchangeType: Broadcast",
          "        │   └─Selection 2.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "        │     └─TableFullScan 2.00 batchCop[tiflash] table:d1_t keep order:false",
          "        └─Selection(Probe) 8.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "          └─TableFullScan 8.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t, d1_t, d2_t, d3_t where fact_t.d1_k = d1_t.d1_k and fact_t.d2_k = d2_t.d2_k and fact_t.d3_k = d3_t.d3_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#18)->Column#17",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#18",
          "      └─HashJoin 8.00 batchCop[tiflash]  inner join, equal:[eq(test.fact_t.d3_k, test.d3_t.d3_k)]",
          "        ├─ExchangeReceiver(Build) 2.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 2.00 batchCop[tiflash]  ExchangeType: Broadcast",
          "        │   └─Selection 2.00 batchCop[tiflash]  not(isnull(test.d3_t.d3_k))",
          "        │     └─TableFullScan 2.00 batchCop[tiflash] table:d3_t keep order:false",
          "        └─HashJoin(Probe) 8.00 batchCop[tiflash]  inner join, equal:[eq(test.fact_t.d2_k, test.d2_t.d2_k)]",
          "          ├─ExchangeReceiver(Build) 2.00 batchCop[tiflash]  ",
          "          │ └─ExchangeSender 2.00 batchCop[tiflash]  ExchangeType: Broadcast",
          "          │   └─Selection 2.00 batchCop[tiflash]  not(isnull(test.d2_t.d2_k))",
          "          │     └─TableFullScan 2.00 batchCop[tiflash] table:d2_t keep order:false",
          "          └─HashJoin(Probe) 8.00 batchCop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)]",
          "            ├─ExchangeReceiver(Build) 2.00 batchCop[tiflash]  ",
          "            │ └─ExchangeSender 2.00 batchCop[tiflash]  ExchangeType: Broadcast",
          "            │   └─Selection 2.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "            │     └─TableFullScan 2.00 batchCop[tiflash] table:d1_t keep order:false",
          "            └─Selection(Probe) 8.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k)), not(isnull(test.fact_t.d2_k)), not(isnull(test.fact_t.d3_k))",
          "              └─TableFullScan 8.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t, d1_t where fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 8.00 batchCop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)]",
          "        ├─ExchangeReceiver(Build) 2.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 2.00 batchCop[tiflash]  ExchangeType: Broadcast",
          "        │   └─Selection 2.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "        │     └─TableFullScan 2.00 batchCop[tiflash] table:d1_t keep order:false",
          "        └─Selection(Probe) 8.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "          └─TableFullScan 8.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader 8.00 root  data:ExchangeSender",
          "  └─ExchangeSender 8.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 8.00 cop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─ExchangeReceiver(Build) 2.00 cop[tiflash]  ",
          "      │ └─ExchangeSender 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │     └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─TableFullScan(Probe) 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader 8.00 root  data:ExchangeSender",
          "  └─ExchangeSender 8.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 8.00 cop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─ExchangeReceiver(Build) 8.00 cop[tiflash]  ",
          "      │ └─ExchangeSender 8.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "      │     └─TableFullScan 8.00 cop[tiflash] table:fact_t keep order:false",
          "      └─TableFullScan(Probe) 2.00 cop[tiflash] table:d1_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col1 > d1_t.value",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 8.00 batchCop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)], other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "        ├─ExchangeReceiver(Build) 2.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 2.00 batchCop[tiflash]  ExchangeType: Broadcast",
          "        │   └─Selection 2.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "        │     └─TableFullScan 2.00 batchCop[tiflash] table:d1_t keep order:false",
          "        └─Selection(Probe) 8.00 batchCop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "          └─TableFullScan 8.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col1 > 10",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader 8.00 root  data:ExchangeSender",
          "  └─ExchangeSender 8.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 8.00 cop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], left cond:[gt(test.fact_t.col1, 10)]",
          "      ├─ExchangeReceiver(Build) 2.00 cop[tiflash]  ",
          "      │ └─ExchangeSender 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │     └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─TableFullScan(Probe) 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col2 > 10 and fact_t.col1 > d1_t.value",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader 8.00 root  data:ExchangeSender",
          "  └─ExchangeSender 8.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 8.00 cop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], left cond:[gt(test.fact_t.col2, 10)], other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "      ├─ExchangeReceiver(Build) 2.00 cop[tiflash]  ",
          "      │ └─ExchangeSender 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "      │     └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─TableFullScan(Probe) 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k and d1_t.value > 10",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader 8.00 root  data:ExchangeSender",
          "  └─ExchangeSender 8.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 8.00 cop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], right cond:gt(test.d1_t.value, 10)",
          "      ├─ExchangeReceiver(Build) 8.00 cop[tiflash]  ",
          "      │ └─ExchangeSender 8.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "      │     └─TableFullScan 8.00 cop[tiflash] table:fact_t keep order:false",
          "      └─TableFullScan(Probe) 2.00 cop[tiflash] table:d1_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k and d1_t.value > 10 and fact_t.col1 > d1_t.value",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader 8.00 root  data:ExchangeSender",
          "  └─ExchangeSender 8.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 8.00 cop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], right cond:gt(test.d1_t.value, 10), other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "      ├─ExchangeReceiver(Build) 8.00 cop[tiflash]  ",
          "      │ └─ExchangeSender 8.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection 8.00 cop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "      │     └─TableFullScan 8.00 cop[tiflash] table:fact_t keep order:false",
          "      └─TableFullScan(Probe) 2.00 cop[tiflash] table:d1_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t where exists (select 1 from d1_t where d1_k = fact_t.d1_k)",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(1)->Column#12",
          "└─TableReader 6.40 root  data:ExchangeSender",
          "  └─ExchangeSender 6.40 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 6.40 cop[tiflash]  semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─ExchangeReceiver(Build) 2.00 cop[tiflash]  ",
          "      │ └─ExchangeSender 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │     └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─Selection(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t where exists (select 1 from d1_t where d1_k = fact_t.d1_k and value > fact_t.col1)",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(1)->Column#12",
          "└─TableReader 6.40 root  data:ExchangeSender",
          "  └─ExchangeSender 6.40 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 6.40 cop[tiflash]  semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], other cond:gt(test.d1_t.value, test.fact_t.col1)",
          "      ├─ExchangeReceiver(Build) 2.00 cop[tiflash]  ",
          "      │ └─ExchangeSender 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "      │     └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─Selection(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t where not exists (select 1 from d1_t where d1_k = fact_t.d1_k)",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(1)->Column#12",
          "└─TableReader 6.40 root  data:ExchangeSender",
          "  └─ExchangeSender 6.40 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 6.40 cop[tiflash]  anti semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─ExchangeReceiver(Build) 2.00 cop[tiflash]  ",
          "      │ └─ExchangeSender 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─TableFullScan(Probe) 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t where not exists (select 1 from d1_t where d1_k = fact_t.d1_k and value > fact_t.col1)",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(1)->Column#12",
          "└─TableReader 6.40 root  data:ExchangeSender",
          "  └─ExchangeSender 6.40 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 6.40 cop[tiflash]  anti semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], other cond:gt(test.d1_t.value, test.fact_t.col1)",
          "      ├─ExchangeReceiver(Build) 2.00 cop[tiflash]  ",
          "      │ └─ExchangeSender 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─TableFullScan(Probe) 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      }
    ]
  },
  {
    "Name": "TestMPPShuffledJoin",
    "Cases": [
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t, d1_t where fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 32.00 batchCop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)]",
          "        ├─ExchangeReceiver(Build) 4.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "        │   └─Selection 4.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "        │     └─TableFullScan 4.00 batchCop[tiflash] table:d1_t keep order:false",
          "        └─ExchangeReceiver(Probe) 16.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 16.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "            └─Selection 16.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "              └─TableFullScan 16.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t, d1_t, d2_t, d3_t where fact_t.d1_k = d1_t.d1_k and fact_t.d2_k = d2_t.d2_k and fact_t.d3_k = d3_t.d3_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#18)->Column#17",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#18",
          "      └─HashJoin 128.00 batchCop[tiflash]  inner join, equal:[eq(test.fact_t.d3_k, test.d3_t.d3_k)]",
          "        ├─ExchangeReceiver(Build) 4.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d3_t.d3_k",
          "        │   └─Selection 4.00 batchCop[tiflash]  not(isnull(test.d3_t.d3_k))",
          "        │     └─TableFullScan 4.00 batchCop[tiflash] table:d3_t keep order:false",
          "        └─ExchangeReceiver(Probe) 64.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 64.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d3_k",
          "            └─HashJoin 64.00 batchCop[tiflash]  inner join, equal:[eq(test.fact_t.d2_k, test.d2_t.d2_k)]",
          "              ├─ExchangeReceiver(Build) 4.00 batchCop[tiflash]  ",
          "              │ └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d2_t.d2_k",
          "              │   └─Selection 4.00 batchCop[tiflash]  not(isnull(test.d2_t.d2_k))",
          "              │     └─TableFullScan 4.00 batchCop[tiflash] table:d2_t keep order:false",
          "              └─ExchangeReceiver(Probe) 32.00 batchCop[tiflash]  ",
          "                └─ExchangeSender 32.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d2_k",
          "                  └─HashJoin 32.00 batchCop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)]",
          "                    ├─ExchangeReceiver(Build) 4.00 batchCop[tiflash]  ",
          "                    │ └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "                    │   └─Selection 4.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "                    │     └─TableFullScan 4.00 batchCop[tiflash] table:d1_t keep order:false",
          "                    └─ExchangeReceiver(Probe) 16.00 batchCop[tiflash]  ",
          "                      └─ExchangeSender 16.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "                        └─Selection 16.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k)), not(isnull(test.fact_t.d2_k)), not(isnull(test.fact_t.d3_k))",
          "                          └─TableFullScan 16.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t, d1_t where fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 32.00 batchCop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)]",
          "        ├─ExchangeReceiver(Build) 4.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "        │   └─Selection 4.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "        │     └─TableFullScan 4.00 batchCop[tiflash] table:d1_t keep order:false",
          "        └─ExchangeReceiver(Probe) 16.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 16.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "            └─Selection 16.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "              └─TableFullScan 16.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t, d1_t, d2_t, d3_t where fact_t.d1_k = d1_t.d1_k and fact_t.d1_k = d2_t.value and fact_t.d1_k = d3_t.value",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#18)->Column#17",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#18",
          "      └─HashJoin 128.00 batchCop[tiflash]  inner join, equal:[eq(test.fact_t.d1_k, test.d3_t.value)]",
          "        ├─ExchangeReceiver(Build) 4.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d3_t.value",
          "        │   └─Selection 4.00 batchCop[tiflash]  not(isnull(test.d3_t.value))",
          "        │     └─TableFullScan 4.00 batchCop[tiflash] table:d3_t keep order:false",
          "        └─HashJoin(Probe) 64.00 batchCop[tiflash]  inner join, equal:[eq(test.fact_t.d1_k, test.d2_t.value)]",
          "          ├─ExchangeReceiver(Build) 4.00 batchCop[tiflash]  ",
          "          │ └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d2_t.value",
          "          │   └─Selection 4.00 batchCop[tiflash]  not(isnull(test.d2_t.value))",
          "          │     └─TableFullScan 4.00 batchCop[tiflash] table:d2_t keep order:false",
          "          └─HashJoin(Probe) 32.00 batchCop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)]",
          "            ├─ExchangeReceiver(Build) 4.00 batchCop[tiflash]  ",
          "            │ └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "            │   └─Selection 4.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "            │     └─TableFullScan 4.00 batchCop[tiflash] table:d1_t keep order:false",
          "            └─ExchangeReceiver(Probe) 16.00 batchCop[tiflash]  ",
          "              └─ExchangeSender 16.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "                └─Selection 16.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "                  └─TableFullScan 16.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 32.00 batchCop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "        ├─ExchangeReceiver(Build) 4.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "        │   └─Selection 4.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "        │     └─TableFullScan 4.00 batchCop[tiflash] table:d1_t keep order:false",
          "        └─ExchangeReceiver(Probe) 16.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 16.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "            └─TableFullScan 16.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 32.00 batchCop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "        ├─ExchangeReceiver(Build) 16.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 16.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "        │   └─Selection 16.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        │     └─TableFullScan 16.00 batchCop[tiflash] table:fact_t keep order:false",
          "        └─ExchangeReceiver(Probe) 4.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "            └─TableFullScan 4.00 batchCop[tiflash] table:d1_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col1 > d1_t.value",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 32.00 batchCop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)], other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "        ├─ExchangeReceiver(Build) 4.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "        │   └─Selection 4.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "        │     └─TableFullScan 4.00 batchCop[tiflash] table:d1_t keep order:false",
          "        └─ExchangeReceiver(Probe) 16.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 16.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "            └─Selection 16.00 batchCop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "              └─TableFullScan 16.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col1 > 10",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 32.00 batchCop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], left cond:[gt(test.fact_t.col1, 10)]",
          "        ├─ExchangeReceiver(Build) 4.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "        │   └─Selection 4.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "        │     └─TableFullScan 4.00 batchCop[tiflash] table:d1_t keep order:false",
          "        └─ExchangeReceiver(Probe) 16.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 16.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "            └─TableFullScan 16.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from (select case when t1.col1 is null then t2.col1 + 5 else 10 end as col1, t2.d1_k as d1_k from fact_t t1 right join fact_t t2 on t1.d1_k = t2.d1_k) fact_t join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col1 > 5",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#22)->Column#19",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#22",
          "      └─HashJoin 204.80 batchCop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)]",
          "        ├─ExchangeReceiver(Build) 4.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "        │   └─Selection 4.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "        │     └─TableFullScan 4.00 batchCop[tiflash] table:d1_t keep order:false",
          "        └─Projection(Probe) 102.40 batchCop[tiflash]  test.fact_t.d1_k",
          "          └─Selection 102.40 batchCop[tiflash]  gt(case(isnull(test.fact_t.col1), plus(test.fact_t.col1, 5), 10), 5)",
          "            └─HashJoin 128.00 batchCop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.fact_t.d1_k)]",
          "              ├─ExchangeReceiver(Build) 16.00 batchCop[tiflash]  ",
          "              │ └─ExchangeSender 16.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "              │   └─Selection 16.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "              │     └─TableFullScan 16.00 batchCop[tiflash] table:t1 keep order:false",
          "              └─ExchangeReceiver(Probe) 16.00 batchCop[tiflash]  ",
          "                └─ExchangeSender 16.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "                  └─Selection 16.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "                    └─TableFullScan 16.00 batchCop[tiflash] table:t2 keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col2 > 10 and fact_t.col1 > d1_t.value",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 32.00 batchCop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], left cond:[gt(test.fact_t.col2, 10)], other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "        ├─ExchangeReceiver(Build) 4.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "        │   └─Selection 4.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "        │     └─TableFullScan 4.00 batchCop[tiflash] table:d1_t keep order:false",
          "        └─ExchangeReceiver(Probe) 16.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 16.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "            └─TableFullScan 16.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k and d1_t.value > 10",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 32.00 batchCop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], right cond:gt(test.d1_t.value, 10)",
          "        ├─ExchangeReceiver(Build) 16.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 16.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "        │   └─Selection 16.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        │     └─TableFullScan 16.00 batchCop[tiflash] table:fact_t keep order:false",
          "        └─ExchangeReceiver(Probe) 4.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "            └─TableFullScan 4.00 batchCop[tiflash] table:d1_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k and d1_t.value > 10 and fact_t.col1 > d1_t.value",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 32.00 batchCop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], right cond:gt(test.d1_t.value, 10), other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "        ├─ExchangeReceiver(Build) 16.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 16.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "        │   └─Selection 16.00 batchCop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "        │     └─TableFullScan 16.00 batchCop[tiflash] table:fact_t keep order:false",
          "        └─ExchangeReceiver(Probe) 4.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "            └─TableFullScan 4.00 batchCop[tiflash] table:d1_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t where exists (select 1 from d1_t where d1_k = fact_t.d1_k)",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#13)->Column#12",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#13",
          "      └─HashJoin 12.80 batchCop[tiflash]  semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "        ├─ExchangeReceiver(Build) 4.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "        │   └─Selection 4.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "        │     └─TableFullScan 4.00 batchCop[tiflash] table:d1_t keep order:false",
          "        └─ExchangeReceiver(Probe) 16.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 16.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "            └─Selection 16.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "              └─TableFullScan 16.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t where exists (select 1 from d1_t where d1_k = fact_t.d1_k and value > fact_t.col1)",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#13)->Column#12",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#13",
          "      └─HashJoin 12.80 batchCop[tiflash]  semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], other cond:gt(test.d1_t.value, test.fact_t.col1)",
          "        ├─ExchangeReceiver(Build) 4.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "        │   └─Selection 4.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "        │     └─TableFullScan 4.00 batchCop[tiflash] table:d1_t keep order:false",
          "        └─ExchangeReceiver(Probe) 16.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 16.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "            └─Selection 16.00 batchCop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "              └─TableFullScan 16.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t where not exists (select 1 from d1_t where d1_k = fact_t.d1_k)",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#13)->Column#12",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#13",
          "      └─HashJoin 12.80 batchCop[tiflash]  anti semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "        ├─ExchangeReceiver(Build) 4.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "        │   └─TableFullScan 4.00 batchCop[tiflash] table:d1_t keep order:false",
          "        └─ExchangeReceiver(Probe) 16.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 16.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "            └─TableFullScan 16.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t where not exists (select 1 from d1_t where d1_k = fact_t.d1_k and value > fact_t.col1)",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#13)->Column#12",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#13",
          "      └─HashJoin 12.80 batchCop[tiflash]  anti semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], other cond:gt(test.d1_t.value, test.fact_t.col1)",
          "        ├─ExchangeReceiver(Build) 4.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "        │   └─TableFullScan 4.00 batchCop[tiflash] table:d1_t keep order:false",
          "        └─ExchangeReceiver(Probe) 16.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 16.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "            └─TableFullScan 16.00 batchCop[tiflash] table:fact_t keep order:false"
>>>>>>> b3d4458b2... planner: refine explain info for batch cop (#20360)
        ]
      }
    ]
  },
  {
    "Name": "TestBroadcastJoin",
    "Cases": [
      {
<<<<<<< HEAD
        "SQL": "explain select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t, d1_t where fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "StreamAgg_24 1.00 root  funcs:count(Column#13)->Column#11",
          "└─TableReader_25 1.00 root  data:StreamAgg_9",
          "  └─StreamAgg_9 1.00 cop[tiflash]  funcs:count(1)->Column#13",
          "    └─BroadcastJoin_23 8.00 cop[tiflash]  inner join, left key:test.fact_t.d1_k, right key:test.d1_t.d1_k",
          "      ├─Selection_19(Build) 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │ └─TableFullScan_18 2.00 cop[tiflash] table:d1_t keep order:false, global read",
          "      └─Selection_17(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan_16 8.00 cop[tiflash] table:fact_t keep order:false"
=======
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t, d1_t where fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin 8.00 batchCop[tiflash]  inner join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─Selection(Build) 2.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │ └─TableFullScan 2.00 batchCop[tiflash] table:d1_t keep order:false, global read",
          "      └─Selection(Probe) 8.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan 8.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t,d2_t,d3_t) */ count(*) from fact_t, d1_t, d2_t, d3_t where fact_t.d1_k = d1_t.d1_k and fact_t.d2_k = d2_t.d2_k and fact_t.d3_k = d3_t.d3_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#18)->Column#17",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#18",
          "    └─HashJoin 8.00 batchCop[tiflash]  inner join, equal:[eq(test.fact_t.d3_k, test.d3_t.d3_k)]",
          "      ├─Selection(Build) 2.00 batchCop[tiflash]  not(isnull(test.d3_t.d3_k))",
          "      │ └─TableFullScan 2.00 batchCop[tiflash] table:d3_t keep order:false, global read",
          "      └─HashJoin(Probe) 8.00 batchCop[tiflash]  inner join, equal:[eq(test.fact_t.d2_k, test.d2_t.d2_k)]",
          "        ├─Selection(Build) 2.00 batchCop[tiflash]  not(isnull(test.d2_t.d2_k))",
          "        │ └─TableFullScan 2.00 batchCop[tiflash] table:d2_t keep order:false, global read",
          "        └─HashJoin(Probe) 8.00 batchCop[tiflash]  inner join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "          ├─Selection(Build) 2.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "          │ └─TableFullScan 2.00 batchCop[tiflash] table:d1_t keep order:false, global read",
          "          └─Selection(Probe) 8.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k)), not(isnull(test.fact_t.d2_k)), not(isnull(test.fact_t.d3_k))",
          "            └─TableFullScan 8.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t), broadcast_join_local(d1_t) */ count(*) from fact_t, d1_t where fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin 8.00 batchCop[tiflash]  inner join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─Selection(Build) 2.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │ └─TableFullScan 2.00 batchCop[tiflash] table:d1_t keep order:false",
          "      └─Selection(Probe) 8.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan 8.00 batchCop[tiflash] table:fact_t keep order:false, global read"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t,d2_t,d3_t), broadcast_join_local(d2_t) */ count(*) from fact_t, d1_t, d2_t, d3_t where fact_t.d1_k = d1_t.d1_k and fact_t.d2_k = d2_t.d2_k and fact_t.d3_k = d3_t.d3_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#18)->Column#17",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#18",
          "    └─HashJoin 8.00 batchCop[tiflash]  inner join, equal:[eq(test.fact_t.d3_k, test.d3_t.d3_k)]",
          "      ├─Selection(Build) 2.00 batchCop[tiflash]  not(isnull(test.d3_t.d3_k))",
          "      │ └─TableFullScan 2.00 batchCop[tiflash] table:d3_t keep order:false, global read",
          "      └─HashJoin(Probe) 8.00 batchCop[tiflash]  inner join, equal:[eq(test.fact_t.d2_k, test.d2_t.d2_k)]",
          "        ├─Selection(Build) 2.00 batchCop[tiflash]  not(isnull(test.d2_t.d2_k))",
          "        │ └─TableFullScan 2.00 batchCop[tiflash] table:d2_t keep order:false",
          "        └─HashJoin(Probe) 8.00 batchCop[tiflash]  inner join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "          ├─Selection(Build) 2.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "          │ └─TableFullScan 2.00 batchCop[tiflash] table:d1_t keep order:false, global read",
          "          └─Selection(Probe) 8.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k)), not(isnull(test.fact_t.d2_k)), not(isnull(test.fact_t.d3_k))",
          "            └─TableFullScan 8.00 batchCop[tiflash] table:fact_t keep order:false, global read"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin 8.00 batchCop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─Selection(Build) 2.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │ └─TableFullScan 2.00 batchCop[tiflash] table:d1_t keep order:false, global read",
          "      └─TableFullScan(Probe) 8.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin 8.00 batchCop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─TableFullScan(Build) 2.00 batchCop[tiflash] table:d1_t keep order:false",
          "      └─Selection(Probe) 8.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan 8.00 batchCop[tiflash] table:fact_t keep order:false, global read"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col1 > d1_t.value",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin 8.00 batchCop[tiflash]  inner join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "      ├─Selection(Build) 2.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "      │ └─TableFullScan 2.00 batchCop[tiflash] table:d1_t keep order:false, global read",
          "      └─Selection(Probe) 8.00 batchCop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan 8.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col1 > 10",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin 8.00 batchCop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], left cond:[gt(test.fact_t.col1, 10)]",
          "      ├─Selection(Build) 2.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │ └─TableFullScan 2.00 batchCop[tiflash] table:d1_t keep order:false, global read",
          "      └─TableFullScan(Probe) 8.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col2 > 10 and fact_t.col1 > d1_t.value",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin 8.00 batchCop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], left cond:[gt(test.fact_t.col2, 10)], other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "      ├─Selection(Build) 2.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "      │ └─TableFullScan 2.00 batchCop[tiflash] table:d1_t keep order:false, global read",
          "      └─TableFullScan(Probe) 8.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k and d1_t.value > 10",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin 8.00 batchCop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], right cond:gt(test.d1_t.value, 10)",
          "      ├─TableFullScan(Build) 2.00 batchCop[tiflash] table:d1_t keep order:false",
          "      └─Selection(Probe) 8.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan 8.00 batchCop[tiflash] table:fact_t keep order:false, global read"
>>>>>>> b3d4458b2... planner: refine explain info for batch cop (#20360)
        ]
      },
      {
        "SQL": "explain select /*+ broadcast_join(fact_t,d1_t,d2_t,d3_t) */ count(*) from fact_t, d1_t, d2_t, d3_t where fact_t.d1_k = d1_t.d1_k and fact_t.d2_k = d2_t.d2_k and fact_t.d3_k = d3_t.d3_k",
        "Plan": [
<<<<<<< HEAD
          "StreamAgg_44 1.00 root  funcs:count(Column#19)->Column#17",
          "└─TableReader_45 1.00 root  data:StreamAgg_13",
          "  └─StreamAgg_13 1.00 cop[tiflash]  funcs:count(1)->Column#19",
          "    └─BroadcastJoin_43 8.00 cop[tiflash]  inner join, left key:test.fact_t.d3_k, right key:test.d3_t.d3_k",
          "      ├─Selection_39(Build) 2.00 cop[tiflash]  not(isnull(test.d3_t.d3_k))",
          "      │ └─TableFullScan_38 2.00 cop[tiflash] table:d3_t keep order:false, global read",
          "      └─BroadcastJoin_29(Probe) 8.00 cop[tiflash]  inner join, left key:test.fact_t.d2_k, right key:test.d2_t.d2_k",
          "        ├─Selection_25(Build) 2.00 cop[tiflash]  not(isnull(test.d2_t.d2_k))",
          "        │ └─TableFullScan_24 2.00 cop[tiflash] table:d2_t keep order:false, global read",
          "        └─BroadcastJoin_33(Probe) 8.00 cop[tiflash]  inner join, left key:test.fact_t.d1_k, right key:test.d1_t.d1_k",
          "          ├─Selection_23(Build) 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "          │ └─TableFullScan_22 2.00 cop[tiflash] table:d1_t keep order:false, global read",
          "          └─Selection_37(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k)), not(isnull(test.fact_t.d2_k)), not(isnull(test.fact_t.d3_k))",
          "            └─TableFullScan_36 8.00 cop[tiflash] table:fact_t keep order:false"
=======
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin 8.00 batchCop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], right cond:gt(test.d1_t.value, 10), other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "      ├─Selection(Build) 8.00 batchCop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "      │ └─TableFullScan 8.00 batchCop[tiflash] table:fact_t keep order:false, global read",
          "      └─TableFullScan(Probe) 2.00 batchCop[tiflash] table:d1_t keep order:false"
>>>>>>> b3d4458b2... planner: refine explain info for batch cop (#20360)
        ]
      },
      {
        "SQL": "explain select /*+ broadcast_join(fact_t,d1_t), broadcast_join_local(d1_t) */ count(*) from fact_t, d1_t where fact_t.d1_k = d1_t.d1_k",
        "Plan": [
<<<<<<< HEAD
          "StreamAgg_18 1.00 root  funcs:count(Column#13)->Column#11",
          "└─TableReader_19 1.00 root  data:StreamAgg_9",
          "  └─StreamAgg_9 1.00 cop[tiflash]  funcs:count(1)->Column#13",
          "    └─BroadcastJoin_17 8.00 cop[tiflash]  inner join, left key:test.fact_t.d1_k, right key:test.d1_t.d1_k",
          "      ├─Selection_14(Build) 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │ └─TableFullScan_13 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─Selection_12(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan_11 8.00 cop[tiflash] table:fact_t keep order:false, global read"
=======
          "HashAgg 1.00 root  funcs:count(Column#13)->Column#12",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#13",
          "    └─HashJoin 6.40 batchCop[tiflash]  semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─Selection(Build) 2.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │ └─TableFullScan 2.00 batchCop[tiflash] table:d1_t keep order:false, global read",
          "      └─Selection(Probe) 8.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan 8.00 batchCop[tiflash] table:fact_t keep order:false"
>>>>>>> b3d4458b2... planner: refine explain info for batch cop (#20360)
        ]
      },
      {
        "SQL": "explain select /*+ broadcast_join(fact_t,d1_t,d2_t,d3_t), broadcast_join_local(d2_t) */ count(*) from fact_t, d1_t, d2_t, d3_t where fact_t.d1_k = d1_t.d1_k and fact_t.d2_k = d2_t.d2_k and fact_t.d3_k = d3_t.d3_k",
        "Plan": [
<<<<<<< HEAD
          "StreamAgg_29 1.00 root  funcs:count(Column#19)->Column#17",
          "└─TableReader_30 1.00 root  data:StreamAgg_13",
          "  └─StreamAgg_13 1.00 cop[tiflash]  funcs:count(1)->Column#19",
          "    └─BroadcastJoin_28 8.00 cop[tiflash]  inner join, left key:test.fact_t.d3_k, right key:test.d3_t.d3_k",
          "      ├─Selection_25(Build) 2.00 cop[tiflash]  not(isnull(test.d3_t.d3_k))",
          "      │ └─TableFullScan_24 2.00 cop[tiflash] table:d3_t keep order:false, global read",
          "      └─BroadcastJoin_15(Probe) 8.00 cop[tiflash]  inner join, left key:test.fact_t.d2_k, right key:test.d2_t.d2_k",
          "        ├─Selection_23(Build) 2.00 cop[tiflash]  not(isnull(test.d2_t.d2_k))",
          "        │ └─TableFullScan_22 2.00 cop[tiflash] table:d2_t keep order:false",
          "        └─BroadcastJoin_16(Probe) 8.00 cop[tiflash]  inner join, left key:test.fact_t.d1_k, right key:test.d1_t.d1_k",
          "          ├─Selection_21(Build) 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "          │ └─TableFullScan_20 2.00 cop[tiflash] table:d1_t keep order:false, global read",
          "          └─Selection_19(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k)), not(isnull(test.fact_t.d2_k)), not(isnull(test.fact_t.d3_k))",
          "            └─TableFullScan_18 8.00 cop[tiflash] table:fact_t keep order:false, global read"
=======
          "HashAgg 1.00 root  funcs:count(Column#13)->Column#12",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#13",
          "    └─HashJoin 6.40 batchCop[tiflash]  semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], other cond:gt(test.d1_t.value, test.fact_t.col1)",
          "      ├─Selection(Build) 2.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "      │ └─TableFullScan 2.00 batchCop[tiflash] table:d1_t keep order:false, global read",
          "      └─Selection(Probe) 8.00 batchCop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan 8.00 batchCop[tiflash] table:fact_t keep order:false"
>>>>>>> b3d4458b2... planner: refine explain info for batch cop (#20360)
        ]
      },
      {
        "SQL": "explain select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k",
        "Plan": [
<<<<<<< HEAD
          "StreamAgg_16 1.00 root  funcs:count(Column#13)->Column#11",
          "└─TableReader_17 1.00 root  data:StreamAgg_8",
          "  └─StreamAgg_8 1.00 cop[tiflash]  funcs:count(1)->Column#13",
          "    └─BroadcastJoin_15 8.00 cop[tiflash]  left outer join, left key:test.fact_t.d1_k, right key:test.d1_t.d1_k",
          "      ├─Selection_12(Build) 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │ └─TableFullScan_11 2.00 cop[tiflash] table:d1_t keep order:false, global read",
          "      └─TableFullScan_10(Probe) 8.00 cop[tiflash] table:fact_t keep order:false"
=======
          "HashAgg 1.00 root  funcs:count(Column#13)->Column#12",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#13",
          "    └─HashJoin 6.40 batchCop[tiflash]  anti semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─TableFullScan(Build) 2.00 batchCop[tiflash] table:d1_t keep order:false, global read",
          "      └─TableFullScan(Probe) 8.00 batchCop[tiflash] table:fact_t keep order:false"
>>>>>>> b3d4458b2... planner: refine explain info for batch cop (#20360)
        ]
      },
      {
        "SQL": "explain select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k",
        "Plan": [
<<<<<<< HEAD
          "StreamAgg_16 1.00 root  funcs:count(Column#13)->Column#11",
          "└─TableReader_17 1.00 root  data:StreamAgg_8",
          "  └─StreamAgg_8 1.00 cop[tiflash]  funcs:count(1)->Column#13",
          "    └─BroadcastJoin_15 8.00 cop[tiflash]  right outer join, left key:test.fact_t.d1_k, right key:test.d1_t.d1_k",
          "      ├─TableFullScan_12(Build) 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─Selection_11(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan_10 8.00 cop[tiflash] table:fact_t keep order:false, global read"
=======
          "HashAgg 1.00 root  funcs:count(Column#13)->Column#12",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#13",
          "    └─HashJoin 6.40 batchCop[tiflash]  anti semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], other cond:gt(test.d1_t.value, test.fact_t.col1)",
          "      ├─TableFullScan(Build) 2.00 batchCop[tiflash] table:d1_t keep order:false, global read",
          "      └─TableFullScan(Probe) 8.00 batchCop[tiflash] table:fact_t keep order:false"
>>>>>>> b3d4458b2... planner: refine explain info for batch cop (#20360)
        ]
      }
    ]
  },
  {
    "Name": "TestReadFromStorageHint",
    "Cases": [
      {
        "SQL": "desc select avg(a) from t",
        "Plan": [
<<<<<<< HEAD
          "StreamAgg_24 1.00 root  funcs:avg(Column#7, Column#8)->Column#4",
          "└─TableReader_25 1.00 root  data:StreamAgg_8",
          "  └─StreamAgg_8 1.00 cop[tiflash]  funcs:count(test.t.a)->Column#7, funcs:sum(test.t.a)->Column#8",
          "    └─TableFullScan_22 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
=======
          "StreamAgg 1.00 root  funcs:avg(Column#7, Column#8)->Column#4",
          "└─TableReader 1.00 root  data:StreamAgg",
          "  └─StreamAgg 1.00 batchCop[tiflash]  funcs:count(test.t.a)->Column#7, funcs:sum(test.t.a)->Column#8",
          "    └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
>>>>>>> b3d4458b2... planner: refine explain info for batch cop (#20360)
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[t]) */ avg(a) from t",
        "Plan": [
<<<<<<< HEAD
          "StreamAgg_16 1.00 root  funcs:avg(Column#7, Column#8)->Column#4",
          "└─TableReader_17 1.00 root  data:StreamAgg_8",
          "  └─StreamAgg_8 1.00 cop[tiflash]  funcs:count(test.t.a)->Column#7, funcs:sum(test.t.a)->Column#8",
          "    └─TableFullScan_15 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
=======
          "StreamAgg 1.00 root  funcs:avg(Column#7, Column#8)->Column#4",
          "└─TableReader 1.00 root  data:StreamAgg",
          "  └─StreamAgg 1.00 batchCop[tiflash]  funcs:count(test.t.a)->Column#7, funcs:sum(test.t.a)->Column#8",
          "    └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
>>>>>>> b3d4458b2... planner: refine explain info for batch cop (#20360)
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[t]) */ sum(a) from t",
        "Plan": [
<<<<<<< HEAD
          "StreamAgg_16 1.00 root  funcs:sum(Column#6)->Column#4",
          "└─TableReader_17 1.00 root  data:StreamAgg_8",
          "  └─StreamAgg_8 1.00 cop[tiflash]  funcs:sum(test.t.a)->Column#6",
          "    └─TableFullScan_15 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
=======
          "StreamAgg 1.00 root  funcs:sum(Column#6)->Column#4",
          "└─TableReader 1.00 root  data:StreamAgg",
          "  └─StreamAgg 1.00 batchCop[tiflash]  funcs:sum(test.t.a)->Column#6",
          "    └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
>>>>>>> b3d4458b2... planner: refine explain info for batch cop (#20360)
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[t]) */ sum(a+1) from t",
        "Plan": [
<<<<<<< HEAD
          "StreamAgg_16 1.00 root  funcs:sum(Column#6)->Column#4",
          "└─TableReader_17 1.00 root  data:StreamAgg_8",
          "  └─StreamAgg_8 1.00 cop[tiflash]  funcs:sum(plus(test.t.a, 1))->Column#6",
          "    └─TableFullScan_15 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
=======
          "StreamAgg 1.00 root  funcs:sum(Column#6)->Column#4",
          "└─TableReader 1.00 root  data:StreamAgg",
          "  └─StreamAgg 1.00 batchCop[tiflash]  funcs:sum(plus(test.t.a, 1))->Column#6",
          "    └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
>>>>>>> b3d4458b2... planner: refine explain info for batch cop (#20360)
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[t]) */ sum(isnull(a)) from t",
        "Plan": [
<<<<<<< HEAD
          "StreamAgg_16 1.00 root  funcs:sum(Column#6)->Column#4",
          "└─TableReader_17 1.00 root  data:StreamAgg_8",
          "  └─StreamAgg_8 1.00 cop[tiflash]  funcs:sum(isnull(test.t.a))->Column#6",
          "    └─TableFullScan_15 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
=======
          "StreamAgg 1.00 root  funcs:sum(Column#6)->Column#4",
          "└─TableReader 1.00 root  data:StreamAgg",
          "  └─StreamAgg 1.00 batchCop[tiflash]  funcs:sum(isnull(test.t.a))->Column#6",
          "    └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
>>>>>>> b3d4458b2... planner: refine explain info for batch cop (#20360)
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ READ_FROM_STORAGE(TIKV[t1], TIKV[t2]) */ * from t t1, t t2 where t1.a = t2.a",
        "Plan": [
          "HashJoin_23 12487.50 root  inner join, equal:[eq(test.t.a, test.t.a)]",
          "├─TableReader_41(Build) 9990.00 root  data:Selection_40",
          "│ └─Selection_40 9990.00 cop[tikv]  not(isnull(test.t.a))",
          "│   └─TableFullScan_39 10000.00 cop[tikv] table:t2 keep order:false, stats:pseudo",
          "└─TableReader_35(Probe) 9990.00 root  data:Selection_34",
          "  └─Selection_34 9990.00 cop[tikv]  not(isnull(test.t.a))",
          "    └─TableFullScan_33 10000.00 cop[tikv] table:t1 keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ READ_FROM_STORAGE(TIKV[t1], TIFLASH[t2]) */ * from t t1, t t2 where t1.a = t2.a",
        "Plan": [
          "HashJoin_16 12487.50 root  inner join, equal:[eq(test.t.a, test.t.a)]",
          "├─TableReader_24(Build) 9990.00 root  data:Selection_23",
          "│ └─Selection_23 9990.00 cop[tiflash]  not(isnull(test.t.a))",
          "│   └─TableFullScan_22 10000.00 cop[tiflash] table:t2 keep order:false, stats:pseudo",
          "└─TableReader_27(Probe) 9990.00 root  data:Selection_26",
          "  └─Selection_26 9990.00 cop[tikv]  not(isnull(test.t.a))",
          "    └─TableFullScan_25 10000.00 cop[tikv] table:t1 keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select * from tt where (tt.a > 1 and tt.a < 20) or (tt.a >= 30 and tt.a < 55)",
        "Plan": [
          "TableReader_8 44.00 root  data:TableRangeScan_7",
          "└─TableRangeScan_7 44.00 cop[tiflash] table:tt range:(1,20), [30,55), keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[tt]) */ * from tt where (tt.a > 1 and tt.a < 20) or (tt.a >= 30 and tt.a < 55)",
        "Plan": [
          "TableReader_6 44.00 root  data:TableRangeScan_5",
          "└─TableRangeScan_5 44.00 cop[tiflash] table:tt range:(1,20), [30,55), keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select * from ttt order by ttt.a desc",
        "Plan": [
          "TableReader_13 10000.00 root  data:TableFullScan_12",
          "└─TableFullScan_12 10000.00 cop[tikv] table:ttt keep order:true, desc, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[ttt]) */ * from ttt order by ttt.a desc",
        "Plan": [
          "Sort_4 10000.00 root  test.ttt.a:desc",
          "└─TableReader_8 10000.00 root  data:TableFullScan_7",
          "  └─TableFullScan_7 10000.00 cop[tiflash] table:ttt keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[ttt]) */ * from ttt order by ttt.a",
        "Plan": [
          "TableReader_11 10000.00 root  data:TableFullScan_10",
          "└─TableFullScan_10 10000.00 cop[tiflash] table:ttt keep order:true, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tikv[t, ttt]) */ * from ttt",
        "Plan": [
          "TableReader_5 10000.00 root  data:TableFullScan_4",
          "└─TableFullScan_4 10000.00 cop[tikv] table:ttt keep order:false, stats:pseudo"
        ],
        "Warn": [
          "[planner:1815]There are no matching table names for (t) in optimizer hint /*+ READ_FROM_STORAGE(tikv[t, ttt]) */. Maybe you can use the table alias name"
        ]
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[t, ttt], tikv[tt]) */ * from ttt",
        "Plan": [
          "TableReader_5 10000.00 root  data:TableFullScan_4",
          "└─TableFullScan_4 10000.00 cop[tiflash] table:ttt keep order:false, stats:pseudo"
        ],
        "Warn": [
          "[planner:1815]There are no matching table names for (t, tt) in optimizer hint /*+ READ_FROM_STORAGE(tiflash[t, ttt], tikv[tt]) */. Maybe you can use the table alias name"
        ]
      }
    ]
  },
  {
    "Name": "TestIsolationReadTiFlashUseIndexHint",
    "Cases": null
  },
  {
    "Name": "TestReadFromStorageHintAndIsolationRead",
    "Cases": [
      {
        "SQL": "desc select /*+ read_from_storage(tikv[t], tiflash[t]) */ avg(a) from t",
        "Plan": [
          "StreamAgg_20 1.00 root  funcs:avg(Column#7, Column#8)->Column#4",
          "└─IndexReader_21 1.00 root  index:StreamAgg_8",
          "  └─StreamAgg_8 1.00 cop[tikv]  funcs:count(test.t.a)->Column#7, funcs:sum(test.t.a)->Column#8",
          "    └─IndexFullScan_19 10000.00 cop[tikv] table:t, index:ia(a) keep order:false, stats:pseudo"
        ],
        "Warn": [
          "[planner:1815]Storage hints are conflict, you can only specify one storage type of table test.t"
        ]
      },
      {
        "SQL": "desc select /*+ read_from_storage(tikv[t]) */ avg(a) from t",
        "Plan": [
          "StreamAgg_20 1.00 root  funcs:avg(Column#7, Column#8)->Column#4",
          "└─IndexReader_21 1.00 root  index:StreamAgg_8",
          "  └─StreamAgg_8 1.00 cop[tikv]  funcs:count(test.t.a)->Column#7, funcs:sum(test.t.a)->Column#8",
          "    └─IndexFullScan_19 10000.00 cop[tikv] table:t, index:ia(a) keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[t]) */ avg(a) from t",
        "Plan": [
          "StreamAgg_20 1.00 root  funcs:avg(Column#7, Column#8)->Column#4",
          "└─IndexReader_21 1.00 root  index:StreamAgg_8",
          "  └─StreamAgg_8 1.00 cop[tikv]  funcs:count(test.t.a)->Column#7, funcs:sum(test.t.a)->Column#8",
          "    └─IndexFullScan_19 10000.00 cop[tikv] table:t, index:ia(a) keep order:false, stats:pseudo"
        ],
        "Warn": [
          "[planner:1815]No available path for table test.t with the store type tiflash of the hint /*+ read_from_storage */, please check the status of the table replica and variable value of tidb_isolation_read_engines(map[0:{}])"
        ]
      }
    ]
  },
  {
    "Name": "TestIsolationReadDoNotFilterSystemDB",
    "Cases": [
      {
        "SQL": "desc select * from metrics_schema.tidb_query_duration where time >= '2019-12-23 16:10:13' and time <= '2019-12-23 16:30:13'",
        "Plan": [
          "MemTableScan_5 10000.00 root table:tidb_query_duration PromQL:histogram_quantile(0.9, sum(rate(tidb_server_handle_query_duration_seconds_bucket{}[60s])) by (le,sql_type,instance)), start_time:2019-12-23 16:10:13, end_time:2019-12-23 16:30:13, step:1m0s"
        ]
      },
      {
        "SQL": "desc select * from information_schema.tables",
        "Plan": [
          "MemTableScan_4 10000.00 root table:TABLES "
        ]
      },
      {
        "SQL": "desc select * from mysql.stats_meta",
        "Plan": [
          "TableReader_5 10000.00 root  data:TableFullScan_4",
          "└─TableFullScan_4 10000.00 cop[tikv] table:stats_meta keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestIsolationReadTiFlashNotChoosePointGet",
    "Cases": [
      {
        "SQL": "explain select * from t where t.a = 1",
        "Result": [
          "TableReader_6 1.00 root  data:TableRangeScan_5",
          "└─TableRangeScan_5 1.00 cop[tiflash] table:t range:[1,1], keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain select * from t where t.a in (1, 2)",
        "Result": [
          "TableReader_6 2.00 root  data:TableRangeScan_5",
          "└─TableRangeScan_5 2.00 cop[tiflash] table:t range:[1,1], [2,2], keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestIsolationReadTiFlashUseIndexHint",
    "Cases": [
      {
        "SQL": "explain select * from t",
        "Plan": [
          "TableReader_5 10000.00 root  data:TableFullScan_4",
          "└─TableFullScan_4 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "explain select * from t use index();",
        "Plan": [
          "TableReader_5 10000.00 root  data:TableFullScan_4",
          "└─TableFullScan_4 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "explain select /*+ use_index(t, idx)*/ * from t",
        "Plan": [
          "TableReader_5 10000.00 root  data:TableFullScan_4",
          "└─TableFullScan_4 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": [
          "TiDB doesn't support index in the isolation read engines(value: 'tiflash')"
        ]
      },
      {
        "SQL": "explain select /*+ use_index(t)*/ * from t",
        "Plan": [
          "TableReader_5 10000.00 root  data:TableFullScan_4",
          "└─TableFullScan_4 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      }
    ]
  },
  {
    "Name": "TestIssue20710",
    "Cases": [
      {
<<<<<<< HEAD
        "SQL": "explain select /*+ inl_join(s) */ * from t join s on t.a=s.a and t.b = s.b",
        "Plan": [
          "IndexJoin_11 12475.01 root  inner join, inner:IndexLookUp_10, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.b, test.s.b)",
          "├─TableReader_16(Build) 9980.01 root  data:Selection_15",
          "│ └─Selection_15 9980.01 cop[tikv]  not(isnull(test.t.a)), not(isnull(test.t.b))",
          "│   └─TableFullScan_14 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp_10(Probe) 1.25 root  ",
          "  ├─Selection_8(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan_6 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─Selection_9(Probe) 1.25 cop[tikv]  not(isnull(test.s.b))",
          "    └─TableRowIDScan_7 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
=======
        "SQL": "explain format = 'brief' select /*+ inl_join(s) */ * from t join s on t.a=s.a and t.b = s.b",
        "Plan": [
          "IndexJoin 12475.01 root  inner join, inner:IndexLookUp, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.b, test.s.b)",
          "├─TableReader(Build) 9980.01 root  data:Selection",
          "│ └─Selection 9980.01 cop[tikv]  not(isnull(test.t.a)), not(isnull(test.t.b))",
          "│   └─TableFullScan 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp(Probe) 1.25 root  ",
          "  ├─Selection(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─Selection(Probe) 1.25 cop[tikv]  not(isnull(test.s.b))",
          "    └─TableRowIDScan 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ inl_join(s) */ * from t join s on t.a=s.a and t.b = s.a",
        "Plan": [
          "IndexJoin 12475.01 root  inner join, inner:IndexLookUp, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.b, test.s.a)",
          "├─TableReader(Build) 9980.01 root  data:Selection",
          "│ └─Selection 9980.01 cop[tikv]  not(isnull(test.t.a)), not(isnull(test.t.b))",
          "│   └─TableFullScan 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp(Probe) 1.25 root  ",
          "  ├─Selection(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─TableRowIDScan(Probe) 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ inl_join(s) */ * from t join s on t.a=s.a and t.a = s.b",
        "Plan": [
          "IndexJoin 12475.01 root  inner join, inner:IndexLookUp, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.a, test.s.b)",
          "├─TableReader(Build) 9990.00 root  data:Selection",
          "│ └─Selection 9990.00 cop[tikv]  not(isnull(test.t.a))",
          "│   └─TableFullScan 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp(Probe) 1.25 root  ",
          "  ├─Selection(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─Selection(Probe) 1.25 cop[tikv]  not(isnull(test.s.b))",
          "    └─TableRowIDScan 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ inl_hash_join(s) */ * from t join s on t.a=s.a and t.b = s.b",
        "Plan": [
          "IndexHashJoin 12475.01 root  inner join, inner:IndexLookUp, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.b, test.s.b)",
          "├─TableReader(Build) 9980.01 root  data:Selection",
          "│ └─Selection 9980.01 cop[tikv]  not(isnull(test.t.a)), not(isnull(test.t.b))",
          "│   └─TableFullScan 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp(Probe) 1.25 root  ",
          "  ├─Selection(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─Selection(Probe) 1.25 cop[tikv]  not(isnull(test.s.b))",
          "    └─TableRowIDScan 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ inl_hash_join(s) */ * from t join s on t.a=s.a and t.b = s.a",
        "Plan": [
          "IndexHashJoin 12475.01 root  inner join, inner:IndexLookUp, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.b, test.s.a)",
          "├─TableReader(Build) 9980.01 root  data:Selection",
          "│ └─Selection 9980.01 cop[tikv]  not(isnull(test.t.a)), not(isnull(test.t.b))",
          "│   └─TableFullScan 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp(Probe) 1.25 root  ",
          "  ├─Selection(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─TableRowIDScan(Probe) 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ inl_hash_join(s) */ * from t join s on t.a=s.a and t.a = s.b",
        "Plan": [
          "IndexHashJoin 12475.01 root  inner join, inner:IndexLookUp, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.a, test.s.b)",
          "├─TableReader(Build) 9990.00 root  data:Selection",
          "│ └─Selection 9990.00 cop[tikv]  not(isnull(test.t.a))",
          "│   └─TableFullScan 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp(Probe) 1.25 root  ",
          "  ├─Selection(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─Selection(Probe) 1.25 cop[tikv]  not(isnull(test.s.b))",
          "    └─TableRowIDScan 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestPushDownProjectionForTiFlash",
    "Cases": [
      {
        "SQL": "desc format = 'brief' select /*+ hash_agg()*/ count(b) from  (select id + 1 as b from t)A",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#7)->Column#5",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:count(Column#4)->Column#7",
          "    └─Projection 10000.00 batchCop[tiflash]  plus(test.t.id, 1)->Column#4",
          "      └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select /*+ hash_agg()*/ count(*) from  (select id + 1 as b from t)A",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#6)->Column#5",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#6",
          "    └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select /*+ hash_agg()*/ sum(b) from  (select id + 1 as b from t)A",
        "Plan": [
          "HashAgg 1.00 root  funcs:sum(Column#7)->Column#5",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:sum(Column#4)->Column#7",
          "    └─Projection 10000.00 batchCop[tiflash]  plus(test.t.id, 1)->Column#4",
          "      └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select /*+ stream_agg()*/ count(b) from  (select id + 1 as b from t)A",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(Column#4)->Column#5",
          "└─Projection 10000.00 root  plus(test.t.id, 1)->Column#4",
          "  └─TableReader 10000.00 root  data:TableFullScan",
          "    └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select /*+ stream_agg()*/ count(*) from  (select id + 1 as b from t)A",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(Column#6)->Column#5",
          "└─TableReader 1.00 root  data:StreamAgg",
          "  └─StreamAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#6",
          "    └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select /*+ stream_agg()*/ sum(b) from  (select id + 1 as b from t)A",
        "Plan": [
          "StreamAgg 1.00 root  funcs:sum(Column#7)->Column#5",
          "└─Projection 10000.00 root  cast(Column#4, decimal(41,0) BINARY)->Column#7",
          "  └─Projection 10000.00 root  plus(test.t.id, 1)->Column#4",
          "    └─TableReader 10000.00 root  data:TableFullScan",
          "      └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from (select id-2 as b from t) B join (select id-2 as b from t) A on A.b=B.b",
        "Plan": [
          "TableReader 10000.00 root  data:HashJoin",
          "└─HashJoin 10000.00 cop[tiflash]  inner join, equal:[eq(Column#4, Column#8)]",
          "  ├─Projection(Build) 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#4",
          "  │ └─Selection 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "  │   └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo, global read",
          "  └─Projection(Probe) 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#8",
          "    └─Selection 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "      └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from t join (select id-2 as b from t) A on A.b=t.id",
        "Plan": [
          "TableReader 10000.00 root  data:HashJoin",
          "└─HashJoin 10000.00 cop[tiflash]  inner join, equal:[eq(test.t.id, Column#7)]",
          "  ├─Projection(Build) 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#7",
          "  │ └─Selection 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "  │   └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo, global read",
          "  └─Selection(Probe) 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "    └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from t left join (select id-2 as b from t) A on A.b=t.id",
        "Plan": [
          "TableReader 10000.00 root  data:HashJoin",
          "└─HashJoin 10000.00 cop[tiflash]  left outer join, equal:[eq(test.t.id, Column#7)]",
          "  ├─Projection(Build) 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#7",
          "  │ └─Selection 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "  │   └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo, global read",
          "  └─TableFullScan(Probe) 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from t right join (select id-2 as b from t) A on A.b=t.id",
        "Plan": [
          "TableReader 12487.50 root  data:HashJoin",
          "└─HashJoin 12487.50 cop[tiflash]  right outer join, equal:[eq(test.t.id, Column#7)]",
          "  ├─Selection(Build) 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "  │ └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo, global read",
          "  └─Projection(Probe) 10000.00 cop[tiflash]  minus(test.t.id, 2)->Column#7",
          "    └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select A.b, B.b from (select id-2 as b from t) B join (select id-2 as b from t) A on A.b=B.b",
        "Plan": [
          "Projection 10000.00 root  Column#8, Column#4",
          "└─TableReader 10000.00 root  data:HashJoin",
          "  └─HashJoin 10000.00 cop[tiflash]  inner join, equal:[eq(Column#4, Column#8)]",
          "    ├─Projection(Build) 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#4",
          "    │ └─Selection 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "    │   └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo, global read",
          "    └─Projection(Probe) 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#8",
          "      └─Selection 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "        └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select A.id from t as A where exists (select 1 from t where t.id=A.id)",
        "Plan": [
          "TableReader 7992.00 root  data:HashJoin",
          "└─HashJoin 7992.00 cop[tiflash]  semi join, equal:[eq(test.t.id, test.t.id)]",
          "  ├─Selection(Build) 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "  │ └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo, global read",
          "  └─Selection(Probe) 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "    └─TableFullScan 10000.00 cop[tiflash] table:A keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select A.id from t as A where not exists  (select 1 from t where t.id=A.id)",
        "Plan": [
          "TableReader 8000.00 root  data:HashJoin",
          "└─HashJoin 8000.00 cop[tiflash]  anti semi join, equal:[eq(test.t.id, test.t.id)]",
          "  ├─TableFullScan(Build) 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo, global read",
          "  └─TableFullScan(Probe) 10000.00 cop[tiflash] table:A keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestPushDownProjectionForMPP",
    "Cases": [
      {
        "SQL": "desc format = 'brief' select /*+ hash_agg()*/ count(b) from  (select id + 1 as b from t)A",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#7)->Column#5",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(Column#4)->Column#7",
          "      └─Projection 10000.00 batchCop[tiflash]  plus(test.t.id, 1)->Column#4",
          "        └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select /*+ hash_agg()*/ count(*) from  (select id + 1 as b from t)A",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#7)->Column#5",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#7",
          "      └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select /*+ hash_agg()*/ sum(b) from  (select id + 1 as b from t)A",
        "Plan": [
          "HashAgg 1.00 root  funcs:sum(Column#7)->Column#5",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:sum(Column#4)->Column#7",
          "      └─Projection 10000.00 batchCop[tiflash]  plus(test.t.id, 1)->Column#4",
          "        └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select /*+ stream_agg()*/ count(b) from  (select id + 1 as b from t)A",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(Column#4)->Column#5",
          "└─Projection 10000.00 root  plus(test.t.id, 1)->Column#4",
          "  └─TableReader 10000.00 root  data:TableFullScan",
          "    └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select /*+ stream_agg()*/ count(*) from  (select id + 1 as b from t)A",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(Column#6)->Column#5",
          "└─TableReader 1.00 root  data:StreamAgg",
          "  └─StreamAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#6",
          "    └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select /*+ stream_agg()*/ sum(b) from  (select id + 1 as b from t)A",
        "Plan": [
          "StreamAgg 1.00 root  funcs:sum(Column#7)->Column#5",
          "└─Projection 10000.00 root  cast(Column#4, decimal(41,0) BINARY)->Column#7",
          "  └─Projection 10000.00 root  plus(test.t.id, 1)->Column#4",
          "    └─TableReader 10000.00 root  data:TableFullScan",
          "      └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from (select id-2 as b from t) B join (select id-2 as b from t) A on A.b=B.b",
        "Plan": [
          "TableReader 10000.00 root  data:ExchangeSender",
          "└─ExchangeSender 10000.00 cop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin 10000.00 cop[tiflash]  inner join, equal:[eq(Column#4, Column#8)]",
          "    ├─ExchangeReceiver(Build) 8000.00 cop[tiflash]  ",
          "    │ └─ExchangeSender 8000.00 cop[tiflash]  ExchangeType: Broadcast",
          "    │   └─Projection 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#4",
          "    │     └─Selection 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "    │       └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─Projection(Probe) 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#8",
          "      └─Selection 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "        └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from t join (select id-2 as b from t) A on A.b=t.id",
        "Plan": [
          "TableReader 10000.00 root  data:ExchangeSender",
          "└─ExchangeSender 10000.00 cop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin 10000.00 cop[tiflash]  inner join, equal:[eq(test.t.id, Column#7)]",
          "    ├─ExchangeReceiver(Build) 8000.00 cop[tiflash]  ",
          "    │ └─ExchangeSender 8000.00 cop[tiflash]  ExchangeType: Broadcast",
          "    │   └─Projection 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#7",
          "    │     └─Selection 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "    │       └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─Selection(Probe) 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "      └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from t left join (select id-2 as b from t) A on A.b=t.id",
        "Plan": [
          "TableReader 10000.00 root  data:ExchangeSender",
          "└─ExchangeSender 10000.00 cop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin 10000.00 cop[tiflash]  left outer join, equal:[eq(test.t.id, Column#7)]",
          "    ├─ExchangeReceiver(Build) 8000.00 cop[tiflash]  ",
          "    │ └─ExchangeSender 8000.00 cop[tiflash]  ExchangeType: Broadcast",
          "    │   └─Projection 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#7",
          "    │     └─Selection 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "    │       └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─TableFullScan(Probe) 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from t right join (select id-2 as b from t) A on A.b=t.id",
        "Plan": [
          "TableReader 12487.50 root  data:ExchangeSender",
          "└─ExchangeSender 12487.50 cop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin 12487.50 cop[tiflash]  right outer join, equal:[eq(test.t.id, Column#7)]",
          "    ├─ExchangeReceiver(Build) 9990.00 cop[tiflash]  ",
          "    │ └─ExchangeSender 9990.00 cop[tiflash]  ExchangeType: Broadcast",
          "    │   └─Selection 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "    │     └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─Projection(Probe) 10000.00 cop[tiflash]  minus(test.t.id, 2)->Column#7",
          "      └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select A.b, B.b from (select id-2 as b from t) B join (select id-2 as b from t) A on A.b=B.b",
        "Plan": [
          "Projection 10000.00 root  Column#8, Column#4",
          "└─TableReader 10000.00 root  data:ExchangeSender",
          "  └─ExchangeSender 10000.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 10000.00 cop[tiflash]  inner join, equal:[eq(Column#4, Column#8)]",
          "      ├─ExchangeReceiver(Build) 8000.00 cop[tiflash]  ",
          "      │ └─ExchangeSender 8000.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Projection 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#4",
          "      │     └─Selection 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "      │       └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "      └─Projection(Probe) 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#8",
          "        └─Selection 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "          └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select id from t as A where exists (select 1 from t where t.id=A.id)",
        "Plan": [
          "TableReader 7992.00 root  data:ExchangeSender",
          "└─ExchangeSender 7992.00 cop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin 7992.00 cop[tiflash]  semi join, equal:[eq(test.t.id, test.t.id)]",
          "    ├─ExchangeReceiver(Build) 9990.00 cop[tiflash]  ",
          "    │ └─ExchangeSender 9990.00 cop[tiflash]  ExchangeType: Broadcast",
          "    │   └─Selection 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "    │     └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─Selection(Probe) 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "      └─TableFullScan 10000.00 cop[tiflash] table:A keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select id from t as A where not exists (select 1 from t where t.id=A.id)",
        "Plan": [
          "TableReader 8000.00 root  data:ExchangeSender",
          "└─ExchangeSender 8000.00 cop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin 8000.00 cop[tiflash]  anti semi join, equal:[eq(test.t.id, test.t.id)]",
          "    ├─ExchangeReceiver(Build) 10000.00 cop[tiflash]  ",
          "    │ └─ExchangeSender 10000.00 cop[tiflash]  ExchangeType: Broadcast",
          "    │   └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─TableFullScan(Probe) 10000.00 cop[tiflash] table:A keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestPushDownAggForMPP",
    "Cases": [
      {
        "SQL": "desc format = 'brief' select /*+ hash_agg()*/ count(b) from  (select id + 1 as b from t)A",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#7)->Column#5",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(Column#4)->Column#7",
          "      └─Projection 10000.00 batchCop[tiflash]  plus(test.t.id, 1)->Column#4",
          "        └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select /*+ hash_agg()*/ count(*) from  (select id+1 from t)A",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#7)->Column#5",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#7",
          "      └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select /*+ hash_agg()*/ sum(b) from  (select id + 1 as b from t)A",
        "Plan": [
          "HashAgg 1.00 root  funcs:sum(Column#7)->Column#5",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:sum(Column#4)->Column#7",
          "      └─Projection 10000.00 batchCop[tiflash]  plus(test.t.id, 1)->Column#4",
          "        └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select count(*) from t",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#6)->Column#4",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#6",
          "      └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select count(*), id from t group by id",
        "Plan": [
          "TableReader 8000.00 root  data:ExchangeSender",
          "└─ExchangeSender 8000.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "  └─Projection 8000.00 batchCop[tiflash]  Column#4, test.t.id",
          "    └─HashAgg 8000.00 batchCop[tiflash]  group by:test.t.id, funcs:sum(Column#7)->Column#4, funcs:firstrow(test.t.id)->test.t.id",
          "      └─ExchangeReceiver 8000.00 batchCop[tiflash]  ",
          "        └─ExchangeSender 8000.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "          └─HashAgg 8000.00 batchCop[tiflash]  group by:test.t.id, funcs:count(1)->Column#7",
          "            └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from t join ( select count(*), id from t group by id) as A on A.id = t.id",
        "Plan": [
          "TableReader 9990.00 root  data:ExchangeSender",
          "└─ExchangeSender 9990.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin 9990.00 batchCop[tiflash]  inner join, equal:[eq(test.t.id, test.t.id)]",
          "    ├─Projection(Build) 7992.00 batchCop[tiflash]  Column#7, test.t.id",
          "    │ └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:sum(Column#8)->Column#7, funcs:firstrow(test.t.id)->test.t.id",
          "    │   └─ExchangeReceiver 7992.00 batchCop[tiflash]  ",
          "    │     └─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "    │       └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:count(1)->Column#8",
          "    │         └─Selection 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "    │           └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─ExchangeReceiver(Probe) 9990.00 batchCop[tiflash]  ",
          "      └─ExchangeSender 9990.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "        └─Selection 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "          └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from t join ( select /*+ hash_agg()*/  count(*) as a from t) as A on A.a = t.id",
        "Plan": [
          "HashJoin 1.25 root  inner join, equal:[eq(test.t.id, Column#7)]",
          "├─HashAgg(Build) 1.00 root  funcs:count(Column#11)->Column#7",
          "│ └─TableReader 1.00 root  data:ExchangeSender",
          "│   └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "│     └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#11",
          "│       └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo",
          "└─TableReader(Probe) 9990.00 root  data:Selection",
          "  └─Selection 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "    └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select avg(value) as b,id from t group by id",
        "Plan": [
          "TableReader 8000.00 root  data:ExchangeSender",
          "└─ExchangeSender 8000.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "  └─Projection 8000.00 batchCop[tiflash]  div(Column#4, cast(case(eq(Column#9, 0), 1, Column#9), decimal(20,0) BINARY))->Column#4, test.t.id",
          "    └─HashAgg 8000.00 batchCop[tiflash]  group by:test.t.id, funcs:sum(Column#10)->Column#9, funcs:sum(Column#11)->Column#4, funcs:firstrow(test.t.id)->test.t.id",
          "      └─ExchangeReceiver 8000.00 batchCop[tiflash]  ",
          "        └─ExchangeSender 8000.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "          └─HashAgg 8000.00 batchCop[tiflash]  group by:test.t.id, funcs:count(test.t.value)->Column#10, funcs:sum(test.t.value)->Column#11",
          "            └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select /*+hash_agg()*/ sum(b),id from (select avg(value) as b, id from t group by id)A",
        "Plan": [
          "HashAgg 1.00 root  funcs:sum(Column#4)->Column#5, funcs:firstrow(test.t.id)->test.t.id",
          "└─TableReader 8000.00 root  data:ExchangeSender",
          "  └─ExchangeSender 8000.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─Projection 8000.00 batchCop[tiflash]  div(Column#4, cast(case(eq(Column#10, 0), 1, Column#10), decimal(20,0) BINARY))->Column#4, test.t.id",
          "      └─HashAgg 8000.00 batchCop[tiflash]  group by:test.t.id, funcs:sum(Column#11)->Column#10, funcs:sum(Column#12)->Column#4, funcs:firstrow(test.t.id)->test.t.id",
          "        └─ExchangeReceiver 8000.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 8000.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "            └─HashAgg 8000.00 batchCop[tiflash]  group by:test.t.id, funcs:count(test.t.value)->Column#11, funcs:sum(test.t.value)->Column#12",
          "              └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select id from t group by id having avg(value)>0",
        "Plan": [
          "Projection 6400.00 root  test.t.id",
          "└─Selection 6400.00 root  gt(Column#4, 0)",
          "  └─TableReader 8000.00 root  data:ExchangeSender",
          "    └─ExchangeSender 8000.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "      └─Projection 8000.00 batchCop[tiflash]  div(Column#4, cast(case(eq(Column#10, 0), 1, Column#10), decimal(20,0) BINARY))->Column#4, test.t.id",
          "        └─HashAgg 8000.00 batchCop[tiflash]  group by:test.t.id, funcs:sum(Column#11)->Column#10, funcs:sum(Column#12)->Column#4, funcs:firstrow(test.t.id)->test.t.id",
          "          └─ExchangeReceiver 8000.00 batchCop[tiflash]  ",
          "            └─ExchangeSender 8000.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "              └─HashAgg 8000.00 batchCop[tiflash]  group by:test.t.id, funcs:count(test.t.value)->Column#11, funcs:sum(test.t.value)->Column#12",
          "                └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select avg(value),id from t group by id having avg(value)>0",
        "Plan": [
          "Selection 6400.00 root  gt(Column#4, 0)",
          "└─TableReader 8000.00 root  data:ExchangeSender",
          "  └─ExchangeSender 8000.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─Projection 8000.00 batchCop[tiflash]  div(Column#4, cast(case(eq(Column#11, 0), 1, Column#11), decimal(20,0) BINARY))->Column#4, test.t.id",
          "      └─HashAgg 8000.00 batchCop[tiflash]  group by:test.t.id, funcs:sum(Column#12)->Column#11, funcs:sum(Column#13)->Column#4, funcs:firstrow(test.t.id)->test.t.id",
          "        └─ExchangeReceiver 8000.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 8000.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "            └─HashAgg 8000.00 batchCop[tiflash]  group by:test.t.id, funcs:count(test.t.value)->Column#12, funcs:sum(test.t.value)->Column#13",
          "              └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select avg(value) +1,id from t group by id",
        "Plan": [
          "Projection 8000.00 root  plus(Column#4, 1)->Column#5, test.t.id",
          "└─TableReader 8000.00 root  data:ExchangeSender",
          "  └─ExchangeSender 8000.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─Projection 8000.00 batchCop[tiflash]  div(Column#4, cast(case(eq(Column#11, 0), 1, Column#11), decimal(20,0) BINARY))->Column#4, test.t.id",
          "      └─HashAgg 8000.00 batchCop[tiflash]  group by:test.t.id, funcs:sum(Column#12)->Column#11, funcs:sum(Column#13)->Column#4, funcs:firstrow(test.t.id)->test.t.id",
          "        └─ExchangeReceiver 8000.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 8000.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "            └─HashAgg 8000.00 batchCop[tiflash]  group by:test.t.id, funcs:count(test.t.value)->Column#12, funcs:sum(test.t.value)->Column#13",
          "              └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select sum(b) from (select t.id, t1.id as b from t join t t1 on t.id=t1.id)A group by id",
        "Plan": [
          "TableReader 7992.00 root  data:ExchangeSender",
          "└─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "  └─Projection 7992.00 batchCop[tiflash]  Column#7",
          "    └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:sum(Column#8)->Column#7",
          "      └─ExchangeReceiver 7992.00 batchCop[tiflash]  ",
          "        └─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "          └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:sum(test.t.id)->Column#8",
          "            └─HashJoin 12487.50 batchCop[tiflash]  inner join, equal:[eq(test.t.id, test.t.id)]",
          "              ├─ExchangeReceiver(Build) 9990.00 batchCop[tiflash]  ",
          "              │ └─ExchangeSender 9990.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "              │   └─Selection 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "              │     └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo",
          "              └─ExchangeReceiver(Probe) 9990.00 batchCop[tiflash]  ",
          "                └─ExchangeSender 9990.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "                  └─Selection 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "                    └─TableFullScan 10000.00 batchCop[tiflash] table:t1 keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from (select id from t group by id) C join (select sum(b),id from (select t.id, t1.id as b from t join (select id, count(*) as c from t group by id) t1 on t.id=t1.id)A group by id)B on C.id=b.id",
        "Plan": [
          "TableReader 7992.00 root  data:ExchangeSender",
          "└─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin 7992.00 batchCop[tiflash]  inner join, equal:[eq(test.t.id, test.t.id)]",
          "    ├─Projection(Build) 7992.00 batchCop[tiflash]  test.t.id",
          "    │ └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:firstrow(test.t.id)->test.t.id",
          "    │   └─ExchangeReceiver 9990.00 batchCop[tiflash]  ",
          "    │     └─ExchangeSender 9990.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "    │       └─Selection 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "    │         └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─Projection(Probe) 7992.00 batchCop[tiflash]  Column#11, test.t.id",
          "      └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:sum(test.t.id)->Column#11, funcs:firstrow(test.t.id)->test.t.id",
          "        └─HashJoin 9990.00 batchCop[tiflash]  inner join, equal:[eq(test.t.id, test.t.id)]",
          "          ├─Projection(Build) 7992.00 batchCop[tiflash]  test.t.id",
          "          │ └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:firstrow(test.t.id)->test.t.id",
          "          │   └─ExchangeReceiver 9990.00 batchCop[tiflash]  ",
          "          │     └─ExchangeSender 9990.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "          │       └─Selection 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "          │         └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo",
          "          └─ExchangeReceiver(Probe) 9990.00 batchCop[tiflash]  ",
          "            └─ExchangeSender 9990.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "              └─Selection 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "                └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select count(distinct value),id from t group by id",
        "Plan": [
          "HashAgg 8000.00 root  group by:test.t.id, funcs:count(distinct test.t.value)->Column#4, funcs:firstrow(test.t.id)->test.t.id",
          "└─TableReader 10000.00 root  data:TableFullScan",
          "  └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from t join ( select count(distinct value), id from t group by id) as A on A.id = t.id",
        "Plan": [
          "HashJoin 9990.00 root  inner join, equal:[eq(test.t.id, test.t.id)]",
          "├─HashAgg(Build) 7992.00 root  group by:test.t.id, funcs:count(distinct test.t.value)->Column#7, funcs:firstrow(test.t.id)->test.t.id",
          "│ └─TableReader 9990.00 root  data:Selection",
          "│   └─Selection 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "│     └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "└─TableReader(Probe) 9990.00 root  data:Selection",
          "  └─Selection 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "    └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from t join ( select count(1/value), id from t group by id) as A on A.id = t.id",
        "Plan": [
          "TableReader 9990.00 root  data:ExchangeSender",
          "└─ExchangeSender 9990.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin 9990.00 batchCop[tiflash]  inner join, equal:[eq(test.t.id, test.t.id)]",
          "    ├─Projection(Build) 7992.00 batchCop[tiflash]  Column#7, test.t.id",
          "    │ └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:sum(Column#8)->Column#7, funcs:firstrow(test.t.id)->test.t.id",
          "    │   └─ExchangeReceiver 7992.00 batchCop[tiflash]  ",
          "    │     └─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "    │       └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:count(div(1, test.t.value))->Column#8",
          "    │         └─Selection 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "    │           └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─ExchangeReceiver(Probe) 9990.00 batchCop[tiflash]  ",
          "      └─ExchangeSender 9990.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "        └─Selection 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "          └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestMppAggWithJoin",
    "Cases": [
      {
        "SQL": "desc format = 'brief' select * from t join ( select count(*), id from t group by id) as A on A.id = t.id",
        "Plan": [
          "TableReader 9990.00 root  data:ExchangeSender",
          "└─ExchangeSender 9990.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin 9990.00 batchCop[tiflash]  inner join, equal:[eq(test.t.id, test.t.id)]",
          "    ├─ExchangeReceiver(Build) 7992.00 batchCop[tiflash]  ",
          "    │ └─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: Broadcast",
          "    │   └─Projection 7992.00 batchCop[tiflash]  Column#7, test.t.id",
          "    │     └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:sum(Column#8)->Column#7, funcs:firstrow(test.t.id)->test.t.id",
          "    │       └─ExchangeReceiver 7992.00 batchCop[tiflash]  ",
          "    │         └─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "    │           └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:count(1)->Column#8",
          "    │             └─Selection 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "    │               └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─Selection(Probe) 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "      └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from t join ( select count(*)+id as v from t group by id) as A on A.v = t.id",
        "Plan": [
          "TableReader 8000.00 root  data:ExchangeSender",
          "└─ExchangeSender 8000.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin 8000.00 batchCop[tiflash]  inner join, equal:[eq(test.t.id, Column#8)]",
          "    ├─ExchangeReceiver(Build) 6400.00 batchCop[tiflash]  ",
          "    │ └─ExchangeSender 6400.00 batchCop[tiflash]  ExchangeType: Broadcast",
          "    │   └─Projection 6400.00 batchCop[tiflash]  plus(Column#7, test.t.id)->Column#8",
          "    │     └─Selection 6400.00 batchCop[tiflash]  not(isnull(plus(Column#7, test.t.id)))",
          "    │       └─Projection 8000.00 batchCop[tiflash]  Column#7, test.t.id",
          "    │         └─HashAgg 8000.00 batchCop[tiflash]  group by:test.t.id, funcs:sum(Column#11)->Column#7, funcs:firstrow(test.t.id)->test.t.id",
          "    │           └─ExchangeReceiver 8000.00 batchCop[tiflash]  ",
          "    │             └─ExchangeSender 8000.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "    │               └─HashAgg 8000.00 batchCop[tiflash]  group by:test.t.id, funcs:count(1)->Column#11",
          "    │                 └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─Selection(Probe) 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "      └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
>>>>>>> b3d4458b2... planner: refine explain info for batch cop (#20360)
        ]
      },
      {
        "SQL": "explain select /*+ inl_join(s) */ * from t join s on t.a=s.a and t.b = s.a",
        "Plan": [
<<<<<<< HEAD
          "IndexJoin_10 12475.01 root  inner join, inner:IndexLookUp_9, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.b, test.s.a)",
          "├─TableReader_15(Build) 9980.01 root  data:Selection_14",
          "│ └─Selection_14 9980.01 cop[tikv]  not(isnull(test.t.a)), not(isnull(test.t.b))",
          "│   └─TableFullScan_13 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp_9(Probe) 1.25 root  ",
          "  ├─Selection_8(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan_6 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─TableRowIDScan_7(Probe) 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
=======
          "Projection 7992.00 root  test.t.id, test.t.value, Column#7, test.t.id",
          "└─TableReader 7992.00 root  data:ExchangeSender",
          "  └─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 7992.00 batchCop[tiflash]  inner join, equal:[eq(test.t.id, test.t.id)]",
          "      ├─ExchangeReceiver(Build) 6393.60 batchCop[tiflash]  ",
          "      │ └─ExchangeSender 6393.60 batchCop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection 6393.60 batchCop[tiflash]  lt(plus(test.t.value, cast(Column#7)), 10)",
          "      │     └─Projection 7992.00 batchCop[tiflash]  Column#7, test.t.id, test.t.value",
          "      │       └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, test.t.value, funcs:sum(Column#10)->Column#7, funcs:firstrow(test.t.id)->test.t.id, funcs:firstrow(test.t.value)->test.t.value",
          "      │         └─ExchangeReceiver 7992.00 batchCop[tiflash]  ",
          "      │           └─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.value, test.t.id",
          "      │             └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, test.t.value, funcs:count(1)->Column#10",
          "      │               └─Selection 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "      │                 └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo",
          "      └─Selection(Probe) 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "        └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
>>>>>>> b3d4458b2... planner: refine explain info for batch cop (#20360)
        ]
      },
      {
        "SQL": "explain select /*+ inl_join(s) */ * from t join s on t.a=s.a and t.a = s.b",
        "Plan": [
<<<<<<< HEAD
          "IndexJoin_11 12475.01 root  inner join, inner:IndexLookUp_10, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.a, test.s.b)",
          "├─TableReader_16(Build) 9990.00 root  data:Selection_15",
          "│ └─Selection_15 9990.00 cop[tikv]  not(isnull(test.t.a))",
          "│   └─TableFullScan_14 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp_10(Probe) 1.25 root  ",
          "  ├─Selection_8(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan_6 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─Selection_9(Probe) 1.25 cop[tikv]  not(isnull(test.s.b))",
          "    └─TableRowIDScan_7 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
=======
          "HashJoin 1.25 root  inner join, equal:[eq(test.t.id, Column#7)]",
          "├─HashAgg(Build) 1.00 root  funcs:count(Column#10)->Column#7",
          "│ └─TableReader 1.00 root  data:ExchangeSender",
          "│   └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "│     └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#10",
          "│       └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo",
          "└─TableReader(Probe) 9990.00 root  data:Selection",
          "  └─Selection 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "    └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
>>>>>>> b3d4458b2... planner: refine explain info for batch cop (#20360)
        ]
      },
      {
        "SQL": "explain select /*+ inl_hash_join(s) */ * from t join s on t.a=s.a and t.b = s.b",
        "Plan": [
<<<<<<< HEAD
          "IndexHashJoin_13 12475.01 root  inner join, inner:IndexLookUp_10, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.b, test.s.b)",
          "├─TableReader_16(Build) 9980.01 root  data:Selection_15",
          "│ └─Selection_15 9980.01 cop[tikv]  not(isnull(test.t.a)), not(isnull(test.t.b))",
          "│   └─TableFullScan_14 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp_10(Probe) 1.25 root  ",
          "  ├─Selection_8(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan_6 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─Selection_9(Probe) 1.25 cop[tikv]  not(isnull(test.s.b))",
          "    └─TableRowIDScan_7 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
=======
          "TableReader 7992.00 root  data:ExchangeSender",
          "└─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "  └─Projection 7992.00 batchCop[tiflash]  Column#7",
          "    └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:sum(Column#8)->Column#7",
          "      └─ExchangeReceiver 7992.00 batchCop[tiflash]  ",
          "        └─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "          └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:sum(test.t.id)->Column#8",
          "            └─HashJoin 12487.50 batchCop[tiflash]  inner join, equal:[eq(test.t.id, test.t.id)]",
          "              ├─ExchangeReceiver(Build) 9990.00 batchCop[tiflash]  ",
          "              │ └─ExchangeSender 9990.00 batchCop[tiflash]  ExchangeType: Broadcast",
          "              │   └─Selection 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "              │     └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo",
          "              └─Selection(Probe) 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "                └─TableFullScan 10000.00 batchCop[tiflash] table:t1 keep order:false, stats:pseudo"
>>>>>>> b3d4458b2... planner: refine explain info for batch cop (#20360)
        ]
      },
      {
        "SQL": "explain select /*+ inl_hash_join(s) */ * from t join s on t.a=s.a and t.b = s.a",
        "Plan": [
<<<<<<< HEAD
          "IndexHashJoin_12 12475.01 root  inner join, inner:IndexLookUp_9, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.b, test.s.a)",
          "├─TableReader_15(Build) 9980.01 root  data:Selection_14",
          "│ └─Selection_14 9980.01 cop[tikv]  not(isnull(test.t.a)), not(isnull(test.t.b))",
          "│   └─TableFullScan_13 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp_9(Probe) 1.25 root  ",
          "  ├─Selection_8(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan_6 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─TableRowIDScan_7(Probe) 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
=======
          "TableReader 7992.00 root  data:ExchangeSender",
          "└─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin 7992.00 batchCop[tiflash]  inner join, equal:[eq(test.t.id, test.t.id)]",
          "    ├─ExchangeReceiver(Build) 7992.00 batchCop[tiflash]  ",
          "    │ └─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: Broadcast",
          "    │   └─Projection 7992.00 batchCop[tiflash]  test.t.id",
          "    │     └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:firstrow(test.t.id)->test.t.id",
          "    │       └─ExchangeReceiver 9990.00 batchCop[tiflash]  ",
          "    │         └─ExchangeSender 9990.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "    │           └─Selection 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "    │             └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─Projection(Probe) 7992.00 batchCop[tiflash]  Column#7, test.t.id",
          "      └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:sum(Column#9)->Column#7, funcs:firstrow(test.t.id)->test.t.id",
          "        └─ExchangeReceiver 7992.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "            └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:sum(test.t.value)->Column#9",
          "              └─Selection 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "                └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
>>>>>>> b3d4458b2... planner: refine explain info for batch cop (#20360)
        ]
      },
      {
        "SQL": "explain select /*+ inl_hash_join(s) */ * from t join s on t.a=s.a and t.a = s.b",
        "Plan": [
<<<<<<< HEAD
          "IndexHashJoin_13 12475.01 root  inner join, inner:IndexLookUp_10, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.a, test.s.b)",
          "├─TableReader_16(Build) 9990.00 root  data:Selection_15",
          "│ └─Selection_15 9990.00 cop[tikv]  not(isnull(test.t.a))",
          "│   └─TableFullScan_14 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp_10(Probe) 1.25 root  ",
          "  ├─Selection_8(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan_6 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─Selection_9(Probe) 1.25 cop[tikv]  not(isnull(test.s.b))",
          "    └─TableRowIDScan_7 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
=======
          "TableReader 7992.00 root  data:ExchangeSender",
          "└─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin 7992.00 batchCop[tiflash]  inner join, equal:[eq(test.t.id, test.t.id)]",
          "    ├─ExchangeReceiver(Build) 7992.00 batchCop[tiflash]  ",
          "    │ └─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: Broadcast",
          "    │   └─Projection 7992.00 batchCop[tiflash]  test.t.id",
          "    │     └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:firstrow(test.t.id)->test.t.id",
          "    │       └─ExchangeReceiver 9990.00 batchCop[tiflash]  ",
          "    │         └─ExchangeSender 9990.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "    │           └─Selection 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "    │             └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─Projection(Probe) 7992.00 batchCop[tiflash]  Column#11, test.t.id",
          "      └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:sum(Column#14)->Column#11, funcs:firstrow(test.t.id)->test.t.id",
          "        └─ExchangeReceiver 7992.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "            └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:sum(test.t.id)->Column#14",
          "              └─HashJoin 9990.00 batchCop[tiflash]  inner join, equal:[eq(test.t.id, test.t.id)]",
          "                ├─ExchangeReceiver(Build) 7992.00 batchCop[tiflash]  ",
          "                │ └─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: Broadcast",
          "                │   └─Projection 7992.00 batchCop[tiflash]  test.t.id",
          "                │     └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:firstrow(test.t.id)->test.t.id",
          "                │       └─ExchangeReceiver 9990.00 batchCop[tiflash]  ",
          "                │         └─ExchangeSender 9990.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "                │           └─Selection 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "                │             └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo",
          "                └─Selection(Probe) 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "                  └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
>>>>>>> b3d4458b2... planner: refine explain info for batch cop (#20360)
        ]
      }
    ]
  }
]
