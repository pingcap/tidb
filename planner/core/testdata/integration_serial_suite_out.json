[
  {
    "Name": "TestSelPushDownTiFlash",
    "Cases": [
      {
        "SQL": "explain format = 'brief' select * from t where t.a > 1 and t.b = \"flash\" or t.a + 3 * t.a = 5",
        "Plan": [
          "TableReader 8000.67 root  data:Selection",
          "└─Selection 8000.67 cop[tiflash]  or(and(gt(test.t.a, 1), eq(test.t.b, \"flash\")), eq(plus(test.t.a, mul(3, test.t.a)), 5))",
          "  └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain format = 'brief' select * from t where cast(t.a as float) + 3 = 5.1",
        "Plan": [
          "Selection 10000.00 root  eq(plus(cast(test.t.a, float BINARY), 3), 5.1)",
          "└─TableReader 10000.00 root  data:TableFullScan",
          "  └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain format = 'brief' select * from t where b > 'a' order by convert(b, unsigned) limit 2",
        "Plan": [
          "Projection 2.00 root  test.t.a, test.t.b",
          "└─TopN 2.00 root  Column#4, offset:0, count:2",
          "  └─Projection 2.00 root  test.t.a, test.t.b, cast(test.t.b, bigint(22) UNSIGNED BINARY)->Column#4",
          "    └─TableReader 2.00 root  data:Projection",
          "      └─Projection 2.00 batchCop[tiflash]  test.t.a, test.t.b",
          "        └─TopN 2.00 batchCop[tiflash]  Column#3, offset:0, count:2",
          "          └─Projection 3333.33 batchCop[tiflash]  test.t.a, test.t.b, cast(test.t.b, bigint(22) UNSIGNED BINARY)->Column#3",
          "            └─Selection 3333.33 batchCop[tiflash]  gt(test.t.b, \"a\")",
          "              └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain format = 'brief' select * from t where b > 'a' order by b limit 2",
        "Plan": [
          "TopN 2.00 root  test.t.b, offset:0, count:2",
          "└─TableReader 2.00 root  data:TopN",
          "  └─TopN 2.00 batchCop[tiflash]  test.t.b, offset:0, count:2",
          "    └─Selection 3333.33 batchCop[tiflash]  gt(test.t.b, \"a\")",
          "      └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestMPPJoin",
    "Cases": [
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t, d1_t where fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 8.00 batchCop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)]",
          "        ├─ExchangeReceiver(Build) 2.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 2.00 batchCop[tiflash]  ExchangeType: Broadcast",
          "        │   └─Selection 2.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "        │     └─TableFullScan 2.00 batchCop[tiflash] table:d1_t keep order:false",
          "        └─Selection(Probe) 8.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "          └─TableFullScan 8.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t, d1_t, d2_t, d3_t where fact_t.d1_k = d1_t.d1_k and fact_t.d2_k = d2_t.d2_k and fact_t.d3_k = d3_t.d3_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#18)->Column#17",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#18",
          "      └─HashJoin 8.00 batchCop[tiflash]  inner join, equal:[eq(test.fact_t.d3_k, test.d3_t.d3_k)]",
          "        ├─ExchangeReceiver(Build) 2.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 2.00 batchCop[tiflash]  ExchangeType: Broadcast",
          "        │   └─Selection 2.00 batchCop[tiflash]  not(isnull(test.d3_t.d3_k))",
          "        │     └─TableFullScan 2.00 batchCop[tiflash] table:d3_t keep order:false",
          "        └─HashJoin(Probe) 8.00 batchCop[tiflash]  inner join, equal:[eq(test.fact_t.d2_k, test.d2_t.d2_k)]",
          "          ├─ExchangeReceiver(Build) 2.00 batchCop[tiflash]  ",
          "          │ └─ExchangeSender 2.00 batchCop[tiflash]  ExchangeType: Broadcast",
          "          │   └─Selection 2.00 batchCop[tiflash]  not(isnull(test.d2_t.d2_k))",
          "          │     └─TableFullScan 2.00 batchCop[tiflash] table:d2_t keep order:false",
          "          └─HashJoin(Probe) 8.00 batchCop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)]",
          "            ├─ExchangeReceiver(Build) 2.00 batchCop[tiflash]  ",
          "            │ └─ExchangeSender 2.00 batchCop[tiflash]  ExchangeType: Broadcast",
          "            │   └─Selection 2.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "            │     └─TableFullScan 2.00 batchCop[tiflash] table:d1_t keep order:false",
          "            └─Selection(Probe) 8.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k)), not(isnull(test.fact_t.d2_k)), not(isnull(test.fact_t.d3_k))",
          "              └─TableFullScan 8.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t, d1_t where fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 8.00 batchCop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)]",
          "        ├─ExchangeReceiver(Build) 2.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 2.00 batchCop[tiflash]  ExchangeType: Broadcast",
          "        │   └─Selection 2.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "        │     └─TableFullScan 2.00 batchCop[tiflash] table:d1_t keep order:false",
          "        └─Selection(Probe) 8.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "          └─TableFullScan 8.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader 8.00 root  data:ExchangeSender",
          "  └─ExchangeSender 8.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 8.00 cop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─ExchangeReceiver(Build) 2.00 cop[tiflash]  ",
          "      │ └─ExchangeSender 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │     └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─TableFullScan(Probe) 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader 8.00 root  data:ExchangeSender",
          "  └─ExchangeSender 8.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 8.00 cop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─ExchangeReceiver(Build) 8.00 cop[tiflash]  ",
          "      │ └─ExchangeSender 8.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "      │     └─TableFullScan 8.00 cop[tiflash] table:fact_t keep order:false",
          "      └─TableFullScan(Probe) 2.00 cop[tiflash] table:d1_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col1 > d1_t.value",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 8.00 batchCop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)], other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "        ├─ExchangeReceiver(Build) 2.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 2.00 batchCop[tiflash]  ExchangeType: Broadcast",
          "        │   └─Selection 2.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "        │     └─TableFullScan 2.00 batchCop[tiflash] table:d1_t keep order:false",
          "        └─Selection(Probe) 8.00 batchCop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "          └─TableFullScan 8.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col1 > 10",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader 8.00 root  data:ExchangeSender",
          "  └─ExchangeSender 8.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 8.00 cop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], left cond:[gt(test.fact_t.col1, 10)]",
          "      ├─ExchangeReceiver(Build) 2.00 cop[tiflash]  ",
          "      │ └─ExchangeSender 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │     └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─TableFullScan(Probe) 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col2 > 10 and fact_t.col1 > d1_t.value",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader 8.00 root  data:ExchangeSender",
          "  └─ExchangeSender 8.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 8.00 cop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], left cond:[gt(test.fact_t.col2, 10)], other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "      ├─ExchangeReceiver(Build) 2.00 cop[tiflash]  ",
          "      │ └─ExchangeSender 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "      │     └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─TableFullScan(Probe) 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k and d1_t.value > 10",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader 8.00 root  data:ExchangeSender",
          "  └─ExchangeSender 8.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 8.00 cop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], right cond:gt(test.d1_t.value, 10)",
          "      ├─ExchangeReceiver(Build) 8.00 cop[tiflash]  ",
          "      │ └─ExchangeSender 8.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "      │     └─TableFullScan 8.00 cop[tiflash] table:fact_t keep order:false",
          "      └─TableFullScan(Probe) 2.00 cop[tiflash] table:d1_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k and d1_t.value > 10 and fact_t.col1 > d1_t.value",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader 8.00 root  data:ExchangeSender",
          "  └─ExchangeSender 8.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 8.00 cop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], right cond:gt(test.d1_t.value, 10), other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "      ├─ExchangeReceiver(Build) 8.00 cop[tiflash]  ",
          "      │ └─ExchangeSender 8.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection 8.00 cop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "      │     └─TableFullScan 8.00 cop[tiflash] table:fact_t keep order:false",
          "      └─TableFullScan(Probe) 2.00 cop[tiflash] table:d1_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t where exists (select 1 from d1_t where d1_k = fact_t.d1_k)",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(1)->Column#12",
          "└─TableReader 6.40 root  data:ExchangeSender",
          "  └─ExchangeSender 6.40 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 6.40 cop[tiflash]  semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─ExchangeReceiver(Build) 2.00 cop[tiflash]  ",
          "      │ └─ExchangeSender 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │     └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─Selection(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t where exists (select 1 from d1_t where d1_k = fact_t.d1_k and value > fact_t.col1)",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(1)->Column#12",
          "└─TableReader 6.40 root  data:ExchangeSender",
          "  └─ExchangeSender 6.40 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 6.40 cop[tiflash]  semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], other cond:gt(test.d1_t.value, test.fact_t.col1)",
          "      ├─ExchangeReceiver(Build) 2.00 cop[tiflash]  ",
          "      │ └─ExchangeSender 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "      │     └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─Selection(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t where not exists (select 1 from d1_t where d1_k = fact_t.d1_k)",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(1)->Column#12",
          "└─TableReader 6.40 root  data:ExchangeSender",
          "  └─ExchangeSender 6.40 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 6.40 cop[tiflash]  anti semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─ExchangeReceiver(Build) 2.00 cop[tiflash]  ",
          "      │ └─ExchangeSender 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─TableFullScan(Probe) 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t where not exists (select 1 from d1_t where d1_k = fact_t.d1_k and value > fact_t.col1)",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(1)->Column#12",
          "└─TableReader 6.40 root  data:ExchangeSender",
          "  └─ExchangeSender 6.40 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 6.40 cop[tiflash]  anti semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], other cond:gt(test.d1_t.value, test.fact_t.col1)",
          "      ├─ExchangeReceiver(Build) 2.00 cop[tiflash]  ",
          "      │ └─ExchangeSender 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─TableFullScan 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─TableFullScan(Probe) 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      }
    ]
  },
  {
    "Name": "TestMPPShuffledJoin",
    "Cases": [
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t, d1_t where fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 32.00 batchCop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)]",
          "        ├─ExchangeReceiver(Build) 4.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "        │   └─Selection 4.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "        │     └─TableFullScan 4.00 batchCop[tiflash] table:d1_t keep order:false",
          "        └─ExchangeReceiver(Probe) 16.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 16.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "            └─Selection 16.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "              └─TableFullScan 16.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t, d1_t, d2_t, d3_t where fact_t.d1_k = d1_t.d1_k and fact_t.d2_k = d2_t.d2_k and fact_t.d3_k = d3_t.d3_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#18)->Column#17",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#18",
          "      └─HashJoin 128.00 batchCop[tiflash]  inner join, equal:[eq(test.fact_t.d3_k, test.d3_t.d3_k)]",
          "        ├─ExchangeReceiver(Build) 4.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d3_t.d3_k",
          "        │   └─Selection 4.00 batchCop[tiflash]  not(isnull(test.d3_t.d3_k))",
          "        │     └─TableFullScan 4.00 batchCop[tiflash] table:d3_t keep order:false",
          "        └─ExchangeReceiver(Probe) 64.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 64.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d3_k",
          "            └─HashJoin 64.00 batchCop[tiflash]  inner join, equal:[eq(test.fact_t.d2_k, test.d2_t.d2_k)]",
          "              ├─ExchangeReceiver(Build) 4.00 batchCop[tiflash]  ",
          "              │ └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d2_t.d2_k",
          "              │   └─Selection 4.00 batchCop[tiflash]  not(isnull(test.d2_t.d2_k))",
          "              │     └─TableFullScan 4.00 batchCop[tiflash] table:d2_t keep order:false",
          "              └─ExchangeReceiver(Probe) 32.00 batchCop[tiflash]  ",
          "                └─ExchangeSender 32.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d2_k",
          "                  └─HashJoin 32.00 batchCop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)]",
          "                    ├─ExchangeReceiver(Build) 4.00 batchCop[tiflash]  ",
          "                    │ └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "                    │   └─Selection 4.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "                    │     └─TableFullScan 4.00 batchCop[tiflash] table:d1_t keep order:false",
          "                    └─ExchangeReceiver(Probe) 16.00 batchCop[tiflash]  ",
          "                      └─ExchangeSender 16.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "                        └─Selection 16.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k)), not(isnull(test.fact_t.d2_k)), not(isnull(test.fact_t.d3_k))",
          "                          └─TableFullScan 16.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t, d1_t where fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 32.00 batchCop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)]",
          "        ├─ExchangeReceiver(Build) 4.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "        │   └─Selection 4.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "        │     └─TableFullScan 4.00 batchCop[tiflash] table:d1_t keep order:false",
          "        └─ExchangeReceiver(Probe) 16.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 16.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "            └─Selection 16.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "              └─TableFullScan 16.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t, d1_t, d2_t, d3_t where fact_t.d1_k = d1_t.d1_k and fact_t.d1_k = d2_t.value and fact_t.d1_k = d3_t.value",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#18)->Column#17",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#18",
          "      └─HashJoin 128.00 batchCop[tiflash]  inner join, equal:[eq(test.fact_t.d1_k, test.d3_t.value)]",
          "        ├─ExchangeReceiver(Build) 4.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d3_t.value",
          "        │   └─Selection 4.00 batchCop[tiflash]  not(isnull(test.d3_t.value))",
          "        │     └─TableFullScan 4.00 batchCop[tiflash] table:d3_t keep order:false",
          "        └─HashJoin(Probe) 64.00 batchCop[tiflash]  inner join, equal:[eq(test.fact_t.d1_k, test.d2_t.value)]",
          "          ├─ExchangeReceiver(Build) 4.00 batchCop[tiflash]  ",
          "          │ └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d2_t.value",
          "          │   └─Selection 4.00 batchCop[tiflash]  not(isnull(test.d2_t.value))",
          "          │     └─TableFullScan 4.00 batchCop[tiflash] table:d2_t keep order:false",
          "          └─HashJoin(Probe) 32.00 batchCop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)]",
          "            ├─ExchangeReceiver(Build) 4.00 batchCop[tiflash]  ",
          "            │ └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "            │   └─Selection 4.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "            │     └─TableFullScan 4.00 batchCop[tiflash] table:d1_t keep order:false",
          "            └─ExchangeReceiver(Probe) 16.00 batchCop[tiflash]  ",
          "              └─ExchangeSender 16.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "                └─Selection 16.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "                  └─TableFullScan 16.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 32.00 batchCop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "        ├─ExchangeReceiver(Build) 4.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "        │   └─Selection 4.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "        │     └─TableFullScan 4.00 batchCop[tiflash] table:d1_t keep order:false",
          "        └─ExchangeReceiver(Probe) 16.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 16.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "            └─TableFullScan 16.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 32.00 batchCop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "        ├─ExchangeReceiver(Build) 16.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 16.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "        │   └─Selection 16.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        │     └─TableFullScan 16.00 batchCop[tiflash] table:fact_t keep order:false",
          "        └─ExchangeReceiver(Probe) 4.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "            └─TableFullScan 4.00 batchCop[tiflash] table:d1_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col1 > d1_t.value",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 32.00 batchCop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)], other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "        ├─ExchangeReceiver(Build) 4.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "        │   └─Selection 4.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "        │     └─TableFullScan 4.00 batchCop[tiflash] table:d1_t keep order:false",
          "        └─ExchangeReceiver(Probe) 16.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 16.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "            └─Selection 16.00 batchCop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "              └─TableFullScan 16.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col1 > 10",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 32.00 batchCop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], left cond:[gt(test.fact_t.col1, 10)]",
          "        ├─ExchangeReceiver(Build) 4.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "        │   └─Selection 4.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "        │     └─TableFullScan 4.00 batchCop[tiflash] table:d1_t keep order:false",
          "        └─ExchangeReceiver(Probe) 16.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 16.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "            └─TableFullScan 16.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from (select case when t1.col1 is null then t2.col1 + 5 else 10 end as col1, t2.d1_k as d1_k from fact_t t1 right join fact_t t2 on t1.d1_k = t2.d1_k) fact_t join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col1 > 5",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#22)->Column#19",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#22",
          "      └─HashJoin 204.80 batchCop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)]",
          "        ├─ExchangeReceiver(Build) 4.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "        │   └─Selection 4.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "        │     └─TableFullScan 4.00 batchCop[tiflash] table:d1_t keep order:false",
          "        └─Projection(Probe) 102.40 batchCop[tiflash]  test.fact_t.d1_k",
          "          └─Selection 102.40 batchCop[tiflash]  gt(case(isnull(test.fact_t.col1), plus(test.fact_t.col1, 5), 10), 5)",
          "            └─HashJoin 128.00 batchCop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.fact_t.d1_k)]",
          "              ├─ExchangeReceiver(Build) 16.00 batchCop[tiflash]  ",
          "              │ └─ExchangeSender 16.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "              │   └─Selection 16.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "              │     └─TableFullScan 16.00 batchCop[tiflash] table:t1 keep order:false",
          "              └─ExchangeReceiver(Probe) 16.00 batchCop[tiflash]  ",
          "                └─ExchangeSender 16.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "                  └─Selection 16.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "                    └─TableFullScan 16.00 batchCop[tiflash] table:t2 keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col2 > 10 and fact_t.col1 > d1_t.value",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 32.00 batchCop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], left cond:[gt(test.fact_t.col2, 10)], other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "        ├─ExchangeReceiver(Build) 4.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "        │   └─Selection 4.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "        │     └─TableFullScan 4.00 batchCop[tiflash] table:d1_t keep order:false",
          "        └─ExchangeReceiver(Probe) 16.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 16.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "            └─TableFullScan 16.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k and d1_t.value > 10",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 32.00 batchCop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], right cond:gt(test.d1_t.value, 10)",
          "        ├─ExchangeReceiver(Build) 16.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 16.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "        │   └─Selection 16.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        │     └─TableFullScan 16.00 batchCop[tiflash] table:fact_t keep order:false",
          "        └─ExchangeReceiver(Probe) 4.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "            └─TableFullScan 4.00 batchCop[tiflash] table:d1_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k and d1_t.value > 10 and fact_t.col1 > d1_t.value",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "      └─HashJoin 32.00 batchCop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], right cond:gt(test.d1_t.value, 10), other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "        ├─ExchangeReceiver(Build) 16.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 16.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "        │   └─Selection 16.00 batchCop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "        │     └─TableFullScan 16.00 batchCop[tiflash] table:fact_t keep order:false",
          "        └─ExchangeReceiver(Probe) 4.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "            └─TableFullScan 4.00 batchCop[tiflash] table:d1_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t where exists (select 1 from d1_t where d1_k = fact_t.d1_k)",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#13)->Column#12",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#13",
          "      └─HashJoin 12.80 batchCop[tiflash]  semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "        ├─ExchangeReceiver(Build) 4.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "        │   └─Selection 4.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "        │     └─TableFullScan 4.00 batchCop[tiflash] table:d1_t keep order:false",
          "        └─ExchangeReceiver(Probe) 16.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 16.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "            └─Selection 16.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "              └─TableFullScan 16.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t where exists (select 1 from d1_t where d1_k = fact_t.d1_k and value > fact_t.col1)",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#13)->Column#12",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#13",
          "      └─HashJoin 12.80 batchCop[tiflash]  semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], other cond:gt(test.d1_t.value, test.fact_t.col1)",
          "        ├─ExchangeReceiver(Build) 4.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "        │   └─Selection 4.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "        │     └─TableFullScan 4.00 batchCop[tiflash] table:d1_t keep order:false",
          "        └─ExchangeReceiver(Probe) 16.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 16.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "            └─Selection 16.00 batchCop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "              └─TableFullScan 16.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t where not exists (select 1 from d1_t where d1_k = fact_t.d1_k)",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#13)->Column#12",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#13",
          "      └─HashJoin 12.80 batchCop[tiflash]  anti semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "        ├─ExchangeReceiver(Build) 4.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "        │   └─TableFullScan 4.00 batchCop[tiflash] table:d1_t keep order:false",
          "        └─ExchangeReceiver(Probe) 16.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 16.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "            └─TableFullScan 16.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select count(*) from fact_t where not exists (select 1 from d1_t where d1_k = fact_t.d1_k and value > fact_t.col1)",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#13)->Column#12",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#13",
          "      └─HashJoin 12.80 batchCop[tiflash]  anti semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], other cond:gt(test.d1_t.value, test.fact_t.col1)",
          "        ├─ExchangeReceiver(Build) 4.00 batchCop[tiflash]  ",
          "        │ └─ExchangeSender 4.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "        │   └─TableFullScan 4.00 batchCop[tiflash] table:d1_t keep order:false",
          "        └─ExchangeReceiver(Probe) 16.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 16.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "            └─TableFullScan 16.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      }
    ]
  },
  {
    "Name": "TestBroadcastJoin",
    "Cases": [
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t, d1_t where fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin 8.00 batchCop[tiflash]  inner join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─Selection(Build) 2.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │ └─TableFullScan 2.00 batchCop[tiflash] table:d1_t keep order:false, global read",
          "      └─Selection(Probe) 8.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan 8.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t,d2_t,d3_t) */ count(*) from fact_t, d1_t, d2_t, d3_t where fact_t.d1_k = d1_t.d1_k and fact_t.d2_k = d2_t.d2_k and fact_t.d3_k = d3_t.d3_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#18)->Column#17",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#18",
          "    └─HashJoin 8.00 batchCop[tiflash]  inner join, equal:[eq(test.fact_t.d3_k, test.d3_t.d3_k)]",
          "      ├─Selection(Build) 2.00 batchCop[tiflash]  not(isnull(test.d3_t.d3_k))",
          "      │ └─TableFullScan 2.00 batchCop[tiflash] table:d3_t keep order:false, global read",
          "      └─HashJoin(Probe) 8.00 batchCop[tiflash]  inner join, equal:[eq(test.fact_t.d2_k, test.d2_t.d2_k)]",
          "        ├─Selection(Build) 2.00 batchCop[tiflash]  not(isnull(test.d2_t.d2_k))",
          "        │ └─TableFullScan 2.00 batchCop[tiflash] table:d2_t keep order:false, global read",
          "        └─HashJoin(Probe) 8.00 batchCop[tiflash]  inner join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "          ├─Selection(Build) 2.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "          │ └─TableFullScan 2.00 batchCop[tiflash] table:d1_t keep order:false, global read",
          "          └─Selection(Probe) 8.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k)), not(isnull(test.fact_t.d2_k)), not(isnull(test.fact_t.d3_k))",
          "            └─TableFullScan 8.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t), broadcast_join_local(d1_t) */ count(*) from fact_t, d1_t where fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin 8.00 batchCop[tiflash]  inner join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─Selection(Build) 2.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │ └─TableFullScan 2.00 batchCop[tiflash] table:d1_t keep order:false",
          "      └─Selection(Probe) 8.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan 8.00 batchCop[tiflash] table:fact_t keep order:false, global read"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t,d2_t,d3_t), broadcast_join_local(d2_t) */ count(*) from fact_t, d1_t, d2_t, d3_t where fact_t.d1_k = d1_t.d1_k and fact_t.d2_k = d2_t.d2_k and fact_t.d3_k = d3_t.d3_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#18)->Column#17",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#18",
          "    └─HashJoin 8.00 batchCop[tiflash]  inner join, equal:[eq(test.fact_t.d3_k, test.d3_t.d3_k)]",
          "      ├─Selection(Build) 2.00 batchCop[tiflash]  not(isnull(test.d3_t.d3_k))",
          "      │ └─TableFullScan 2.00 batchCop[tiflash] table:d3_t keep order:false, global read",
          "      └─HashJoin(Probe) 8.00 batchCop[tiflash]  inner join, equal:[eq(test.fact_t.d2_k, test.d2_t.d2_k)]",
          "        ├─Selection(Build) 2.00 batchCop[tiflash]  not(isnull(test.d2_t.d2_k))",
          "        │ └─TableFullScan 2.00 batchCop[tiflash] table:d2_t keep order:false",
          "        └─HashJoin(Probe) 8.00 batchCop[tiflash]  inner join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "          ├─Selection(Build) 2.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "          │ └─TableFullScan 2.00 batchCop[tiflash] table:d1_t keep order:false, global read",
          "          └─Selection(Probe) 8.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k)), not(isnull(test.fact_t.d2_k)), not(isnull(test.fact_t.d3_k))",
          "            └─TableFullScan 8.00 batchCop[tiflash] table:fact_t keep order:false, global read"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin 8.00 batchCop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─Selection(Build) 2.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │ └─TableFullScan 2.00 batchCop[tiflash] table:d1_t keep order:false, global read",
          "      └─TableFullScan(Probe) 8.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin 8.00 batchCop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─TableFullScan(Build) 2.00 batchCop[tiflash] table:d1_t keep order:false",
          "      └─Selection(Probe) 8.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan 8.00 batchCop[tiflash] table:fact_t keep order:false, global read"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col1 > d1_t.value",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin 8.00 batchCop[tiflash]  inner join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "      ├─Selection(Build) 2.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "      │ └─TableFullScan 2.00 batchCop[tiflash] table:d1_t keep order:false, global read",
          "      └─Selection(Probe) 8.00 batchCop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan 8.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col1 > 10",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin 8.00 batchCop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], left cond:[gt(test.fact_t.col1, 10)]",
          "      ├─Selection(Build) 2.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │ └─TableFullScan 2.00 batchCop[tiflash] table:d1_t keep order:false, global read",
          "      └─TableFullScan(Probe) 8.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col2 > 10 and fact_t.col1 > d1_t.value",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin 8.00 batchCop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], left cond:[gt(test.fact_t.col2, 10)], other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "      ├─Selection(Build) 2.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "      │ └─TableFullScan 2.00 batchCop[tiflash] table:d1_t keep order:false, global read",
          "      └─TableFullScan(Probe) 8.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k and d1_t.value > 10",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin 8.00 batchCop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], right cond:gt(test.d1_t.value, 10)",
          "      ├─TableFullScan(Build) 2.00 batchCop[tiflash] table:d1_t keep order:false",
          "      └─Selection(Probe) 8.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan 8.00 batchCop[tiflash] table:fact_t keep order:false, global read"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k and d1_t.value > 10 and fact_t.col1 > d1_t.value",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin 8.00 batchCop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], right cond:gt(test.d1_t.value, 10), other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "      ├─Selection(Build) 8.00 batchCop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "      │ └─TableFullScan 8.00 batchCop[tiflash] table:fact_t keep order:false, global read",
          "      └─TableFullScan(Probe) 2.00 batchCop[tiflash] table:d1_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t where exists (select 1 from d1_t where d1_k = fact_t.d1_k)",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#13)->Column#12",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#13",
          "    └─HashJoin 6.40 batchCop[tiflash]  semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─Selection(Build) 2.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │ └─TableFullScan 2.00 batchCop[tiflash] table:d1_t keep order:false, global read",
          "      └─Selection(Probe) 8.00 batchCop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan 8.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t where exists (select 1 from d1_t where d1_k = fact_t.d1_k and value > fact_t.col1)",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#13)->Column#12",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#13",
          "    └─HashJoin 6.40 batchCop[tiflash]  semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], other cond:gt(test.d1_t.value, test.fact_t.col1)",
          "      ├─Selection(Build) 2.00 batchCop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "      │ └─TableFullScan 2.00 batchCop[tiflash] table:d1_t keep order:false, global read",
          "      └─Selection(Probe) 8.00 batchCop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan 8.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t where not exists (select 1 from d1_t where d1_k = fact_t.d1_k)",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#13)->Column#12",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#13",
          "    └─HashJoin 6.40 batchCop[tiflash]  anti semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─TableFullScan(Build) 2.00 batchCop[tiflash] table:d1_t keep order:false, global read",
          "      └─TableFullScan(Probe) 8.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t where not exists (select 1 from d1_t where d1_k = fact_t.d1_k and value > fact_t.col1)",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#13)->Column#12",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#13",
          "    └─HashJoin 6.40 batchCop[tiflash]  anti semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], other cond:gt(test.d1_t.value, test.fact_t.col1)",
          "      ├─TableFullScan(Build) 2.00 batchCop[tiflash] table:d1_t keep order:false, global read",
          "      └─TableFullScan(Probe) 8.00 batchCop[tiflash] table:fact_t keep order:false"
        ]
      }
    ]
  },
  {
    "Name": "TestJoinNotSupportedByTiFlash",
    "Cases": [
      {
        "SQL": "explain format = 'brief' select * from table_1 a, table_1 b where a.bit_col = b.bit_col",
        "Plan": [
          "HashJoin 2.00 root  inner join, equal:[eq(test.table_1.bit_col, test.table_1.bit_col)]",
          "├─TableReader(Build) 2.00 root  data:TableFullScan",
          "│ └─TableFullScan 2.00 cop[tiflash] table:b keep order:false",
          "└─TableReader(Probe) 2.00 root  data:TableFullScan",
          "  └─TableFullScan 2.00 cop[tiflash] table:a keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select * from table_1 a left join table_1 b on a.id = b.id and dayofmonth(a.datetime_col) > 100",
        "Plan": [
          "HashJoin 2.00 root  left outer join, equal:[eq(test.table_1.id, test.table_1.id)], left cond:[gt(dayofmonth(test.table_1.datetime_col), 100)]",
          "├─TableReader(Build) 2.00 root  data:TableFullScan",
          "│ └─TableFullScan 2.00 cop[tiflash] table:b keep order:false",
          "└─TableReader(Probe) 2.00 root  data:TableFullScan",
          "  └─TableFullScan 2.00 cop[tiflash] table:a keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select * from table_1 a right join table_1 b on a.id = b.id and dayofmonth(b.datetime_col) > 100",
        "Plan": [
          "HashJoin 2.00 root  right outer join, equal:[eq(test.table_1.id, test.table_1.id)], right cond:gt(dayofmonth(test.table_1.datetime_col), 100)",
          "├─TableReader(Build) 2.00 root  data:TableFullScan",
          "│ └─TableFullScan 2.00 cop[tiflash] table:a keep order:false",
          "└─TableReader(Probe) 2.00 root  data:TableFullScan",
          "  └─TableFullScan 2.00 cop[tiflash] table:b keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select * from table_1 a join table_1 b on a.id = b.id and dayofmonth(a.datetime_col) > dayofmonth(b.datetime_col)",
        "Plan": [
          "HashJoin 2.00 root  inner join, equal:[eq(test.table_1.id, test.table_1.id)], other cond:gt(dayofmonth(test.table_1.datetime_col), dayofmonth(test.table_1.datetime_col))",
          "├─TableReader(Build) 2.00 root  data:TableFullScan",
          "│ └─TableFullScan 2.00 cop[tiflash] table:b keep order:false",
          "└─TableReader(Probe) 2.00 root  data:TableFullScan",
          "  └─TableFullScan 2.00 cop[tiflash] table:a keep order:false"
        ]
      }
    ]
  },
  {
    "Name": "TestMPPNotSupportedInNewCollation",
    "Cases": [
      {
        "SQL": "explain format = 'brief' select * from table_1 a, table_1 b where a.id = b.id",
        "Plan": [
          "HashJoin 2.00 root  inner join, equal:[eq(test.table_1.id, test.table_1.id)]",
          "├─TableReader(Build) 2.00 root  data:TableFullScan",
          "│ └─TableFullScan 2.00 cop[tiflash] table:b keep order:false",
          "└─TableReader(Probe) 2.00 root  data:TableFullScan",
          "  └─TableFullScan 2.00 cop[tiflash] table:a keep order:false"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ agg_to_cop() */ count(*), id from table_1 group by id",
        "Plan": [
          "HashAgg 2.00 root  group by:test.table_1.id, funcs:count(1)->Column#4, funcs:firstrow(test.table_1.id)->test.table_1.id",
          "└─TableReader 2.00 root  data:TableFullScan",
          "  └─TableFullScan 2.00 cop[tiflash] table:table_1 keep order:false"
        ]
      }
    ]
  },
  {
    "Name": "TestReadFromStorageHint",
    "Cases": [
      {
        "SQL": "desc format = 'brief' select avg(a) from t",
        "Plan": [
          "StreamAgg 1.00 root  funcs:avg(Column#7, Column#8)->Column#4",
          "└─TableReader 1.00 root  data:StreamAgg",
          "  └─StreamAgg 1.00 batchCop[tiflash]  funcs:count(Column#9)->Column#7, funcs:sum(Column#10)->Column#8",
          "    └─Projection 10000.00 batchCop[tiflash]  test.t.a, cast(test.t.a, decimal(15,4) BINARY)->Column#10",
          "      └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc format = 'brief' select /*+ read_from_storage(tiflash[t]) */ avg(a) from t",
        "Plan": [
          "StreamAgg 1.00 root  funcs:avg(Column#7, Column#8)->Column#4",
          "└─TableReader 1.00 root  data:StreamAgg",
          "  └─StreamAgg 1.00 batchCop[tiflash]  funcs:count(Column#9)->Column#7, funcs:sum(Column#10)->Column#8",
          "    └─Projection 10000.00 batchCop[tiflash]  test.t.a, cast(test.t.a, decimal(15,4) BINARY)->Column#10",
          "      └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc format = 'brief' select /*+ read_from_storage(tiflash[t]) */ sum(a) from t",
        "Plan": [
          "StreamAgg 1.00 root  funcs:sum(Column#6)->Column#4",
          "└─TableReader 1.00 root  data:StreamAgg",
          "  └─StreamAgg 1.00 batchCop[tiflash]  funcs:sum(Column#7)->Column#6",
          "    └─Projection 10000.00 batchCop[tiflash]  cast(test.t.a, decimal(32,0) BINARY)->Column#7",
          "      └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc format = 'brief' select /*+ read_from_storage(tiflash[t]) */ sum(a+1) from t",
        "Plan": [
          "StreamAgg 1.00 root  funcs:sum(Column#6)->Column#4",
          "└─TableReader 1.00 root  data:StreamAgg",
          "  └─StreamAgg 1.00 batchCop[tiflash]  funcs:sum(Column#7)->Column#6",
          "    └─Projection 10000.00 batchCop[tiflash]  cast(plus(test.t.a, 1), decimal(41,0) BINARY)->Column#7",
          "      └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc format = 'brief' select /*+ read_from_storage(tiflash[t]) */ sum(isnull(a)) from t",
        "Plan": [
          "StreamAgg 1.00 root  funcs:sum(Column#6)->Column#4",
          "└─TableReader 1.00 root  data:StreamAgg",
          "  └─StreamAgg 1.00 batchCop[tiflash]  funcs:sum(Column#7)->Column#6",
          "    └─Projection 10000.00 batchCop[tiflash]  cast(isnull(test.t.a), decimal(22,0) BINARY)->Column#7",
          "      └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc format = 'brief' select /*+ READ_FROM_STORAGE(TIKV[t1], TIKV[t2]) */ * from t t1, t t2 where t1.a = t2.a",
        "Plan": [
          "HashJoin 12487.50 root  inner join, equal:[eq(test.t.a, test.t.a)]",
          "├─TableReader(Build) 9990.00 root  data:Selection",
          "│ └─Selection 9990.00 cop[tikv]  not(isnull(test.t.a))",
          "│   └─TableFullScan 10000.00 cop[tikv] table:t2 keep order:false, stats:pseudo",
          "└─TableReader(Probe) 9990.00 root  data:Selection",
          "  └─Selection 9990.00 cop[tikv]  not(isnull(test.t.a))",
          "    └─TableFullScan 10000.00 cop[tikv] table:t1 keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc format = 'brief' select /*+ READ_FROM_STORAGE(TIKV[t1], TIFLASH[t2]) */ * from t t1, t t2 where t1.a = t2.a",
        "Plan": [
          "HashJoin 12487.50 root  inner join, equal:[eq(test.t.a, test.t.a)]",
          "├─TableReader(Build) 9990.00 root  data:Selection",
          "│ └─Selection 9990.00 cop[tiflash]  not(isnull(test.t.a))",
          "│   └─TableFullScan 10000.00 cop[tiflash] table:t2 keep order:false, stats:pseudo",
          "└─TableReader(Probe) 9990.00 root  data:Selection",
          "  └─Selection 9990.00 cop[tikv]  not(isnull(test.t.a))",
          "    └─TableFullScan 10000.00 cop[tikv] table:t1 keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc format = 'brief' select * from tt where (tt.a > 1 and tt.a < 20) or (tt.a >= 30 and tt.a < 55)",
        "Plan": [
          "TableReader 44.00 root  data:TableRangeScan",
          "└─TableRangeScan 44.00 cop[tiflash] table:tt range:(1,20), [30,55), keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc format = 'brief' select /*+ read_from_storage(tiflash[tt]) */ * from tt where (tt.a > 1 and tt.a < 20) or (tt.a >= 30 and tt.a < 55)",
        "Plan": [
          "TableReader 44.00 root  data:TableRangeScan",
          "└─TableRangeScan 44.00 cop[tiflash] table:tt range:(1,20), [30,55), keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc format = 'brief' select * from ttt order by ttt.a desc",
        "Plan": [
          "TableReader 10000.00 root  data:TableFullScan",
          "└─TableFullScan 10000.00 cop[tikv] table:ttt keep order:true, desc, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc format = 'brief' select /*+ read_from_storage(tiflash[ttt]) */ * from ttt order by ttt.a desc",
        "Plan": [
          "Sort 10000.00 root  test.ttt.a:desc",
          "└─TableReader 10000.00 root  data:TableFullScan",
          "  └─TableFullScan 10000.00 cop[tiflash] table:ttt keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc format = 'brief' select /*+ read_from_storage(tiflash[ttt]) */ * from ttt order by ttt.a",
        "Plan": [
          "TableReader 10000.00 root  data:TableFullScan",
          "└─TableFullScan 10000.00 cop[tiflash] table:ttt keep order:true, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc format = 'brief' select /*+ read_from_storage(tikv[t, ttt]) */ * from ttt",
        "Plan": [
          "TableReader 10000.00 root  data:TableFullScan",
          "└─TableFullScan 10000.00 cop[tikv] table:ttt keep order:false, stats:pseudo"
        ],
        "Warn": [
          "[planner:1815]There are no matching table names for (t) in optimizer hint /*+ READ_FROM_STORAGE(tikv[t, ttt]) */. Maybe you can use the table alias name"
        ]
      },
      {
        "SQL": "desc format = 'brief' select /*+ read_from_storage(tiflash[t, ttt], tikv[tt]) */ * from ttt",
        "Plan": [
          "TableReader 10000.00 root  data:TableFullScan",
          "└─TableFullScan 10000.00 cop[tiflash] table:ttt keep order:false, stats:pseudo"
        ],
        "Warn": [
          "[planner:1815]There are no matching table names for (t, tt) in optimizer hint /*+ READ_FROM_STORAGE(tiflash[t, ttt], tikv[tt]) */. Maybe you can use the table alias name"
        ]
      }
    ]
  },
  {
    "Name": "TestReadFromStorageHintAndIsolationRead",
    "Cases": [
      {
        "SQL": "desc format = 'brief' select /*+ read_from_storage(tikv[t], tiflash[t]) */ avg(a) from t",
        "Plan": [
          "StreamAgg 1.00 root  funcs:avg(Column#7, Column#8)->Column#4",
          "└─IndexReader 1.00 root  index:StreamAgg",
          "  └─StreamAgg 1.00 cop[tikv]  funcs:count(test.t.a)->Column#7, funcs:sum(test.t.a)->Column#8",
          "    └─IndexFullScan 10000.00 cop[tikv] table:t, index:ia(a) keep order:false, stats:pseudo"
        ],
        "Warn": [
          "[planner:1815]Storage hints are conflict, you can only specify one storage type of table test.t"
        ]
      },
      {
        "SQL": "desc format = 'brief' select /*+ read_from_storage(tikv[t]) */ avg(a) from t",
        "Plan": [
          "StreamAgg 1.00 root  funcs:avg(Column#7, Column#8)->Column#4",
          "└─IndexReader 1.00 root  index:StreamAgg",
          "  └─StreamAgg 1.00 cop[tikv]  funcs:count(test.t.a)->Column#7, funcs:sum(test.t.a)->Column#8",
          "    └─IndexFullScan 10000.00 cop[tikv] table:t, index:ia(a) keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc format = 'brief' select /*+ read_from_storage(tiflash[t]) */ avg(a) from t",
        "Plan": [
          "StreamAgg 1.00 root  funcs:avg(Column#7, Column#8)->Column#4",
          "└─IndexReader 1.00 root  index:StreamAgg",
          "  └─StreamAgg 1.00 cop[tikv]  funcs:count(test.t.a)->Column#7, funcs:sum(test.t.a)->Column#8",
          "    └─IndexFullScan 10000.00 cop[tikv] table:t, index:ia(a) keep order:false, stats:pseudo"
        ],
        "Warn": [
          "[planner:1815]No available path for table test.t with the store type tiflash of the hint /*+ read_from_storage */, please check the status of the table replica and variable value of tidb_isolation_read_engines(map[0:{}])"
        ]
      }
    ]
  },
  {
    "Name": "TestIsolationReadDoNotFilterSystemDB",
    "Cases": [
      {
        "SQL": "desc format = 'brief' select * from metrics_schema.tidb_query_duration where time >= '2019-12-23 16:10:13' and time <= '2019-12-23 16:30:13'",
        "Plan": [
          "MemTableScan 10000.00 root table:tidb_query_duration PromQL:histogram_quantile(0.9, sum(rate(tidb_server_handle_query_duration_seconds_bucket{}[60s])) by (le,sql_type,instance)), start_time:2019-12-23 16:10:13, end_time:2019-12-23 16:30:13, step:1m0s"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from information_schema.tables",
        "Plan": [
          "MemTableScan 10000.00 root table:TABLES "
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from mysql.stats_meta",
        "Plan": [
          "TableReader 10000.00 root  data:TableFullScan",
          "└─TableFullScan 10000.00 cop[tikv] table:stats_meta keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestIsolationReadTiFlashNotChoosePointGet",
    "Cases": [
      {
        "SQL": "explain format = 'brief' select * from t where t.a = 1",
        "Result": [
          "TableReader 1.00 root  data:TableRangeScan",
          "└─TableRangeScan 1.00 cop[tiflash] table:t range:[1,1], keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain format = 'brief' select * from t where t.a in (1, 2)",
        "Result": [
          "TableReader 2.00 root  data:TableRangeScan",
          "└─TableRangeScan 2.00 cop[tiflash] table:t range:[1,1], [2,2], keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestIsolationReadTiFlashUseIndexHint",
    "Cases": [
      {
        "SQL": "explain format = 'brief' select * from t",
        "Plan": [
          "TableReader 10000.00 root  data:TableFullScan",
          "└─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "explain format = 'brief' select * from t use index();",
        "Plan": [
          "TableReader 10000.00 root  data:TableFullScan",
          "└─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "explain format = 'brief' select /*+ use_index(t, idx)*/ * from t",
        "Plan": [
          "TableReader 10000.00 root  data:TableFullScan",
          "└─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": [
          "TiDB doesn't support index in the isolation read engines(value: 'tiflash')"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ use_index(t)*/ * from t",
        "Plan": [
          "TableReader 10000.00 root  data:TableFullScan",
          "└─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      }
    ]
  },
  {
    "Name": "TestIssue20710",
    "Cases": [
      {
        "SQL": "explain format = 'brief' select /*+ inl_join(s) */ * from t join s on t.a=s.a and t.b = s.b",
        "Plan": [
          "IndexJoin 12475.01 root  inner join, inner:IndexLookUp, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.b, test.s.b)",
          "├─TableReader(Build) 9980.01 root  data:Selection",
          "│ └─Selection 9980.01 cop[tikv]  not(isnull(test.t.a)), not(isnull(test.t.b))",
          "│   └─TableFullScan 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp(Probe) 1.25 root  ",
          "  ├─Selection(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─Selection(Probe) 1.25 cop[tikv]  not(isnull(test.s.b))",
          "    └─TableRowIDScan 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ inl_join(s) */ * from t join s on t.a=s.a and t.b = s.a",
        "Plan": [
          "IndexJoin 12475.01 root  inner join, inner:IndexLookUp, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.b, test.s.a)",
          "├─TableReader(Build) 9980.01 root  data:Selection",
          "│ └─Selection 9980.01 cop[tikv]  not(isnull(test.t.a)), not(isnull(test.t.b))",
          "│   └─TableFullScan 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp(Probe) 1.25 root  ",
          "  ├─Selection(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─TableRowIDScan(Probe) 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ inl_join(s) */ * from t join s on t.a=s.a and t.a = s.b",
        "Plan": [
          "IndexJoin 12475.01 root  inner join, inner:IndexLookUp, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.a, test.s.b)",
          "├─TableReader(Build) 9990.00 root  data:Selection",
          "│ └─Selection 9990.00 cop[tikv]  not(isnull(test.t.a))",
          "│   └─TableFullScan 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp(Probe) 1.25 root  ",
          "  ├─Selection(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─Selection(Probe) 1.25 cop[tikv]  not(isnull(test.s.b))",
          "    └─TableRowIDScan 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ inl_hash_join(s) */ * from t join s on t.a=s.a and t.b = s.b",
        "Plan": [
          "IndexHashJoin 12475.01 root  inner join, inner:IndexLookUp, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.b, test.s.b)",
          "├─TableReader(Build) 9980.01 root  data:Selection",
          "│ └─Selection 9980.01 cop[tikv]  not(isnull(test.t.a)), not(isnull(test.t.b))",
          "│   └─TableFullScan 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp(Probe) 1.25 root  ",
          "  ├─Selection(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─Selection(Probe) 1.25 cop[tikv]  not(isnull(test.s.b))",
          "    └─TableRowIDScan 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ inl_hash_join(s) */ * from t join s on t.a=s.a and t.b = s.a",
        "Plan": [
          "IndexHashJoin 12475.01 root  inner join, inner:IndexLookUp, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.b, test.s.a)",
          "├─TableReader(Build) 9980.01 root  data:Selection",
          "│ └─Selection 9980.01 cop[tikv]  not(isnull(test.t.a)), not(isnull(test.t.b))",
          "│   └─TableFullScan 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp(Probe) 1.25 root  ",
          "  ├─Selection(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─TableRowIDScan(Probe) 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain format = 'brief' select /*+ inl_hash_join(s) */ * from t join s on t.a=s.a and t.a = s.b",
        "Plan": [
          "IndexHashJoin 12475.01 root  inner join, inner:IndexLookUp, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.a, test.s.b)",
          "├─TableReader(Build) 9990.00 root  data:Selection",
          "│ └─Selection 9990.00 cop[tikv]  not(isnull(test.t.a))",
          "│   └─TableFullScan 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp(Probe) 1.25 root  ",
          "  ├─Selection(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─Selection(Probe) 1.25 cop[tikv]  not(isnull(test.s.b))",
          "    └─TableRowIDScan 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestPushDownProjectionForTiFlash",
    "Cases": [
      {
        "SQL": "desc format = 'brief' select /*+ hash_agg()*/ count(b) from  (select id + 1 as b from t)A",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#7)->Column#5",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:count(Column#9)->Column#7",
          "    └─Projection 10000.00 batchCop[tiflash]  plus(test.t.id, 1)->Column#9",
          "      └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select /*+ hash_agg()*/ count(*) from  (select id + 1 as b from t)A",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#6)->Column#5",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#6",
          "    └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select /*+ hash_agg()*/ sum(b) from  (select id + 1 as b from t)A",
        "Plan": [
          "HashAgg 1.00 root  funcs:sum(Column#7)->Column#5",
          "└─TableReader 1.00 root  data:HashAgg",
          "  └─HashAgg 1.00 batchCop[tiflash]  funcs:sum(Column#9)->Column#7",
          "    └─Projection 10000.00 batchCop[tiflash]  cast(plus(test.t.id, 1), decimal(41,0) BINARY)->Column#9",
          "      └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select /*+ stream_agg()*/ count(b) from  (select id + 1 as b from t)A",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(Column#7)->Column#5",
          "└─TableReader 1.00 root  data:StreamAgg",
          "  └─StreamAgg 1.00 batchCop[tiflash]  funcs:count(Column#9)->Column#7",
          "    └─Projection 10000.00 batchCop[tiflash]  plus(test.t.id, 1)->Column#9",
          "      └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select /*+ stream_agg()*/ count(*) from  (select id + 1 as b from t)A",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(Column#6)->Column#5",
          "└─TableReader 1.00 root  data:StreamAgg",
          "  └─StreamAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#6",
          "    └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select /*+ stream_agg()*/ sum(b) from  (select id + 1 as b from t)A",
        "Plan": [
          "StreamAgg 1.00 root  funcs:sum(Column#7)->Column#5",
          "└─TableReader 1.00 root  data:StreamAgg",
          "  └─StreamAgg 1.00 batchCop[tiflash]  funcs:sum(Column#9)->Column#7",
          "    └─Projection 10000.00 batchCop[tiflash]  cast(plus(test.t.id, 1), decimal(41,0) BINARY)->Column#9",
          "      └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from (select id-2 as b from t) B join (select id-2 as b from t) A on A.b=B.b",
        "Plan": [
          "TableReader 10000.00 root  data:HashJoin",
          "└─HashJoin 10000.00 cop[tiflash]  inner join, equal:[eq(Column#4, Column#8)]",
          "  ├─Projection(Build) 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#4",
          "  │ └─Selection 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "  │   └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo, global read",
          "  └─Projection(Probe) 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#8",
          "    └─Selection 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "      └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from t join (select id-2 as b from t) A on A.b=t.id",
        "Plan": [
          "TableReader 10000.00 root  data:HashJoin",
          "└─HashJoin 10000.00 cop[tiflash]  inner join, equal:[eq(test.t.id, Column#7)]",
          "  ├─Projection(Build) 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#7",
          "  │ └─Selection 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "  │   └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo, global read",
          "  └─Selection(Probe) 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "    └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from t left join (select id-2 as b from t) A on A.b=t.id",
        "Plan": [
          "TableReader 10000.00 root  data:HashJoin",
          "└─HashJoin 10000.00 cop[tiflash]  left outer join, equal:[eq(test.t.id, Column#7)]",
          "  ├─Projection(Build) 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#7",
          "  │ └─Selection 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "  │   └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo, global read",
          "  └─TableFullScan(Probe) 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from t right join (select id-2 as b from t) A on A.b=t.id",
        "Plan": [
          "TableReader 12487.50 root  data:HashJoin",
          "└─HashJoin 12487.50 cop[tiflash]  right outer join, equal:[eq(test.t.id, Column#7)]",
          "  ├─Selection(Build) 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "  │ └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo, global read",
          "  └─Projection(Probe) 10000.00 cop[tiflash]  minus(test.t.id, 2)->Column#7",
          "    └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select A.b, B.b from (select id-2 as b from t) B join (select id-2 as b from t) A on A.b=B.b",
        "Plan": [
          "Projection 10000.00 root  Column#8, Column#4",
          "└─TableReader 10000.00 root  data:HashJoin",
          "  └─HashJoin 10000.00 cop[tiflash]  inner join, equal:[eq(Column#4, Column#8)]",
          "    ├─Projection(Build) 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#4",
          "    │ └─Selection 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "    │   └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo, global read",
          "    └─Projection(Probe) 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#8",
          "      └─Selection 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "        └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select A.id from t as A where exists (select 1 from t where t.id=A.id)",
        "Plan": [
          "TableReader 7992.00 root  data:HashJoin",
          "└─HashJoin 7992.00 cop[tiflash]  semi join, equal:[eq(test.t.id, test.t.id)]",
          "  ├─Selection(Build) 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "  │ └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo, global read",
          "  └─Selection(Probe) 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "    └─TableFullScan 10000.00 cop[tiflash] table:A keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select A.id from t as A where not exists  (select 1 from t where t.id=A.id)",
        "Plan": [
          "TableReader 8000.00 root  data:HashJoin",
          "└─HashJoin 8000.00 cop[tiflash]  anti semi join, equal:[eq(test.t.id, test.t.id)]",
          "  ├─TableFullScan(Build) 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo, global read",
          "  └─TableFullScan(Probe) 10000.00 cop[tiflash] table:A keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestPushDownProjectionForMPP",
    "Cases": [
      {
        "SQL": "desc format = 'brief' select /*+ hash_agg()*/ count(b) from  (select id + 1 as b from t)A",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#8)->Column#5",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(Column#9)->Column#8",
          "      └─Projection 10000.00 batchCop[tiflash]  plus(test.t.id, 1)->Column#9",
          "        └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select /*+ hash_agg()*/ count(*) from  (select id + 1 as b from t)A",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#7)->Column#5",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#7",
          "      └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select /*+ hash_agg()*/ sum(b) from  (select id + 1 as b from t)A",
        "Plan": [
          "HashAgg 1.00 root  funcs:sum(Column#8)->Column#5",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:sum(Column#9)->Column#8",
          "      └─Projection 10000.00 batchCop[tiflash]  cast(plus(test.t.id, 1), decimal(41,0) BINARY)->Column#9",
          "        └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select /*+ stream_agg()*/ count(b) from  (select id + 1 as b from t)A",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(Column#7)->Column#5",
          "└─TableReader 1.00 root  data:StreamAgg",
          "  └─StreamAgg 1.00 batchCop[tiflash]  funcs:count(Column#9)->Column#7",
          "    └─Projection 10000.00 batchCop[tiflash]  plus(test.t.id, 1)->Column#9",
          "      └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select /*+ stream_agg()*/ count(*) from  (select id + 1 as b from t)A",
        "Plan": [
          "StreamAgg 1.00 root  funcs:count(Column#6)->Column#5",
          "└─TableReader 1.00 root  data:StreamAgg",
          "  └─StreamAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#6",
          "    └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select /*+ stream_agg()*/ sum(b) from  (select id + 1 as b from t)A",
        "Plan": [
          "StreamAgg 1.00 root  funcs:sum(Column#7)->Column#5",
          "└─TableReader 1.00 root  data:StreamAgg",
          "  └─StreamAgg 1.00 batchCop[tiflash]  funcs:sum(Column#9)->Column#7",
          "    └─Projection 10000.00 batchCop[tiflash]  cast(plus(test.t.id, 1), decimal(41,0) BINARY)->Column#9",
          "      └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from (select id-2 as b from t) B join (select id-2 as b from t) A on A.b=B.b",
        "Plan": [
          "TableReader 10000.00 root  data:ExchangeSender",
          "└─ExchangeSender 10000.00 cop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin 10000.00 cop[tiflash]  inner join, equal:[eq(Column#4, Column#8)]",
          "    ├─ExchangeReceiver(Build) 8000.00 cop[tiflash]  ",
          "    │ └─ExchangeSender 8000.00 cop[tiflash]  ExchangeType: Broadcast",
          "    │   └─Projection 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#4",
          "    │     └─Selection 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "    │       └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─Projection(Probe) 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#8",
          "      └─Selection 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "        └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from t join (select id-2 as b from t) A on A.b=t.id",
        "Plan": [
          "TableReader 10000.00 root  data:ExchangeSender",
          "└─ExchangeSender 10000.00 cop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin 10000.00 cop[tiflash]  inner join, equal:[eq(test.t.id, Column#7)]",
          "    ├─ExchangeReceiver(Build) 8000.00 cop[tiflash]  ",
          "    │ └─ExchangeSender 8000.00 cop[tiflash]  ExchangeType: Broadcast",
          "    │   └─Projection 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#7",
          "    │     └─Selection 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "    │       └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─Selection(Probe) 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "      └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from t left join (select id-2 as b from t) A on A.b=t.id",
        "Plan": [
          "TableReader 10000.00 root  data:ExchangeSender",
          "└─ExchangeSender 10000.00 cop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin 10000.00 cop[tiflash]  left outer join, equal:[eq(test.t.id, Column#7)]",
          "    ├─ExchangeReceiver(Build) 8000.00 cop[tiflash]  ",
          "    │ └─ExchangeSender 8000.00 cop[tiflash]  ExchangeType: Broadcast",
          "    │   └─Projection 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#7",
          "    │     └─Selection 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "    │       └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─TableFullScan(Probe) 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from t right join (select id-2 as b from t) A on A.b=t.id",
        "Plan": [
          "TableReader 12487.50 root  data:ExchangeSender",
          "└─ExchangeSender 12487.50 cop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin 12487.50 cop[tiflash]  right outer join, equal:[eq(test.t.id, Column#7)]",
          "    ├─ExchangeReceiver(Build) 9990.00 cop[tiflash]  ",
          "    │ └─ExchangeSender 9990.00 cop[tiflash]  ExchangeType: Broadcast",
          "    │   └─Selection 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "    │     └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─Projection(Probe) 10000.00 cop[tiflash]  minus(test.t.id, 2)->Column#7",
          "      └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select A.b, B.b from (select id-2 as b from t) B join (select id-2 as b from t) A on A.b=B.b",
        "Plan": [
          "Projection 10000.00 root  Column#8, Column#4",
          "└─TableReader 10000.00 root  data:ExchangeSender",
          "  └─ExchangeSender 10000.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 10000.00 cop[tiflash]  inner join, equal:[eq(Column#4, Column#8)]",
          "      ├─ExchangeReceiver(Build) 8000.00 cop[tiflash]  ",
          "      │ └─ExchangeSender 8000.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Projection 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#4",
          "      │     └─Selection 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "      │       └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "      └─Projection(Probe) 8000.00 cop[tiflash]  minus(test.t.id, 2)->Column#8",
          "        └─Selection 8000.00 cop[tiflash]  not(isnull(minus(test.t.id, 2)))",
          "          └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select id from t as A where exists (select 1 from t where t.id=A.id)",
        "Plan": [
          "TableReader 7992.00 root  data:ExchangeSender",
          "└─ExchangeSender 7992.00 cop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin 7992.00 cop[tiflash]  semi join, equal:[eq(test.t.id, test.t.id)]",
          "    ├─ExchangeReceiver(Build) 9990.00 cop[tiflash]  ",
          "    │ └─ExchangeSender 9990.00 cop[tiflash]  ExchangeType: Broadcast",
          "    │   └─Selection 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "    │     └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─Selection(Probe) 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "      └─TableFullScan 10000.00 cop[tiflash] table:A keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select id from t as A where not exists (select 1 from t where t.id=A.id)",
        "Plan": [
          "TableReader 8000.00 root  data:ExchangeSender",
          "└─ExchangeSender 8000.00 cop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin 8000.00 cop[tiflash]  anti semi join, equal:[eq(test.t.id, test.t.id)]",
          "    ├─ExchangeReceiver(Build) 10000.00 cop[tiflash]  ",
          "    │ └─ExchangeSender 10000.00 cop[tiflash]  ExchangeType: Broadcast",
          "    │   └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─TableFullScan(Probe) 10000.00 cop[tiflash] table:A keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestMppJoinDecimal",
    "Cases": [
      {
        "SQL": "desc format = 'brief' select t1.c1, t1.c2, t2.c1, t2.c2, t2.c3 from t t1 join t t2 on t1.c1 + 1 = t2.c2 - 10 and t1.c1 * 3 = t2.c3 / 2",
        "Plan": [
          "Projection 12500.00 root  test.t.c1, test.t.c2, test.t.c1, test.t.c2, test.t.c3",
          "└─TableReader 12500.00 root  data:ExchangeSender",
          "  └─ExchangeSender 12500.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 12500.00 cop[tiflash]  inner join, equal:[eq(Column#21, Column#22) eq(Column#15, Column#16)]",
          "      ├─ExchangeReceiver(Build) 10000.00 cop[tiflash]  ",
          "      │ └─ExchangeSender 10000.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: Column#21, Column#15",
          "      │   └─Projection 10000.00 cop[tiflash]  test.t.c1, test.t.c2, Column#13, Column#15, cast(Column#13, decimal(34,8) BINARY)->Column#21",
          "      │     └─Projection 10000.00 cop[tiflash]  test.t.c1, test.t.c2, mul(test.t.c1, 3)->Column#13, plus(test.t.c1, 1)->Column#15",
          "      │       └─TableFullScan 10000.00 cop[tiflash] table:t1 keep order:false, stats:pseudo",
          "      └─ExchangeReceiver(Probe) 10000.00 cop[tiflash]  ",
          "        └─ExchangeSender 10000.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: Column#22, Column#16",
          "          └─Projection 10000.00 cop[tiflash]  test.t.c1, test.t.c2, test.t.c3, Column#14, Column#16, cast(Column#14, decimal(34,8) BINARY)->Column#22",
          "            └─Projection 10000.00 cop[tiflash]  test.t.c1, test.t.c2, test.t.c3, div(test.t.c3, 2)->Column#14, minus(test.t.c2, 10)->Column#16",
          "              └─TableFullScan 10000.00 cop[tiflash] table:t2 keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from (select c1, c2, c5, count(*) c from t group by c1, c2, c5) t1 join (select c1, c2, c3, count(*) c from t group by c1, c2, c3) t2 on t1.c1 = t2.c2 and t1.c2 = t2.c3 and t1.c5 = t2.c1",
        "Plan": [
          "Projection 7976.02 root  test.t.c1, test.t.c2, test.t.c5, Column#7, test.t.c1, test.t.c2, test.t.c3, Column#14",
          "└─TableReader 7976.02 root  data:ExchangeSender",
          "  └─ExchangeSender 7976.02 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 7976.02 batchCop[tiflash]  inner join, equal:[eq(test.t.c1, test.t.c2) eq(Column#31, Column#32) eq(test.t.c5, Column#33)]",
          "      ├─ExchangeReceiver(Build) 7976.02 batchCop[tiflash]  ",
          "      │ └─ExchangeSender 7976.02 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.c1, Column#31, test.t.c5",
          "      │   └─Projection 7976.02 batchCop[tiflash]  Column#7, test.t.c1, test.t.c2, test.t.c5, cast(test.t.c2, decimal(10,5))->Column#31",
          "      │     └─Projection 7976.02 batchCop[tiflash]  Column#7, test.t.c1, test.t.c2, test.t.c5",
          "      │       └─HashAgg 7976.02 batchCop[tiflash]  group by:test.t.c1, test.t.c2, test.t.c5, funcs:sum(Column#15)->Column#7, funcs:firstrow(test.t.c1)->test.t.c1, funcs:firstrow(test.t.c2)->test.t.c2, funcs:firstrow(test.t.c5)->test.t.c5",
          "      │         └─ExchangeReceiver 7976.02 batchCop[tiflash]  ",
          "      │           └─ExchangeSender 7976.02 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.c1, test.t.c2, test.t.c5",
          "      │             └─HashAgg 7976.02 batchCop[tiflash]  group by:test.t.c1, test.t.c2, test.t.c5, funcs:count(1)->Column#15",
          "      │               └─Selection 9970.03 batchCop[tiflash]  not(isnull(test.t.c1)), not(isnull(test.t.c2)), not(isnull(test.t.c5))",
          "      │                 └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo",
          "      └─ExchangeReceiver(Probe) 7984.01 batchCop[tiflash]  ",
          "        └─ExchangeSender 7984.01 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.c2, Column#32, Column#33",
          "          └─Projection 7984.01 batchCop[tiflash]  Column#14, test.t.c1, test.t.c2, test.t.c3, cast(test.t.c3, decimal(10,5))->Column#32, cast(test.t.c1, decimal(40,20))->Column#33",
          "            └─Projection 7984.01 batchCop[tiflash]  Column#14, test.t.c1, test.t.c2, test.t.c3",
          "              └─HashAgg 7984.01 batchCop[tiflash]  group by:test.t.c1, test.t.c2, test.t.c3, funcs:sum(Column#23)->Column#14, funcs:firstrow(test.t.c1)->test.t.c1, funcs:firstrow(test.t.c2)->test.t.c2, funcs:firstrow(test.t.c3)->test.t.c3",
          "                └─ExchangeReceiver 7984.01 batchCop[tiflash]  ",
          "                  └─ExchangeSender 7984.01 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.c2, test.t.c3, test.t.c1",
          "                    └─HashAgg 7984.01 batchCop[tiflash]  group by:test.t.c1, test.t.c2, test.t.c3, funcs:count(1)->Column#23",
          "                      └─Selection 9980.01 batchCop[tiflash]  not(isnull(test.t.c1)), not(isnull(test.t.c2))",
          "                        └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from t t1 join t t2 on t1.c1 = t2.c2 and t1.c2 = t2.c2 and t1.c3 = t2.c3 and t1.c4 = t2.c4 and t1.c5 = t2.c5",
        "Plan": [
          "TableReader 12462.54 root  data:ExchangeSender",
          "└─ExchangeSender 12462.54 cop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin 12462.54 cop[tiflash]  inner join, equal:[eq(test.t.c1, test.t.c2) eq(test.t.c2, test.t.c2) eq(test.t.c3, test.t.c3) eq(test.t.c4, test.t.c4) eq(test.t.c5, test.t.c5)]",
          "    ├─ExchangeReceiver(Build) 9970.03 cop[tiflash]  ",
          "    │ └─ExchangeSender 9970.03 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.c1, test.t.c2, test.t.c3, test.t.c4, test.t.c5",
          "    │   └─Selection 9970.03 cop[tiflash]  not(isnull(test.t.c1)), not(isnull(test.t.c2)), not(isnull(test.t.c5))",
          "    │     └─TableFullScan 10000.00 cop[tiflash] table:t1 keep order:false, stats:pseudo",
          "    └─ExchangeReceiver(Probe) 9980.01 cop[tiflash]  ",
          "      └─ExchangeSender 9980.01 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.c2, test.t.c2, test.t.c3, test.t.c4, test.t.c5",
          "        └─Selection 9980.01 cop[tiflash]  not(isnull(test.t.c2)), not(isnull(test.t.c5))",
          "          └─TableFullScan 10000.00 cop[tiflash] table:t2 keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from t t1 join t t2 on t1.c1 = t2.c2 and t1.c2 = t2.c3 and t1.c3 = t2.c1 and t1.c4 = t2.c3 and t1.c1 = t2.c5",
        "Plan": [
          "Projection 12462.54 root  test.t.c1, test.t.c2, test.t.c3, test.t.c4, test.t.c5, test.t.c1, test.t.c2, test.t.c3, test.t.c4, test.t.c5",
          "└─TableReader 12462.54 root  data:ExchangeSender",
          "  └─ExchangeSender 12462.54 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 12462.54 cop[tiflash]  inner join, equal:[eq(test.t.c2, test.t.c1) eq(Column#13, Column#14) eq(Column#15, Column#16) eq(test.t.c3, test.t.c4) eq(test.t.c5, Column#17)]",
          "      ├─ExchangeReceiver(Build) 9970.03 cop[tiflash]  ",
          "      │ └─ExchangeSender 9970.03 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.c2, Column#13, Column#15, test.t.c3, test.t.c5",
          "      │   └─Projection 9970.03 cop[tiflash]  test.t.c1, test.t.c2, test.t.c3, test.t.c4, test.t.c5, cast(test.t.c3, decimal(10,5))->Column#13, cast(test.t.c1, decimal(10,5))->Column#15",
          "      │     └─Selection 9970.03 cop[tiflash]  not(isnull(test.t.c1)), not(isnull(test.t.c2)), not(isnull(test.t.c5))",
          "      │       └─TableFullScan 10000.00 cop[tiflash] table:t2 keep order:false, stats:pseudo",
          "      └─ExchangeReceiver(Probe) 9980.01 cop[tiflash]  ",
          "        └─ExchangeSender 9980.01 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.c1, Column#14, Column#16, test.t.c4, Column#17",
          "          └─Projection 9980.01 cop[tiflash]  test.t.c1, test.t.c2, test.t.c3, test.t.c4, test.t.c5, cast(test.t.c2, decimal(10,5))->Column#14, cast(test.t.c3, decimal(10,5))->Column#16, cast(test.t.c1, decimal(40,20))->Column#17",
          "            └─Selection 9980.01 cop[tiflash]  not(isnull(test.t.c1)), not(isnull(test.t.c2))",
          "              └─TableFullScan 10000.00 cop[tiflash] table:t1 keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from t t1 join t t2 on t1.c1 + t1.c2 = t2.c2 / t2.c3",
        "Plan": [
          "Projection 12500.00 root  test.t.c1, test.t.c2, test.t.c3, test.t.c4, test.t.c5, test.t.c1, test.t.c2, test.t.c3, test.t.c4, test.t.c5",
          "└─TableReader 12500.00 root  data:ExchangeSender",
          "  └─ExchangeSender 12500.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 12500.00 cop[tiflash]  inner join, equal:[eq(Column#17, Column#14)]",
          "      ├─ExchangeReceiver(Build) 10000.00 cop[tiflash]  ",
          "      │ └─ExchangeSender 10000.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: Column#17",
          "      │   └─Projection 10000.00 cop[tiflash]  test.t.c1, test.t.c2, test.t.c3, test.t.c4, test.t.c5, Column#13, cast(Column#13, decimal(17,9) BINARY)->Column#17",
          "      │     └─Projection 10000.00 cop[tiflash]  test.t.c1, test.t.c2, test.t.c3, test.t.c4, test.t.c5, plus(test.t.c1, test.t.c2)->Column#13",
          "      │       └─TableFullScan 10000.00 cop[tiflash] table:t1 keep order:false, stats:pseudo",
          "      └─ExchangeReceiver(Probe) 10000.00 cop[tiflash]  ",
          "        └─ExchangeSender 10000.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: Column#14",
          "          └─Projection 10000.00 cop[tiflash]  test.t.c1, test.t.c2, test.t.c3, test.t.c4, test.t.c5, div(test.t.c2, test.t.c3)->Column#14",
          "            └─TableFullScan 10000.00 cop[tiflash] table:t2 keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from t t1 where exists (select * from t t2 where t1.c1 = t2.c2 and t1.c2 = t2.c3 and t1.c3 = t2.c1 and t1.c4 = t2.c3 and t1.c1 = t2.c5)",
        "Plan": [
          "Projection 7984.01 root  test.t.c1, test.t.c2, test.t.c3, test.t.c4, test.t.c5",
          "└─TableReader 7984.01 root  data:ExchangeSender",
          "  └─ExchangeSender 7984.01 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 7984.01 cop[tiflash]  semi join, equal:[eq(test.t.c1, test.t.c2) eq(Column#13, Column#14) eq(Column#15, Column#16) eq(test.t.c4, test.t.c3) eq(Column#17, test.t.c5)]",
          "      ├─ExchangeReceiver(Build) 9970.03 cop[tiflash]  ",
          "      │ └─ExchangeSender 9970.03 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.c2, Column#14, Column#16, test.t.c3, test.t.c5",
          "      │   └─Projection 9970.03 cop[tiflash]  test.t.c1, test.t.c2, test.t.c3, test.t.c5, cast(test.t.c3, decimal(10,5))->Column#14, cast(test.t.c1, decimal(10,5))->Column#16",
          "      │     └─Selection 9970.03 cop[tiflash]  not(isnull(test.t.c1)), not(isnull(test.t.c2)), not(isnull(test.t.c5))",
          "      │       └─TableFullScan 10000.00 cop[tiflash] table:t2 keep order:false, stats:pseudo",
          "      └─ExchangeReceiver(Probe) 9980.01 cop[tiflash]  ",
          "        └─ExchangeSender 9980.01 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.c1, Column#13, Column#15, test.t.c4, Column#17",
          "          └─Projection 9980.01 cop[tiflash]  test.t.c1, test.t.c2, test.t.c3, test.t.c4, test.t.c5, cast(test.t.c2, decimal(10,5))->Column#13, cast(test.t.c3, decimal(10,5))->Column#15, cast(test.t.c1, decimal(40,20))->Column#17",
          "            └─Selection 9980.01 cop[tiflash]  not(isnull(test.t.c1)), not(isnull(test.t.c2))",
          "              └─TableFullScan 10000.00 cop[tiflash] table:t1 keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from t t1 left join t t2 on t1.c1 = t2.c2 join t t3 on t2.c5 = t3.c3 right join t t4 on t3.c3 = t4.c4 ",
        "Plan": [
          "TableReader 19492.21 root  data:ExchangeSender",
          "└─ExchangeSender 19492.21 cop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin 19492.21 cop[tiflash]  right outer join, equal:[eq(test.t.c3, test.t.c4)]",
          "    ├─Projection(Build) 15593.77 cop[tiflash]  test.t.c1, test.t.c2, test.t.c3, test.t.c4, test.t.c5, test.t.c1, test.t.c2, test.t.c3, test.t.c4, test.t.c5, test.t.c1, test.t.c2, test.t.c3, test.t.c4, test.t.c5",
          "    │ └─HashJoin 15593.77 cop[tiflash]  inner join, equal:[eq(test.t.c5, Column#25)]",
          "    │   ├─ExchangeReceiver(Build) 10000.00 cop[tiflash]  ",
          "    │   │ └─ExchangeSender 10000.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: Column#25",
          "    │   │   └─Projection 10000.00 cop[tiflash]  test.t.c1, test.t.c2, test.t.c3, test.t.c4, test.t.c5, cast(test.t.c3, decimal(40,20))->Column#25",
          "    │   │     └─TableFullScan 10000.00 cop[tiflash] table:t3 keep order:false, stats:pseudo",
          "    │   └─ExchangeReceiver(Probe) 12475.01 cop[tiflash]  ",
          "    │     └─ExchangeSender 12475.01 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.c5",
          "    │       └─HashJoin 12475.01 cop[tiflash]  inner join, equal:[eq(test.t.c2, test.t.c1)]",
          "    │         ├─ExchangeReceiver(Build) 9980.01 cop[tiflash]  ",
          "    │         │ └─ExchangeSender 9980.01 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.c2",
          "    │         │   └─Selection 9980.01 cop[tiflash]  not(isnull(test.t.c2)), not(isnull(test.t.c5))",
          "    │         │     └─TableFullScan 10000.00 cop[tiflash] table:t2 keep order:false, stats:pseudo",
          "    │         └─ExchangeReceiver(Probe) 9990.00 cop[tiflash]  ",
          "    │           └─ExchangeSender 9990.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.c1",
          "    │             └─Selection 9990.00 cop[tiflash]  not(isnull(test.t.c1))",
          "    │               └─TableFullScan 10000.00 cop[tiflash] table:t1 keep order:false, stats:pseudo",
          "    └─ExchangeReceiver(Probe) 10000.00 cop[tiflash]  ",
          "      └─ExchangeSender 10000.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.c4",
          "        └─TableFullScan 10000.00 cop[tiflash] table:t4 keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestPushDownAggForMPP",
    "Cases": [
      {
        "SQL": "desc format = 'brief' select /*+ hash_agg()*/ count(b) from  (select id + 1 as b from t)A",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#8)->Column#5",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(Column#9)->Column#8",
          "      └─Projection 10000.00 batchCop[tiflash]  plus(test.t.id, 1)->Column#9",
          "        └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select /*+ hash_agg()*/ count(*) from  (select id+1 from t)A",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#7)->Column#5",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#7",
          "      └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select /*+ hash_agg()*/ sum(b) from  (select id + 1 as b from t)A",
        "Plan": [
          "HashAgg 1.00 root  funcs:sum(Column#8)->Column#5",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:sum(Column#9)->Column#8",
          "      └─Projection 10000.00 batchCop[tiflash]  cast(plus(test.t.id, 1), decimal(41,0) BINARY)->Column#9",
          "        └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select count(*) from t",
        "Plan": [
          "HashAgg 1.00 root  funcs:count(Column#6)->Column#4",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#6",
          "      └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select count(*), id from t group by id",
        "Plan": [
          "TableReader 8000.00 root  data:ExchangeSender",
          "└─ExchangeSender 8000.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "  └─Projection 8000.00 batchCop[tiflash]  Column#4, test.t.id",
          "    └─HashAgg 8000.00 batchCop[tiflash]  group by:test.t.id, funcs:sum(Column#7)->Column#4, funcs:firstrow(test.t.id)->test.t.id",
          "      └─ExchangeReceiver 8000.00 batchCop[tiflash]  ",
          "        └─ExchangeSender 8000.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "          └─HashAgg 8000.00 batchCop[tiflash]  group by:test.t.id, funcs:count(1)->Column#7",
          "            └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select count(*), id + 1 from t group by id + 1",
        "Plan": [
          "Projection 8000.00 root  Column#4, plus(test.t.id, 1)->Column#5",
          "└─TableReader 8000.00 root  data:ExchangeSender",
          "  └─ExchangeSender 8000.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─Projection 8000.00 batchCop[tiflash]  Column#4, test.t.id",
          "      └─HashAgg 8000.00 batchCop[tiflash]  group by:Column#10, funcs:sum(Column#11)->Column#4, funcs:firstrow(Column#12)->test.t.id",
          "        └─ExchangeReceiver 8000.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 8000.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: Column#10",
          "            └─HashAgg 8000.00 batchCop[tiflash]  group by:Column#17, funcs:count(1)->Column#11, funcs:firstrow(Column#16)->Column#12",
          "              └─Projection 10000.00 batchCop[tiflash]  test.t.id, plus(test.t.id, 1)->Column#17",
          "                └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from t join ( select count(*), id from t group by id) as A on A.id = t.id",
        "Plan": [
          "TableReader 9990.00 root  data:ExchangeSender",
          "└─ExchangeSender 9990.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin 9990.00 batchCop[tiflash]  inner join, equal:[eq(test.t.id, test.t.id)]",
          "    ├─Projection(Build) 7992.00 batchCop[tiflash]  Column#7, test.t.id",
          "    │ └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:sum(Column#8)->Column#7, funcs:firstrow(test.t.id)->test.t.id",
          "    │   └─ExchangeReceiver 7992.00 batchCop[tiflash]  ",
          "    │     └─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "    │       └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:count(1)->Column#8",
          "    │         └─Selection 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "    │           └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─ExchangeReceiver(Probe) 9990.00 batchCop[tiflash]  ",
          "      └─ExchangeSender 9990.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "        └─Selection 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "          └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from t join ( select /*+ hash_agg()*/  count(*) as a from t) as A on A.a = t.id",
        "Plan": [
          "HashJoin 1.25 root  inner join, equal:[eq(test.t.id, Column#7)]",
          "├─HashAgg(Build) 1.00 root  funcs:count(Column#11)->Column#7",
          "│ └─TableReader 1.00 root  data:ExchangeSender",
          "│   └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "│     └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#11",
          "│       └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo",
          "└─TableReader(Probe) 9990.00 root  data:Selection",
          "  └─Selection 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "    └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select avg(value) as b,id from t group by id",
        "Plan": [
          "TableReader 8000.00 root  data:ExchangeSender",
          "└─ExchangeSender 8000.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "  └─Projection 8000.00 batchCop[tiflash]  div(Column#4, cast(case(eq(Column#9, 0), 1, Column#9), decimal(20,0) BINARY))->Column#4, test.t.id",
          "    └─HashAgg 8000.00 batchCop[tiflash]  group by:test.t.id, funcs:sum(Column#10)->Column#9, funcs:sum(Column#11)->Column#4, funcs:firstrow(test.t.id)->test.t.id",
          "      └─ExchangeReceiver 8000.00 batchCop[tiflash]  ",
          "        └─ExchangeSender 8000.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "          └─HashAgg 8000.00 batchCop[tiflash]  group by:test.t.id, funcs:count(test.t.value)->Column#10, funcs:sum(test.t.value)->Column#11",
          "            └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select /*+hash_agg()*/ sum(b) from (select avg(value) as b, id from t group by id)A",
        "Plan": [
          "HashAgg 1.00 root  funcs:sum(Column#20)->Column#5",
          "└─TableReader 1.00 root  data:ExchangeSender",
          "  └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashAgg 1.00 batchCop[tiflash]  funcs:sum(Column#4)->Column#20",
          "      └─Projection 8000.00 batchCop[tiflash]  div(Column#4, cast(case(eq(Column#17, 0), 1, Column#17), decimal(20,0) BINARY))->Column#4",
          "        └─HashAgg 8000.00 batchCop[tiflash]  group by:test.t.id, funcs:sum(Column#18)->Column#17, funcs:sum(Column#19)->Column#4",
          "          └─ExchangeReceiver 8000.00 batchCop[tiflash]  ",
          "            └─ExchangeSender 8000.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "              └─HashAgg 8000.00 batchCop[tiflash]  group by:test.t.id, funcs:count(test.t.value)->Column#18, funcs:sum(test.t.value)->Column#19",
          "                └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select id from t group by id having avg(value)>0",
        "Plan": [
          "Projection 6400.00 root  test.t.id",
          "└─Selection 6400.00 root  gt(Column#4, 0)",
          "  └─TableReader 8000.00 root  data:ExchangeSender",
          "    └─ExchangeSender 8000.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "      └─Projection 8000.00 batchCop[tiflash]  div(Column#4, cast(case(eq(Column#10, 0), 1, Column#10), decimal(20,0) BINARY))->Column#4, test.t.id",
          "        └─HashAgg 8000.00 batchCop[tiflash]  group by:test.t.id, funcs:sum(Column#11)->Column#10, funcs:sum(Column#12)->Column#4, funcs:firstrow(test.t.id)->test.t.id",
          "          └─ExchangeReceiver 8000.00 batchCop[tiflash]  ",
          "            └─ExchangeSender 8000.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "              └─HashAgg 8000.00 batchCop[tiflash]  group by:test.t.id, funcs:count(test.t.value)->Column#11, funcs:sum(test.t.value)->Column#12",
          "                └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select avg(value),id from t group by id having avg(value)>0",
        "Plan": [
          "Selection 6400.00 root  gt(Column#4, 0)",
          "└─TableReader 8000.00 root  data:ExchangeSender",
          "  └─ExchangeSender 8000.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─Projection 8000.00 batchCop[tiflash]  div(Column#4, cast(case(eq(Column#11, 0), 1, Column#11), decimal(20,0) BINARY))->Column#4, test.t.id",
          "      └─HashAgg 8000.00 batchCop[tiflash]  group by:test.t.id, funcs:sum(Column#12)->Column#11, funcs:sum(Column#13)->Column#4, funcs:firstrow(test.t.id)->test.t.id",
          "        └─ExchangeReceiver 8000.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 8000.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "            └─HashAgg 8000.00 batchCop[tiflash]  group by:test.t.id, funcs:count(test.t.value)->Column#12, funcs:sum(test.t.value)->Column#13",
          "              └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select avg(value) +1,id from t group by id",
        "Plan": [
          "Projection 8000.00 root  plus(Column#4, 1)->Column#5, test.t.id",
          "└─TableReader 8000.00 root  data:ExchangeSender",
          "  └─ExchangeSender 8000.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─Projection 8000.00 batchCop[tiflash]  div(Column#4, cast(case(eq(Column#11, 0), 1, Column#11), decimal(20,0) BINARY))->Column#4, test.t.id",
          "      └─HashAgg 8000.00 batchCop[tiflash]  group by:test.t.id, funcs:sum(Column#12)->Column#11, funcs:sum(Column#13)->Column#4, funcs:firstrow(test.t.id)->test.t.id",
          "        └─ExchangeReceiver 8000.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 8000.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "            └─HashAgg 8000.00 batchCop[tiflash]  group by:test.t.id, funcs:count(test.t.value)->Column#12, funcs:sum(test.t.value)->Column#13",
          "              └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select sum(b) from (select t.id, t1.id as b from t join t t1 on t.id=t1.id)A group by id",
        "Plan": [
          "TableReader 7992.00 root  data:ExchangeSender",
          "└─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "  └─Projection 7992.00 batchCop[tiflash]  Column#7",
          "    └─HashAgg 7992.00 batchCop[tiflash]  group by:Column#11, funcs:sum(Column#10)->Column#7",
          "      └─Projection 12487.50 batchCop[tiflash]  cast(test.t.id, decimal(32,0) BINARY)->Column#10, test.t.id",
          "        └─HashJoin 12487.50 batchCop[tiflash]  inner join, equal:[eq(test.t.id, test.t.id)]",
          "          ├─ExchangeReceiver(Build) 9990.00 batchCop[tiflash]  ",
          "          │ └─ExchangeSender 9990.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "          │   └─Selection 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "          │     └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo",
          "          └─ExchangeReceiver(Probe) 9990.00 batchCop[tiflash]  ",
          "            └─ExchangeSender 9990.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "              └─Selection 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "                └─TableFullScan 10000.00 batchCop[tiflash] table:t1 keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from (select id from t group by id) C join (select sum(b),id from (select t.id, t1.id as b from t join (select id, count(*) as c from t group by id) t1 on t.id=t1.id)A group by id)B on C.id=b.id",
        "Plan": [
          "TableReader 7992.00 root  data:ExchangeSender",
          "└─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin 7992.00 batchCop[tiflash]  inner join, equal:[eq(test.t.id, test.t.id)]",
          "    ├─Projection(Build) 7992.00 batchCop[tiflash]  test.t.id",
          "    │ └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:firstrow(test.t.id)->test.t.id",
          "    │   └─ExchangeReceiver 9990.00 batchCop[tiflash]  ",
          "    │     └─ExchangeSender 9990.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "    │       └─Selection 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "    │         └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─Projection(Probe) 7992.00 batchCop[tiflash]  Column#11, test.t.id",
          "      └─HashAgg 7992.00 batchCop[tiflash]  group by:Column#32, funcs:sum(Column#30)->Column#11, funcs:firstrow(Column#31)->test.t.id",
          "        └─Projection 9990.00 batchCop[tiflash]  cast(test.t.id, decimal(32,0) BINARY)->Column#30, test.t.id, test.t.id",
          "          └─HashJoin 9990.00 batchCop[tiflash]  inner join, equal:[eq(test.t.id, test.t.id)]",
          "            ├─Projection(Build) 7992.00 batchCop[tiflash]  test.t.id",
          "            │ └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:firstrow(test.t.id)->test.t.id",
          "            │   └─ExchangeReceiver 9990.00 batchCop[tiflash]  ",
          "            │     └─ExchangeSender 9990.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "            │       └─Selection 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "            │         └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo",
          "            └─ExchangeReceiver(Probe) 9990.00 batchCop[tiflash]  ",
          "              └─ExchangeSender 9990.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "                └─Selection 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "                  └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select count(distinct value),id from t group by id",
        "Plan": [
          "TableReader 8000.00 root  data:ExchangeSender",
          "└─ExchangeSender 8000.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "  └─Projection 8000.00 batchCop[tiflash]  Column#4, test.t.id",
          "    └─HashAgg 8000.00 batchCop[tiflash]  group by:test.t.id, funcs:count(distinct test.t.value)->Column#4, funcs:firstrow(test.t.id)->test.t.id",
          "      └─ExchangeReceiver 8000.00 batchCop[tiflash]  ",
          "        └─ExchangeSender 8000.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "          └─HashAgg 8000.00 batchCop[tiflash]  group by:test.t.id, test.t.value, ",
          "            └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select count(distinct value),sum(distinct value),id from t group by id",
        "Plan": [
          "HashAgg 8000.00 root  group by:test.t.id, funcs:count(distinct test.t.value)->Column#4, funcs:sum(distinct test.t.value)->Column#5, funcs:firstrow(test.t.id)->test.t.id",
          "└─TableReader 10000.00 root  data:TableFullScan",
          "  └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from t join ( select count(distinct value), id from t group by id) as A on A.id = t.id",
        "Plan": [
          "TableReader 9990.00 root  data:ExchangeSender",
          "└─ExchangeSender 9990.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin 9990.00 batchCop[tiflash]  inner join, equal:[eq(test.t.id, test.t.id)]",
          "    ├─Projection(Build) 7992.00 batchCop[tiflash]  Column#7, test.t.id",
          "    │ └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:count(distinct test.t.value)->Column#7, funcs:firstrow(test.t.id)->test.t.id",
          "    │   └─ExchangeReceiver 7992.00 batchCop[tiflash]  ",
          "    │     └─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "    │       └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, test.t.value, ",
          "    │         └─Selection 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "    │           └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─ExchangeReceiver(Probe) 9990.00 batchCop[tiflash]  ",
          "      └─ExchangeSender 9990.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "        └─Selection 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "          └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from t join ( select count(1/value), id from t group by id) as A on A.id = t.id",
        "Plan": [
          "TableReader 9990.00 root  data:ExchangeSender",
          "└─ExchangeSender 9990.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin 9990.00 batchCop[tiflash]  inner join, equal:[eq(test.t.id, test.t.id)]",
          "    ├─Projection(Build) 7992.00 batchCop[tiflash]  Column#7, test.t.id",
          "    │ └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:sum(Column#8)->Column#7, funcs:firstrow(test.t.id)->test.t.id",
          "    │   └─ExchangeReceiver 7992.00 batchCop[tiflash]  ",
          "    │     └─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "    │       └─HashAgg 7992.00 batchCop[tiflash]  group by:Column#19, funcs:count(Column#18)->Column#8",
          "    │         └─Projection 9990.00 batchCop[tiflash]  div(1, test.t.value)->Column#18, test.t.id",
          "    │           └─Selection 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "    │             └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─ExchangeReceiver(Probe) 9990.00 batchCop[tiflash]  ",
          "      └─ExchangeSender 9990.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "        └─Selection 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "          └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select /*+hash_agg()*/ sum(id) from (select value, id from t where id > value group by id, value)A group by value /*the exchange should have only one partition column: test.t.value*/",
        "Plan": [
          "TableReader 6400.00 root  data:ExchangeSender",
          "└─ExchangeSender 6400.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "  └─Projection 6400.00 batchCop[tiflash]  Column#4",
          "    └─HashAgg 6400.00 batchCop[tiflash]  group by:Column#22, funcs:sum(Column#21)->Column#4",
          "      └─Projection 6400.00 batchCop[tiflash]  cast(test.t.id, decimal(32,0) BINARY)->Column#21, test.t.value",
          "        └─Projection 6400.00 batchCop[tiflash]  test.t.id, test.t.value",
          "          └─HashAgg 6400.00 batchCop[tiflash]  group by:test.t.id, test.t.value, funcs:firstrow(test.t.id)->test.t.id, funcs:firstrow(test.t.value)->test.t.value",
          "            └─ExchangeReceiver 8000.00 batchCop[tiflash]  ",
          "              └─ExchangeSender 8000.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.value",
          "                └─Selection 8000.00 batchCop[tiflash]  gt(cast(test.t.id, decimal(20,0) BINARY), test.t.value)",
          "                  └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select /*+hash_agg()*/ sum(B.value) from t as B where B.id+1 > (select count(*) from t where t.id= B.id and t.value=B.value) group by B.id /*the exchange should have only one partition column: test.t.id*/",
        "Plan": [
          "TableReader 6400.00 root  data:ExchangeSender",
          "└─ExchangeSender 6400.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "  └─Projection 6400.00 batchCop[tiflash]  Column#8",
          "    └─HashAgg 6400.00 batchCop[tiflash]  group by:test.t.id, funcs:sum(test.t.value)->Column#8",
          "      └─Selection 8000.00 batchCop[tiflash]  gt(plus(test.t.id, 1), ifnull(Column#7, 0))",
          "        └─HashJoin 10000.00 batchCop[tiflash]  left outer join, equal:[eq(test.t.id, test.t.id) eq(test.t.value, test.t.value)]",
          "          ├─Selection(Build) 6387.21 batchCop[tiflash]  gt(plus(test.t.id, 1), ifnull(Column#7, 0))",
          "          │ └─Projection 7984.01 batchCop[tiflash]  Column#7, test.t.id, test.t.value",
          "          │   └─HashAgg 7984.01 batchCop[tiflash]  group by:test.t.id, test.t.value, funcs:sum(Column#24)->Column#7, funcs:firstrow(test.t.id)->test.t.id, funcs:firstrow(test.t.value)->test.t.value",
          "          │     └─ExchangeReceiver 7984.01 batchCop[tiflash]  ",
          "          │       └─ExchangeSender 7984.01 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "          │         └─HashAgg 7984.01 batchCop[tiflash]  group by:test.t.id, test.t.value, funcs:count(1)->Column#24",
          "          │           └─Selection 9980.01 batchCop[tiflash]  not(isnull(test.t.id)), not(isnull(test.t.value))",
          "          │             └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo",
          "          └─ExchangeReceiver(Probe) 10000.00 batchCop[tiflash]  ",
          "            └─ExchangeSender 10000.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "              └─TableFullScan 10000.00 batchCop[tiflash] table:B keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestMppAggWithJoin",
    "Cases": [
      {
        "SQL": "desc format = 'brief' select * from t join ( select count(*), id from t group by id) as A on A.id = t.id",
        "Plan": [
          "TableReader 9990.00 root  data:ExchangeSender",
          "└─ExchangeSender 9990.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin 9990.00 batchCop[tiflash]  inner join, equal:[eq(test.t.id, test.t.id)]",
          "    ├─ExchangeReceiver(Build) 7992.00 batchCop[tiflash]  ",
          "    │ └─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: Broadcast",
          "    │   └─Projection 7992.00 batchCop[tiflash]  Column#7, test.t.id",
          "    │     └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:sum(Column#8)->Column#7, funcs:firstrow(test.t.id)->test.t.id",
          "    │       └─ExchangeReceiver 7992.00 batchCop[tiflash]  ",
          "    │         └─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "    │           └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:count(1)->Column#8",
          "    │             └─Selection 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "    │               └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─Selection(Probe) 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "      └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from t join ( select count(*)+id as v from t group by id) as A on A.v = t.id",
        "Plan": [
          "TableReader 8000.00 root  data:ExchangeSender",
          "└─ExchangeSender 8000.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin 8000.00 batchCop[tiflash]  inner join, equal:[eq(test.t.id, Column#8)]",
          "    ├─ExchangeReceiver(Build) 6400.00 batchCop[tiflash]  ",
          "    │ └─ExchangeSender 6400.00 batchCop[tiflash]  ExchangeType: Broadcast",
          "    │   └─Projection 6400.00 batchCop[tiflash]  plus(Column#7, test.t.id)->Column#8",
          "    │     └─Selection 6400.00 batchCop[tiflash]  not(isnull(plus(Column#7, test.t.id)))",
          "    │       └─Projection 8000.00 batchCop[tiflash]  Column#7, test.t.id",
          "    │         └─HashAgg 8000.00 batchCop[tiflash]  group by:test.t.id, funcs:sum(Column#11)->Column#7, funcs:firstrow(test.t.id)->test.t.id",
          "    │           └─ExchangeReceiver 8000.00 batchCop[tiflash]  ",
          "    │             └─ExchangeSender 8000.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "    │               └─HashAgg 8000.00 batchCop[tiflash]  group by:test.t.id, funcs:count(1)->Column#11",
          "    │                 └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─Selection(Probe) 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "      └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from t join ( select count(*) as v, id from t group by value,id having value+v <10) as A on A.id = t.id",
        "Plan": [
          "Projection 7992.00 root  test.t.id, test.t.value, Column#7, test.t.id",
          "└─TableReader 7992.00 root  data:ExchangeSender",
          "  └─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin 7992.00 batchCop[tiflash]  inner join, equal:[eq(test.t.id, test.t.id)]",
          "      ├─ExchangeReceiver(Build) 6393.60 batchCop[tiflash]  ",
          "      │ └─ExchangeSender 6393.60 batchCop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection 6393.60 batchCop[tiflash]  lt(plus(test.t.value, cast(Column#7, decimal(20,0) BINARY)), 10)",
          "      │     └─Projection 7992.00 batchCop[tiflash]  Column#7, test.t.id, test.t.value",
          "      │       └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, test.t.value, funcs:sum(Column#10)->Column#7, funcs:firstrow(test.t.id)->test.t.id, funcs:firstrow(test.t.value)->test.t.value",
          "      │         └─ExchangeReceiver 7992.00 batchCop[tiflash]  ",
          "      │           └─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.value, test.t.id",
          "      │             └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, test.t.value, funcs:count(1)->Column#10",
          "      │               └─Selection 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "      │                 └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo",
          "      └─Selection(Probe) 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "        └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from t join ( select /*+ hash_agg()*/  count(*) as a from t) as A on A.a = t.id",
        "Plan": [
          "HashJoin 1.25 root  inner join, equal:[eq(test.t.id, Column#7)]",
          "├─HashAgg(Build) 1.00 root  funcs:count(Column#10)->Column#7",
          "│ └─TableReader 1.00 root  data:ExchangeSender",
          "│   └─ExchangeSender 1.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "│     └─HashAgg 1.00 batchCop[tiflash]  funcs:count(1)->Column#10",
          "│       └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo",
          "└─TableReader(Probe) 9990.00 root  data:Selection",
          "  └─Selection 9990.00 cop[tiflash]  not(isnull(test.t.id))",
          "    └─TableFullScan 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select sum(b) from (select t.id, t1.id as b from t join t t1 on t.id=t1.id)A group by id",
        "Plan": [
          "TableReader 7992.00 root  data:ExchangeSender",
          "└─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "  └─Projection 7992.00 batchCop[tiflash]  Column#7",
          "    └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:sum(Column#8)->Column#7",
          "      └─ExchangeReceiver 7992.00 batchCop[tiflash]  ",
          "        └─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "          └─HashAgg 7992.00 batchCop[tiflash]  group by:Column#11, funcs:sum(Column#10)->Column#8",
          "            └─Projection 12487.50 batchCop[tiflash]  cast(test.t.id, decimal(32,0) BINARY)->Column#10, test.t.id",
          "              └─HashJoin 12487.50 batchCop[tiflash]  inner join, equal:[eq(test.t.id, test.t.id)]",
          "                ├─ExchangeReceiver(Build) 9990.00 batchCop[tiflash]  ",
          "                │ └─ExchangeSender 9990.00 batchCop[tiflash]  ExchangeType: Broadcast",
          "                │   └─Selection 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "                │     └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo",
          "                └─Selection(Probe) 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "                  └─TableFullScan 10000.00 batchCop[tiflash] table:t1 keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from (select id from t group by id) C join (select sum(value),id from t group by id)B on C.id=B.id",
        "Plan": [
          "TableReader 7992.00 root  data:ExchangeSender",
          "└─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin 7992.00 batchCop[tiflash]  inner join, equal:[eq(test.t.id, test.t.id)]",
          "    ├─ExchangeReceiver(Build) 7992.00 batchCop[tiflash]  ",
          "    │ └─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: Broadcast",
          "    │   └─Projection 7992.00 batchCop[tiflash]  test.t.id",
          "    │     └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:firstrow(test.t.id)->test.t.id",
          "    │       └─ExchangeReceiver 9990.00 batchCop[tiflash]  ",
          "    │         └─ExchangeSender 9990.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "    │           └─Selection 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "    │             └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─Projection(Probe) 7992.00 batchCop[tiflash]  Column#7, test.t.id",
          "      └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:sum(Column#9)->Column#7, funcs:firstrow(test.t.id)->test.t.id",
          "        └─ExchangeReceiver 7992.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "            └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:sum(test.t.value)->Column#9",
          "              └─Selection 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "                └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "desc format = 'brief' select * from (select id from t group by id) C join (select sum(b),id from (select t.id, t1.id as b from t join (select id, count(*) as c from t group by id) t1 on t.id=t1.id)A group by id)B on C.id=b.id",
        "Plan": [
          "TableReader 7992.00 root  data:ExchangeSender",
          "└─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: PassThrough",
          "  └─HashJoin 7992.00 batchCop[tiflash]  inner join, equal:[eq(test.t.id, test.t.id)]",
          "    ├─ExchangeReceiver(Build) 7992.00 batchCop[tiflash]  ",
          "    │ └─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: Broadcast",
          "    │   └─Projection 7992.00 batchCop[tiflash]  test.t.id",
          "    │     └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:firstrow(test.t.id)->test.t.id",
          "    │       └─ExchangeReceiver 9990.00 batchCop[tiflash]  ",
          "    │         └─ExchangeSender 9990.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "    │           └─Selection 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "    │             └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo",
          "    └─Projection(Probe) 7992.00 batchCop[tiflash]  Column#11, test.t.id",
          "      └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:sum(Column#14)->Column#11, funcs:firstrow(test.t.id)->test.t.id",
          "        └─ExchangeReceiver 7992.00 batchCop[tiflash]  ",
          "          └─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "            └─HashAgg 7992.00 batchCop[tiflash]  group by:Column#27, funcs:sum(Column#26)->Column#14",
          "              └─Projection 9990.00 batchCop[tiflash]  cast(test.t.id, decimal(32,0) BINARY)->Column#26, test.t.id",
          "                └─HashJoin 9990.00 batchCop[tiflash]  inner join, equal:[eq(test.t.id, test.t.id)]",
          "                  ├─ExchangeReceiver(Build) 7992.00 batchCop[tiflash]  ",
          "                  │ └─ExchangeSender 7992.00 batchCop[tiflash]  ExchangeType: Broadcast",
          "                  │   └─Projection 7992.00 batchCop[tiflash]  test.t.id",
          "                  │     └─HashAgg 7992.00 batchCop[tiflash]  group by:test.t.id, funcs:firstrow(test.t.id)->test.t.id",
          "                  │       └─ExchangeReceiver 9990.00 batchCop[tiflash]  ",
          "                  │         └─ExchangeSender 9990.00 batchCop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.t.id",
          "                  │           └─Selection 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "                  │             └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo",
          "                  └─Selection(Probe) 9990.00 batchCop[tiflash]  not(isnull(test.t.id))",
          "                    └─TableFullScan 10000.00 batchCop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      }
    ]
  }
]
