[
  {
    "Name": "TestSelPushDownTiFlash",
    "Cases": [
      {
        "SQL": "explain select * from t where t.a > 1 and t.b = \"flash\" or t.a + 3 * t.a = 5",
        "Plan": [
          "TableReader_7 8000.67 root  data:Selection_6",
          "└─Selection_6 8000.67 cop[tiflash]  or(and(gt(test.t.a, 1), eq(test.t.b, \"flash\")), eq(plus(test.t.a, mul(3, test.t.a)), 5))",
          "  └─TableFullScan_5 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain select * from t where cast(t.a as float) + 3 = 5.1",
        "Plan": [
          "Selection_7 10000.00 root  eq(plus(cast(test.t.a), 3), 5.1)",
          "└─TableReader_6 10000.00 root  data:TableFullScan_5",
          "  └─TableFullScan_5 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain select * from t where b > 'a' order by convert(b, unsigned) limit 2",
        "Plan": [
          "Projection_18 2.00 root  test.t.a, test.t.b",
          "└─TopN_8 2.00 root  Column#3, offset:0, count:2",
          "  └─Projection_19 2.00 root  test.t.a, test.t.b, cast(test.t.b, bigint(22) UNSIGNED BINARY)->Column#3",
          "    └─TableReader_14 2.00 root  data:TopN_13",
          "      └─TopN_13 2.00 cop[tiflash]  cast(test.t.b), offset:0, count:2",
          "        └─Selection_12 3333.33 cop[tiflash]  gt(test.t.b, \"a\")",
          "          └─TableFullScan_11 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain select * from t where b > 'a' order by b limit 2",
        "Plan": [
          "TopN_8 2.00 root  test.t.b, offset:0, count:2",
          "└─TableReader_17 2.00 root  data:TopN_16",
          "  └─TopN_16 2.00 cop[tiflash]  test.t.b, offset:0, count:2",
          "    └─Selection_15 3333.33 cop[tiflash]  gt(test.t.b, \"a\")",
          "      └─TableFullScan_14 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestMPPJoin",
    "Cases": [
      {
        "SQL": "explain select count(*) from fact_t, d1_t where fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "StreamAgg_10 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader_32 8.00 root  data:ExchangeSender_31",
          "  └─ExchangeSender_31 8.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin_28 8.00 cop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)]",
          "      ├─ExchangeReceiver_17(Build) 2.00 cop[tiflash]  ",
          "      │ └─ExchangeSender_16 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection_15 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │     └─TableFullScan_14 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─Selection_19(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan_18 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain select count(*) from fact_t, d1_t, d2_t, d3_t where fact_t.d1_k = d1_t.d1_k and fact_t.d2_k = d2_t.d2_k and fact_t.d3_k = d3_t.d3_k",
        "Plan": [
          "StreamAgg_17 1.00 root  funcs:count(1)->Column#17",
          "└─TableReader_65 8.00 root  data:ExchangeSender_64",
          "  └─ExchangeSender_64 8.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin_61 8.00 cop[tiflash]  inner join, equal:[eq(test.fact_t.d3_k, test.d3_t.d3_k)]",
          "      ├─ExchangeReceiver_36(Build) 2.00 cop[tiflash]  ",
          "      │ └─ExchangeSender_35 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection_34 2.00 cop[tiflash]  not(isnull(test.d3_t.d3_k))",
          "      │     └─TableFullScan_33 2.00 cop[tiflash] table:d3_t keep order:false",
          "      └─HashJoin_21(Probe) 8.00 cop[tiflash]  inner join, equal:[eq(test.fact_t.d2_k, test.d2_t.d2_k)]",
          "        ├─ExchangeReceiver_32(Build) 2.00 cop[tiflash]  ",
          "        │ └─ExchangeSender_31 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "        │   └─Selection_30 2.00 cop[tiflash]  not(isnull(test.d2_t.d2_k))",
          "        │     └─TableFullScan_29 2.00 cop[tiflash] table:d2_t keep order:false",
          "        └─HashJoin_22(Probe) 8.00 cop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)]",
          "          ├─ExchangeReceiver_26(Build) 2.00 cop[tiflash]  ",
          "          │ └─ExchangeSender_25 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "          │   └─Selection_24 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "          │     └─TableFullScan_23 2.00 cop[tiflash] table:d1_t keep order:false",
          "          └─Selection_28(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k)), not(isnull(test.fact_t.d2_k)), not(isnull(test.fact_t.d3_k))",
          "            └─TableFullScan_27 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain select count(*) from fact_t, d1_t where fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "StreamAgg_10 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader_32 8.00 root  data:ExchangeSender_31",
          "  └─ExchangeSender_31 8.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin_28 8.00 cop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)]",
          "      ├─ExchangeReceiver_17(Build) 2.00 cop[tiflash]  ",
          "      │ └─ExchangeSender_16 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection_15 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │     └─TableFullScan_14 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─Selection_19(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan_18 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain select count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "StreamAgg_8 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader_28 8.00 root  data:ExchangeSender_27",
          "  └─ExchangeSender_27 8.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin_24 8.00 cop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─ExchangeReceiver_16(Build) 2.00 cop[tiflash]  ",
          "      │ └─ExchangeSender_15 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection_14 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │     └─TableFullScan_13 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─TableFullScan_12(Probe) 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain select count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "StreamAgg_8 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader_28 8.00 root  data:ExchangeSender_27",
          "  └─ExchangeSender_27 8.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin_24 8.00 cop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─ExchangeReceiver_15(Build) 8.00 cop[tiflash]  ",
          "      │ └─ExchangeSender_14 8.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection_13 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "      │     └─TableFullScan_12 8.00 cop[tiflash] table:fact_t keep order:false",
          "      └─TableFullScan_16(Probe) 2.00 cop[tiflash] table:d1_t keep order:false"
        ]
      },
      {
        "SQL": "explain select count(*) from fact_t join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col1 > d1_t.value",
        "Plan": [
          "StreamAgg_9 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader_31 8.00 root  data:ExchangeSender_30",
          "  └─ExchangeSender_30 8.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin_27 8.00 cop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)], other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "      ├─ExchangeReceiver_16(Build) 2.00 cop[tiflash]  ",
          "      │ └─ExchangeSender_15 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection_14 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "      │     └─TableFullScan_13 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─Selection_18(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan_17 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain select count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col1 > 10",
        "Plan": [
          "StreamAgg_8 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader_28 8.00 root  data:ExchangeSender_27",
          "  └─ExchangeSender_27 8.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin_24 8.00 cop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], left cond:[gt(test.fact_t.col1, 10)]",
          "      ├─ExchangeReceiver_16(Build) 2.00 cop[tiflash]  ",
          "      │ └─ExchangeSender_15 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection_14 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │     └─TableFullScan_13 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─TableFullScan_12(Probe) 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain select count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col2 > 10 and fact_t.col1 > d1_t.value",
        "Plan": [
          "StreamAgg_8 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader_28 8.00 root  data:ExchangeSender_27",
          "  └─ExchangeSender_27 8.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin_24 8.00 cop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], left cond:[gt(test.fact_t.col2, 10)], other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "      ├─ExchangeReceiver_16(Build) 2.00 cop[tiflash]  ",
          "      │ └─ExchangeSender_15 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection_14 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "      │     └─TableFullScan_13 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─TableFullScan_12(Probe) 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain select count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k and d1_t.value > 10",
        "Plan": [
          "StreamAgg_8 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader_28 8.00 root  data:ExchangeSender_27",
          "  └─ExchangeSender_27 8.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin_24 8.00 cop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], right cond:gt(test.d1_t.value, 10)",
          "      ├─ExchangeReceiver_15(Build) 8.00 cop[tiflash]  ",
          "      │ └─ExchangeSender_14 8.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection_13 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "      │     └─TableFullScan_12 8.00 cop[tiflash] table:fact_t keep order:false",
          "      └─TableFullScan_16(Probe) 2.00 cop[tiflash] table:d1_t keep order:false"
        ]
      },
      {
        "SQL": "explain select count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k and d1_t.value > 10 and fact_t.col1 > d1_t.value",
        "Plan": [
          "StreamAgg_8 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader_28 8.00 root  data:ExchangeSender_27",
          "  └─ExchangeSender_27 8.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin_24 8.00 cop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], right cond:gt(test.d1_t.value, 10), other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "      ├─ExchangeReceiver_15(Build) 8.00 cop[tiflash]  ",
          "      │ └─ExchangeSender_14 8.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection_13 8.00 cop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "      │     └─TableFullScan_12 8.00 cop[tiflash] table:fact_t keep order:false",
          "      └─TableFullScan_16(Probe) 2.00 cop[tiflash] table:d1_t keep order:false"
        ]
      },
      {
        "SQL": "explain select count(*) from fact_t where exists (select 1 from d1_t where d1_k = fact_t.d1_k)",
        "Plan": [
          "StreamAgg_11 1.00 root  funcs:count(1)->Column#12",
          "└─TableReader_31 6.40 root  data:ExchangeSender_30",
          "  └─ExchangeSender_30 6.40 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin_28 6.40 cop[tiflash]  semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─ExchangeReceiver_19(Build) 2.00 cop[tiflash]  ",
          "      │ └─ExchangeSender_18 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection_17 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │     └─TableFullScan_16 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─Selection_15(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan_14 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain select count(*) from fact_t where exists (select 1 from d1_t where d1_k = fact_t.d1_k and value > fact_t.col1)",
        "Plan": [
          "StreamAgg_11 1.00 root  funcs:count(1)->Column#12",
          "└─TableReader_31 6.40 root  data:ExchangeSender_30",
          "  └─ExchangeSender_30 6.40 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin_28 6.40 cop[tiflash]  semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], other cond:gt(test.d1_t.value, test.fact_t.col1)",
          "      ├─ExchangeReceiver_19(Build) 2.00 cop[tiflash]  ",
          "      │ └─ExchangeSender_18 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─Selection_17 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "      │     └─TableFullScan_16 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─Selection_15(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan_14 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain select count(*) from fact_t where not exists (select 1 from d1_t where d1_k = fact_t.d1_k)",
        "Plan": [
          "StreamAgg_11 1.00 root  funcs:count(1)->Column#12",
          "└─TableReader_27 6.40 root  data:ExchangeSender_26",
          "  └─ExchangeSender_26 6.40 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin_24 6.40 cop[tiflash]  anti semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─ExchangeReceiver_17(Build) 2.00 cop[tiflash]  ",
          "      │ └─ExchangeSender_16 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─TableFullScan_15 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─TableFullScan_14(Probe) 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain select count(*) from fact_t where not exists (select 1 from d1_t where d1_k = fact_t.d1_k and value > fact_t.col1)",
        "Plan": [
          "StreamAgg_11 1.00 root  funcs:count(1)->Column#12",
          "└─TableReader_27 6.40 root  data:ExchangeSender_26",
          "  └─ExchangeSender_26 6.40 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin_24 6.40 cop[tiflash]  anti semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], other cond:gt(test.d1_t.value, test.fact_t.col1)",
          "      ├─ExchangeReceiver_17(Build) 2.00 cop[tiflash]  ",
          "      │ └─ExchangeSender_16 2.00 cop[tiflash]  ExchangeType: Broadcast",
          "      │   └─TableFullScan_15 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─TableFullScan_14(Probe) 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      }
    ]
  },
  {
    "Name": "TestMPPShuffledJoin",
    "Cases": [
      {
        "SQL": "explain select count(*) from fact_t, d1_t where fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg_9 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader_23 32.00 root  data:ExchangeSender_22",
          "  └─ExchangeSender_22 32.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin_11 32.00 cop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)]",
          "      ├─ExchangeReceiver_17(Build) 4.00 cop[tiflash]  ",
          "      │ └─ExchangeSender_16 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "      │   └─Selection_15 4.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │     └─TableFullScan_14 4.00 cop[tiflash] table:d1_t keep order:false",
          "      └─ExchangeReceiver_21(Probe) 16.00 cop[tiflash]  ",
          "        └─ExchangeSender_20 16.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "          └─Selection_19 16.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "            └─TableFullScan_18 16.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain select count(*) from fact_t, d1_t, d2_t, d3_t where fact_t.d1_k = d1_t.d1_k and fact_t.d2_k = d2_t.d2_k and fact_t.d3_k = d3_t.d3_k",
        "Plan": [
          "HashAgg_16 1.00 root  funcs:count(1)->Column#17",
          "└─TableReader_44 128.00 root  data:ExchangeSender_43",
          "  └─ExchangeSender_43 128.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin_18 128.00 cop[tiflash]  inner join, equal:[eq(test.fact_t.d3_k, test.d3_t.d3_k)]",
          "      ├─ExchangeReceiver_42(Build) 4.00 cop[tiflash]  ",
          "      │ └─ExchangeSender_41 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d3_t.d3_k",
          "      │   └─Selection_40 4.00 cop[tiflash]  not(isnull(test.d3_t.d3_k))",
          "      │     └─TableFullScan_39 4.00 cop[tiflash] table:d3_t keep order:false",
          "      └─ExchangeReceiver_38(Probe) 64.00 cop[tiflash]  ",
          "        └─ExchangeSender_37 64.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d3_k",
          "          └─HashJoin_21 64.00 cop[tiflash]  inner join, equal:[eq(test.fact_t.d2_k, test.d2_t.d2_k)]",
          "            ├─ExchangeReceiver_36(Build) 4.00 cop[tiflash]  ",
          "            │ └─ExchangeSender_35 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d2_t.d2_k",
          "            │   └─Selection_34 4.00 cop[tiflash]  not(isnull(test.d2_t.d2_k))",
          "            │     └─TableFullScan_33 4.00 cop[tiflash] table:d2_t keep order:false",
          "            └─ExchangeReceiver_32(Probe) 32.00 cop[tiflash]  ",
          "              └─ExchangeSender_31 32.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d2_k",
          "                └─HashJoin_22 32.00 cop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)]",
          "                  ├─ExchangeReceiver_26(Build) 4.00 cop[tiflash]  ",
          "                  │ └─ExchangeSender_25 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "                  │   └─Selection_24 4.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "                  │     └─TableFullScan_23 4.00 cop[tiflash] table:d1_t keep order:false",
          "                  └─ExchangeReceiver_30(Probe) 16.00 cop[tiflash]  ",
          "                    └─ExchangeSender_29 16.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "                      └─Selection_28 16.00 cop[tiflash]  not(isnull(test.fact_t.d1_k)), not(isnull(test.fact_t.d2_k)), not(isnull(test.fact_t.d3_k))",
          "                        └─TableFullScan_27 16.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain select count(*) from fact_t, d1_t where fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg_9 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader_23 32.00 root  data:ExchangeSender_22",
          "  └─ExchangeSender_22 32.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin_11 32.00 cop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)]",
          "      ├─ExchangeReceiver_17(Build) 4.00 cop[tiflash]  ",
          "      │ └─ExchangeSender_16 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "      │   └─Selection_15 4.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │     └─TableFullScan_14 4.00 cop[tiflash] table:d1_t keep order:false",
          "      └─ExchangeReceiver_21(Probe) 16.00 cop[tiflash]  ",
          "        └─ExchangeSender_20 16.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "          └─Selection_19 16.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "            └─TableFullScan_18 16.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain select count(*) from fact_t, d1_t, d2_t, d3_t where fact_t.d1_k = d1_t.d1_k and fact_t.d1_k = d2_t.value and fact_t.d1_k = d3_t.value",
        "Plan": [
          "HashAgg_16 1.00 root  funcs:count(1)->Column#17",
          "└─TableReader_42 128.00 root  data:ExchangeSender_41",
          "  └─ExchangeSender_41 128.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin_18 128.00 cop[tiflash]  inner join, equal:[eq(test.fact_t.d1_k, test.d3_t.value)]",
          "      ├─ExchangeReceiver_40(Build) 4.00 cop[tiflash]  ",
          "      │ └─ExchangeSender_39 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d3_t.value",
          "      │   └─Selection_38 4.00 cop[tiflash]  not(isnull(test.d3_t.value))",
          "      │     └─TableFullScan_37 4.00 cop[tiflash] table:d3_t keep order:false",
          "      └─HashJoin_21(Probe) 64.00 cop[tiflash]  inner join, equal:[eq(test.fact_t.d1_k, test.d2_t.value)]",
          "        ├─ExchangeReceiver_36(Build) 4.00 cop[tiflash]  ",
          "        │ └─ExchangeSender_35 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d2_t.value",
          "        │   └─Selection_34 4.00 cop[tiflash]  not(isnull(test.d2_t.value))",
          "        │     └─TableFullScan_33 4.00 cop[tiflash] table:d2_t keep order:false",
          "        └─HashJoin_23(Probe) 32.00 cop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)]",
          "          ├─ExchangeReceiver_28(Build) 4.00 cop[tiflash]  ",
          "          │ └─ExchangeSender_27 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "          │   └─Selection_26 4.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "          │     └─TableFullScan_25 4.00 cop[tiflash] table:d1_t keep order:false",
          "          └─ExchangeReceiver_32(Probe) 16.00 cop[tiflash]  ",
          "            └─ExchangeSender_31 16.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "              └─Selection_30 16.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "                └─TableFullScan_29 16.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain select count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg_7 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader_20 32.00 root  data:ExchangeSender_19",
          "  └─ExchangeSender_19 32.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin_9 32.00 cop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─ExchangeReceiver_18(Build) 4.00 cop[tiflash]  ",
          "      │ └─ExchangeSender_17 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "      │   └─Selection_16 4.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │     └─TableFullScan_15 4.00 cop[tiflash] table:d1_t keep order:false",
          "      └─ExchangeReceiver_14(Probe) 16.00 cop[tiflash]  ",
          "        └─ExchangeSender_13 16.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "          └─TableFullScan_12 16.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain select count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg_7 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader_20 32.00 root  data:ExchangeSender_19",
          "  └─ExchangeSender_19 32.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin_9 32.00 cop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─ExchangeReceiver_15(Build) 16.00 cop[tiflash]  ",
          "      │ └─ExchangeSender_14 16.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "      │   └─Selection_13 16.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "      │     └─TableFullScan_12 16.00 cop[tiflash] table:fact_t keep order:false",
          "      └─ExchangeReceiver_18(Probe) 4.00 cop[tiflash]  ",
          "        └─ExchangeSender_17 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "          └─TableFullScan_16 4.00 cop[tiflash] table:d1_t keep order:false"
        ]
      },
      {
        "SQL": "explain select count(*) from fact_t join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col1 > d1_t.value",
        "Plan": [
          "HashAgg_8 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader_22 32.00 root  data:ExchangeSender_21",
          "  └─ExchangeSender_21 32.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin_10 32.00 cop[tiflash]  inner join, equal:[eq(test.d1_t.d1_k, test.fact_t.d1_k)], other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "      ├─ExchangeReceiver_16(Build) 4.00 cop[tiflash]  ",
          "      │ └─ExchangeSender_15 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "      │   └─Selection_14 4.00 cop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "      │     └─TableFullScan_13 4.00 cop[tiflash] table:d1_t keep order:false",
          "      └─ExchangeReceiver_20(Probe) 16.00 cop[tiflash]  ",
          "        └─ExchangeSender_19 16.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "          └─Selection_18 16.00 cop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "            └─TableFullScan_17 16.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain select count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col1 > 10",
        "Plan": [
          "HashAgg_7 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader_20 32.00 root  data:ExchangeSender_19",
          "  └─ExchangeSender_19 32.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin_9 32.00 cop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], left cond:[gt(test.fact_t.col1, 10)]",
          "      ├─ExchangeReceiver_18(Build) 4.00 cop[tiflash]  ",
          "      │ └─ExchangeSender_17 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "      │   └─Selection_16 4.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │     └─TableFullScan_15 4.00 cop[tiflash] table:d1_t keep order:false",
          "      └─ExchangeReceiver_14(Probe) 16.00 cop[tiflash]  ",
          "        └─ExchangeSender_13 16.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "          └─TableFullScan_12 16.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain select count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col2 > 10 and fact_t.col1 > d1_t.value",
        "Plan": [
          "HashAgg_7 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader_20 32.00 root  data:ExchangeSender_19",
          "  └─ExchangeSender_19 32.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin_9 32.00 cop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], left cond:[gt(test.fact_t.col2, 10)], other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "      ├─ExchangeReceiver_18(Build) 4.00 cop[tiflash]  ",
          "      │ └─ExchangeSender_17 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "      │   └─Selection_16 4.00 cop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "      │     └─TableFullScan_15 4.00 cop[tiflash] table:d1_t keep order:false",
          "      └─ExchangeReceiver_14(Probe) 16.00 cop[tiflash]  ",
          "        └─ExchangeSender_13 16.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "          └─TableFullScan_12 16.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain select count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k and d1_t.value > 10",
        "Plan": [
          "HashAgg_7 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader_20 32.00 root  data:ExchangeSender_19",
          "  └─ExchangeSender_19 32.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin_9 32.00 cop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], right cond:gt(test.d1_t.value, 10)",
          "      ├─ExchangeReceiver_15(Build) 16.00 cop[tiflash]  ",
          "      │ └─ExchangeSender_14 16.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "      │   └─Selection_13 16.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "      │     └─TableFullScan_12 16.00 cop[tiflash] table:fact_t keep order:false",
          "      └─ExchangeReceiver_18(Probe) 4.00 cop[tiflash]  ",
          "        └─ExchangeSender_17 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "          └─TableFullScan_16 4.00 cop[tiflash] table:d1_t keep order:false"
        ]
      },
      {
        "SQL": "explain select count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k and d1_t.value > 10 and fact_t.col1 > d1_t.value",
        "Plan": [
          "HashAgg_7 1.00 root  funcs:count(1)->Column#11",
          "└─TableReader_20 32.00 root  data:ExchangeSender_19",
          "  └─ExchangeSender_19 32.00 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin_9 32.00 cop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], right cond:gt(test.d1_t.value, 10), other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "      ├─ExchangeReceiver_15(Build) 16.00 cop[tiflash]  ",
          "      │ └─ExchangeSender_14 16.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "      │   └─Selection_13 16.00 cop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "      │     └─TableFullScan_12 16.00 cop[tiflash] table:fact_t keep order:false",
          "      └─ExchangeReceiver_18(Probe) 4.00 cop[tiflash]  ",
          "        └─ExchangeSender_17 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "          └─TableFullScan_16 4.00 cop[tiflash] table:d1_t keep order:false"
        ]
      },
      {
        "SQL": "explain select count(*) from fact_t where exists (select 1 from d1_t where d1_k = fact_t.d1_k)",
        "Plan": [
          "StreamAgg_11 1.00 root  funcs:count(1)->Column#12",
          "└─TableReader_33 12.80 root  data:ExchangeSender_32",
          "  └─ExchangeSender_32 12.80 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin_30 12.80 cop[tiflash]  semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─ExchangeReceiver_21(Build) 4.00 cop[tiflash]  ",
          "      │ └─ExchangeSender_20 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "      │   └─Selection_19 4.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │     └─TableFullScan_18 4.00 cop[tiflash] table:d1_t keep order:false",
          "      └─ExchangeReceiver_17(Probe) 16.00 cop[tiflash]  ",
          "        └─ExchangeSender_16 16.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "          └─Selection_15 16.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "            └─TableFullScan_14 16.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain select count(*) from fact_t where exists (select 1 from d1_t where d1_k = fact_t.d1_k and value > fact_t.col1)",
        "Plan": [
          "StreamAgg_11 1.00 root  funcs:count(1)->Column#12",
          "└─TableReader_33 12.80 root  data:ExchangeSender_32",
          "  └─ExchangeSender_32 12.80 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin_30 12.80 cop[tiflash]  semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], other cond:gt(test.d1_t.value, test.fact_t.col1)",
          "      ├─ExchangeReceiver_21(Build) 4.00 cop[tiflash]  ",
          "      │ └─ExchangeSender_20 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "      │   └─Selection_19 4.00 cop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "      │     └─TableFullScan_18 4.00 cop[tiflash] table:d1_t keep order:false",
          "      └─ExchangeReceiver_17(Probe) 16.00 cop[tiflash]  ",
          "        └─ExchangeSender_16 16.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "          └─Selection_15 16.00 cop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "            └─TableFullScan_14 16.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain select count(*) from fact_t where not exists (select 1 from d1_t where d1_k = fact_t.d1_k)",
        "Plan": [
          "StreamAgg_11 1.00 root  funcs:count(1)->Column#12",
          "└─TableReader_29 12.80 root  data:ExchangeSender_28",
          "  └─ExchangeSender_28 12.80 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin_26 12.80 cop[tiflash]  anti semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─ExchangeReceiver_19(Build) 4.00 cop[tiflash]  ",
          "      │ └─ExchangeSender_18 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "      │   └─TableFullScan_17 4.00 cop[tiflash] table:d1_t keep order:false",
          "      └─ExchangeReceiver_16(Probe) 16.00 cop[tiflash]  ",
          "        └─ExchangeSender_15 16.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "          └─TableFullScan_14 16.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain select count(*) from fact_t where not exists (select 1 from d1_t where d1_k = fact_t.d1_k and value > fact_t.col1)",
        "Plan": [
          "StreamAgg_11 1.00 root  funcs:count(1)->Column#12",
          "└─TableReader_29 12.80 root  data:ExchangeSender_28",
          "  └─ExchangeSender_28 12.80 cop[tiflash]  ExchangeType: PassThrough",
          "    └─HashJoin_26 12.80 cop[tiflash]  anti semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], other cond:gt(test.d1_t.value, test.fact_t.col1)",
          "      ├─ExchangeReceiver_19(Build) 4.00 cop[tiflash]  ",
          "      │ └─ExchangeSender_18 4.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.d1_t.d1_k",
          "      │   └─TableFullScan_17 4.00 cop[tiflash] table:d1_t keep order:false",
          "      └─ExchangeReceiver_16(Probe) 16.00 cop[tiflash]  ",
          "        └─ExchangeSender_15 16.00 cop[tiflash]  ExchangeType: HashPartition, Hash Cols: test.fact_t.d1_k",
          "          └─TableFullScan_14 16.00 cop[tiflash] table:fact_t keep order:false"
        ]
      }
    ]
  },
  {
    "Name": "TestBroadcastJoin",
    "Cases": [
      {
        "SQL": "explain select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t, d1_t where fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg_20 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader_21 1.00 root  data:HashAgg_8",
          "  └─HashAgg_8 1.00 cop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin_11 8.00 cop[tiflash]  inner join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─Selection_19(Build) 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │ └─TableFullScan_18 2.00 cop[tiflash] table:d1_t keep order:false, global read",
          "      └─Selection_17(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan_16 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain select /*+ broadcast_join(fact_t,d1_t,d2_t,d3_t) */ count(*) from fact_t, d1_t, d2_t, d3_t where fact_t.d1_k = d1_t.d1_k and fact_t.d2_k = d2_t.d2_k and fact_t.d3_k = d3_t.d3_k",
        "Plan": [
          "HashAgg_40 1.00 root  funcs:count(Column#18)->Column#17",
          "└─TableReader_41 1.00 root  data:HashAgg_12",
          "  └─HashAgg_12 1.00 cop[tiflash]  funcs:count(1)->Column#18",
          "    └─HashJoin_15 8.00 cop[tiflash]  inner join, equal:[eq(test.fact_t.d3_k, test.d3_t.d3_k)]",
          "      ├─Selection_39(Build) 2.00 cop[tiflash]  not(isnull(test.d3_t.d3_k))",
          "      │ └─TableFullScan_38 2.00 cop[tiflash] table:d3_t keep order:false, global read",
          "      └─HashJoin_29(Probe) 8.00 cop[tiflash]  inner join, equal:[eq(test.fact_t.d2_k, test.d2_t.d2_k)]",
          "        ├─Selection_25(Build) 2.00 cop[tiflash]  not(isnull(test.d2_t.d2_k))",
          "        │ └─TableFullScan_24 2.00 cop[tiflash] table:d2_t keep order:false, global read",
          "        └─HashJoin_33(Probe) 8.00 cop[tiflash]  inner join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "          ├─Selection_23(Build) 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "          │ └─TableFullScan_22 2.00 cop[tiflash] table:d1_t keep order:false, global read",
          "          └─Selection_37(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k)), not(isnull(test.fact_t.d2_k)), not(isnull(test.fact_t.d3_k))",
          "            └─TableFullScan_36 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain select /*+ broadcast_join(fact_t,d1_t), broadcast_join_local(d1_t) */ count(*) from fact_t, d1_t where fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg_15 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader_16 1.00 root  data:HashAgg_8",
          "  └─HashAgg_8 1.00 cop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin_10 8.00 cop[tiflash]  inner join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─Selection_14(Build) 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │ └─TableFullScan_13 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─Selection_12(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan_11 8.00 cop[tiflash] table:fact_t keep order:false, global read"
        ]
      },
      {
        "SQL": "explain select /*+ broadcast_join(fact_t,d1_t,d2_t,d3_t), broadcast_join_local(d2_t) */ count(*) from fact_t, d1_t, d2_t, d3_t where fact_t.d1_k = d1_t.d1_k and fact_t.d2_k = d2_t.d2_k and fact_t.d3_k = d3_t.d3_k",
        "Plan": [
          "HashAgg_26 1.00 root  funcs:count(Column#18)->Column#17",
          "└─TableReader_27 1.00 root  data:HashAgg_12",
          "  └─HashAgg_12 1.00 cop[tiflash]  funcs:count(1)->Column#18",
          "    └─HashJoin_14 8.00 cop[tiflash]  inner join, equal:[eq(test.fact_t.d3_k, test.d3_t.d3_k)]",
          "      ├─Selection_25(Build) 2.00 cop[tiflash]  not(isnull(test.d3_t.d3_k))",
          "      │ └─TableFullScan_24 2.00 cop[tiflash] table:d3_t keep order:false, global read",
          "      └─HashJoin_15(Probe) 8.00 cop[tiflash]  inner join, equal:[eq(test.fact_t.d2_k, test.d2_t.d2_k)]",
          "        ├─Selection_23(Build) 2.00 cop[tiflash]  not(isnull(test.d2_t.d2_k))",
          "        │ └─TableFullScan_22 2.00 cop[tiflash] table:d2_t keep order:false",
          "        └─HashJoin_16(Probe) 8.00 cop[tiflash]  inner join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "          ├─Selection_21(Build) 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "          │ └─TableFullScan_20 2.00 cop[tiflash] table:d1_t keep order:false, global read",
          "          └─Selection_19(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k)), not(isnull(test.fact_t.d2_k)), not(isnull(test.fact_t.d3_k))",
          "            └─TableFullScan_18 8.00 cop[tiflash] table:fact_t keep order:false, global read"
        ]
      },
      {
        "SQL": "explain select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg_13 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader_14 1.00 root  data:HashAgg_7",
          "  └─HashAgg_7 1.00 cop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin_9 8.00 cop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─Selection_12(Build) 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │ └─TableFullScan_11 2.00 cop[tiflash] table:d1_t keep order:false, global read",
          "      └─TableFullScan_10(Probe) 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k",
        "Plan": [
          "HashAgg_13 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader_14 1.00 root  data:HashAgg_7",
          "  └─HashAgg_7 1.00 cop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin_9 8.00 cop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "      ├─TableFullScan_12(Build) 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─Selection_11(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan_10 8.00 cop[tiflash] table:fact_t keep order:false, global read"
        ]
      },
      {
        "SQL": "explain select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col1 > d1_t.value",
        "Plan": [
          "HashAgg_19 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader_20 1.00 root  data:HashAgg_7",
          "  └─HashAgg_7 1.00 cop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin_10 8.00 cop[tiflash]  inner join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "      ├─Selection_18(Build) 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "      │ └─TableFullScan_17 2.00 cop[tiflash] table:d1_t keep order:false, global read",
          "      └─Selection_16(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan_15 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col1 > 10",
        "Plan": [
          "HashAgg_13 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader_14 1.00 root  data:HashAgg_7",
          "  └─HashAgg_7 1.00 cop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin_9 8.00 cop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], left cond:[gt(test.fact_t.col1, 10)]",
          "      ├─Selection_12(Build) 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "      │ └─TableFullScan_11 2.00 cop[tiflash] table:d1_t keep order:false, global read",
          "      └─TableFullScan_10(Probe) 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t left join d1_t on fact_t.d1_k = d1_t.d1_k and fact_t.col2 > 10 and fact_t.col1 > d1_t.value",
        "Plan": [
          "HashAgg_13 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader_14 1.00 root  data:HashAgg_7",
          "  └─HashAgg_7 1.00 cop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin_9 8.00 cop[tiflash]  left outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], left cond:[gt(test.fact_t.col2, 10)], other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "      ├─Selection_12(Build) 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "      │ └─TableFullScan_11 2.00 cop[tiflash] table:d1_t keep order:false, global read",
          "      └─TableFullScan_10(Probe) 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k and d1_t.value > 10",
        "Plan": [
          "HashAgg_13 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader_14 1.00 root  data:HashAgg_7",
          "  └─HashAgg_7 1.00 cop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin_9 8.00 cop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], right cond:gt(test.d1_t.value, 10)",
          "      ├─TableFullScan_12(Build) 2.00 cop[tiflash] table:d1_t keep order:false",
          "      └─Selection_11(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan_10 8.00 cop[tiflash] table:fact_t keep order:false, global read"
        ]
      },
      {
        "SQL": "explain select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t right join d1_t on fact_t.d1_k = d1_t.d1_k and d1_t.value > 10 and fact_t.col1 > d1_t.value",
        "Plan": [
          "HashAgg_13 1.00 root  funcs:count(Column#12)->Column#11",
          "└─TableReader_14 1.00 root  data:HashAgg_7",
          "  └─HashAgg_7 1.00 cop[tiflash]  funcs:count(1)->Column#12",
          "    └─HashJoin_9 8.00 cop[tiflash]  right outer join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], right cond:gt(test.d1_t.value, 10), other cond:gt(test.fact_t.col1, test.d1_t.value)",
          "      ├─Selection_11(Build) 8.00 cop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "      │ └─TableFullScan_10 8.00 cop[tiflash] table:fact_t keep order:false, global read",
          "      └─TableFullScan_12(Probe) 2.00 cop[tiflash] table:d1_t keep order:false"
        ]
      },
      {
        "SQL": "explain select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t where exists (select 1 from d1_t where d1_k = fact_t.d1_k)",
        "Plan": [
          "HashAgg_10 1.00 root  funcs:count(1)->Column#12",
          "└─HashJoin_13 6.40 root  semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "  ├─TableReader_23(Build) 2.00 root  data:Selection_22",
          "  │ └─Selection_22 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k))",
          "  │   └─TableFullScan_21 2.00 cop[tiflash] table:d1_t keep order:false",
          "  └─TableReader_20(Probe) 8.00 root  data:Selection_19",
          "    └─Selection_19 8.00 cop[tiflash]  not(isnull(test.fact_t.d1_k))",
          "      └─TableFullScan_18 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t where exists (select 1 from d1_t where d1_k = fact_t.d1_k and value > fact_t.col1)",
        "Plan": [
          "HashAgg_24 1.00 root  funcs:count(Column#13)->Column#12",
          "└─TableReader_25 1.00 root  data:HashAgg_10",
          "  └─HashAgg_10 1.00 cop[tiflash]  funcs:count(1)->Column#13",
          "    └─HashJoin_12 6.40 cop[tiflash]  semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], other cond:gt(test.d1_t.value, test.fact_t.col1)",
          "      ├─Selection_17(Build) 2.00 cop[tiflash]  not(isnull(test.d1_t.d1_k)), not(isnull(test.d1_t.value))",
          "      │ └─TableFullScan_16 2.00 cop[tiflash] table:d1_t keep order:false, global read",
          "      └─Selection_15(Probe) 8.00 cop[tiflash]  not(isnull(test.fact_t.col1)), not(isnull(test.fact_t.d1_k))",
          "        └─TableFullScan_14 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t where not exists (select 1 from d1_t where d1_k = fact_t.d1_k)",
        "Plan": [
          "HashAgg_10 1.00 root  funcs:count(1)->Column#12",
          "└─HashJoin_13 6.40 root  anti semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)]",
          "  ├─TableReader_19(Build) 2.00 root  data:TableFullScan_18",
          "  │ └─TableFullScan_18 2.00 cop[tiflash] table:d1_t keep order:false",
          "  └─TableReader_17(Probe) 8.00 root  data:TableFullScan_16",
          "    └─TableFullScan_16 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      },
      {
        "SQL": "explain select /*+ broadcast_join(fact_t,d1_t) */ count(*) from fact_t where not exists (select 1 from d1_t where d1_k = fact_t.d1_k and value > fact_t.col1)",
        "Plan": [
          "HashAgg_20 1.00 root  funcs:count(Column#13)->Column#12",
          "└─TableReader_21 1.00 root  data:HashAgg_10",
          "  └─HashAgg_10 1.00 cop[tiflash]  funcs:count(1)->Column#13",
          "    └─HashJoin_12 6.40 cop[tiflash]  anti semi join, equal:[eq(test.fact_t.d1_k, test.d1_t.d1_k)], other cond:gt(test.d1_t.value, test.fact_t.col1)",
          "      ├─TableFullScan_15(Build) 2.00 cop[tiflash] table:d1_t keep order:false, global read",
          "      └─TableFullScan_14(Probe) 8.00 cop[tiflash] table:fact_t keep order:false"
        ]
      }
    ]
  },
  {
    "Name": "TestReadFromStorageHint",
    "Cases": [
      {
        "SQL": "desc select avg(a) from t",
        "Plan": [
          "StreamAgg_24 1.00 root  funcs:avg(Column#7, Column#8)->Column#4",
          "└─TableReader_25 1.00 root  data:StreamAgg_8",
          "  └─StreamAgg_8 1.00 cop[tiflash]  funcs:count(test.t.a)->Column#7, funcs:sum(test.t.a)->Column#8",
          "    └─TableFullScan_22 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[t]) */ avg(a) from t",
        "Plan": [
          "StreamAgg_16 1.00 root  funcs:avg(Column#7, Column#8)->Column#4",
          "└─TableReader_17 1.00 root  data:StreamAgg_8",
          "  └─StreamAgg_8 1.00 cop[tiflash]  funcs:count(test.t.a)->Column#7, funcs:sum(test.t.a)->Column#8",
          "    └─TableFullScan_15 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[t]) */ sum(a) from t",
        "Plan": [
          "StreamAgg_16 1.00 root  funcs:sum(Column#6)->Column#4",
          "└─TableReader_17 1.00 root  data:StreamAgg_8",
          "  └─StreamAgg_8 1.00 cop[tiflash]  funcs:sum(test.t.a)->Column#6",
          "    └─TableFullScan_15 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[t]) */ sum(a+1) from t",
        "Plan": [
          "StreamAgg_16 1.00 root  funcs:sum(Column#6)->Column#4",
          "└─TableReader_17 1.00 root  data:StreamAgg_8",
          "  └─StreamAgg_8 1.00 cop[tiflash]  funcs:sum(plus(test.t.a, 1))->Column#6",
          "    └─TableFullScan_15 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[t]) */ sum(isnull(a)) from t",
        "Plan": [
          "StreamAgg_16 1.00 root  funcs:sum(Column#6)->Column#4",
          "└─TableReader_17 1.00 root  data:StreamAgg_8",
          "  └─StreamAgg_8 1.00 cop[tiflash]  funcs:sum(isnull(test.t.a))->Column#6",
          "    └─TableFullScan_15 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ READ_FROM_STORAGE(TIKV[t1], TIKV[t2]) */ * from t t1, t t2 where t1.a = t2.a",
        "Plan": [
          "HashJoin_37 12487.50 root  inner join, equal:[eq(test.t.a, test.t.a)]",
          "├─TableReader_55(Build) 9990.00 root  data:Selection_54",
          "│ └─Selection_54 9990.00 cop[tikv]  not(isnull(test.t.a))",
          "│   └─TableFullScan_53 10000.00 cop[tikv] table:t2 keep order:false, stats:pseudo",
          "└─TableReader_49(Probe) 9990.00 root  data:Selection_48",
          "  └─Selection_48 9990.00 cop[tikv]  not(isnull(test.t.a))",
          "    └─TableFullScan_47 10000.00 cop[tikv] table:t1 keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ READ_FROM_STORAGE(TIKV[t1], TIFLASH[t2]) */ * from t t1, t t2 where t1.a = t2.a",
        "Plan": [
          "HashJoin_23 12487.50 root  inner join, equal:[eq(test.t.a, test.t.a)]",
          "├─TableReader_31(Build) 9990.00 root  data:Selection_30",
          "│ └─Selection_30 9990.00 cop[tiflash]  not(isnull(test.t.a))",
          "│   └─TableFullScan_29 10000.00 cop[tiflash] table:t2 keep order:false, stats:pseudo",
          "└─TableReader_34(Probe) 9990.00 root  data:Selection_33",
          "  └─Selection_33 9990.00 cop[tikv]  not(isnull(test.t.a))",
          "    └─TableFullScan_32 10000.00 cop[tikv] table:t1 keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select * from tt where (tt.a > 1 and tt.a < 20) or (tt.a >= 30 and tt.a < 55)",
        "Plan": [
          "TableReader_8 44.00 root  data:TableRangeScan_7",
          "└─TableRangeScan_7 44.00 cop[tiflash] table:tt range:(1,20), [30,55), keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[tt]) */ * from tt where (tt.a > 1 and tt.a < 20) or (tt.a >= 30 and tt.a < 55)",
        "Plan": [
          "TableReader_6 44.00 root  data:TableRangeScan_5",
          "└─TableRangeScan_5 44.00 cop[tiflash] table:tt range:(1,20), [30,55), keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select * from ttt order by ttt.a desc",
        "Plan": [
          "TableReader_13 10000.00 root  data:TableFullScan_12",
          "└─TableFullScan_12 10000.00 cop[tikv] table:ttt keep order:true, desc, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[ttt]) */ * from ttt order by ttt.a desc",
        "Plan": [
          "Sort_4 10000.00 root  test.ttt.a:desc",
          "└─TableReader_8 10000.00 root  data:TableFullScan_7",
          "  └─TableFullScan_7 10000.00 cop[tiflash] table:ttt keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[ttt]) */ * from ttt order by ttt.a",
        "Plan": [
          "TableReader_11 10000.00 root  data:TableFullScan_10",
          "└─TableFullScan_10 10000.00 cop[tiflash] table:ttt keep order:true, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tikv[t, ttt]) */ * from ttt",
        "Plan": [
          "TableReader_5 10000.00 root  data:TableFullScan_4",
          "└─TableFullScan_4 10000.00 cop[tikv] table:ttt keep order:false, stats:pseudo"
        ],
        "Warn": [
          "[planner:1815]There are no matching table names for (t) in optimizer hint /*+ READ_FROM_STORAGE(tikv[t, ttt]) */. Maybe you can use the table alias name"
        ]
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[t, ttt], tikv[tt]) */ * from ttt",
        "Plan": [
          "TableReader_5 10000.00 root  data:TableFullScan_4",
          "└─TableFullScan_4 10000.00 cop[tiflash] table:ttt keep order:false, stats:pseudo"
        ],
        "Warn": [
          "[planner:1815]There are no matching table names for (t, tt) in optimizer hint /*+ READ_FROM_STORAGE(tiflash[t, ttt], tikv[tt]) */. Maybe you can use the table alias name"
        ]
      }
    ]
  },
  {
    "Name": "TestReadFromStorageHintAndIsolationRead",
    "Cases": [
      {
        "SQL": "desc select /*+ read_from_storage(tikv[t], tiflash[t]) */ avg(a) from t",
        "Plan": [
          "StreamAgg_20 1.00 root  funcs:avg(Column#7, Column#8)->Column#4",
          "└─IndexReader_21 1.00 root  index:StreamAgg_8",
          "  └─StreamAgg_8 1.00 cop[tikv]  funcs:count(test.t.a)->Column#7, funcs:sum(test.t.a)->Column#8",
          "    └─IndexFullScan_19 10000.00 cop[tikv] table:t, index:ia(a) keep order:false, stats:pseudo"
        ],
        "Warn": [
          "[planner:1815]Storage hints are conflict, you can only specify one storage type of table test.t"
        ]
      },
      {
        "SQL": "desc select /*+ read_from_storage(tikv[t]) */ avg(a) from t",
        "Plan": [
          "StreamAgg_20 1.00 root  funcs:avg(Column#7, Column#8)->Column#4",
          "└─IndexReader_21 1.00 root  index:StreamAgg_8",
          "  └─StreamAgg_8 1.00 cop[tikv]  funcs:count(test.t.a)->Column#7, funcs:sum(test.t.a)->Column#8",
          "    └─IndexFullScan_19 10000.00 cop[tikv] table:t, index:ia(a) keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "desc select /*+ read_from_storage(tiflash[t]) */ avg(a) from t",
        "Plan": [
          "StreamAgg_20 1.00 root  funcs:avg(Column#7, Column#8)->Column#4",
          "└─IndexReader_21 1.00 root  index:StreamAgg_8",
          "  └─StreamAgg_8 1.00 cop[tikv]  funcs:count(test.t.a)->Column#7, funcs:sum(test.t.a)->Column#8",
          "    └─IndexFullScan_19 10000.00 cop[tikv] table:t, index:ia(a) keep order:false, stats:pseudo"
        ],
        "Warn": [
          "[planner:1815]No available path for table test.t with the store type tiflash of the hint /*+ read_from_storage */, please check the status of the table replica and variable value of tidb_isolation_read_engines(map[0:{}])"
        ]
      }
    ]
  },
  {
    "Name": "TestIsolationReadDoNotFilterSystemDB",
    "Cases": [
      {
        "SQL": "desc select * from metrics_schema.tidb_query_duration where time >= '2019-12-23 16:10:13' and time <= '2019-12-23 16:30:13'",
        "Plan": [
          "MemTableScan_5 10000.00 root table:tidb_query_duration PromQL:histogram_quantile(0.9, sum(rate(tidb_server_handle_query_duration_seconds_bucket{}[60s])) by (le,sql_type,instance)), start_time:2019-12-23 16:10:13, end_time:2019-12-23 16:30:13, step:1m0s"
        ]
      },
      {
        "SQL": "desc select * from information_schema.tables",
        "Plan": [
          "MemTableScan_4 10000.00 root table:TABLES "
        ]
      },
      {
        "SQL": "desc select * from mysql.stats_meta",
        "Plan": [
          "TableReader_5 10000.00 root  data:TableFullScan_4",
          "└─TableFullScan_4 10000.00 cop[tikv] table:stats_meta keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestIsolationReadTiFlashNotChoosePointGet",
    "Cases": [
      {
        "SQL": "explain select * from t where t.a = 1",
        "Result": [
          "TableReader_6 1.00 root  data:TableRangeScan_5",
          "└─TableRangeScan_5 1.00 cop[tiflash] table:t range:[1,1], keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain select * from t where t.a in (1, 2)",
        "Result": [
          "TableReader_6 2.00 root  data:TableRangeScan_5",
          "└─TableRangeScan_5 2.00 cop[tiflash] table:t range:[1,1], [2,2], keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestIsolationReadTiFlashUseIndexHint",
    "Cases": [
      {
        "SQL": "explain select * from t",
        "Plan": [
          "TableReader_5 10000.00 root  data:TableFullScan_4",
          "└─TableFullScan_4 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "explain select * from t use index();",
        "Plan": [
          "TableReader_5 10000.00 root  data:TableFullScan_4",
          "└─TableFullScan_4 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      },
      {
        "SQL": "explain select /*+ use_index(t, idx)*/ * from t",
        "Plan": [
          "TableReader_5 10000.00 root  data:TableFullScan_4",
          "└─TableFullScan_4 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": [
          "TiDB doesn't support index in the isolation read engines(value: 'tiflash')"
        ]
      },
      {
        "SQL": "explain select /*+ use_index(t)*/ * from t",
        "Plan": [
          "TableReader_5 10000.00 root  data:TableFullScan_4",
          "└─TableFullScan_4 10000.00 cop[tiflash] table:t keep order:false, stats:pseudo"
        ],
        "Warn": null
      }
    ]
  },
  {
    "Name": "TestIssue20710",
    "Cases": [
      {
        "SQL": "explain select /*+ inl_join(s) */ * from t join s on t.a=s.a and t.b = s.b",
        "Plan": [
          "IndexJoin_11 12475.01 root  inner join, inner:IndexLookUp_10, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.b, test.s.b)",
          "├─TableReader_23(Build) 9980.01 root  data:Selection_22",
          "│ └─Selection_22 9980.01 cop[tikv]  not(isnull(test.t.a)), not(isnull(test.t.b))",
          "│   └─TableFullScan_21 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp_10(Probe) 1.25 root  ",
          "  ├─Selection_8(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan_6 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─Selection_9(Probe) 1.25 cop[tikv]  not(isnull(test.s.b))",
          "    └─TableRowIDScan_7 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain select /*+ inl_join(s) */ * from t join s on t.a=s.a and t.b = s.a",
        "Plan": [
          "IndexJoin_10 12475.01 root  inner join, inner:IndexLookUp_9, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.b, test.s.a)",
          "├─TableReader_21(Build) 9980.01 root  data:Selection_20",
          "│ └─Selection_20 9980.01 cop[tikv]  not(isnull(test.t.a)), not(isnull(test.t.b))",
          "│   └─TableFullScan_19 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp_9(Probe) 1.25 root  ",
          "  ├─Selection_8(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan_6 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─TableRowIDScan_7(Probe) 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain select /*+ inl_join(s) */ * from t join s on t.a=s.a and t.a = s.b",
        "Plan": [
          "IndexJoin_11 12475.01 root  inner join, inner:IndexLookUp_10, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.a, test.s.b)",
          "├─TableReader_23(Build) 9990.00 root  data:Selection_22",
          "│ └─Selection_22 9990.00 cop[tikv]  not(isnull(test.t.a))",
          "│   └─TableFullScan_21 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp_10(Probe) 1.25 root  ",
          "  ├─Selection_8(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan_6 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─Selection_9(Probe) 1.25 cop[tikv]  not(isnull(test.s.b))",
          "    └─TableRowIDScan_7 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain select /*+ inl_hash_join(s) */ * from t join s on t.a=s.a and t.b = s.b",
        "Plan": [
          "IndexHashJoin_13 12475.01 root  inner join, inner:IndexLookUp_10, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.b, test.s.b)",
          "├─TableReader_23(Build) 9980.01 root  data:Selection_22",
          "│ └─Selection_22 9980.01 cop[tikv]  not(isnull(test.t.a)), not(isnull(test.t.b))",
          "│   └─TableFullScan_21 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp_10(Probe) 1.25 root  ",
          "  ├─Selection_8(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan_6 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─Selection_9(Probe) 1.25 cop[tikv]  not(isnull(test.s.b))",
          "    └─TableRowIDScan_7 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain select /*+ inl_hash_join(s) */ * from t join s on t.a=s.a and t.b = s.a",
        "Plan": [
          "IndexHashJoin_12 12475.01 root  inner join, inner:IndexLookUp_9, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.b, test.s.a)",
          "├─TableReader_21(Build) 9980.01 root  data:Selection_20",
          "│ └─Selection_20 9980.01 cop[tikv]  not(isnull(test.t.a)), not(isnull(test.t.b))",
          "│   └─TableFullScan_19 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp_9(Probe) 1.25 root  ",
          "  ├─Selection_8(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan_6 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─TableRowIDScan_7(Probe) 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain select /*+ inl_hash_join(s) */ * from t join s on t.a=s.a and t.a = s.b",
        "Plan": [
          "IndexHashJoin_13 12475.01 root  inner join, inner:IndexLookUp_10, outer key:test.t.a, inner key:test.s.a, equal cond:eq(test.t.a, test.s.a), eq(test.t.a, test.s.b)",
          "├─TableReader_23(Build) 9990.00 root  data:Selection_22",
          "│ └─Selection_22 9990.00 cop[tikv]  not(isnull(test.t.a))",
          "│   └─TableFullScan_21 10000.00 cop[tikv] table:t keep order:false, stats:pseudo",
          "└─IndexLookUp_10(Probe) 1.25 root  ",
          "  ├─Selection_8(Build) 1.25 cop[tikv]  not(isnull(test.s.a))",
          "  │ └─IndexRangeScan_6 1.25 cop[tikv] table:s, index:a(a) range: decided by [eq(test.s.a, test.t.a)], keep order:false, stats:pseudo",
          "  └─Selection_9(Probe) 1.25 cop[tikv]  not(isnull(test.s.b))",
          "    └─TableRowIDScan_7 1.25 cop[tikv] table:s keep order:false, stats:pseudo"
        ]
      }
    ]
  }
]
