[
  {
    "Name": "TestIsFromUnixtimeNullRejective",
    "Cases": [
      {
        "SQL": "explain select * from t t1 left join t t2 on t1.a=t2.a where from_unixtime(t2.b);",
        "Plan": [
          "HashLeftJoin_8 9990.00 root inner join, inner:Selection_13, equal:[eq(test.t1.a, test.t2.a)]",
          "├─TableReader_12 9990.00 root data:Selection_11",
          "│ └─Selection_11 9990.00 cop[tikv] not(isnull(test.t1.a))",
          "│   └─TableScan_10 10000.00 cop[tikv] table:t1, range:[-inf,+inf], keep order:false, stats:pseudo",
          "└─Selection_13 7992.00 root from_unixtime(cast(test.t2.b))",
          "  └─TableReader_16 9990.00 root data:Selection_15",
          "    └─Selection_15 9990.00 cop[tikv] not(isnull(test.t2.a))",
          "      └─TableScan_14 10000.00 cop[tikv] table:t2, range:[-inf,+inf], keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestSimplifyOuterJoinWithCast",
    "Cases": [
      {
        "SQL": "explain select * from t t1 left join t t2 on t1.a = t2.a where cast(t1.b as date) >= '2019-01-01'",
        "Plan": [
          "HashLeftJoin_8 10000.00 root left outer join, inner:TableReader_13, equal:[eq(test.t1.a, test.t2.a)]",
          "├─Selection_9 8000.00 root ge(cast(test.t1.b), 2019-01-01 00:00:00.000000)",
          "│ └─TableReader_11 10000.00 root data:TableScan_10",
          "│   └─TableScan_10 10000.00 cop[tikv] table:t1, range:[-inf,+inf], keep order:false, stats:pseudo",
          "└─TableReader_13 10000.00 root data:TableScan_12",
          "  └─TableScan_12 10000.00 cop[tikv] table:t2, range:[-inf,+inf], keep order:false, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestMaxMinEliminate",
    "Cases": [
      {
        "SQL": "explain (select max(a) from t) union (select min(a) from t)",
        "Plan": [
          "HashAgg_19 2.00 root group by:max(a), funcs:firstrow(max(a))",
          "└─Union_20 2.00 root ",
          "  ├─StreamAgg_26 1.00 root funcs:max(test.t.a)",
          "  │ └─Limit_30 1.00 root offset:0, count:1",
          "  │   └─TableReader_40 1.00 root data:Limit_39",
          "  │     └─Limit_39 1.00 cop[tikv] offset:0, count:1",
          "  │       └─TableScan_38 1.00 cop[tikv] table:t, range:[-inf,+inf], keep order:true, desc, stats:pseudo",
          "  └─StreamAgg_48 1.00 root funcs:min(test.t.a)",
          "    └─Limit_52 1.00 root offset:0, count:1",
          "      └─TableReader_62 1.00 root data:Limit_61",
          "        └─Limit_61 1.00 cop[tikv] offset:0, count:1",
          "          └─TableScan_60 1.00 cop[tikv] table:t, range:[-inf,+inf], keep order:true, stats:pseudo"
        ]
      }
    ]
  },
  {
    "Name": "TestPartitionTableStats",
    "Cases": [
      {
        "SQL": "explain select * from t order by a",
        "Result": [
          "Sort_8 10005.00 root test.t.a:asc",
          "└─Union_11 10005.00 root ",
          "  ├─TableReader_13 10000.00 root data:TableScan_12",
          "  │ └─TableScan_12 10000.00 cop[tikv] table:t, partition:p0, range:[-inf,+inf], keep order:false, stats:pseudo",
          "  ├─TableReader_15 1.00 root data:TableScan_14",
          "  │ └─TableScan_14 1.00 cop[tikv] table:t, partition:p1, range:[-inf,+inf], keep order:false",
          "  └─TableReader_17 4.00 root data:TableScan_16",
          "    └─TableScan_16 4.00 cop[tikv] table:t, partition:p2, range:[-inf,+inf], keep order:false"
        ]
      },
      {
        "SQL": "select * from t order by a",
        "Result": [
          "15 5",
          "21 1",
          "22 2",
          "23 3",
          "24 4"
        ]
      },
      {
        "SQL": "explain select * from t order by a limit 3",
        "Result": [
          "TopN_16 3.00 root test.t.a:asc, offset:0, count:3",
          "└─Union_20 7.00 root ",
          "  ├─TopN_21 3.00 root test.t.a:asc, offset:0, count:3",
          "  │ └─TableReader_29 3.00 root data:TopN_28",
          "  │   └─TopN_28 3.00 cop[tikv] test.t.a:asc, offset:0, count:3",
          "  │     └─TableScan_27 10000.00 cop[tikv] table:t, partition:p0, range:[-inf,+inf], keep order:false, stats:pseudo",
          "  ├─TopN_34 1.00 root test.t.a:asc, offset:0, count:3",
          "  │ └─TableReader_42 1.00 root data:TableScan_41",
          "  │   └─TableScan_41 1.00 cop[tikv] table:t, partition:p1, range:[-inf,+inf], keep order:false",
          "  └─TopN_43 3.00 root test.t.a:asc, offset:0, count:3",
          "    └─TableReader_51 3.00 root data:TopN_50",
          "      └─TopN_50 3.00 cop[tikv] test.t.a:asc, offset:0, count:3",
          "        └─TableScan_49 4.00 cop[tikv] table:t, partition:p2, range:[-inf,+inf], keep order:false"
        ]
      },
      {
        "SQL": "select * from t order by a limit 3",
        "Result": [
          "15 5",
          "21 1",
          "22 2"
        ]
      }
    ]
  },
  {
    "Name": "TestHintWithRequiredProperty",
    "Cases": [
      {
        "SQL": "desc select /*+ INL_JOIN(t2) */ * from t t1, t t2 where t1.a = t2.b order by t2.a",
        "Plan": [
          "Sort_7 12487.50 root test.t2.a:asc",
          "└─IndexJoin_15 12487.50 root inner join, inner:IndexLookUp_14, outer key:test.t1.a, inner key:test.t2.b",
          "  ├─TableReader_17 10000.00 root data:TableScan_16",
          "  │ └─TableScan_16 10000.00 cop[tikv] table:t1, range:[-inf,+inf], keep order:false, stats:pseudo",
          "  └─IndexLookUp_14 9.99 root ",
          "    ├─Selection_13 9.99 cop[tikv] not(isnull(test.t2.b))",
          "    │ └─IndexScan_11 10.00 cop[tikv] table:t2, index:b, range: decided by [eq(test.t2.b, test.t1.a)], keep order:false, stats:pseudo",
          "    └─TableScan_12 9.99 cop[tikv] table:t2, keep order:false, stats:pseudo"
        ],
        "Warnings": []
      },
      {
        "SQL": "desc select * from t t1, (select /*+ HASH_AGG() */ b, max(a) from t t2 group by b) t2 where t1.b = t2.b order by t1.b",
        "Plan": [
          "Sort_10 9990.00 root test.t1.b:asc",
          "└─Projection_12 9990.00 root test.t1.a, test.t1.b, test.t1.c, test.t2.b, max(a)",
          "  └─HashLeftJoin_18 9990.00 root inner join, inner:HashAgg_22, equal:[eq(test.t1.b, test.t2.b)]",
          "    ├─TableReader_30 9990.00 root data:Selection_29",
          "    │ └─Selection_29 9990.00 cop[tikv] not(isnull(test.t1.b))",
          "    │   └─TableScan_28 10000.00 cop[tikv] table:t1, range:[-inf,+inf], keep order:false, stats:pseudo",
          "    └─HashAgg_22 7992.00 root group by:test.t2.b, funcs:max(test.t2.a), firstrow(test.t2.b)",
          "      └─IndexReader_27 9990.00 root index:IndexScan_26",
          "        └─IndexScan_26 9990.00 cop[tikv] table:t2, index:b, range:[-inf,+inf], keep order:false, stats:pseudo"
        ],
        "Warnings": []
      },
      {
        "SQL": "desc select /*+ INL_JOIN(t2) */ * from t t1, t t2 where t1.a = t2.c order by t1.a",
        "Plan": [
          "Sort_7 12487.50 root test.t1.a:asc",
          "└─HashLeftJoin_13 12487.50 root inner join, inner:TableReader_17, equal:[eq(test.t1.a, test.t2.c)]",
          "  ├─TableReader_19 10000.00 root data:TableScan_18",
          "  │ └─TableScan_18 10000.00 cop[tikv] table:t1, range:[-inf,+inf], keep order:false, stats:pseudo",
          "  └─TableReader_17 9990.00 root data:Selection_16",
          "    └─Selection_16 9990.00 cop[tikv] not(isnull(test.t2.c))",
          "      └─TableScan_15 10000.00 cop[tikv] table:t2, range:[-inf,+inf], keep order:false, stats:pseudo"
        ],
        "Warnings": [
          "[planner:1815]Optimizer Hint /*+ INL_JOIN(t2) */ or /*+ TIDB_INLJ(t2) */ is inapplicable",
          "[planner:1815]Optimizer Hint /*+ INL_JOIN(t2) */ or /*+ TIDB_INLJ(t2) */ is inapplicable"
        ]
      }
    ]
  },
  {
    "Name": "TestIndexHintWarning",
    "Cases": [
      {
        "SQL": "select /*+ USE_INDEX(t1, j) */ * from t1",
        "Warnings": [
          "[planner:1176]Key 'j' doesn't exist in table 't1'"
        ]
      },
      {
        "SQL": "select /*+ IGNORE_INDEX(t1, j) */ * from t1",
        "Warnings": [
          "[planner:1176]Key 'j' doesn't exist in table 't1'"
        ]
      },
      {
        "SQL": "select /*+ USE_INDEX(t2, a, b, c) */ * from t1",
        "Warnings": [
          "[planner:1815]use_index(t2, a, b, c) is inapplicable, check whether the table(t2) exists"
        ]
      },
      {
        "SQL": "select /*+ USE_INDEX(t2) */ * from t1",
        "Warnings": [
          "[planner:1815]use_index(t2) is inapplicable, check whether the table(t2) exists"
        ]
      },
      {
        "SQL": "select /*+ USE_INDEX(t1, a), USE_INDEX(t2, a), USE_INDEX(t3, a) */ * from t1, t2 where t1.a=t2.a",
        "Warnings": [
          "[planner:1815]use_index(t3, a) is inapplicable, check whether the table(t3) exists"
        ]
      },
      {
        "SQL": "select /*+ USE_INDEX(t3, a), USE_INDEX(t4, b), IGNORE_INDEX(t3, a) */ * from t1, t2 where t1.a=t2.a",
        "Warnings": [
          "[planner:1815]use_index(t3, a) is inapplicable, check whether the table(t3) exists",
          "[planner:1815]use_index(t4, b) is inapplicable, check whether the table(t4) exists",
          "[planner:1815]ignore_index(t3, a) is inapplicable, check whether the table(t3) exists"
        ]
      }
    ]
  },
  {
    "Name": "TestStreamAggProp",
    "Cases": [
      {
        "SQL": "select /*+ stream_agg() */ count(*) c from t group by a order by c limit 1",
        "Plan": [
          "TopN_10 1.00 root 2_col_0:asc, offset:0, count:1",
          "└─StreamAgg_17 8000.00 root group by:test.t.a, funcs:count(1)",
          "  └─Sort_22 10000.00 root test.t.a:asc",
          "    └─TableReader_21 10000.00 root data:TableScan_20",
          "      └─TableScan_20 10000.00 cop[tikv] table:t, range:[-inf,+inf], keep order:false, stats:pseudo"
        ],
        "Res": [
          "1"
        ]
      },
      {
        "SQL": "select /*+ stream_agg() */ count(*) c from t group by a order by c",
        "Plan": [
          "Sort_5 8000.00 root c:asc",
          "└─StreamAgg_11 8000.00 root group by:test.t.a, funcs:count(1)",
          "  └─Sort_16 10000.00 root test.t.a:asc",
          "    └─TableReader_15 10000.00 root data:TableScan_14",
          "      └─TableScan_14 10000.00 cop[tikv] table:t, range:[-inf,+inf], keep order:false, stats:pseudo"
        ],
        "Res": [
          "1",
          "2"
        ]
      },
      {
        "SQL": "select /*+ stream_agg() */ count(*) c from t group by a order by a limit 1",
        "Plan": [
          "Projection_8 1.00 root c",
          "└─Limit_14 1.00 root offset:0, count:1",
          "  └─StreamAgg_27 1.00 root group by:test.t.a, funcs:count(1), firstrow(test.t.a)",
          "    └─Sort_32 1.25 root test.t.a:asc",
          "      └─TableReader_31 1.25 root data:TableScan_30",
          "        └─TableScan_30 1.25 cop[tikv] table:t, range:[-inf,+inf], keep order:false, stats:pseudo"
        ],
        "Res": [
          "2"
        ]
      },
      {
        "SQL": "select /*+ stream_agg() */ count(*) c from t group by a order by a",
        "Plan": [
          "Projection_6 8000.00 root c",
          "└─StreamAgg_21 8000.00 root group by:test.t.a, funcs:count(1), firstrow(test.t.a)",
          "  └─Sort_17 10000.00 root test.t.a:asc",
          "    └─TableReader_16 10000.00 root data:TableScan_15",
          "      └─TableScan_15 10000.00 cop[tikv] table:t, range:[-inf,+inf], keep order:false, stats:pseudo"
        ],
        "Res": [
          "2",
          "1"
        ]
      }
    ]
  },
  {
    "Name": "TestPartitionPruningForInExpr",
    "Cases": [
      {
        "SQL": "explain select * from t where a in (1, 2,'11')",
        "Plan": [
          "Union_8 60.00 root ",
          "├─TableReader_11 30.00 root data:Selection_10",
          "│ └─Selection_10 30.00 cop[tikv] in(test.t.a, 1, 2, 11)",
          "│   └─TableScan_9 10000.00 cop[tikv] table:t, partition:p0, range:[-inf,+inf], keep order:false, stats:pseudo",
          "└─TableReader_14 30.00 root data:Selection_13",
          "  └─Selection_13 30.00 cop[tikv] in(test.t.a, 1, 2, 11)",
          "    └─TableScan_12 10000.00 cop[tikv] table:t, partition:p2, range:[-inf,+inf], keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain select * from t where a in (17, null)",
        "Plan": [
          "Union_8 20.00 root ",
          "├─TableReader_11 10.00 root data:Selection_10",
          "│ └─Selection_10 10.00 cop[tikv] in(test.t.a, 17, NULL)",
          "│   └─TableScan_9 10000.00 cop[tikv] table:t, partition:p0, range:[-inf,+inf], keep order:false, stats:pseudo",
          "└─TableReader_14 10.00 root data:Selection_13",
          "  └─Selection_13 10.00 cop[tikv] in(test.t.a, 17, NULL)",
          "    └─TableScan_12 10000.00 cop[tikv] table:t, partition:p2, range:[-inf,+inf], keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain select * from t where a in (16, 'abc')",
        "Plan": [
          "Union_8 40.00 root ",
          "├─TableReader_11 20.00 root data:Selection_10",
          "│ └─Selection_10 20.00 cop[tikv] in(test.t.a, 16, 0)",
          "│   └─TableScan_9 10000.00 cop[tikv] table:t, partition:p0, range:[-inf,+inf], keep order:false, stats:pseudo",
          "└─TableReader_14 20.00 root data:Selection_13",
          "  └─Selection_13 20.00 cop[tikv] in(test.t.a, 16, 0)",
          "    └─TableScan_12 10000.00 cop[tikv] table:t, partition:p2, range:[-inf,+inf], keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain select * from t where a in (15, 0.12, 3.47)",
        "Plan": [
          "Union_9 30.00 root ",
          "├─TableReader_12 10.00 root data:Selection_11",
          "│ └─Selection_11 10.00 cop[tikv] or(eq(test.t.a, 15), 0)",
          "│   └─TableScan_10 10000.00 cop[tikv] table:t, partition:p0, range:[-inf,+inf], keep order:false, stats:pseudo",
          "├─TableReader_15 10.00 root data:Selection_14",
          "│ └─Selection_14 10.00 cop[tikv] or(eq(test.t.a, 15), 0)",
          "│   └─TableScan_13 10000.00 cop[tikv] table:t, partition:p1, range:[-inf,+inf], keep order:false, stats:pseudo",
          "└─TableReader_18 10.00 root data:Selection_17",
          "  └─Selection_17 10.00 cop[tikv] or(eq(test.t.a, 15), 0)",
          "    └─TableScan_16 10000.00 cop[tikv] table:t, partition:p2, range:[-inf,+inf], keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain select * from t where a in (0.12, 3.47)",
        "Plan": [
          "TableDual_6 0.00 root rows:0"
        ]
      },
      {
        "SQL": "explain select * from t where a in (14, floor(3.47))",
        "Plan": [
          "Union_8 40.00 root ",
          "├─TableReader_11 20.00 root data:Selection_10",
          "│ └─Selection_10 20.00 cop[tikv] in(test.t.a, 14, 3)",
          "│   └─TableScan_9 10000.00 cop[tikv] table:t, partition:p0, range:[-inf,+inf], keep order:false, stats:pseudo",
          "└─TableReader_14 20.00 root data:Selection_13",
          "  └─Selection_13 20.00 cop[tikv] in(test.t.a, 14, 3)",
          "    └─TableScan_12 10000.00 cop[tikv] table:t, partition:p2, range:[-inf,+inf], keep order:false, stats:pseudo"
        ]
      },
      {
        "SQL": "explain select * from t where b in (3, 4)",
        "Plan": [
          "Union_9 60.00 root ",
          "├─TableReader_12 20.00 root data:Selection_11",
          "│ └─Selection_11 20.00 cop[tikv] in(test.t.b, 3, 4)",
          "│   └─TableScan_10 10000.00 cop[tikv] table:t, partition:p0, range:[-inf,+inf], keep order:false, stats:pseudo",
          "├─TableReader_15 20.00 root data:Selection_14",
          "│ └─Selection_14 20.00 cop[tikv] in(test.t.b, 3, 4)",
          "│   └─TableScan_13 10000.00 cop[tikv] table:t, partition:p1, range:[-inf,+inf], keep order:false, stats:pseudo",
          "└─TableReader_18 20.00 root data:Selection_17",
          "  └─Selection_17 20.00 cop[tikv] in(test.t.b, 3, 4)",
          "    └─TableScan_16 10000.00 cop[tikv] table:t, partition:p2, range:[-inf,+inf], keep order:false, stats:pseudo"
        ]
      }
    ]
  }
]
