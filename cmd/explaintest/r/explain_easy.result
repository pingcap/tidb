use test;
drop table if exists t1, t2, t3, t4;
create table t1 (c1 int primary key, c2 int, c3 int, index c2 (c2));
create table t2 (c1 int unique, c2 int);
insert into t2 values(1, 0), (2, 1);
create table t3 (a bigint, b bigint, c bigint, d bigint);
create table t4 (a int, b int, c int, index idx(a, b), primary key(a));
set @@session.tidb_opt_insubquery_unfold = 1;
set @@session.tidb_opt_agg_push_down = 1;
explain select * from t3 where exists (select s.a from t3 s having sum(s.a) = t3.a );
id	task	operator info	count
Projection_13	root	test.t3.a, test.t3.b, test.t3.c, test.t3.d	8000.00
└─HashLeftJoin_14	root	semi join, inner:StreamAgg_30, equal:[eq(cast(test.t3.a), sel_agg_1)]	8000.00
  ├─Projection_15	root	test.t3.a, test.t3.b, test.t3.c, test.t3.d, cast(test.t3.a)	10000.00
  │ └─TableReader_17	root	data:TableScan_16	10000.00
  │   └─TableScan_16	cop	table:t3, range:[-inf,+inf], keep order:false	10000.00
  └─StreamAgg_30	root	funcs:sum(col_0)	1.00
    └─TableReader_31	root	data:StreamAgg_22	1.00
      └─StreamAgg_22	cop	funcs:sum(s.a)	1.00
        └─TableScan_29	cop	table:s, range:[-inf,+inf], keep order:false	10000.00
explain select * from t1;
id	task	operator info	count
TableReader_5	root	data:TableScan_4	10000.00
└─TableScan_4	cop	table:t1, range:[-inf,+inf], keep order:false	10000.00
explain select * from t1 order by c2;
id	task	operator info	count
IndexLookUp_13	root	index:IndexScan_11, table:TableScan_12	10000.00
├─IndexScan_11	cop	table:t1, index:c2, range:[<nil>,+inf], keep order:true	10000.00
└─TableScan_12	cop	table:t1, keep order:false	10000.00
explain select * from t2 order by c2;
id	task	operator info	count
Sort_4	root	test.t2.c2:asc	10000.00
└─TableReader_8	root	data:TableScan_7	10000.00
  └─TableScan_7	cop	table:t2, range:[-inf,+inf], keep order:false	10000.00
explain select * from t1 where t1.c1 > 0;
id	task	operator info	count
TableReader_6	root	data:TableScan_5	3333.33
└─TableScan_5	cop	table:t1, range:(0,+inf], keep order:false	3333.33
explain select t1.c1, t1.c2 from t1 where t1.c2 = 1;
id	task	operator info	count
IndexReader_9	root	index:IndexScan_8	10.00
└─IndexScan_8	cop	table:t1, index:c2, range:[1,1], keep order:false	10.00
explain select * from t1 left join t2 on t1.c2 = t2.c1 where t1.c1 > 1;
id	task	operator info	count
IndexJoin_11	root	left outer join, inner:IndexLookUp_10, outer key:test.t1.c2, inner key:test.t2.c1	4166.67
├─TableReader_23	root	data:TableScan_22	3333.33
│ └─TableScan_22	cop	table:t1, range:(1,+inf], keep order:false	3333.33
└─IndexLookUp_10	root	index:IndexScan_8, table:TableScan_9	10000.00
  ├─IndexScan_8	cop	table:t2, index:c1, range:[<nil>,+inf], keep order:false	10000.00
  └─TableScan_9	cop	table:t2, keep order:false	10000.00
explain update t1 set t1.c2 = 2 where t1.c1 = 1;
id	task	operator info	count
TableReader_5	root	data:TableScan_4	1.00
└─TableScan_4	cop	table:t1, range:[1,1], keep order:false	1.00
explain delete from t1 where t1.c2 = 1;
id	task	operator info	count
IndexLookUp_9	root	index:IndexScan_7, table:TableScan_8	10.00
├─IndexScan_7	cop	table:t1, index:c2, range:[1,1], keep order:false	10.00
└─TableScan_8	cop	table:t1, keep order:false	10.00
explain select count(b.c2) from t1 a, t2 b where a.c1 = b.c2 group by a.c1;
id	task	operator info	count
Projection_11	root	cast(join_agg_0)	10000.00
└─IndexJoin_14	root	inner join, inner:TableReader_13, outer key:b.c2, inner key:a.c1	10000.00
  ├─TableReader_13	root	data:TableScan_12	10000.00
  │ └─TableScan_12	cop	table:a, range:[-inf,+inf], keep order:false	10000.00
  └─HashAgg_21	root	group by:col_2, funcs:count(col_0), firstrow(col_1)	8000.00
    └─TableReader_22	root	data:HashAgg_17	8000.00
      └─HashAgg_17	cop	group by:b.c2, funcs:count(b.c2), firstrow(b.c2)	8000.00
        └─TableScan_20	cop	table:b, range:[-inf,+inf], keep order:false	10000.00
explain select * from t2 order by t2.c2 limit 0, 1;
id	task	operator info	count
TopN_7	root	test.t2.c2:asc, offset:0, count:1	1.00
└─TableReader_15	root	data:TopN_14	1.00
  └─TopN_14	cop	test.t2.c2:asc, offset:0, count:1	1.00
    └─TableScan_13	cop	table:t2, range:[-inf,+inf], keep order:false	10000.00
explain select * from t1 where c1 > 1 and c2 = 1 and c3 < 1;
id	task	operator info	count
IndexLookUp_12	root	index:Selection_10, table:Selection_11	1.11
├─Selection_10	cop	gt(test.t1.c1, 1)	3.33
│ └─IndexScan_8	cop	table:t1, index:c2, range:[1,1], keep order:false	10.00
└─Selection_11	cop	lt(test.t1.c3, 1)	1.11
  └─TableScan_9	cop	table:t1, keep order:false	3.33
explain select * from t1 where c1 = 1 and c2 > 1;
id	task	operator info	count
TableReader_7	root	data:Selection_6	0.33
└─Selection_6	cop	gt(test.t1.c2, 1)	0.33
  └─TableScan_5	cop	table:t1, range:[1,1], keep order:false	1.00
explain select sum(t1.c1 in (select c1 from t2)) from t1;
id	task	operator info	count
StreamAgg_21	root	funcs:sum(col_0)	1.00
└─TableReader_22	root	data:StreamAgg_13	1.00
  └─StreamAgg_13	cop	funcs:sum(in(test.t1.c1, 1, 2))	1.00
    └─TableScan_20	cop	table:t1, range:[-inf,+inf], keep order:false	10000.00
explain select c1 from t1 where c1 in (select c2 from t2);
id	task	operator info	count
TableReader_11	root	data:TableScan_10	2.00
└─TableScan_10	cop	table:t1, range:[0,0], [1,1], keep order:false	2.00
explain select (select count(1) k from t1 s where s.c1 = t1.c1 having k != 0) from t1;
id	task	operator info	count
Projection_13	root	k	10000.00
└─Projection_14	root	test.t1.c1, ifnull(5_col_0, 0)	10000.00
  └─MergeJoin_15	root	left outer join, left key:test.t1.c1, right key:s.c1	10000.00
    ├─TableReader_18	root	data:TableScan_17	10000.00
    │ └─TableScan_17	cop	table:t1, range:[-inf,+inf], keep order:true	10000.00
    └─Selection_20	root	ne(k, 0)	8000.00
      └─Projection_21	root	1, s.c1	10000.00
        └─TableReader_23	root	data:TableScan_22	10000.00
          └─TableScan_22	cop	table:s, range:[-inf,+inf], keep order:true	10000.00
explain select * from information_schema.columns;
id	task	operator info	count
MemTableScan_4	root		10000.00
explain select c2 = (select c2 from t2 where t1.c1 = t2.c1 order by c1 limit 1) from t1;
id	task	operator info	count
Projection_12	root	eq(test.t1.c2, test.t2.c2)	10000.00
└─Apply_14	root	left outer join, inner:Limit_22	10000.00
  ├─TableReader_16	root	data:TableScan_15	10000.00
  │ └─TableScan_15	cop	table:t1, range:[-inf,+inf], keep order:false	10000.00
  └─Limit_22	root	offset:0, count:1	1.00
    └─IndexLookUp_47	root	index:IndexScan_45, table:TableScan_46	0.00
      ├─IndexScan_45	cop	table:t2, index:c1, range: decided by [eq(test.t1.c1, test.t2.c1)], keep order:true	0.00
      └─TableScan_46	cop	table:t2, keep order:false	0.00
explain select * from t1 order by c1 desc limit 1;
id	task	operator info	count
Limit_10	root	offset:0, count:1	1.00
└─TableReader_21	root	data:Limit_20	1.00
  └─Limit_20	cop	offset:0, count:1	1.00
    └─TableScan_18	cop	table:t1, range:[-inf,+inf], keep order:true, desc	1.00
explain select * from t4 use index(idx) where a > 1 and b > 1 and c > 1 limit 1;
id	task	operator info	count
Limit_9	root	offset:0, count:1	1.00
└─IndexLookUp_17	root	index:Selection_14, table:Limit_16	1.00
  ├─Selection_14	cop	gt(test.t4.b, 1)	3.00
  │ └─IndexScan_12	cop	table:t4, index:a, b, range:(1 +inf,+inf +inf], keep order:false	9.00
  └─Limit_16	cop	offset:0, count:1	1.00
    └─Selection_15	cop	gt(test.t4.c, 1)	1.00
      └─TableScan_13	cop	table:t4, keep order:false	3.00
explain select * from t4 where a > 1 and c > 1 limit 1;
id	task	operator info	count
Limit_8	root	offset:0, count:1	1.00
└─TableReader_15	root	data:Limit_14	1.00
  └─Limit_14	cop	offset:0, count:1	1.00
    └─Selection_12	cop	gt(test.t4.c, 1)	1.00
      └─TableScan_11	cop	table:t4, range:(1,+inf], keep order:false	3.00
explain select ifnull(null, t1.c1) from t1;
id	task	operator info	count
TableReader_5	root	data:TableScan_4	10000.00
└─TableScan_4	cop	table:t1, range:[-inf,+inf], keep order:false	10000.00
explain select if(10, t1.c1, t1.c2) from t1;
id	task	operator info	count
TableReader_5	root	data:TableScan_4	10000.00
└─TableScan_4	cop	table:t1, range:[-inf,+inf], keep order:false	10000.00
explain select c1 from t2 union select c1 from t2 union all select c1 from t2;
id	task	operator info	count
Union_14	root		26000.00
├─TableReader_17	root	data:TableScan_16	10000.00
│ └─TableScan_16	cop	table:t2, range:[-inf,+inf], keep order:false	10000.00
└─HashAgg_21	root	group by:t2.c1, funcs:firstrow(join_agg_0)	16000.00
  └─Union_22	root		16000.00
    ├─StreamAgg_35	root	group by:col_2, funcs:firstrow(col_0), firstrow(col_1)	8000.00
    │ └─IndexReader_36	root	index:StreamAgg_26	8000.00
    │   └─StreamAgg_26	cop	group by:test.t2.c1, funcs:firstrow(test.t2.c1), firstrow(test.t2.c1)	8000.00
    │     └─IndexScan_34	cop	table:t2, index:c1, range:[<nil>,+inf], keep order:true	10000.00
    └─StreamAgg_52	root	group by:col_2, funcs:firstrow(col_0), firstrow(col_1)	8000.00
      └─IndexReader_53	root	index:StreamAgg_43	8000.00
        └─StreamAgg_43	cop	group by:test.t2.c1, funcs:firstrow(test.t2.c1), firstrow(test.t2.c1)	8000.00
          └─IndexScan_51	cop	table:t2, index:c1, range:[<nil>,+inf], keep order:true	10000.00
explain select c1 from t2 union all select c1 from t2 union select c1 from t2;
id	task	operator info	count
HashAgg_15	root	group by:t2.c1, funcs:firstrow(join_agg_0)	24000.00
└─Union_16	root		24000.00
  ├─StreamAgg_29	root	group by:col_2, funcs:firstrow(col_0), firstrow(col_1)	8000.00
  │ └─IndexReader_30	root	index:StreamAgg_20	8000.00
  │   └─StreamAgg_20	cop	group by:test.t2.c1, funcs:firstrow(test.t2.c1), firstrow(test.t2.c1)	8000.00
  │     └─IndexScan_28	cop	table:t2, index:c1, range:[<nil>,+inf], keep order:true	10000.00
  ├─StreamAgg_46	root	group by:col_2, funcs:firstrow(col_0), firstrow(col_1)	8000.00
  │ └─IndexReader_47	root	index:StreamAgg_37	8000.00
  │   └─StreamAgg_37	cop	group by:test.t2.c1, funcs:firstrow(test.t2.c1), firstrow(test.t2.c1)	8000.00
  │     └─IndexScan_45	cop	table:t2, index:c1, range:[<nil>,+inf], keep order:true	10000.00
  └─StreamAgg_63	root	group by:col_2, funcs:firstrow(col_0), firstrow(col_1)	8000.00
    └─IndexReader_64	root	index:StreamAgg_54	8000.00
      └─StreamAgg_54	cop	group by:test.t2.c1, funcs:firstrow(test.t2.c1), firstrow(test.t2.c1)	8000.00
        └─IndexScan_62	cop	table:t2, index:c1, range:[<nil>,+inf], keep order:true	10000.00
set @@session.tidb_opt_insubquery_unfold = 0;
explain select sum(t1.c1 in (select c1 from t2)) from t1;
id	task	operator info	count
StreamAgg_12	root	funcs:sum(5_aux_0)	1.00
└─MergeJoin_28	root	left outer semi join, left key:test.t1.c1, right key:test.t2.c1	10000.00
  ├─TableReader_19	root	data:TableScan_18	10000.00
  │ └─TableScan_18	cop	table:t1, range:[-inf,+inf], keep order:true	10000.00
  └─IndexReader_23	root	index:IndexScan_22	10000.00
    └─IndexScan_22	cop	table:t2, index:c1, range:[<nil>,+inf], keep order:true	10000.00
explain select 1 in (select c2 from t2) from t1;
id	task	operator info	count
Projection_6	root	5_aux_0	10000.00
└─HashLeftJoin_7	root	left outer semi join, inner:TableReader_12	10000.00
  ├─TableReader_9	root	data:TableScan_8	10000.00
  │ └─TableScan_8	cop	table:t1, range:[-inf,+inf], keep order:false	10000.00
  └─TableReader_12	root	data:Selection_11	10.00
    └─Selection_11	cop	eq(1, test.t2.c2)	10.00
      └─TableScan_10	cop	table:t2, range:[-inf,+inf], keep order:false	10000.00
explain select sum(6 in (select c2 from t2)) from t1;
id	task	operator info	count
StreamAgg_12	root	funcs:sum(5_aux_0)	1.00
└─HashLeftJoin_19	root	left outer semi join, inner:TableReader_18	10000.00
  ├─TableReader_21	root	data:TableScan_20	10000.00
  │ └─TableScan_20	cop	table:t1, range:[-inf,+inf], keep order:false	10000.00
  └─TableReader_18	root	data:Selection_17	10.00
    └─Selection_17	cop	eq(6, test.t2.c2)	10.00
      └─TableScan_16	cop	table:t2, range:[-inf,+inf], keep order:false	10000.00
explain format="dot" select sum(t1.c1 in (select c1 from t2)) from t1;
dot contents

digraph StreamAgg_12 {
subgraph cluster12{
node [style=filled, color=lightgrey]
color=black
label = "root"
"StreamAgg_12" -> "MergeJoin_28"
"MergeJoin_28" -> "TableReader_19"
"MergeJoin_28" -> "IndexReader_23"
}
subgraph cluster18{
node [style=filled, color=lightgrey]
color=black
label = "cop"
"TableScan_18"
}
subgraph cluster22{
node [style=filled, color=lightgrey]
color=black
label = "cop"
"IndexScan_22"
}
"TableReader_19" -> "TableScan_18"
"IndexReader_23" -> "IndexScan_22"
}

explain format="dot" select 1 in (select c2 from t2) from t1;
dot contents

digraph Projection_6 {
subgraph cluster6{
node [style=filled, color=lightgrey]
color=black
label = "root"
"Projection_6" -> "HashLeftJoin_7"
"HashLeftJoin_7" -> "TableReader_9"
"HashLeftJoin_7" -> "TableReader_12"
}
subgraph cluster8{
node [style=filled, color=lightgrey]
color=black
label = "cop"
"TableScan_8"
}
subgraph cluster11{
node [style=filled, color=lightgrey]
color=black
label = "cop"
"Selection_11" -> "TableScan_10"
}
"TableReader_9" -> "TableScan_8"
"TableReader_12" -> "Selection_11"
}

drop table if exists t1, t2, t3, t4;
drop table if exists t;
create table t(a int primary key, b int, c int, index idx(b));
explain select t.c in (select count(*) from t s ignore index(idx), t t1 where s.a = t.a and s.a = t1.a) from t;
id	task	operator info	count
Projection_11	root	9_aux_0	10000.00
└─Apply_13	root	left outer semi join, inner:StreamAgg_20, equal:[eq(test.t.c, count(*))]	10000.00
  ├─TableReader_15	root	data:TableScan_14	10000.00
  │ └─TableScan_14	cop	table:t, range:[-inf,+inf], keep order:false	10000.00
  └─StreamAgg_20	root	funcs:count(1)	1.00
    └─IndexJoin_43	root	inner join, inner:TableReader_42, outer key:s.a, inner key:t1.a	10000.00
      ├─TableReader_51	root	data:TableScan_50	1.00
      │ └─TableScan_50	cop	table:s, range: decided by [eq(s.a, test.t.a)], keep order:false	1.00
      └─TableReader_42	root	data:TableScan_41	10000.00
        └─TableScan_41	cop	table:t1, range:[-inf,+inf], keep order:false	10000.00
explain select t.c in (select count(*) from t s use index(idx), t t1 where s.b = t.a and s.a = t1.a) from t;
id	task	operator info	count
Projection_11	root	9_aux_0	10000.00
└─Apply_13	root	left outer semi join, inner:StreamAgg_20, equal:[eq(test.t.c, count(*))]	10000.00
  ├─TableReader_15	root	data:TableScan_14	10000.00
  │ └─TableScan_14	cop	table:t, range:[-inf,+inf], keep order:false	10000.00
  └─StreamAgg_20	root	funcs:count(1)	1.00
    └─IndexJoin_32	root	inner join, inner:TableReader_31, outer key:s.a, inner key:t1.a	10000.00
      ├─IndexReader_36	root	index:IndexScan_35	10.00
      │ └─IndexScan_35	cop	table:s, index:b, range: decided by [eq(s.b, test.t.a)], keep order:false	10.00
      └─TableReader_31	root	data:TableScan_30	10000.00
        └─TableScan_30	cop	table:t1, range:[-inf,+inf], keep order:false	10000.00
explain select t.c in (select count(*) from t s use index(idx), t t1 where s.b = t.a and s.c = t1.a) from t;
id	task	operator info	count
Projection_11	root	9_aux_0	10000.00
└─Apply_13	root	left outer semi join, inner:StreamAgg_20, equal:[eq(test.t.c, count(*))]	10000.00
  ├─TableReader_15	root	data:TableScan_14	10000.00
  │ └─TableScan_14	cop	table:t, range:[-inf,+inf], keep order:false	10000.00
  └─StreamAgg_20	root	funcs:count(1)	1.00
    └─IndexJoin_33	root	inner join, inner:TableReader_32, outer key:s.c, inner key:t1.a	10000.00
      ├─IndexLookUp_38	root	index:IndexScan_36, table:TableScan_37	10.00
      │ ├─IndexScan_36	cop	table:s, index:b, range: decided by [eq(s.b, test.t.a)], keep order:false	10.00
      │ └─TableScan_37	cop	table:t, keep order:false	10.00
      └─TableReader_32	root	data:TableScan_31	10000.00
        └─TableScan_31	cop	table:t1, range:[-inf,+inf], keep order:false	10000.00
