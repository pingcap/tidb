drop table if exists t;
create table t (a int primary key, b int, c int, d int, e int, f int);
create index tb on t (b);
create index tc on t (c);
create index td on t (d);
load stats 's/explain_indexmerge_stats_t.json';
explain select * from t where a < 50 or b < 50;
id	count	task	operator info
TableReader_7	4000000.00	root	data:Selection_6
└─Selection_6	4000000.00	cop[tikv]	or(lt(test.t.a, 50), lt(test.t.b, 50))
  └─TableScan_5	5000000.00	cop[tikv]	table:t, range:[-inf,+inf], keep order:false
explain select * from t where (a < 50 or b < 50) and f > 100;
id	count	task	operator info
TableReader_7	4000000.00	root	data:Selection_6
└─Selection_6	4000000.00	cop[tikv]	gt(test.t.f, 100), or(lt(test.t.a, 50), lt(test.t.b, 50))
  └─TableScan_5	5000000.00	cop[tikv]	table:t, range:[-inf,+inf], keep order:false
explain select * from t where b < 50 or c < 50;
id	count	task	operator info
TableReader_7	4000000.00	root	data:Selection_6
└─Selection_6	4000000.00	cop[tikv]	or(lt(test.t.b, 50), lt(test.t.c, 50))
  └─TableScan_5	5000000.00	cop[tikv]	table:t, range:[-inf,+inf], keep order:false
set session tidb_enable_index_merge = on;
explain select * from t where a < 50 or b < 50;
id	count	task	operator info
IndexMerge_11	98.00	root	
├─TableScan_8	49.00	cop[tikv]	table:t, range:[-inf,50), keep order:false
├─IndexScan_9	49.00	cop[tikv]	table:t, index:b, range:[-inf,50), keep order:false
└─TableScan_10	98.00	cop[tikv]	table:t, keep order:false
explain select * from t where (a < 50 or b < 50) and f > 100;
id	count	task	operator info
IndexMerge_12	98.00	root	
├─TableScan_8	49.00	cop[tikv]	table:t, range:[-inf,50), keep order:false
├─IndexScan_9	49.00	cop[tikv]	table:t, index:b, range:[-inf,50), keep order:false
└─Selection_11	98.00	cop[tikv]	gt(test.t.f, 100)
  └─TableScan_10	98.00	cop[tikv]	table:t, keep order:false
explain select * from t where a < 50 or b < 5000000;
id	count	task	operator info
TableReader_7	4000000.00	root	data:Selection_6
└─Selection_6	4000000.00	cop[tikv]	or(lt(test.t.a, 50), lt(test.t.b, 5000000))
  └─TableScan_5	5000000.00	cop[tikv]	table:t, range:[-inf,+inf], keep order:false
explain select * from t where b < 50 or c < 50;
id	count	task	operator info
IndexMerge_11	98.00	root	
├─IndexScan_8	49.00	cop[tikv]	table:t, index:b, range:[-inf,50), keep order:false
├─IndexScan_9	49.00	cop[tikv]	table:t, index:c, range:[-inf,50), keep order:false
└─TableScan_10	98.00	cop[tikv]	table:t, keep order:false
explain select * from t where b < 50 or c < 5000000;
id	count	task	operator info
TableReader_7	4000000.00	root	data:Selection_6
└─Selection_6	4000000.00	cop[tikv]	or(lt(test.t.b, 50), lt(test.t.c, 5000000))
  └─TableScan_5	5000000.00	cop[tikv]	table:t, range:[-inf,+inf], keep order:false
explain select * from t where a < 50 or b < 50 or c < 50;
id	count	task	operator info
IndexMerge_12	147.00	root	
├─TableScan_8	49.00	cop[tikv]	table:t, range:[-inf,50), keep order:false
├─IndexScan_9	49.00	cop[tikv]	table:t, index:b, range:[-inf,50), keep order:false
├─IndexScan_10	49.00	cop[tikv]	table:t, index:c, range:[-inf,50), keep order:false
└─TableScan_11	147.00	cop[tikv]	table:t, keep order:false
explain select * from t where (b < 10000 or c < 10000) and (a < 10 or d < 10) and f < 10;
id	count	task	operator info
IndexMerge_17	0.00	root	
├─TableScan_13	9.00	cop[tikv]	table:t, range:[-inf,10), keep order:false
├─IndexScan_14	9.00	cop[tikv]	table:t, index:d, range:[-inf,10), keep order:false
└─Selection_16	0.00	cop[tikv]	lt(test.t.f, 10), or(lt(test.t.b, 10000), lt(test.t.c, 10000))
  └─TableScan_15	18.00	cop[tikv]	table:t, keep order:false
explain format="dot" select * from t where (a < 50 or b < 50) and f > 100;
dot contents

digraph IndexMerge_12 {
subgraph cluster12{
node [style=filled, color=lightgrey]
color=black
label = "root"
"IndexMerge_12"
}
subgraph cluster8{
node [style=filled, color=lightgrey]
color=black
label = "cop"
"TableScan_8"
}
subgraph cluster9{
node [style=filled, color=lightgrey]
color=black
label = "cop"
"IndexScan_9"
}
subgraph cluster11{
node [style=filled, color=lightgrey]
color=black
label = "cop"
"Selection_11" -> "TableScan_10"
}
"IndexMerge_12" -> "TableScan_8"
"IndexMerge_12" -> "IndexScan_9"
"IndexMerge_12" -> "Selection_11"
}

set session tidb_enable_index_merge = off;
explain select /*+ use_index_merge(t, tb, tc) */ * from t where b < 50 or c < 5000000;
id	count	task	operator info
IndexMerge_8	5000000.00	root	
├─IndexScan_5	49.00	cop[tikv]	table:t, index:b, range:[-inf,50), keep order:false
├─IndexScan_6	4999999.00	cop[tikv]	table:t, index:c, range:[-inf,5000000), keep order:false
└─TableScan_7	5000000.00	cop[tikv]	table:t, keep order:false
explain select /*+ use_index_merge(t, tb, tc) */ * from t where (b < 10000 or c < 10000) and (a < 10 or d < 10) and f < 10;
id	count	task	operator info
IndexMerge_9	0.00	root	
├─IndexScan_5	9999.00	cop[tikv]	table:t, index:b, range:[-inf,10000), keep order:false
├─IndexScan_6	9999.00	cop[tikv]	table:t, index:c, range:[-inf,10000), keep order:false
└─Selection_8	0.00	cop[tikv]	lt(test.t.f, 10), or(lt(test.t.a, 10), lt(test.t.d, 10))
  └─TableScan_7	19998.00	cop[tikv]	table:t, keep order:false
explain select /*+ use_index_merge(t, tb) */ * from t where b < 50 or c < 5000000;
id	count	task	operator info
TableReader_7	4000000.00	root	data:Selection_6
└─Selection_6	4000000.00	cop[tikv]	or(lt(test.t.b, 50), lt(test.t.c, 5000000))
  └─TableScan_5	5000000.00	cop[tikv]	table:t, range:[-inf,+inf], keep order:false
explain select /*+ no_index_merge(), use_index_merge(t, tb, tc) */ * from t where b < 50 or c < 5000000;
id	count	task	operator info
TableReader_7	4000000.00	root	data:Selection_6
└─Selection_6	4000000.00	cop[tikv]	or(lt(test.t.b, 50), lt(test.t.c, 5000000))
  └─TableScan_5	5000000.00	cop[tikv]	table:t, range:[-inf,+inf], keep order:false
explain select /*+ use_index_merge(t, primary, tb) */ * from t where a < 50 or b < 5000000;
id	count	task	operator info
IndexMerge_8	5000000.00	root	
├─TableScan_5	49.00	cop[tikv]	table:t, range:[-inf,50), keep order:false
├─IndexScan_6	4999999.00	cop[tikv]	table:t, index:b, range:[-inf,5000000), keep order:false
└─TableScan_7	5000000.00	cop[tikv]	table:t, keep order:false
