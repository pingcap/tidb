use test;
drop table if exists t;
create table t(a int, b real, c bigint as ((a+1)) virtual, e real as ((b+a)));
insert into t values (1, 2.0, default, default), (2, 2.1, default, default), (5, 3.0, default, default),
(5, -1.0, default, default), (0, 0.0, default, default), (-1, -2.0, default, default), (0, 0, default, default);
alter table t add index idx_c(c);
alter table t add index idx_e(e);
set @@sql_mode="";
desc select * from t where a+1=3;
id	estRows	task	access object	operator info
IndexLookUp_10	10.00	root		
├─IndexRangeScan_8(Build)	10.00	cop[tikv]	table:t, index:idx_c(c)	range:[3,3], keep order:false, stats:pseudo
└─TableRowIDScan_9(Probe)	10.00	cop[tikv]	table:t	keep order:false, stats:pseudo
select * from t where a+1=3;
a	b	c	e
2	2.1	3	4.1
desc select a+1 from t where a+1=3;
id	estRows	task	access object	operator info
IndexReader_6	10.00	root		index:IndexRangeScan_5
└─IndexRangeScan_5	10.00	cop[tikv]	table:t, index:idx_c(c)	range:[3,3], keep order:false, stats:pseudo
select a+1 from t where a+1=3;
a+1
3
desc select c from t where a+1=3;
id	estRows	task	access object	operator info
IndexReader_6	10.00	root		index:IndexRangeScan_5
└─IndexRangeScan_5	10.00	cop[tikv]	table:t, index:idx_c(c)	range:[3,3], keep order:false, stats:pseudo
select c from t where a+1=3;
c
3
desc select * from t where b+a=3;
id	estRows	task	access object	operator info
IndexLookUp_10	10.00	root		
├─IndexRangeScan_8(Build)	10.00	cop[tikv]	table:t, index:idx_e(e)	range:[3,3], keep order:false, stats:pseudo
└─TableRowIDScan_9(Probe)	10.00	cop[tikv]	table:t	keep order:false, stats:pseudo
select * from t where b+a=3;
a	b	c	e
1	2	2	3
desc select b+a from t where b+a=3;
id	estRows	task	access object	operator info
IndexReader_6	10.00	root		index:IndexRangeScan_5
└─IndexRangeScan_5	10.00	cop[tikv]	table:t, index:idx_e(e)	range:[3,3], keep order:false, stats:pseudo
select b+a from t where b+a=3;
b+a
3
desc select e from t where b+a=3;
id	estRows	task	access object	operator info
IndexReader_6	10.00	root		index:IndexRangeScan_5
└─IndexRangeScan_5	10.00	cop[tikv]	table:t, index:idx_e(e)	range:[3,3], keep order:false, stats:pseudo
select e from t where b+a=3;
e
3
desc select a+1 from t where a+1 in (1, 2, 3);
id	estRows	task	access object	operator info
IndexReader_6	30.00	root		index:IndexRangeScan_5
└─IndexRangeScan_5	30.00	cop[tikv]	table:t, index:idx_c(c)	range:[1,1], [2,2], [3,3], keep order:false, stats:pseudo
select a+1 from t where a+1 in (1, 2, 3);
a+1
1
1
2
3
desc select * from t where a+1 in (1, 2, 3);
id	estRows	task	access object	operator info
IndexLookUp_10	30.00	root		
├─IndexRangeScan_8(Build)	30.00	cop[tikv]	table:t, index:idx_c(c)	range:[1,1], [2,2], [3,3], keep order:false, stats:pseudo
└─TableRowIDScan_9(Probe)	30.00	cop[tikv]	table:t	keep order:false, stats:pseudo
select * from t where a+1 in (1, 2, 3);
a	b	c	e
1	2	2	3
2	2.1	3	4.1
0	0	1	0
0	0	1	0
desc select a+1 from t where a+1 between 1 and 4;
id	estRows	task	access object	operator info
IndexReader_6	250.00	root		index:IndexRangeScan_5
└─IndexRangeScan_5	250.00	cop[tikv]	table:t, index:idx_c(c)	range:[1,4], keep order:false, stats:pseudo
select a+1 from t where a+1 between 1 and 4;
a+1
1
1
2
3
desc select * from t where a+1 between 1 and 4;
id	estRows	task	access object	operator info
IndexLookUp_10	250.00	root		
├─IndexRangeScan_8(Build)	250.00	cop[tikv]	table:t, index:idx_c(c)	range:[1,4], keep order:false, stats:pseudo
└─TableRowIDScan_9(Probe)	250.00	cop[tikv]	table:t	keep order:false, stats:pseudo
select * from t where a+1 between 1 and 4;
a	b	c	e
1	2	2	3
2	2.1	3	4.1
0	0	1	0
0	0	1	0
desc select * from t order by a+1;
id	estRows	task	access object	operator info
Projection_13	10000.00	root		test.t.a, test.t.b, test.t.c, test.t.e
└─IndexLookUp_12	10000.00	root		
  ├─IndexFullScan_10(Build)	10000.00	cop[tikv]	table:t, index:idx_c(c)	keep order:true, stats:pseudo
  └─TableRowIDScan_11(Probe)	10000.00	cop[tikv]	table:t	keep order:false, stats:pseudo
select * from t order by a+1;
a	b	c	e
-1	-2	0	-3
0	0	1	0
0	0	1	0
1	2	2	3
2	2.1	3	4.1
5	3	6	8
5	-1	6	4
desc select a+1 from t order by a+1;
id	estRows	task	access object	operator info
IndexReader_14	10000.00	root		index:IndexFullScan_13
└─IndexFullScan_13	10000.00	cop[tikv]	table:t, index:idx_c(c)	keep order:true, stats:pseudo
select a+1 from t order by a+1;
a+1
0
1
1
2
3
6
6
desc select b+a from t order by b+a;
id	estRows	task	access object	operator info
IndexReader_14	10000.00	root		index:IndexFullScan_13
└─IndexFullScan_13	10000.00	cop[tikv]	table:t, index:idx_e(e)	keep order:true, stats:pseudo
select b+a from t order by b+a;
b+a
-3
0
0
3
4
4.1
8
desc update t set a=1 where a+1 = 3;
id	estRows	task	access object	operator info
Update_4	N/A	root		N/A
└─IndexLookUp_11	10.00	root		
  ├─IndexRangeScan_9(Build)	10.00	cop[tikv]	table:t, index:idx_c(c)	range:[3,3], keep order:false, stats:pseudo
  └─TableRowIDScan_10(Probe)	10.00	cop[tikv]	table:t	keep order:false, stats:pseudo
desc update t set a=2, b = 3 where b+a = 3;
id	estRows	task	access object	operator info
Update_4	N/A	root		N/A
└─IndexLookUp_11	10.00	root		
  ├─IndexRangeScan_9(Build)	10.00	cop[tikv]	table:t, index:idx_e(e)	range:[3,3], keep order:false, stats:pseudo
  └─TableRowIDScan_10(Probe)	10.00	cop[tikv]	table:t	keep order:false, stats:pseudo
desc delete from t where a+1 = 3;
id	estRows	task	access object	operator info
Delete_4	N/A	root		N/A
└─IndexLookUp_11	10.00	root		
  ├─IndexRangeScan_9(Build)	10.00	cop[tikv]	table:t, index:idx_c(c)	range:[3,3], keep order:false, stats:pseudo
  └─TableRowIDScan_10(Probe)	10.00	cop[tikv]	table:t	keep order:false, stats:pseudo
desc delete from t where b+a = 0;
id	estRows	task	access object	operator info
Delete_4	N/A	root		N/A
└─IndexLookUp_11	10.00	root		
  ├─IndexRangeScan_9(Build)	10.00	cop[tikv]	table:t, index:idx_e(e)	range:[0,0], keep order:false, stats:pseudo
  └─TableRowIDScan_10(Probe)	10.00	cop[tikv]	table:t	keep order:false, stats:pseudo
alter table t drop index idx_c;
alter table t drop index idx_e;
alter table t add index expr_idx_c((a+1));
alter table t add index expr_idx_e((b+a));
truncate table t;
insert into t values (1, 2.0, default, default), (2, 2.1, default, default), (5, 3.0, default, default),
(5, -1.0, default, default), (0, 0.0, default, default), (-1, -2.0, default, default), (0, 0, default, default);
desc select * from t where a+1=3;
id	estRows	task	access object	operator info
Projection_4	10.00	root		test.t.a, test.t.b, test.t.c, test.t.e
└─IndexLookUp_10	10.00	root		
  ├─IndexRangeScan_8(Build)	10.00	cop[tikv]	table:t, index:expr_idx_c(`a` + 1)	range:[3,3], keep order:false, stats:pseudo
  └─TableRowIDScan_9(Probe)	10.00	cop[tikv]	table:t	keep order:false, stats:pseudo
select * from t where a+1=3;
a	b	c	e
2	2.1	3	4.1
desc select a+1 from t where a+1=3;
id	estRows	task	access object	operator info
IndexReader_6	10.00	root		index:IndexRangeScan_5
└─IndexRangeScan_5	10.00	cop[tikv]	table:t, index:expr_idx_c(`a` + 1)	range:[3,3], keep order:false, stats:pseudo
select a+1 from t where a+1=3;
a+1
3
desc select c from t where a+1=3;
id	estRows	task	access object	operator info
Projection_4	10.00	root		test.t.c
└─IndexLookUp_11	10.00	root		
  ├─IndexRangeScan_9(Build)	10.00	cop[tikv]	table:t, index:expr_idx_c(`a` + 1)	range:[3,3], keep order:false, stats:pseudo
  └─TableRowIDScan_10(Probe)	10.00	cop[tikv]	table:t	keep order:false, stats:pseudo
select c from t where a+1=3;
c
3
desc select * from t where b+a=3;
id	estRows	task	access object	operator info
Projection_4	10.00	root		test.t.a, test.t.b, test.t.c, test.t.e
└─IndexLookUp_10	10.00	root		
  ├─IndexRangeScan_8(Build)	10.00	cop[tikv]	table:t, index:expr_idx_e(`b` + `a`)	range:[3,3], keep order:false, stats:pseudo
  └─TableRowIDScan_9(Probe)	10.00	cop[tikv]	table:t	keep order:false, stats:pseudo
select * from t where b+a=3;
a	b	c	e
1	2	2	3
desc select b+a from t where b+a=3;
id	estRows	task	access object	operator info
IndexReader_6	10.00	root		index:IndexRangeScan_5
└─IndexRangeScan_5	10.00	cop[tikv]	table:t, index:expr_idx_e(`b` + `a`)	range:[3,3], keep order:false, stats:pseudo
select b+a from t where b+a=3;
b+a
3
desc select e from t where b+a=3;
id	estRows	task	access object	operator info
Projection_4	10.00	root		test.t.e
└─IndexLookUp_11	10.00	root		
  ├─IndexRangeScan_9(Build)	10.00	cop[tikv]	table:t, index:expr_idx_e(`b` + `a`)	range:[3,3], keep order:false, stats:pseudo
  └─TableRowIDScan_10(Probe)	10.00	cop[tikv]	table:t	keep order:false, stats:pseudo
select e from t where b+a=3;
e
3
desc select a+1 from t where a+1 in (1, 2, 3);
id	estRows	task	access object	operator info
IndexReader_6	30.00	root		index:IndexRangeScan_5
└─IndexRangeScan_5	30.00	cop[tikv]	table:t, index:expr_idx_c(`a` + 1)	range:[1,1], [2,2], [3,3], keep order:false, stats:pseudo
select a+1 from t where a+1 in (1, 2, 3);
a+1
1
1
2
3
desc select * from t where a+1 in (1, 2, 3);
id	estRows	task	access object	operator info
Projection_4	30.00	root		test.t.a, test.t.b, test.t.c, test.t.e
└─IndexLookUp_10	30.00	root		
  ├─IndexRangeScan_8(Build)	30.00	cop[tikv]	table:t, index:expr_idx_c(`a` + 1)	range:[1,1], [2,2], [3,3], keep order:false, stats:pseudo
  └─TableRowIDScan_9(Probe)	30.00	cop[tikv]	table:t	keep order:false, stats:pseudo
select * from t where a+1 in (1, 2, 3);
a	b	c	e
1	2	2	3
2	2.1	3	4.1
0	0	1	0
0	0	1	0
desc select a+1 from t where a+1 between 1 and 4;
id	estRows	task	access object	operator info
IndexReader_6	250.00	root		index:IndexRangeScan_5
└─IndexRangeScan_5	250.00	cop[tikv]	table:t, index:expr_idx_c(`a` + 1)	range:[1,4], keep order:false, stats:pseudo
select a+1 from t where a+1 between 1 and 4;
a+1
1
1
2
3
desc select * from t where a+1 between 1 and 4;
id	estRows	task	access object	operator info
Projection_4	250.00	root		test.t.a, test.t.b, test.t.c, test.t.e
└─IndexLookUp_10	250.00	root		
  ├─IndexRangeScan_8(Build)	250.00	cop[tikv]	table:t, index:expr_idx_c(`a` + 1)	range:[1,4], keep order:false, stats:pseudo
  └─TableRowIDScan_9(Probe)	250.00	cop[tikv]	table:t	keep order:false, stats:pseudo
select * from t where a+1 between 1 and 4;
a	b	c	e
1	2	2	3
2	2.1	3	4.1
0	0	1	0
0	0	1	0
desc select * from t order by a+1;
id	estRows	task	access object	operator info
Projection_5	10000.00	root		test.t.a, test.t.b, test.t.c, test.t.e
└─Projection_13	10000.00	root		test.t.a, test.t.b, test.t.c, test.t.e, plus(test.t.a, 1)
  └─IndexLookUp_12	10000.00	root		
    ├─IndexFullScan_10(Build)	10000.00	cop[tikv]	table:t, index:expr_idx_c(`a` + 1)	keep order:true, stats:pseudo
    └─TableRowIDScan_11(Probe)	10000.00	cop[tikv]	table:t	keep order:false, stats:pseudo
select * from t order by a+1;
a	b	c	e
-1	-2	0	-3
0	0	1	0
0	0	1	0
1	2	2	3
2	2.1	3	4.1
5	3	6	8
5	-1	6	4
desc select a+1 from t order by a+1;
id	estRows	task	access object	operator info
IndexReader_14	10000.00	root		index:IndexFullScan_13
└─IndexFullScan_13	10000.00	cop[tikv]	table:t, index:expr_idx_c(`a` + 1)	keep order:true, stats:pseudo
select a+1 from t order by a+1;
a+1
0
1
1
2
3
6
6
desc select b+a from t order by b+a;
id	estRows	task	access object	operator info
IndexReader_14	10000.00	root		index:IndexFullScan_13
└─IndexFullScan_13	10000.00	cop[tikv]	table:t, index:expr_idx_e(`b` + `a`)	keep order:true, stats:pseudo
select b+a from t order by b+a;
b+a
-3
0
0
3
4
4.1
8
desc update t set a=1 where a+1 = 3;
id	estRows	task	access object	operator info
Update_4	N/A	root		N/A
└─IndexLookUp_11	10.00	root		
  ├─IndexRangeScan_9(Build)	10.00	cop[tikv]	table:t, index:expr_idx_c(`a` + 1)	range:[3,3], keep order:false, stats:pseudo
  └─TableRowIDScan_10(Probe)	10.00	cop[tikv]	table:t	keep order:false, stats:pseudo
desc update t set a=2, b = 3 where b+a = 3;
id	estRows	task	access object	operator info
Update_4	N/A	root		N/A
└─IndexLookUp_11	10.00	root		
  ├─IndexRangeScan_9(Build)	10.00	cop[tikv]	table:t, index:expr_idx_e(`b` + `a`)	range:[3,3], keep order:false, stats:pseudo
  └─TableRowIDScan_10(Probe)	10.00	cop[tikv]	table:t	keep order:false, stats:pseudo
desc delete from t where a+1 = 3;
id	estRows	task	access object	operator info
Delete_4	N/A	root		N/A
└─IndexLookUp_11	10.00	root		
  ├─IndexRangeScan_9(Build)	10.00	cop[tikv]	table:t, index:expr_idx_c(`a` + 1)	range:[3,3], keep order:false, stats:pseudo
  └─TableRowIDScan_10(Probe)	10.00	cop[tikv]	table:t	keep order:false, stats:pseudo
desc delete from t where b+a = 0;
id	estRows	task	access object	operator info
Delete_4	N/A	root		N/A
└─IndexLookUp_11	10.00	root		
  ├─IndexRangeScan_9(Build)	10.00	cop[tikv]	table:t, index:expr_idx_e(`b` + `a`)	range:[0,0], keep order:false, stats:pseudo
  └─TableRowIDScan_10(Probe)	10.00	cop[tikv]	table:t	keep order:false, stats:pseudo
alter table t drop index expr_idx_c;
alter table t drop index expr_idx_e;
truncate table t;
alter table t add UNIQUE expr_idx_c((a+1));
alter table t add UNIQUE expr_idx_e((b+a));
insert into t values (2, 2.1, default, default);
desc select * from t where a+1 = 3;
id	estRows	task	access object	operator info
Projection_4	1.00	root		test.t.a, test.t.b, test.t.c, test.t.e
└─Point_Get_5	1.00	root	table:t, index:expr_idx_c(`a` + 1)	
drop table if exists t0;
create table t0(c0 float(24), c1 double as (c0) unique);
explain format = 'brief' select c0 from t0;
id	estRows	task	access object	operator info
TableReader	10000.00	root		data:TableFullScan
└─TableFullScan	10000.00	cop[tikv]	table:t0	keep order:false, stats:pseudo
 -- TableRead
drop table if exists t0;
create table t0(c0 float(25), c1 double as (c0) unique);
explain format = 'brief' select c0 from t0;
id	estRows	task	access object	operator info
IndexReader	10000.00	root		index:IndexFullScan
└─IndexFullScan	10000.00	cop[tikv]	table:t0, index:c1(c1)	keep order:false, stats:pseudo
 -- IndexRead
drop table if exists t0;
create table t0(c0 double, c1 double as (c0) unique);
explain format = 'brief' select c0 from t0;
id	estRows	task	access object	operator info
IndexReader	10000.00	root		index:IndexFullScan
└─IndexFullScan	10000.00	cop[tikv]	table:t0, index:c1(c1)	keep order:false, stats:pseudo
 -- IndexRead
drop table if exists t0;
create table t0(c0 double, c1 double as (c0) unique);
explain format = 'brief' select c0 from t0;
id	estRows	task	access object	operator info
IndexReader	10000.00	root		index:IndexFullScan
└─IndexFullScan	10000.00	cop[tikv]	table:t0, index:c1(c1)	keep order:false, stats:pseudo
 -- IndexRead
drop table if exists t0;
create table t0(c0 float(24), c1 float as (c0) unique);
explain format = 'brief' select c0 from t0;
id	estRows	task	access object	operator info
IndexReader	10000.00	root		index:IndexFullScan
└─IndexFullScan	10000.00	cop[tikv]	table:t0, index:c1(c1)	keep order:false, stats:pseudo
 -- IndexRead
drop table if exists t0;
create table t0(c0 float(25), c1 float as (c0) unique);
explain format = 'brief' select c0 from t0;
id	estRows	task	access object	operator info
TableReader	10000.00	root		data:TableFullScan
└─TableFullScan	10000.00	cop[tikv]	table:t0	keep order:false, stats:pseudo
 -- TableRead
drop table if exists t0;
create table t0(c0 double, c1 float as (c0) unique);
explain format = 'brief' select c0 from t0;
id	estRows	task	access object	operator info
TableReader	10000.00	root		data:TableFullScan
└─TableFullScan	10000.00	cop[tikv]	table:t0	keep order:false, stats:pseudo
 -- TableRead
drop table if exists t0;
create table t0(c0 double, c1 float as (c0) unique);
explain format = 'brief' select c0 from t0;
id	estRows	task	access object	operator info
TableReader	10000.00	root		data:TableFullScan
└─TableFullScan	10000.00	cop[tikv]	table:t0	keep order:false, stats:pseudo
 -- TableRead
drop table if exists tbl1;
create table tbl1 (id int unsigned not null auto_increment primary key, s int, index((md5(s))));
insert into tbl1 (id) select null;
 insert into tbl1 (id) select null from tbl1;
 insert into tbl1 (id) select null from tbl1;
 insert into tbl1 (id) select null from tbl1;
 insert into tbl1 (id) select null from tbl1;
 insert into tbl1 (id) select null from tbl1;
 insert into tbl1 (id) select null from tbl1;
 insert into tbl1 (id) select null from tbl1;
 insert into tbl1 (id) select null from tbl1;
 insert into tbl1 (id) select null from tbl1;
 insert into tbl1 (id) select null from tbl1;
 insert into tbl1 (id) select null from tbl1;
update tbl1 set s=id%32;
explain format = 'brief' select count(*) from tbl1 where md5(s) like '02e74f10e0327ad868d138f2b4fdd6f%';
id	estRows	task	access object	operator info
StreamAgg	1.00	root		funcs:count(Column#6)->Column#4
└─IndexReader	1.00	root		index:StreamAgg
  └─StreamAgg	1.00	cop[tikv]		funcs:count(1)->Column#6
    └─IndexRangeScan	250.00	cop[tikv]	table:tbl1, index:expression_index(md5(`s`))	range:["02e74f10e0327ad868d138f2b4fdd6f","02e74f10e0327ad868d138f2b4fdd6g"), keep order:false, stats:pseudo
select count(*) from tbl1 use index() where md5(s) like '02e74f10e0327ad868d138f2b4fdd6f%';
count(*)
64
drop table if exists t;
create table t(a int, b varchar(10), key((lower(b)), (a+1)), key((upper(b))));
insert into t values (1, "A"), (2, "B"), (3, "C"), (4, "D"), (5, "E"), (6, "F");
analyze table t;
desc format = 'brief' select * from t where (lower(b) = "a" and a+1 = 2) or (lower(b) = "b" and a+1 = 5);
id	estRows	task	access object	operator info
Projection	1.00	root		test.t.a, test.t.b
└─IndexLookUp	1.00	root		
  ├─IndexRangeScan(Build)	1.00	cop[tikv]	table:t, index:expression_index(lower(`b`), `a` + 1)	range:["a" 2,"a" 2], ["b" 5,"b" 5], keep order:false
  └─TableRowIDScan(Probe)	1.00	cop[tikv]	table:t	keep order:false
desc format = 'brief' select * from t where not (lower(b) >= "a");
id	estRows	task	access object	operator info
Projection	0.00	root		test.t.a, test.t.b
└─IndexLookUp	0.00	root		
  ├─IndexRangeScan(Build)	0.00	cop[tikv]	table:t, index:expression_index(lower(`b`), `a` + 1)	range:[-inf,"a"), keep order:false
  └─TableRowIDScan(Probe)	0.00	cop[tikv]	table:t	keep order:false
desc format = 'brief' select count(upper(b)) from t group by upper(b);
id	estRows	task	access object	operator info
StreamAgg	4.80	root		group by:upper(test.t.b), funcs:count(upper(test.t.b))->Column#7
└─IndexReader	6.00	root		index:IndexFullScan
  └─IndexFullScan	6.00	cop[tikv]	table:t, index:expression_index_2(upper(`b`))	keep order:true
desc format = 'brief' select max(upper(b)) from t group by upper(b);
id	estRows	task	access object	operator info
StreamAgg	4.80	root		group by:upper(test.t.b), funcs:max(upper(test.t.b))->Column#7
└─IndexReader	6.00	root		index:IndexFullScan
  └─IndexFullScan	6.00	cop[tikv]	table:t, index:expression_index_2(upper(`b`))	keep order:true
desc format = 'brief' select count(upper(b)) from t use index() group by upper(b);
id	estRows	task	access object	operator info
HashAgg	6.00	root		group by:Column#9, funcs:count(Column#8)->Column#7
└─Projection	6.00	root		upper(test.t.b)->Column#8, upper(test.t.b)->Column#9
  └─TableReader	6.00	root		data:TableFullScan
    └─TableFullScan	6.00	cop[tikv]	table:t	keep order:false
desc format = 'brief' select max(upper(b)) from t use index() group by upper(b);
id	estRows	task	access object	operator info
HashAgg	6.00	root		group by:Column#9, funcs:max(Column#8)->Column#7
└─Projection	6.00	root		upper(test.t.b)->Column#8, upper(test.t.b)->Column#9
  └─TableReader	6.00	root		data:TableFullScan
    └─TableFullScan	6.00	cop[tikv]	table:t	keep order:false
