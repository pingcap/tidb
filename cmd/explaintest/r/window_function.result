use test;
drop table if exists t;
create table t (a int, b int, c timestamp, index idx(a));
set @@tidb_enable_window_function = 1;
set @@session.tidb_window_concurrency = 1;
set @@session.tidb_executors_concurrency = 1;
explain select sum(a) over() from t;
id	estRows	task	operator info
Projection_7	10000.00	root	Column#6
└─Window_8	10000.00	root	sum(cast(test.t.a, decimal(65,0) BINARY))->Column#6 over()
  └─IndexReader_12	10000.00	root	index:IndexFullScan_11
    └─IndexFullScan_11	10000.00	cop[tikv]	table:t, index:a, keep order:false, stats:pseudo
explain select sum(a) over(partition by a) from t;
id	estRows	task	operator info
Projection_7	10000.00	root	Column#6
└─Window_8	10000.00	root	sum(cast(test.t.a, decimal(65,0) BINARY))->Column#6 over(partition by test.t.a)
  └─IndexReader_10	10000.00	root	index:IndexFullScan_9
    └─IndexFullScan_9	10000.00	cop[tikv]	table:t, index:a, keep order:true, stats:pseudo
explain select sum(a) over(partition by a order by b) from t;
id	estRows	task	operator info
Projection_7	10000.00	root	Column#6
└─Window_8	10000.00	root	sum(cast(test.t.a, decimal(65,0) BINARY))->Column#6 over(partition by test.t.a order by test.t.b asc range between unbounded preceding and current row)
  └─Sort_11	10000.00	root	test.t.a:asc, test.t.b:asc
    └─TableReader_10	10000.00	root	data:TableFullScan_9
      └─TableFullScan_9	10000.00	cop[tikv]	table:t, keep order:false, stats:pseudo
explain select sum(a) over(partition by a order by b rows unbounded preceding) from t;
id	estRows	task	operator info
Projection_7	10000.00	root	Column#6
└─Window_8	10000.00	root	sum(cast(test.t.a, decimal(65,0) BINARY))->Column#6 over(partition by test.t.a order by test.t.b asc rows between unbounded preceding and current row)
  └─Sort_11	10000.00	root	test.t.a:asc, test.t.b:asc
    └─TableReader_10	10000.00	root	data:TableFullScan_9
      └─TableFullScan_9	10000.00	cop[tikv]	table:t, keep order:false, stats:pseudo
explain select sum(a) over(partition by a order by b rows between 1 preceding and 1 following) from t;
id	estRows	task	operator info
Projection_7	10000.00	root	Column#6
└─Window_8	10000.00	root	sum(cast(test.t.a, decimal(65,0) BINARY))->Column#6 over(partition by test.t.a order by test.t.b asc rows between 1 preceding and 1 following)
  └─Sort_11	10000.00	root	test.t.a:asc, test.t.b:asc
    └─TableReader_10	10000.00	root	data:TableFullScan_9
      └─TableFullScan_9	10000.00	cop[tikv]	table:t, keep order:false, stats:pseudo
explain select sum(a) over(partition by a order by b range between 1 preceding and 1 following) from t;
id	estRows	task	operator info
Projection_7	10000.00	root	Column#6
└─Window_8	10000.00	root	sum(cast(test.t.a, decimal(65,0) BINARY))->Column#6 over(partition by test.t.a order by test.t.b asc range between 1 preceding and 1 following)
  └─Sort_11	10000.00	root	test.t.a:asc, test.t.b:asc
    └─TableReader_10	10000.00	root	data:TableFullScan_9
      └─TableFullScan_9	10000.00	cop[tikv]	table:t, keep order:false, stats:pseudo
explain select sum(a) over(partition by a order by c range between interval '2:30' minute_second preceding and interval '2:30' minute_second following) from t;
id	estRows	task	operator info
Projection_7	10000.00	root	Column#6
└─Window_8	10000.00	root	sum(cast(test.t.a, decimal(65,0) BINARY))->Column#6 over(partition by test.t.a order by test.t.c asc range between interval "2:30" "MINUTE_SECOND" preceding and interval "2:30" "MINUTE_SECOND" following)
  └─Sort_11	10000.00	root	test.t.a:asc, test.t.c:asc
    └─TableReader_10	10000.00	root	data:TableFullScan_9
      └─TableFullScan_9	10000.00	cop[tikv]	table:t, keep order:false, stats:pseudo
set @@session.tidb_window_concurrency = 4;
set @@session.tidb_executors_concurrency = 4;
explain select sum(a) over() from t;
id	estRows	task	operator info
Projection_7	10000.00	root	Column#6
└─Window_8	10000.00	root	sum(cast(test.t.a, decimal(65,0) BINARY))->Column#6 over()
  └─IndexReader_12	10000.00	root	index:IndexFullScan_11
    └─IndexFullScan_11	10000.00	cop[tikv]	table:t, index:a, keep order:false, stats:pseudo
explain select sum(a) over(partition by a) from t;
id	estRows	task	operator info
Projection_7	10000.00	root	Column#6
└─Window_8	10000.00	root	sum(cast(test.t.a, decimal(65,0) BINARY))->Column#6 over(partition by test.t.a)
  └─IndexReader_11	10000.00	root	index:IndexFullScan_10
    └─IndexFullScan_10	10000.00	cop[tikv]	table:t, index:a, keep order:true, stats:pseudo
explain select sum(a) over(partition by a order by b) from t;
id	estRows	task	operator info
Projection_7	10000.00	root	Column#6
└─Shuffle_17	10000.00	root	execution info: concurrency:4, fan out:1, splitter:none, merger:random
  └─Window_9	10000.00	root	sum(cast(test.t.a, decimal(65,0) BINARY))->Column#6 over(partition by test.t.a order by test.t.b asc range between unbounded preceding and current row)
    └─Sort_16	2500.00	root	test.t.a:asc, test.t.b:asc
      └─Shuffle_15	2500.00	root	execution info: concurrency:1, fan out:4, splitter:hash(test.t.a), merger:none
        └─TableReader_14	10000.00	root	data:TableFullScan_13
          └─TableFullScan_13	10000.00	cop[tikv]	table:t, keep order:false, stats:pseudo
explain select sum(a) over(partition by a order by b rows unbounded preceding) from t;
id	estRows	task	operator info
Projection_7	10000.00	root	Column#6
└─Shuffle_17	10000.00	root	execution info: concurrency:4, fan out:1, splitter:none, merger:random
  └─Window_9	10000.00	root	sum(cast(test.t.a, decimal(65,0) BINARY))->Column#6 over(partition by test.t.a order by test.t.b asc rows between unbounded preceding and current row)
    └─Sort_16	2500.00	root	test.t.a:asc, test.t.b:asc
      └─Shuffle_15	2500.00	root	execution info: concurrency:1, fan out:4, splitter:hash(test.t.a), merger:none
        └─TableReader_14	10000.00	root	data:TableFullScan_13
          └─TableFullScan_13	10000.00	cop[tikv]	table:t, keep order:false, stats:pseudo
explain select sum(a) over(partition by a order by b rows between 1 preceding and 1 following) from t;
id	estRows	task	operator info
Projection_7	10000.00	root	Column#6
└─Shuffle_17	10000.00	root	execution info: concurrency:4, fan out:1, splitter:none, merger:random
  └─Window_9	10000.00	root	sum(cast(test.t.a, decimal(65,0) BINARY))->Column#6 over(partition by test.t.a order by test.t.b asc rows between 1 preceding and 1 following)
    └─Sort_16	2500.00	root	test.t.a:asc, test.t.b:asc
      └─Shuffle_15	2500.00	root	execution info: concurrency:1, fan out:4, splitter:hash(test.t.a), merger:none
        └─TableReader_14	10000.00	root	data:TableFullScan_13
          └─TableFullScan_13	10000.00	cop[tikv]	table:t, keep order:false, stats:pseudo
explain select sum(a) over(partition by a order by b range between 1 preceding and 1 following) from t;
id	estRows	task	operator info
Projection_7	10000.00	root	Column#6
└─Shuffle_17	10000.00	root	execution info: concurrency:4, fan out:1, splitter:none, merger:random
  └─Window_9	10000.00	root	sum(cast(test.t.a, decimal(65,0) BINARY))->Column#6 over(partition by test.t.a order by test.t.b asc range between 1 preceding and 1 following)
    └─Sort_16	2500.00	root	test.t.a:asc, test.t.b:asc
      └─Shuffle_15	2500.00	root	execution info: concurrency:1, fan out:4, splitter:hash(test.t.a), merger:none
        └─TableReader_14	10000.00	root	data:TableFullScan_13
          └─TableFullScan_13	10000.00	cop[tikv]	table:t, keep order:false, stats:pseudo
explain select sum(a) over(partition by a order by c range between interval '2:30' minute_second preceding and interval '2:30' minute_second following) from t;
id	estRows	task	operator info
Projection_7	10000.00	root	Column#6
└─Shuffle_17	10000.00	root	execution info: concurrency:4, fan out:1, splitter:none, merger:random
  └─Window_9	10000.00	root	sum(cast(test.t.a, decimal(65,0) BINARY))->Column#6 over(partition by test.t.a order by test.t.c asc range between interval "2:30" "MINUTE_SECOND" preceding and interval "2:30" "MINUTE_SECOND" following)
    └─Sort_16	2500.00	root	test.t.a:asc, test.t.c:asc
      └─Shuffle_15	2500.00	root	execution info: concurrency:1, fan out:4, splitter:hash(test.t.a), merger:none
        └─TableReader_14	10000.00	root	data:TableFullScan_13
          └─TableFullScan_13	10000.00	cop[tikv]	table:t, keep order:false, stats:pseudo
explain select sum(a) over(partition by a order by b), avg(a) over(partition by a+1 order by b) from t;
id	estRows	task	operator info
Projection_9	10000.00	root	Column#9, Column#8
└─Shuffle_30	10000.00	root	execution info: concurrency:4, fan out:1, splitter:none, merger:random
  └─Window_11	10000.00	root	sum(cast(test.t.a, decimal(65,0) BINARY))->Column#9 over(partition by test.t.a order by test.t.b asc range between unbounded preceding and current row)
    └─Sort_29	2500.00	root	test.t.a:asc, test.t.b:asc
      └─Shuffle_28	2500.00	root	execution info: concurrency:4, fan out:4, splitter:hash(test.t.a), merger:merge-sort(Column#7,test.t.b)
        └─Window_25	10000.00	root	avg(cast(test.t.a, decimal(65,4) BINARY))->Column#8 over(partition by Column#7 order by test.t.b asc range between unbounded preceding and current row)
          └─Sort_21	2500.00	root	Column#7:asc, test.t.b:asc
            └─Shuffle_20	2500.00	root	execution info: concurrency:1, fan out:4, splitter:hash(Column#7), merger:none
              └─Projection_19	10000.00	root	test.t.a, test.t.b, plus(test.t.a, 1)->Column#7
                └─TableReader_16	10000.00	root	data:TableFullScan_15
                  └─TableFullScan_15	10000.00	cop[tikv]	table:t, keep order:false, stats:pseudo
explain select sum(a) over(partition by b order by c) from t;
id	estRows	task	operator info
Projection_7	10000.00	root	Column#6
└─Shuffle_17	10000.00	root	execution info: concurrency:4, fan out:1, splitter:none, merger:random
  └─Window_9	10000.00	root	sum(cast(test.t.a, decimal(65,0) BINARY))->Column#6 over(partition by test.t.b order by test.t.c asc range between unbounded preceding and current row)
    └─Sort_16	2500.00	root	test.t.b:asc, test.t.c:asc
      └─Shuffle_15	2500.00	root	execution info: concurrency:1, fan out:4, splitter:hash(test.t.b), merger:none
        └─TableReader_14	10000.00	root	data:TableFullScan_13
          └─TableFullScan_13	10000.00	cop[tikv]	table:t, keep order:false, stats:pseudo
explain select sum(a) over(partition by b order by c) from t order by b, c;
id	estRows	task	operator info
Projection_8	10000.00	root	Column#6
└─Shuffle_25	10000.00	root	execution info: concurrency:4, fan out:1, splitter:none, merger:merge-sort(test.t.b,test.t.c)
  └─Window_24	10000.00	root	sum(cast(test.t.a, decimal(65,0) BINARY))->Column#6 over(partition by test.t.b order by test.t.c asc range between unbounded preceding and current row)
    └─Sort_21	2500.00	root	test.t.b:asc, test.t.c:asc
      └─Shuffle_20	2500.00	root	execution info: concurrency:1, fan out:4, splitter:hash(test.t.b), merger:none
        └─TableReader_19	10000.00	root	data:TableFullScan_18
          └─TableFullScan_18	10000.00	cop[tikv]	table:t, keep order:false, stats:pseudo
drop table if exists t1;
create table t1(a int primary key, b int);
insert into t1 values(1, 1), (2, 1), (3, 1), (4, 1);
analyze table t1;
explain select sum(a) over(partition by b) from t1;
id	estRows	task	operator info
Projection_7	4.00	root	Column#4
└─Window_8	4.00	root	sum(cast(test.t1.a, decimal(65,0) BINARY))->Column#4 over(partition by test.t1.b)
  └─Sort_11	4.00	root	test.t1.b:asc
    └─TableReader_10	4.00	root	data:TableFullScan_9
      └─TableFullScan_9	4.00	cop[tikv]	table:t1, keep order:false
insert into t1 values(11, 2), (12, 2), (13, 2), (14, 2);
analyze table t1;
explain select sum(a) over(partition by b) from t1;
id	estRows	task	operator info
Projection_7	8.00	root	Column#4
└─Shuffle_17	8.00	root	execution info: concurrency:4, fan out:1, splitter:none, merger:random
  └─Window_9	8.00	root	sum(cast(test.t1.a, decimal(65,0) BINARY))->Column#4 over(partition by test.t1.b)
    └─Sort_16	2.00	root	test.t1.b:asc
      └─Shuffle_15	2.00	root	execution info: concurrency:1, fan out:4, splitter:hash(test.t1.b), merger:none
        └─TableReader_14	8.00	root	data:TableFullScan_13
          └─TableFullScan_13	8.00	cop[tikv]	table:t1, keep order:false
