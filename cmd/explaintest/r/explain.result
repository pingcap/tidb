drop table if exists t;
create table t (id int, c1 timestamp);
show columns from t;
Field	Type	Null	Key	Default	Extra
id	int(11)	YES		NULL	
c1	timestamp	YES		NULL	
explain t;
Field	Type	Null	Key	Default	Extra
id	int(11)	YES		NULL	
c1	timestamp	YES		NULL	
describe t;
Field	Type	Null	Key	Default	Extra
id	int(11)	YES		NULL	
c1	timestamp	YES		NULL	
desc t;
Field	Type	Null	Key	Default	Extra
id	int(11)	YES		NULL	
c1	timestamp	YES		NULL	
desc t c1;
Field	Type	Null	Key	Default	Extra
c1	timestamp	YES		NULL	
desc t id;
Field	Type	Null	Key	Default	Extra
id	int(11)	YES		NULL	
drop table if exists t;
create table t(id int primary key, a int, b int);
set session tidb_hashagg_partial_concurrency = 1;
set session tidb_hashagg_final_concurrency = 1;
explain format = 'brief' select group_concat(a) from t group by id;
id	estRows	task	access object	operator info
StreamAgg	8000.00	root		group by:Column#6, funcs:group_concat(Column#5 separator ",")->Column#4
└─Projection	10000.00	root		cast(test.t.a, var_string(20))->Column#5, test.t.id
  └─TableReader	10000.00	root		data:TableFullScan
    └─TableFullScan	10000.00	cop[tikv]	table:t	keep order:true, stats:pseudo
explain format = 'brief' select group_concat(a, b) from t group by id;
id	estRows	task	access object	operator info
StreamAgg	8000.00	root		group by:Column#7, funcs:group_concat(Column#5, Column#6 separator ",")->Column#4
└─Projection	10000.00	root		cast(test.t.a, var_string(20))->Column#5, cast(test.t.b, var_string(20))->Column#6, test.t.id
  └─TableReader	10000.00	root		data:TableFullScan
    └─TableFullScan	10000.00	cop[tikv]	table:t	keep order:true, stats:pseudo
explain format = TRADITIONAL select group_concat(a, b) from t group by id;
id	estRows	task	access object	operator info
StreamAgg_8	8000.00	root		group by:Column#7, funcs:group_concat(Column#5, Column#6 separator ",")->Column#4
└─Projection_18	10000.00	root		cast(test.t.a, var_string(20))->Column#5, cast(test.t.b, var_string(20))->Column#6, test.t.id
  └─TableReader_15	10000.00	root		data:TableFullScan_14
    └─TableFullScan_14	10000.00	cop[tikv]	table:t	keep order:true, stats:pseudo
explain format = 'row' select group_concat(a, b) from t group by id;
id	estRows	task	access object	operator info
StreamAgg_8	8000.00	root		group by:Column#7, funcs:group_concat(Column#5, Column#6 separator ",")->Column#4
└─Projection_18	10000.00	root		cast(test.t.a, var_string(20))->Column#5, cast(test.t.b, var_string(20))->Column#6, test.t.id
  └─TableReader_15	10000.00	root		data:TableFullScan_14
    └─TableFullScan_14	10000.00	cop[tikv]	table:t	keep order:true, stats:pseudo
drop table t;
drop view if exists v;
create view v as select cast(replace(substring_index(substring_index("",',',1),':',-1),'"','') as CHAR(32)) as event_id;
desc v;
Field	Type	Null	Key	Default	Extra
event_id	varchar(32)	NO		NULL	
drop table if exists t1, t2;
create table t1 (c_int int, c_decimal decimal(12, 6), primary key (c_int) nonclustered,key((c_int + 1))) ;
create table t2 like t1;
explain format = 'brief' select /*+ agg_to_cop() */ * from t1 where c_decimal in (select c_decimal from t2 where t2.c_int + 1 = 8 + 1);
id	estRows	task	access object	operator info
HashJoin	9.99	root		inner join, equal:[eq(test.t2.c_decimal, test.t1.c_decimal)]
├─HashAgg(Build)	7.99	root		group by:test.t2.c_decimal, funcs:firstrow(test.t2.c_decimal)->test.t2.c_decimal
│ └─IndexLookUp	7.99	root		
│   ├─IndexRangeScan(Build)	10.00	cop[tikv]	table:t2, index:expression_index(`c_int` + 1)	range:[9,9], keep order:false, stats:pseudo
│   └─HashAgg(Probe)	7.99	cop[tikv]		group by:test.t2.c_decimal, 
│     └─Selection	9.99	cop[tikv]		not(isnull(test.t2.c_decimal))
│       └─TableRowIDScan	10.00	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─TableReader(Probe)	9990.00	root		data:Selection
  └─Selection	9990.00	cop[tikv]		not(isnull(test.t1.c_decimal))
    └─TableFullScan	10000.00	cop[tikv]	table:t1	keep order:false, stats:pseudo
drop table t1;
drop table t2;
