// Code generated by protoc-gen-go.
// source: Encryption.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = math.Inf

type WrappedKey struct {
	Algorithm        *string `protobuf:"bytes,1,req,name=algorithm" json:"algorithm,omitempty"`
	Length           *uint32 `protobuf:"varint,2,req,name=length" json:"length,omitempty"`
	Data             []byte  `protobuf:"bytes,3,req,name=data" json:"data,omitempty"`
	Iv               []byte  `protobuf:"bytes,4,opt,name=iv" json:"iv,omitempty"`
	Hash             []byte  `protobuf:"bytes,5,opt,name=hash" json:"hash,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *WrappedKey) Reset()         { *m = WrappedKey{} }
func (m *WrappedKey) String() string { return proto1.CompactTextString(m) }
func (*WrappedKey) ProtoMessage()    {}

func (m *WrappedKey) GetAlgorithm() string {
	if m != nil && m.Algorithm != nil {
		return *m.Algorithm
	}
	return ""
}

func (m *WrappedKey) GetLength() uint32 {
	if m != nil && m.Length != nil {
		return *m.Length
	}
	return 0
}

func (m *WrappedKey) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *WrappedKey) GetIv() []byte {
	if m != nil {
		return m.Iv
	}
	return nil
}

func (m *WrappedKey) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func init() {
}
