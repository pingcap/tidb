load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "gcworker",
    srcs = ["gc_worker.go"],
    importpath = "github.com/pingcap/tidb/store/gcworker",
    visibility = ["//visibility:public"],
    deps = [
        "//br/pkg/utils",
        "//ddl",
        "//ddl/label",
        "//ddl/placement",
        "//ddl/util",
        "//domain/infosync",
        "//kv",
        "//metrics",
        "//privilege",
        "//session",
        "//sessionctx/variable",
        "//tablecodec",
        "//util/codec",
        "//util/dbterror",
        "//util/logutil",
        "//vendor/github.com/pingcap/errors",
        "//vendor/github.com/pingcap/failpoint",
        "//vendor/github.com/pingcap/kvproto/pkg/errorpb",
        "//vendor/github.com/pingcap/kvproto/pkg/kvrpcpb",
        "//vendor/github.com/pingcap/kvproto/pkg/metapb",
        "//vendor/github.com/pingcap/tidb/parser/model",
        "//vendor/github.com/pingcap/tidb/parser/terror",
        "//vendor/github.com/tikv/client-go/v2/error",
        "//vendor/github.com/tikv/client-go/v2/kv",
        "//vendor/github.com/tikv/client-go/v2/oracle",
        "//vendor/github.com/tikv/client-go/v2/tikv",
        "//vendor/github.com/tikv/client-go/v2/tikvrpc",
        "//vendor/github.com/tikv/client-go/v2/txnkv/rangetask",
        "//vendor/github.com/tikv/client-go/v2/txnkv/txnlock",
        "//vendor/github.com/tikv/client-go/v2/util",
        "//vendor/github.com/tikv/pd/client",
        "//vendor/go.uber.org/zap",
        "//vendor/golang.org/x/exp/slices",
    ],
)

go_test(
    name = "gcworker_test",
    timeout = "short",
    srcs = [
        "gc_worker_test.go",
        "main_test.go",
    ],
    embed = [":gcworker"],
    flaky = True,
    deps = [
        "//ddl/placement",
        "//ddl/util",
        "//domain",
        "//domain/infosync",
        "//kv",
        "//session",
        "//store/mockstore",
        "//testkit/testmain",
        "//testkit/testsetup",
        "//vendor/github.com/pingcap/errors",
        "//vendor/github.com/pingcap/failpoint",
        "//vendor/github.com/pingcap/kvproto/pkg/errorpb",
        "//vendor/github.com/pingcap/kvproto/pkg/kvrpcpb",
        "//vendor/github.com/pingcap/kvproto/pkg/metapb",
        "//vendor/github.com/pingcap/tidb/parser/model",
        "//vendor/github.com/stretchr/testify/require",
        "//vendor/github.com/tikv/client-go/v2/oracle",
        "//vendor/github.com/tikv/client-go/v2/oracle/oracles",
        "//vendor/github.com/tikv/client-go/v2/testutils",
        "//vendor/github.com/tikv/client-go/v2/tikv",
        "//vendor/github.com/tikv/client-go/v2/tikvrpc",
        "//vendor/github.com/tikv/client-go/v2/txnkv/txnlock",
        "//vendor/github.com/tikv/pd/client",
        "//vendor/go.uber.org/goleak",
    ],
)
