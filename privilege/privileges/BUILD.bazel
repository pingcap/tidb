load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "privileges",
    srcs = [
        "cache.go",
        "errors.go",
        "privileges.go",
        "tidb_auth_token.go",
    ],
    importpath = "github.com/pingcap/tidb/privilege/privileges",
    visibility = ["//visibility:public"],
    deps = [
        "//errno",
        "//extension",
        "//infoschema",
        "//kv",
        "//privilege",
        "//sessionctx",
        "//sessionctx/variable",
        "//types",
        "//util",
        "//util/chunk",
        "//util/dbterror",
        "//util/hack",
        "//util/logutil",
        "//util/sem",
        "//util/sqlexec",
        "//util/stringutil",
        "//vendor/github.com/lestrrat-go/jwx/v2/jwk",
        "//vendor/github.com/lestrrat-go/jwx/v2/jws",
        "//vendor/github.com/lestrrat-go/jwx/v2/jwt",
        "//vendor/github.com/lestrrat-go/jwx/v2/jwt/openid",
        "//vendor/github.com/pingcap/errors",
        "//vendor/github.com/pingcap/tidb/parser/ast",
        "//vendor/github.com/pingcap/tidb/parser/auth",
        "//vendor/github.com/pingcap/tidb/parser/mysql",
        "//vendor/github.com/pingcap/tidb/parser/terror",
        "//vendor/go.uber.org/zap",
        "//vendor/golang.org/x/exp/slices",
    ],
)

go_test(
    name = "privileges_test",
    timeout = "short",
    srcs = [
        "cache_test.go",
        "main_test.go",
        "privileges_test.go",
        "tidb_auth_token_test.go",
    ],
    embed = [":privileges"],
    flaky = True,
    shard_count = 50,
    deps = [
        "//config",
        "//errno",
        "//executor",
        "//kv",
        "//planner/core",
        "//privilege",
        "//session",
        "//sessionctx",
        "//sessionctx/variable",
        "//testkit",
        "//testkit/testsetup",
        "//testkit/testutil",
        "//util",
        "//util/hack",
        "//util/sem",
        "//util/sqlexec",
        "//vendor/github.com/lestrrat-go/jwx/v2/jwa",
        "//vendor/github.com/lestrrat-go/jwx/v2/jwk",
        "//vendor/github.com/lestrrat-go/jwx/v2/jws",
        "//vendor/github.com/lestrrat-go/jwx/v2/jwt",
        "//vendor/github.com/lestrrat-go/jwx/v2/jwt/openid",
        "//vendor/github.com/pingcap/tidb/parser/auth",
        "//vendor/github.com/pingcap/tidb/parser/mysql",
        "//vendor/github.com/pingcap/tidb/parser/terror",
        "//vendor/github.com/stretchr/testify/require",
        "//vendor/go.uber.org/goleak",
    ],
)
