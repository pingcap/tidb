load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "buffer_store.go",
        "error.go",
        "fault_injection.go",
        "iter.go",
        "key.go",
        "kv.go",
        "memdb_buffer.go",
        "mock.go",
        "txn.go",
        "union_iter.go",
        "union_store.go",
        "utils.go",
        "version.go",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//mysql:go_default_library",
        "//store/tikv/oracle:go_default_library",
        "//terror:go_default_library",
        "//vendor/github.com/juju/errors:go_default_library",
        "//vendor/github.com/ngaut/log:go_default_library",
        "//vendor/github.com/pingcap/goleveldb/leveldb:go_default_library",
        "//vendor/github.com/pingcap/goleveldb/leveldb/comparer:go_default_library",
        "//vendor/github.com/pingcap/goleveldb/leveldb/iterator:go_default_library",
        "//vendor/github.com/pingcap/goleveldb/leveldb/memdb:go_default_library",
        "//vendor/github.com/pingcap/goleveldb/leveldb/util:go_default_library",
        "//vendor/golang.org/x/net/context:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "buffer_store_test.go",
        "key_test.go",
        "mem_buffer_test.go",
        "mock_test.go",
        "txn_test.go",
        "union_store_test.go",
        "utils_test.go",
        "version_test.go",
    ],
    library = ":go_default_library",
    deps = [
        "//terror:go_default_library",
        "//util/codec:go_default_library",
        "//util/testleak:go_default_library",
        "//util/types:go_default_library",
        "//vendor/github.com/pingcap/check:go_default_library",
    ],
)
