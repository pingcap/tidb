// Code generated by protoc-gen-go.
// source: RegionServerStatus.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = math.Inf

type RegionStateTransition_TransitionCode int32

const (
	RegionStateTransition_OPENED      RegionStateTransition_TransitionCode = 0
	RegionStateTransition_FAILED_OPEN RegionStateTransition_TransitionCode = 1
	// * No failed_close, in which case region server will abort
	RegionStateTransition_CLOSED RegionStateTransition_TransitionCode = 2
	// * Ask master for ok to split/merge region(s)
	RegionStateTransition_READY_TO_SPLIT RegionStateTransition_TransitionCode = 3
	RegionStateTransition_READY_TO_MERGE RegionStateTransition_TransitionCode = 4
	RegionStateTransition_SPLIT_PONR     RegionStateTransition_TransitionCode = 5
	RegionStateTransition_MERGE_PONR     RegionStateTransition_TransitionCode = 6
	RegionStateTransition_SPLIT          RegionStateTransition_TransitionCode = 7
	RegionStateTransition_MERGED         RegionStateTransition_TransitionCode = 8
	RegionStateTransition_SPLIT_REVERTED RegionStateTransition_TransitionCode = 9
	RegionStateTransition_MERGE_REVERTED RegionStateTransition_TransitionCode = 10
)

var RegionStateTransition_TransitionCode_name = map[int32]string{
	0:  "OPENED",
	1:  "FAILED_OPEN",
	2:  "CLOSED",
	3:  "READY_TO_SPLIT",
	4:  "READY_TO_MERGE",
	5:  "SPLIT_PONR",
	6:  "MERGE_PONR",
	7:  "SPLIT",
	8:  "MERGED",
	9:  "SPLIT_REVERTED",
	10: "MERGE_REVERTED",
}
var RegionStateTransition_TransitionCode_value = map[string]int32{
	"OPENED":         0,
	"FAILED_OPEN":    1,
	"CLOSED":         2,
	"READY_TO_SPLIT": 3,
	"READY_TO_MERGE": 4,
	"SPLIT_PONR":     5,
	"MERGE_PONR":     6,
	"SPLIT":          7,
	"MERGED":         8,
	"SPLIT_REVERTED": 9,
	"MERGE_REVERTED": 10,
}

func (x RegionStateTransition_TransitionCode) Enum() *RegionStateTransition_TransitionCode {
	p := new(RegionStateTransition_TransitionCode)
	*p = x
	return p
}
func (x RegionStateTransition_TransitionCode) String() string {
	return proto1.EnumName(RegionStateTransition_TransitionCode_name, int32(x))
}
func (x *RegionStateTransition_TransitionCode) UnmarshalJSON(data []byte) error {
	value, err := proto1.UnmarshalJSONEnum(RegionStateTransition_TransitionCode_value, data, "RegionStateTransition_TransitionCode")
	if err != nil {
		return err
	}
	*x = RegionStateTransition_TransitionCode(value)
	return nil
}

type RegionServerStartupRequest struct {
	// * Port number this regionserver is up on
	Port *uint32 `protobuf:"varint,1,req,name=port" json:"port,omitempty"`
	// * This servers' startcode
	ServerStartCode *uint64 `protobuf:"varint,2,req,name=server_start_code" json:"server_start_code,omitempty"`
	// * Current time of the region server in ms
	ServerCurrentTime *uint64 `protobuf:"varint,3,req,name=server_current_time" json:"server_current_time,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *RegionServerStartupRequest) Reset()         { *m = RegionServerStartupRequest{} }
func (m *RegionServerStartupRequest) String() string { return proto1.CompactTextString(m) }
func (*RegionServerStartupRequest) ProtoMessage()    {}

func (m *RegionServerStartupRequest) GetPort() uint32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

func (m *RegionServerStartupRequest) GetServerStartCode() uint64 {
	if m != nil && m.ServerStartCode != nil {
		return *m.ServerStartCode
	}
	return 0
}

func (m *RegionServerStartupRequest) GetServerCurrentTime() uint64 {
	if m != nil && m.ServerCurrentTime != nil {
		return *m.ServerCurrentTime
	}
	return 0
}

type RegionServerStartupResponse struct {
	// *
	// Configuration for the regionserver to use: e.g. filesystem,
	// hbase rootdir, the hostname to use creating the RegionServer ServerName,
	// etc
	MapEntries       []*NameStringPair `protobuf:"bytes,1,rep,name=map_entries" json:"map_entries,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *RegionServerStartupResponse) Reset()         { *m = RegionServerStartupResponse{} }
func (m *RegionServerStartupResponse) String() string { return proto1.CompactTextString(m) }
func (*RegionServerStartupResponse) ProtoMessage()    {}

func (m *RegionServerStartupResponse) GetMapEntries() []*NameStringPair {
	if m != nil {
		return m.MapEntries
	}
	return nil
}

type RegionServerReportRequest struct {
	Server *ServerName `protobuf:"bytes,1,req,name=server" json:"server,omitempty"`
	// * load the server is under
	Load             *ServerLoad `protobuf:"bytes,2,opt,name=load" json:"load,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *RegionServerReportRequest) Reset()         { *m = RegionServerReportRequest{} }
func (m *RegionServerReportRequest) String() string { return proto1.CompactTextString(m) }
func (*RegionServerReportRequest) ProtoMessage()    {}

func (m *RegionServerReportRequest) GetServer() *ServerName {
	if m != nil {
		return m.Server
	}
	return nil
}

func (m *RegionServerReportRequest) GetLoad() *ServerLoad {
	if m != nil {
		return m.Load
	}
	return nil
}

type RegionServerReportResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RegionServerReportResponse) Reset()         { *m = RegionServerReportResponse{} }
func (m *RegionServerReportResponse) String() string { return proto1.CompactTextString(m) }
func (*RegionServerReportResponse) ProtoMessage()    {}

type ReportRSFatalErrorRequest struct {
	// * name of the server experiencing the error
	Server *ServerName `protobuf:"bytes,1,req,name=server" json:"server,omitempty"`
	// * informative text to expose in the master logs and UI
	ErrorMessage     *string `protobuf:"bytes,2,req,name=error_message" json:"error_message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ReportRSFatalErrorRequest) Reset()         { *m = ReportRSFatalErrorRequest{} }
func (m *ReportRSFatalErrorRequest) String() string { return proto1.CompactTextString(m) }
func (*ReportRSFatalErrorRequest) ProtoMessage()    {}

func (m *ReportRSFatalErrorRequest) GetServer() *ServerName {
	if m != nil {
		return m.Server
	}
	return nil
}

func (m *ReportRSFatalErrorRequest) GetErrorMessage() string {
	if m != nil && m.ErrorMessage != nil {
		return *m.ErrorMessage
	}
	return ""
}

type ReportRSFatalErrorResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ReportRSFatalErrorResponse) Reset()         { *m = ReportRSFatalErrorResponse{} }
func (m *ReportRSFatalErrorResponse) String() string { return proto1.CompactTextString(m) }
func (*ReportRSFatalErrorResponse) ProtoMessage()    {}

type GetLastFlushedSequenceIdRequest struct {
	// * region name
	RegionName       []byte `protobuf:"bytes,1,req,name=region_name" json:"region_name,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetLastFlushedSequenceIdRequest) Reset()         { *m = GetLastFlushedSequenceIdRequest{} }
func (m *GetLastFlushedSequenceIdRequest) String() string { return proto1.CompactTextString(m) }
func (*GetLastFlushedSequenceIdRequest) ProtoMessage()    {}

func (m *GetLastFlushedSequenceIdRequest) GetRegionName() []byte {
	if m != nil {
		return m.RegionName
	}
	return nil
}

type GetLastFlushedSequenceIdResponse struct {
	// * the last HLog sequence id flushed from MemStore to HFile for the region
	LastFlushedSequenceId *uint64 `protobuf:"varint,1,req,name=last_flushed_sequence_id" json:"last_flushed_sequence_id,omitempty"`
	XXX_unrecognized      []byte  `json:"-"`
}

func (m *GetLastFlushedSequenceIdResponse) Reset()         { *m = GetLastFlushedSequenceIdResponse{} }
func (m *GetLastFlushedSequenceIdResponse) String() string { return proto1.CompactTextString(m) }
func (*GetLastFlushedSequenceIdResponse) ProtoMessage()    {}

func (m *GetLastFlushedSequenceIdResponse) GetLastFlushedSequenceId() uint64 {
	if m != nil && m.LastFlushedSequenceId != nil {
		return *m.LastFlushedSequenceId
	}
	return 0
}

type RegionStateTransition struct {
	TransitionCode *RegionStateTransition_TransitionCode `protobuf:"varint,1,req,name=transition_code,enum=proto.RegionStateTransition_TransitionCode" json:"transition_code,omitempty"`
	// * Mutliple regions are involved during merging/splitting
	RegionInfo []*RegionInfo `protobuf:"bytes,2,rep,name=region_info" json:"region_info,omitempty"`
	// * For newly opened region, the open seq num is needed
	OpenSeqNum       *uint64 `protobuf:"varint,3,opt,name=open_seq_num" json:"open_seq_num,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RegionStateTransition) Reset()         { *m = RegionStateTransition{} }
func (m *RegionStateTransition) String() string { return proto1.CompactTextString(m) }
func (*RegionStateTransition) ProtoMessage()    {}

func (m *RegionStateTransition) GetTransitionCode() RegionStateTransition_TransitionCode {
	if m != nil && m.TransitionCode != nil {
		return *m.TransitionCode
	}
	return RegionStateTransition_OPENED
}

func (m *RegionStateTransition) GetRegionInfo() []*RegionInfo {
	if m != nil {
		return m.RegionInfo
	}
	return nil
}

func (m *RegionStateTransition) GetOpenSeqNum() uint64 {
	if m != nil && m.OpenSeqNum != nil {
		return *m.OpenSeqNum
	}
	return 0
}

type ReportRegionStateTransitionRequest struct {
	// * This region server's server name
	Server           *ServerName              `protobuf:"bytes,1,req,name=server" json:"server,omitempty"`
	Transition       []*RegionStateTransition `protobuf:"bytes,2,rep,name=transition" json:"transition,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *ReportRegionStateTransitionRequest) Reset()         { *m = ReportRegionStateTransitionRequest{} }
func (m *ReportRegionStateTransitionRequest) String() string { return proto1.CompactTextString(m) }
func (*ReportRegionStateTransitionRequest) ProtoMessage()    {}

func (m *ReportRegionStateTransitionRequest) GetServer() *ServerName {
	if m != nil {
		return m.Server
	}
	return nil
}

func (m *ReportRegionStateTransitionRequest) GetTransition() []*RegionStateTransition {
	if m != nil {
		return m.Transition
	}
	return nil
}

type ReportRegionStateTransitionResponse struct {
	// * Error message if failed to update the region state
	ErrorMessage     *string `protobuf:"bytes,1,opt,name=error_message" json:"error_message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ReportRegionStateTransitionResponse) Reset()         { *m = ReportRegionStateTransitionResponse{} }
func (m *ReportRegionStateTransitionResponse) String() string { return proto1.CompactTextString(m) }
func (*ReportRegionStateTransitionResponse) ProtoMessage()    {}

func (m *ReportRegionStateTransitionResponse) GetErrorMessage() string {
	if m != nil && m.ErrorMessage != nil {
		return *m.ErrorMessage
	}
	return ""
}

func init() {
	proto1.RegisterEnum("proto.RegionStateTransition_TransitionCode", RegionStateTransition_TransitionCode_name, RegionStateTransition_TransitionCode_value)
}
