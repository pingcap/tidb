// Code generated by protoc-gen-go.
// source: HBase.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = math.Inf

// Comparison operators
type CompareType int32

const (
	CompareType_LESS             CompareType = 0
	CompareType_LESS_OR_EQUAL    CompareType = 1
	CompareType_EQUAL            CompareType = 2
	CompareType_NOT_EQUAL        CompareType = 3
	CompareType_GREATER_OR_EQUAL CompareType = 4
	CompareType_GREATER          CompareType = 5
	CompareType_NO_OP            CompareType = 6
)

var CompareType_name = map[int32]string{
	0: "LESS",
	1: "LESS_OR_EQUAL",
	2: "EQUAL",
	3: "NOT_EQUAL",
	4: "GREATER_OR_EQUAL",
	5: "GREATER",
	6: "NO_OP",
}
var CompareType_value = map[string]int32{
	"LESS":             0,
	"LESS_OR_EQUAL":    1,
	"EQUAL":            2,
	"NOT_EQUAL":        3,
	"GREATER_OR_EQUAL": 4,
	"GREATER":          5,
	"NO_OP":            6,
}

func (x CompareType) Enum() *CompareType {
	p := new(CompareType)
	*p = x
	return p
}
func (x CompareType) String() string {
	return proto1.EnumName(CompareType_name, int32(x))
}
func (x *CompareType) UnmarshalJSON(data []byte) error {
	value, err := proto1.UnmarshalJSONEnum(CompareType_value, data, "CompareType")
	if err != nil {
		return err
	}
	*x = CompareType(value)
	return nil
}

type RegionSpecifier_RegionSpecifierType int32

const (
	// <tablename>,<startkey>,<regionId>.<encodedName>
	RegionSpecifier_REGION_NAME RegionSpecifier_RegionSpecifierType = 1
	// hash of <tablename>,<startkey>,<regionId>
	RegionSpecifier_ENCODED_REGION_NAME RegionSpecifier_RegionSpecifierType = 2
)

var RegionSpecifier_RegionSpecifierType_name = map[int32]string{
	1: "REGION_NAME",
	2: "ENCODED_REGION_NAME",
}
var RegionSpecifier_RegionSpecifierType_value = map[string]int32{
	"REGION_NAME":         1,
	"ENCODED_REGION_NAME": 2,
}

func (x RegionSpecifier_RegionSpecifierType) Enum() *RegionSpecifier_RegionSpecifierType {
	p := new(RegionSpecifier_RegionSpecifierType)
	*p = x
	return p
}
func (x RegionSpecifier_RegionSpecifierType) String() string {
	return proto1.EnumName(RegionSpecifier_RegionSpecifierType_name, int32(x))
}
func (x *RegionSpecifier_RegionSpecifierType) UnmarshalJSON(data []byte) error {
	value, err := proto1.UnmarshalJSONEnum(RegionSpecifier_RegionSpecifierType_value, data, "RegionSpecifier_RegionSpecifierType")
	if err != nil {
		return err
	}
	*x = RegionSpecifier_RegionSpecifierType(value)
	return nil
}

type SnapshotDescription_Type int32

const (
	SnapshotDescription_DISABLED  SnapshotDescription_Type = 0
	SnapshotDescription_FLUSH     SnapshotDescription_Type = 1
	SnapshotDescription_SKIPFLUSH SnapshotDescription_Type = 2
)

var SnapshotDescription_Type_name = map[int32]string{
	0: "DISABLED",
	1: "FLUSH",
	2: "SKIPFLUSH",
}
var SnapshotDescription_Type_value = map[string]int32{
	"DISABLED":  0,
	"FLUSH":     1,
	"SKIPFLUSH": 2,
}

func (x SnapshotDescription_Type) Enum() *SnapshotDescription_Type {
	p := new(SnapshotDescription_Type)
	*p = x
	return p
}
func (x SnapshotDescription_Type) String() string {
	return proto1.EnumName(SnapshotDescription_Type_name, int32(x))
}
func (x *SnapshotDescription_Type) UnmarshalJSON(data []byte) error {
	value, err := proto1.UnmarshalJSONEnum(SnapshotDescription_Type_value, data, "SnapshotDescription_Type")
	if err != nil {
		return err
	}
	*x = SnapshotDescription_Type(value)
	return nil
}

// *
// Table Name
type TableName struct {
	Namespace        []byte `protobuf:"bytes,1,req,name=namespace" json:"namespace,omitempty"`
	Qualifier        []byte `protobuf:"bytes,2,req,name=qualifier" json:"qualifier,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TableName) Reset()         { *m = TableName{} }
func (m *TableName) String() string { return proto1.CompactTextString(m) }
func (*TableName) ProtoMessage()    {}

func (m *TableName) GetNamespace() []byte {
	if m != nil {
		return m.Namespace
	}
	return nil
}

func (m *TableName) GetQualifier() []byte {
	if m != nil {
		return m.Qualifier
	}
	return nil
}

// *
// Table Schema
// Inspired by the rest TableSchema
type TableSchema struct {
	TableName        *TableName            `protobuf:"bytes,1,opt,name=table_name" json:"table_name,omitempty"`
	Attributes       []*BytesBytesPair     `protobuf:"bytes,2,rep,name=attributes" json:"attributes,omitempty"`
	ColumnFamilies   []*ColumnFamilySchema `protobuf:"bytes,3,rep,name=column_families" json:"column_families,omitempty"`
	Configuration    []*NameStringPair     `protobuf:"bytes,4,rep,name=configuration" json:"configuration,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *TableSchema) Reset()         { *m = TableSchema{} }
func (m *TableSchema) String() string { return proto1.CompactTextString(m) }
func (*TableSchema) ProtoMessage()    {}

func (m *TableSchema) GetTableName() *TableName {
	if m != nil {
		return m.TableName
	}
	return nil
}

func (m *TableSchema) GetAttributes() []*BytesBytesPair {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *TableSchema) GetColumnFamilies() []*ColumnFamilySchema {
	if m != nil {
		return m.ColumnFamilies
	}
	return nil
}

func (m *TableSchema) GetConfiguration() []*NameStringPair {
	if m != nil {
		return m.Configuration
	}
	return nil
}

// *
// Column Family Schema
// Inspired by the rest ColumSchemaMessage
type ColumnFamilySchema struct {
	Name             []byte            `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Attributes       []*BytesBytesPair `protobuf:"bytes,2,rep,name=attributes" json:"attributes,omitempty"`
	Configuration    []*NameStringPair `protobuf:"bytes,3,rep,name=configuration" json:"configuration,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *ColumnFamilySchema) Reset()         { *m = ColumnFamilySchema{} }
func (m *ColumnFamilySchema) String() string { return proto1.CompactTextString(m) }
func (*ColumnFamilySchema) ProtoMessage()    {}

func (m *ColumnFamilySchema) GetName() []byte {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ColumnFamilySchema) GetAttributes() []*BytesBytesPair {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *ColumnFamilySchema) GetConfiguration() []*NameStringPair {
	if m != nil {
		return m.Configuration
	}
	return nil
}

// *
// Protocol buffer version of HRegionInfo.
type RegionInfo struct {
	RegionId         *uint64    `protobuf:"varint,1,req,name=region_id" json:"region_id,omitempty"`
	TableName        *TableName `protobuf:"bytes,2,req,name=table_name" json:"table_name,omitempty"`
	StartKey         []byte     `protobuf:"bytes,3,opt,name=start_key" json:"start_key,omitempty"`
	EndKey           []byte     `protobuf:"bytes,4,opt,name=end_key" json:"end_key,omitempty"`
	Offline          *bool      `protobuf:"varint,5,opt,name=offline" json:"offline,omitempty"`
	Split            *bool      `protobuf:"varint,6,opt,name=split" json:"split,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *RegionInfo) Reset()         { *m = RegionInfo{} }
func (m *RegionInfo) String() string { return proto1.CompactTextString(m) }
func (*RegionInfo) ProtoMessage()    {}

func (m *RegionInfo) GetRegionId() uint64 {
	if m != nil && m.RegionId != nil {
		return *m.RegionId
	}
	return 0
}

func (m *RegionInfo) GetTableName() *TableName {
	if m != nil {
		return m.TableName
	}
	return nil
}

func (m *RegionInfo) GetStartKey() []byte {
	if m != nil {
		return m.StartKey
	}
	return nil
}

func (m *RegionInfo) GetEndKey() []byte {
	if m != nil {
		return m.EndKey
	}
	return nil
}

func (m *RegionInfo) GetOffline() bool {
	if m != nil && m.Offline != nil {
		return *m.Offline
	}
	return false
}

func (m *RegionInfo) GetSplit() bool {
	if m != nil && m.Split != nil {
		return *m.Split
	}
	return false
}

// *
// Protocol buffer for favored nodes
type FavoredNodes struct {
	FavoredNode      []*ServerName `protobuf:"bytes,1,rep,name=favored_node" json:"favored_node,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *FavoredNodes) Reset()         { *m = FavoredNodes{} }
func (m *FavoredNodes) String() string { return proto1.CompactTextString(m) }
func (*FavoredNodes) ProtoMessage()    {}

func (m *FavoredNodes) GetFavoredNode() []*ServerName {
	if m != nil {
		return m.FavoredNode
	}
	return nil
}

// *
// Container protocol buffer to specify a region.
// You can specify region by region name, or the hash
// of the region name, which is known as encoded
// region name.
type RegionSpecifier struct {
	Type             *RegionSpecifier_RegionSpecifierType `protobuf:"varint,1,req,name=type,enum=proto.RegionSpecifier_RegionSpecifierType" json:"type,omitempty"`
	Value            []byte                               `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte                               `json:"-"`
}

func (m *RegionSpecifier) Reset()         { *m = RegionSpecifier{} }
func (m *RegionSpecifier) String() string { return proto1.CompactTextString(m) }
func (*RegionSpecifier) ProtoMessage()    {}

func (m *RegionSpecifier) GetType() RegionSpecifier_RegionSpecifierType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return RegionSpecifier_REGION_NAME
}

func (m *RegionSpecifier) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

// *
// A range of time. Both from and to are Java time
// stamp in milliseconds. If you don't specify a time
// range, it means all time.  By default, if not
// specified, from = 0, and to = Long.MAX_VALUE
type TimeRange struct {
	From             *uint64 `protobuf:"varint,1,opt,name=from" json:"from,omitempty"`
	To               *uint64 `protobuf:"varint,2,opt,name=to" json:"to,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TimeRange) Reset()         { *m = TimeRange{} }
func (m *TimeRange) String() string { return proto1.CompactTextString(m) }
func (*TimeRange) ProtoMessage()    {}

func (m *TimeRange) GetFrom() uint64 {
	if m != nil && m.From != nil {
		return *m.From
	}
	return 0
}

func (m *TimeRange) GetTo() uint64 {
	if m != nil && m.To != nil {
		return *m.To
	}
	return 0
}

// *
// Protocol buffer version of ServerName
type ServerName struct {
	HostName         *string `protobuf:"bytes,1,req,name=host_name" json:"host_name,omitempty"`
	Port             *uint32 `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
	StartCode        *uint64 `protobuf:"varint,3,opt,name=start_code" json:"start_code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ServerName) Reset()         { *m = ServerName{} }
func (m *ServerName) String() string { return proto1.CompactTextString(m) }
func (*ServerName) ProtoMessage()    {}

func (m *ServerName) GetHostName() string {
	if m != nil && m.HostName != nil {
		return *m.HostName
	}
	return ""
}

func (m *ServerName) GetPort() uint32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

func (m *ServerName) GetStartCode() uint64 {
	if m != nil && m.StartCode != nil {
		return *m.StartCode
	}
	return 0
}

type Coprocessor struct {
	Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Coprocessor) Reset()         { *m = Coprocessor{} }
func (m *Coprocessor) String() string { return proto1.CompactTextString(m) }
func (*Coprocessor) ProtoMessage()    {}

func (m *Coprocessor) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type NameStringPair struct {
	Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Value            *string `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *NameStringPair) Reset()         { *m = NameStringPair{} }
func (m *NameStringPair) String() string { return proto1.CompactTextString(m) }
func (*NameStringPair) ProtoMessage()    {}

func (m *NameStringPair) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *NameStringPair) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type NameBytesPair struct {
	Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Value            []byte  `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *NameBytesPair) Reset()         { *m = NameBytesPair{} }
func (m *NameBytesPair) String() string { return proto1.CompactTextString(m) }
func (*NameBytesPair) ProtoMessage()    {}

func (m *NameBytesPair) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *NameBytesPair) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type BytesBytesPair struct {
	First            []byte `protobuf:"bytes,1,req,name=first" json:"first,omitempty"`
	Second           []byte `protobuf:"bytes,2,req,name=second" json:"second,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BytesBytesPair) Reset()         { *m = BytesBytesPair{} }
func (m *BytesBytesPair) String() string { return proto1.CompactTextString(m) }
func (*BytesBytesPair) ProtoMessage()    {}

func (m *BytesBytesPair) GetFirst() []byte {
	if m != nil {
		return m.First
	}
	return nil
}

func (m *BytesBytesPair) GetSecond() []byte {
	if m != nil {
		return m.Second
	}
	return nil
}

type NameInt64Pair struct {
	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value            *int64  `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *NameInt64Pair) Reset()         { *m = NameInt64Pair{} }
func (m *NameInt64Pair) String() string { return proto1.CompactTextString(m) }
func (*NameInt64Pair) ProtoMessage()    {}

func (m *NameInt64Pair) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *NameInt64Pair) GetValue() int64 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

// *
// Description of the snapshot to take
type SnapshotDescription struct {
	Name             *string                   `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Table            *string                   `protobuf:"bytes,2,opt,name=table" json:"table,omitempty"`
	CreationTime     *int64                    `protobuf:"varint,3,opt,name=creation_time,def=0" json:"creation_time,omitempty"`
	Type             *SnapshotDescription_Type `protobuf:"varint,4,opt,name=type,enum=proto.SnapshotDescription_Type,def=1" json:"type,omitempty"`
	Version          *int32                    `protobuf:"varint,5,opt,name=version" json:"version,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *SnapshotDescription) Reset()         { *m = SnapshotDescription{} }
func (m *SnapshotDescription) String() string { return proto1.CompactTextString(m) }
func (*SnapshotDescription) ProtoMessage()    {}

const Default_SnapshotDescription_CreationTime int64 = 0
const Default_SnapshotDescription_Type SnapshotDescription_Type = SnapshotDescription_FLUSH

func (m *SnapshotDescription) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *SnapshotDescription) GetTable() string {
	if m != nil && m.Table != nil {
		return *m.Table
	}
	return ""
}

func (m *SnapshotDescription) GetCreationTime() int64 {
	if m != nil && m.CreationTime != nil {
		return *m.CreationTime
	}
	return Default_SnapshotDescription_CreationTime
}

func (m *SnapshotDescription) GetType() SnapshotDescription_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_SnapshotDescription_Type
}

func (m *SnapshotDescription) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

// *
// Description of the distributed procedure to take
type ProcedureDescription struct {
	Signature        *string           `protobuf:"bytes,1,req,name=signature" json:"signature,omitempty"`
	Instance         *string           `protobuf:"bytes,2,opt,name=instance" json:"instance,omitempty"`
	CreationTime     *int64            `protobuf:"varint,3,opt,name=creation_time,def=0" json:"creation_time,omitempty"`
	Configuration    []*NameStringPair `protobuf:"bytes,4,rep,name=configuration" json:"configuration,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *ProcedureDescription) Reset()         { *m = ProcedureDescription{} }
func (m *ProcedureDescription) String() string { return proto1.CompactTextString(m) }
func (*ProcedureDescription) ProtoMessage()    {}

const Default_ProcedureDescription_CreationTime int64 = 0

func (m *ProcedureDescription) GetSignature() string {
	if m != nil && m.Signature != nil {
		return *m.Signature
	}
	return ""
}

func (m *ProcedureDescription) GetInstance() string {
	if m != nil && m.Instance != nil {
		return *m.Instance
	}
	return ""
}

func (m *ProcedureDescription) GetCreationTime() int64 {
	if m != nil && m.CreationTime != nil {
		return *m.CreationTime
	}
	return Default_ProcedureDescription_CreationTime
}

func (m *ProcedureDescription) GetConfiguration() []*NameStringPair {
	if m != nil {
		return m.Configuration
	}
	return nil
}

type EmptyMsg struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *EmptyMsg) Reset()         { *m = EmptyMsg{} }
func (m *EmptyMsg) String() string { return proto1.CompactTextString(m) }
func (*EmptyMsg) ProtoMessage()    {}

type LongMsg struct {
	LongMsg          *int64 `protobuf:"varint,1,req,name=long_msg" json:"long_msg,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LongMsg) Reset()         { *m = LongMsg{} }
func (m *LongMsg) String() string { return proto1.CompactTextString(m) }
func (*LongMsg) ProtoMessage()    {}

func (m *LongMsg) GetLongMsg() int64 {
	if m != nil && m.LongMsg != nil {
		return *m.LongMsg
	}
	return 0
}

type DoubleMsg struct {
	DoubleMsg        *float64 `protobuf:"fixed64,1,req,name=double_msg" json:"double_msg,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *DoubleMsg) Reset()         { *m = DoubleMsg{} }
func (m *DoubleMsg) String() string { return proto1.CompactTextString(m) }
func (*DoubleMsg) ProtoMessage()    {}

func (m *DoubleMsg) GetDoubleMsg() float64 {
	if m != nil && m.DoubleMsg != nil {
		return *m.DoubleMsg
	}
	return 0
}

type BigDecimalMsg struct {
	BigdecimalMsg    []byte `protobuf:"bytes,1,req,name=bigdecimal_msg" json:"bigdecimal_msg,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BigDecimalMsg) Reset()         { *m = BigDecimalMsg{} }
func (m *BigDecimalMsg) String() string { return proto1.CompactTextString(m) }
func (*BigDecimalMsg) ProtoMessage()    {}

func (m *BigDecimalMsg) GetBigdecimalMsg() []byte {
	if m != nil {
		return m.BigdecimalMsg
	}
	return nil
}

type UUID struct {
	LeastSigBits     *uint64 `protobuf:"varint,1,req,name=least_sig_bits" json:"least_sig_bits,omitempty"`
	MostSigBits      *uint64 `protobuf:"varint,2,req,name=most_sig_bits" json:"most_sig_bits,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UUID) Reset()         { *m = UUID{} }
func (m *UUID) String() string { return proto1.CompactTextString(m) }
func (*UUID) ProtoMessage()    {}

func (m *UUID) GetLeastSigBits() uint64 {
	if m != nil && m.LeastSigBits != nil {
		return *m.LeastSigBits
	}
	return 0
}

func (m *UUID) GetMostSigBits() uint64 {
	if m != nil && m.MostSigBits != nil {
		return *m.MostSigBits
	}
	return 0
}

type NamespaceDescriptor struct {
	Name             []byte            `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Configuration    []*NameStringPair `protobuf:"bytes,2,rep,name=configuration" json:"configuration,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *NamespaceDescriptor) Reset()         { *m = NamespaceDescriptor{} }
func (m *NamespaceDescriptor) String() string { return proto1.CompactTextString(m) }
func (*NamespaceDescriptor) ProtoMessage()    {}

func (m *NamespaceDescriptor) GetName() []byte {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *NamespaceDescriptor) GetConfiguration() []*NameStringPair {
	if m != nil {
		return m.Configuration
	}
	return nil
}

// *
// Description of the region server info
type RegionServerInfo struct {
	InfoPort         *int32 `protobuf:"varint,1,opt,name=infoPort" json:"infoPort,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RegionServerInfo) Reset()         { *m = RegionServerInfo{} }
func (m *RegionServerInfo) String() string { return proto1.CompactTextString(m) }
func (*RegionServerInfo) ProtoMessage()    {}

func (m *RegionServerInfo) GetInfoPort() int32 {
	if m != nil && m.InfoPort != nil {
		return *m.InfoPort
	}
	return 0
}

func init() {
	proto1.RegisterEnum("proto.CompareType", CompareType_name, CompareType_value)
	proto1.RegisterEnum("proto.RegionSpecifier_RegionSpecifierType", RegionSpecifier_RegionSpecifierType_name, RegionSpecifier_RegionSpecifierType_value)
	proto1.RegisterEnum("proto.SnapshotDescription_Type", SnapshotDescription_Type_name, SnapshotDescription_Type_value)
}
