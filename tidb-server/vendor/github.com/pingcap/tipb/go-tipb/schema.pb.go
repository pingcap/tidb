// Code generated by protoc-gen-go.
// source: schema.proto
// DO NOT EDIT!

package tipb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type TableInfo struct {
	TableId          *int64        `protobuf:"varint,1,opt,name=table_id" json:"table_id,omitempty"`
	Columns          []*ColumnInfo `protobuf:"bytes,2,rep,name=columns" json:"columns,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *TableInfo) Reset()                    { *m = TableInfo{} }
func (m *TableInfo) String() string            { return proto.CompactTextString(m) }
func (*TableInfo) ProtoMessage()               {}
func (*TableInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *TableInfo) GetTableId() int64 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *TableInfo) GetColumns() []*ColumnInfo {
	if m != nil {
		return m.Columns
	}
	return nil
}

type ColumnInfo struct {
	ColumnId         *int64   `protobuf:"varint,1,opt,name=column_id" json:"column_id,omitempty"`
	Tp               *int32   `protobuf:"varint,2,opt,name=tp" json:"tp,omitempty"`
	Collation        *int32   `protobuf:"varint,3,opt,name=collation" json:"collation,omitempty"`
	ColumnLen        *int32   `protobuf:"varint,4,opt,name=columnLen" json:"columnLen,omitempty"`
	Decimal          *int32   `protobuf:"varint,5,opt,name=decimal" json:"decimal,omitempty"`
	Flag             *int32   `protobuf:"varint,6,opt,name=flag" json:"flag,omitempty"`
	Elems            []string `protobuf:"bytes,7,rep,name=elems" json:"elems,omitempty"`
	PkHandle         *bool    `protobuf:"varint,21,opt,name=pk_handle" json:"pk_handle,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ColumnInfo) Reset()                    { *m = ColumnInfo{} }
func (m *ColumnInfo) String() string            { return proto.CompactTextString(m) }
func (*ColumnInfo) ProtoMessage()               {}
func (*ColumnInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *ColumnInfo) GetColumnId() int64 {
	if m != nil && m.ColumnId != nil {
		return *m.ColumnId
	}
	return 0
}

func (m *ColumnInfo) GetTp() int32 {
	if m != nil && m.Tp != nil {
		return *m.Tp
	}
	return 0
}

func (m *ColumnInfo) GetCollation() int32 {
	if m != nil && m.Collation != nil {
		return *m.Collation
	}
	return 0
}

func (m *ColumnInfo) GetColumnLen() int32 {
	if m != nil && m.ColumnLen != nil {
		return *m.ColumnLen
	}
	return 0
}

func (m *ColumnInfo) GetDecimal() int32 {
	if m != nil && m.Decimal != nil {
		return *m.Decimal
	}
	return 0
}

func (m *ColumnInfo) GetFlag() int32 {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return 0
}

func (m *ColumnInfo) GetElems() []string {
	if m != nil {
		return m.Elems
	}
	return nil
}

func (m *ColumnInfo) GetPkHandle() bool {
	if m != nil && m.PkHandle != nil {
		return *m.PkHandle
	}
	return false
}

type IndexInfo struct {
	TableId          *int64        `protobuf:"varint,1,opt,name=table_id" json:"table_id,omitempty"`
	IndexId          *int64        `protobuf:"varint,2,opt,name=index_id" json:"index_id,omitempty"`
	Columns          []*ColumnInfo `protobuf:"bytes,3,rep,name=columns" json:"columns,omitempty"`
	Unique           *bool         `protobuf:"varint,4,opt,name=unique" json:"unique,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *IndexInfo) Reset()                    { *m = IndexInfo{} }
func (m *IndexInfo) String() string            { return proto.CompactTextString(m) }
func (*IndexInfo) ProtoMessage()               {}
func (*IndexInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *IndexInfo) GetTableId() int64 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *IndexInfo) GetIndexId() int64 {
	if m != nil && m.IndexId != nil {
		return *m.IndexId
	}
	return 0
}

func (m *IndexInfo) GetColumns() []*ColumnInfo {
	if m != nil {
		return m.Columns
	}
	return nil
}

func (m *IndexInfo) GetUnique() bool {
	if m != nil && m.Unique != nil {
		return *m.Unique
	}
	return false
}

func init() {
	proto.RegisterType((*TableInfo)(nil), "tipb.TableInfo")
	proto.RegisterType((*ColumnInfo)(nil), "tipb.ColumnInfo")
	proto.RegisterType((*IndexInfo)(nil), "tipb.IndexInfo")
}

var fileDescriptor1 = []byte{
	// 249 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x8f, 0x3d, 0x4f, 0xc3, 0x30,
	0x10, 0x86, 0x95, 0xaf, 0x26, 0x39, 0x0a, 0x14, 0x4b, 0x95, 0xcc, 0x56, 0x32, 0x65, 0xca, 0xc0,
	0x2f, 0x40, 0x30, 0x55, 0x62, 0x60, 0x60, 0xaf, 0x1c, 0xfb, 0xda, 0x5a, 0xf8, 0x0b, 0xe2, 0x48,
	0xfc, 0x0e, 0x7e, 0x31, 0xb6, 0x41, 0x2a, 0x42, 0x30, 0xbe, 0xcf, 0xdd, 0x73, 0xba, 0x17, 0x96,
	0x13, 0x3f, 0xa2, 0x66, 0x83, 0x7b, 0xb3, 0xde, 0x92, 0xd2, 0x4b, 0x37, 0x76, 0x77, 0xd0, 0x3e,
	0xb3, 0x51, 0xe1, 0xd6, 0xec, 0x2d, 0x59, 0x41, 0xe3, 0x63, 0xd8, 0x49, 0x41, 0xb3, 0x4d, 0xd6,
	0x17, 0xe4, 0x06, 0x6a, 0x6e, 0xd5, 0xac, 0xcd, 0x44, 0xf3, 0x4d, 0xd1, 0x9f, 0xdd, 0xae, 0x86,
	0xa8, 0x0d, 0x0f, 0x09, 0x46, 0xa9, 0xfb, 0xc8, 0x00, 0x4e, 0x91, 0x5c, 0x41, 0xfb, 0x65, 0x9c,
	0x8e, 0x00, 0xe4, 0xde, 0x05, 0x3f, 0xeb, 0xab, 0xef, 0xb1, 0x62, 0x5e, 0x5a, 0x43, 0x8b, 0x1f,
	0x28, 0x18, 0x8f, 0x68, 0x68, 0x99, 0xd0, 0x25, 0xd4, 0x02, 0xb9, 0xd4, 0x4c, 0xd1, 0x2a, 0x81,
	0x25, 0x94, 0x7b, 0xc5, 0x0e, 0x74, 0x91, 0xd2, 0x39, 0x54, 0xa8, 0x50, 0x4f, 0xb4, 0x0e, 0x3f,
	0xb5, 0xf1, 0x80, 0x7b, 0xd9, 0x1d, 0x99, 0x11, 0x0a, 0xe9, 0x3a, 0x6c, 0x34, 0xdd, 0x08, 0xed,
	0xd6, 0x08, 0x7c, 0xff, 0xa7, 0x56, 0x20, 0x32, 0x8e, 0x23, 0xc9, 0x7f, 0x17, 0x2d, 0xfe, 0x2e,
	0x4a, 0x2e, 0x60, 0x31, 0x1b, 0xf9, 0x3a, 0x63, 0x7a, 0xb2, 0xb9, 0xbf, 0x86, 0x35, 0xb7, 0x7a,
	0x70, 0xd2, 0x1c, 0x38, 0x73, 0x61, 0x5d, 0x8c, 0xc9, 0x79, 0xca, 0x3e, 0x03, 0x00, 0x00, 0xff,
	0xff, 0xca, 0x33, 0x46, 0xc7, 0x6a, 0x01, 0x00, 0x00,
}
