drop table if exists t;
create table t (id int, value decimal(7,4), c1 int, c2 int);
insert into t values (1,1.9285,54,28), (1,1.9286,54,28);
set session tidb_enable_non_prepared_plan_cache=0;
select * from t where value = 54 / 28;
id	value	c1	c2
set session tidb_enable_non_prepared_plan_cache=1;
select * from t where value = 54 / 28;
id	value	c1	c2
select * from t where value = 54 / 28;
id	value	c1	c2
prepare st from 'select * from t where value = ? / ?';
set @a=54, @b=28;
execute st using @a, @b;
id	value	c1	c2
execute st using @a, @b;
id	value	c1	c2
set session tidb_enable_non_prepared_plan_cache=DEFAULT;
set @@tidb_opt_fix_control = "44830:ON";
drop table if exists t, t1;
create table t (a int, primary key(a));
create table t1 (a int, b int, primary key(a, b));
insert into t values (1), (2), (3);
insert into t1 values (1, 1), (2, 2), (3, 3);
set @a=1, @b=2, @c=3;
prepare st from 'select * from t where 1=1 and a in (?, ?, ?)';
execute st using @a, @b, @c;
a
1
2
3
execute st using @a, @b, @c;
a
1
2
3
select @@last_plan_from_cache;
@@last_plan_from_cache
1
execute st using @a, @b, @b;
a
1
2
select @@last_plan_from_cache;
@@last_plan_from_cache
0
execute st using @b, @b, @b;
a
2
select @@last_plan_from_cache;
@@last_plan_from_cache
0
execute st using @a, @b, @c;
a
1
2
3
execute st using @a, @b, @b;
a
1
2
execute st using @a, @b, @b;
a
1
2
select @@last_plan_from_cache;
@@last_plan_from_cache
0
prepare st from 'select * from t1 where 1=1 and (a, b) in ((?, ?), (?, ?), (?, ?))';
execute st using @a, @a, @b, @b, @c, @c;
a	b
1	1
2	2
3	3
execute st using @a, @a, @b, @b, @c, @c;
a	b
1	1
2	2
3	3
select @@last_plan_from_cache;
@@last_plan_from_cache
1
execute st using @a, @a, @b, @b, @b, @b;
a	b
1	1
2	2
select @@last_plan_from_cache;
@@last_plan_from_cache
0
execute st using @b, @b, @b, @b, @b, @b;
a	b
2	2
select @@last_plan_from_cache;
@@last_plan_from_cache
0
execute st using @b, @b, @b, @b, @c, @c;
a	b
2	2
3	3
select @@last_plan_from_cache;
@@last_plan_from_cache
0
execute st using @a, @a, @a, @a, @a, @a;
a	b
1	1
execute st using @a, @a, @a, @a, @a, @a;
a	b
1	1
select @@last_plan_from_cache;
@@last_plan_from_cache
0
execute st using @a, @a, @b, @b, @b, @b;
a	b
1	1
2	2
execute st using @a, @a, @b, @b, @b, @b;
a	b
1	1
2	2
select @@last_plan_from_cache;
@@last_plan_from_cache
0
set @@tidb_opt_fix_control = DEFAULT;
set @@tidb_enable_non_prepared_plan_cache=1;
set @@tidb_opt_fix_control = "44830:ON";
drop table if exists t1;
create table t1 (a int, b int, primary key(a, b));
insert into t1 values (1, 1), (2, 2), (3, 3);
set @a=1, @b=2, @c=3;
select * from t1 where 1=1 and (a, b) in ((1, 1), (2, 2), (3, 3));
a	b
1	1
2	2
3	3
select * from t1 where 1=1 and (a, b) in ((1, 1), (2, 2), (3, 3));
a	b
1	1
2	2
3	3
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select * from t1 where 1=1 and (a, b) in ((1, 1), (2, 2), (2, 2));
a	b
1	1
2	2
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select * from t1 where 1=1 and (a, b) in ((2, 2), (2, 2), (2, 2));
a	b
2	2
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select * from t1 where 1=1 and (a, b) in ((1, 1), (1, 1), (1, 1));
a	b
1	1
select * from t1 where 1=1 and (a, b) in ((1, 1), (1, 1), (1, 1));
a	b
1	1
select @@last_plan_from_cache;
@@last_plan_from_cache
0
set @@tidb_enable_non_prepared_plan_cache=DEFAULT;
set @@tidb_opt_fix_control = DEFAULT;
drop table if exists t, t1;
create table t (a int unsigned, key(a));
prepare st from 'select a from t use index(a) where a<?';
set @a=10;
execute st using @a;
a
execute st using @a;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
set @a=-10;
execute st using @a;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
set @a=10;
execute st using @a;
a
execute st using @a;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
create table t1 (a enum('1', '2'), key(a));
prepare st from 'select a from t1 use index(a) where a=?';
set @a='1';
execute st using @a;
a
execute st using @a;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
set @a='x';
execute st using @a;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
set @a='1';
execute st using @a;
a
execute st using @a;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
drop table if exists t;
create table t (a int);
insert into t values (1), (2), (3), (4);
prepare st from 'select * from t where a!=? and a in (?, ?, ?)';
set @a=1, @b=2, @c=3, @d=4;
execute st using @a, @a, @a, @a;
a
Level	Code	Message
Warning	1105	skip prepared plan-cache: NE/INList simplification is triggered
execute st using @a, @a, @b, @c;
a
2
3
Level	Code	Message
Warning	1105	skip prepared plan-cache: NE/INList simplification is triggered
execute st using @a, @b, @c, @d;
a
2
3
4
Level	Code	Message
Warning	1105	skip prepared plan-cache: NE/INList simplification is triggered
CREATE TABLE UK_SIGNED_19384 (
COL1 decimal(37,4) unsigned DEFAULT NULL COMMENT 'WITH DEFAULT',
COL2 varchar(20) COLLATE utf8mb4_bin DEFAULT NULL,
COL4 datetime DEFAULT NULL,
COL3 bigint DEFAULT NULL,
COL5 float DEFAULT NULL,
UNIQUE KEY UK_COL1 (COL1)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin;
INSERT INTO UK_SIGNED_19384 VALUES
(729024465529090.5423,'劗驻胭毤橰亀讁陶ĉ突錌ͳ河碡祁聓兕锻觰俆','4075-07-11 12:02:57',6021562653572886552,1.93349e38),
(492790234219503.0846,'硴皡箒嫹璞玚囑蚂身囈軔獰髴囥慍廂頚禌浖蕐','1193-09-27 12:13:40',1836453747944153034,-2.67982e38),
(471841432147994.4981,'豻貐裝濂婝蒙蘦镢県蟎髓蓼窘搴熾臐哥递泒執','1618-01-24 05:06:44',6669616052974883820,9.38232e37);
prepare stmt from 'select/*+ tidb_inlj(t1) */ t1.col1 from UK_SIGNED_19384 t1 join UK_SIGNED_19384 t2 on t1.col1 = t2.col1 where t1. col1 != ? and t2. col1 in (?, ?, ?)';
set @a=999999999999999999999999999999999.9999, @b=999999999999999999999999999999999.9999, @c=999999999999999999999999999999999.9999, @d=999999999999999999999999999999999.9999;
execute stmt using @a,@b,@c,@d;
col1
set @a=895769331208356.9029, @b=471841432147994.4981, @c=729024465529090.5423, @d=492790234219503.0846;
execute stmt using @a,@b,@c,@d;
col1
471841432147994.4981
492790234219503.0846
729024465529090.5423
drop table if exists IDT_MULTI15880STROBJSTROBJ;
CREATE TABLE IDT_MULTI15880STROBJSTROBJ (
COL1 enum('aa','bb','cc','dd','ff','gg','kk','ll','mm','ee') DEFAULT NULL,
COL2 decimal(20,0) DEFAULT NULL,
COL3 date DEFAULT NULL,
KEY U_M_COL4 (COL1,COL2),
KEY U_M_COL5 (COL3,COL2));
insert into IDT_MULTI15880STROBJSTROBJ values("ee", -9605492323393070105, "0850-03-15");
set session tidb_enable_non_prepared_plan_cache=on;
select * from IDT_MULTI15880STROBJSTROBJ where col1 in ("dd", "dd") or col2 = 9923875910817805958 or col3 = "9994-11-11";
COL1	COL2	COL3
select * from IDT_MULTI15880STROBJSTROBJ where col1 in ("aa", "aa") or col2 = -9605492323393070105 or col3 = "0005-06-22";
COL1	COL2	COL3
ee	-9605492323393070105	0850-03-15
select @@last_plan_from_cache;
@@last_plan_from_cache
0
set session tidb_enable_non_prepared_plan_cache=default;
CREATE TABLE UK_SIGNED_19385 (
COL1 decimal(37,4) unsigned DEFAULT '101.0000' COMMENT 'WITH DEFAULT',
COL2 varchar(20) DEFAULT NULL,
COL4 datetime DEFAULT NULL,
COL3 bigint(20) DEFAULT NULL,
COL5 float DEFAULT NULL,
UNIQUE KEY UK_COL1 (COL1) /*!80000 INVISIBLE */);
INSERT INTO UK_SIGNED_19385 VALUES (999999999999999999999999999999999.9999,'苊檷鞤寰抿逿詸叟艟俆錟什姂庋鴪鎅枀礰扚匝','8618-02-11 03:30:03',7016504421081900731,2.77465e38);
select * from UK_SIGNED_19385 where col1 = 999999999999999999999999999999999.9999 and
col1 * 999999999999999999999999999999999.9999 between 999999999999999999999999999999999.9999 and
999999999999999999999999999999999.9999;
COL1	COL2	COL4	COL3	COL5
drop table if exists t;
create table t(a varchar(8) not null, b varchar(8) not null);
insert into t values('1','1');
prepare stmt from "select count(1) from t t1, t t2 where t1.a = t2.a and t2.b = '1' and t2.b = ?";
set @a = '1';
execute stmt using @a;
count(1)
1
set @a = '2';
execute stmt using @a;
count(1)
0
prepare stmt from "select count(1) from t t1, t t2 where t1.a = t2.a and t1.a > ?";
set @a = '1';
execute stmt using @a;
count(1)
0
set @a = '0';
execute stmt using @a;
count(1)
1
drop table if exists t;
create table t(a varchar(8), b varchar(8));
insert into t values('1','1');
prepare stmt from "select count(1) from t t1 left join t t2 on t1.a = t2.a where t2.b = ? and t2.b = ?";
set @p0 = '1', @p1 = '2';
execute stmt using @p0, @p1;
count(1)
0
set @p0 = '1', @p1 = '1';
execute stmt using @p0, @p1;
count(1)
1
drop table if exists t;
create table t (a int);
set @@tidb_enable_non_prepared_plan_cache=1;
set @@tidb_enable_non_prepared_plan_cache_for_dml=1;
insert into t values (1);
insert into t values (1);
select @@last_plan_from_cache;
@@last_plan_from_cache
1
update t set a=1;
update t set a=1;
select @@last_plan_from_cache;
@@last_plan_from_cache
1
delete from t where a=1;
delete from t where a=1;
select @@last_plan_from_cache;
@@last_plan_from_cache
1
insert /*+ ignore_plan_cache() */ into t values (1);
insert /*+ ignore_plan_cache() */ into t values (1);
select @@last_plan_from_cache;
@@last_plan_from_cache
0
update /*+ ignore_plan_cache() */ t set a=1;
update /*+ ignore_plan_cache() */ t set a=1;
select @@last_plan_from_cache;
@@last_plan_from_cache
0
delete /*+ ignore_plan_cache() */ from t where a=1;
delete /*+ ignore_plan_cache() */ from t where a=1;
select @@last_plan_from_cache;
@@last_plan_from_cache
0
insert into t values (1);
select @@last_plan_from_cache;
@@last_plan_from_cache
1
update t set a=1;
select @@last_plan_from_cache;
@@last_plan_from_cache
1
delete from t where a=1;
select @@last_plan_from_cache;
@@last_plan_from_cache
1
set @@tidb_enable_non_prepared_plan_cache=DEFAULT;
set @@tidb_enable_non_prepared_plan_cache_for_dml=DEFAULT;
drop table if exists t;
create table t(a int, b json);
set tidb_enable_non_prepared_plan_cache=1;
select * from t where a<1;
a	b
select * from t where a<2;
a	b
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select * from t where b<1;
a	b
select * from t where b<2;
a	b
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select b from t where a<1;
b
select b from t where a<2;
b
select @@last_plan_from_cache;
@@last_plan_from_cache
1
set tidb_enable_non_prepared_plan_cache=DEFAULT;
drop table if exists t;
create table t(a int, b enum('1', '2', '3'));
set tidb_enable_non_prepared_plan_cache=1;
select * from t where a<1;
a	b
select * from t where a<2;
a	b
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select * from t where b='1';
a	b
select * from t where b='2';
a	b
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select b from t where a<1;
b
select b from t where a<2;
b
select @@last_plan_from_cache;
@@last_plan_from_cache
1
set tidb_enable_non_prepared_plan_cache=DEFAULT;
drop table if exists t1;
set tidb_enable_non_prepared_plan_cache=1;
create table t1 (s1 char(20) character set latin1);
insert into t1 values (date_format('2004-02-02','%M'));
select * from t1;
s1
February
set tidb_enable_non_prepared_plan_cache=DEFAULT;
drop table if exists t;
create table t(a int);
set tidb_enable_non_prepared_plan_cache=1;
select * from t where a=1;
a
select * from t where a=2;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select * from t where a=null;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select * from t where a=2;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
set tidb_enable_non_prepared_plan_cache=DEFAULT;
drop table if exists t;
create table t(a int);
set tidb_enable_non_prepared_plan_cache=1;
select * from t where a in (1, 2, 3);
a
select * from t where a in (2, 3, 4);
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select * from t where a in (2, 3, 4, 5);
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select * from t where a in (1, 2, 3, 4);
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
set tidb_enable_non_prepared_plan_cache=DEFAULT;
set tidb_enable_non_prepared_plan_cache=1;
select data_type from INFORMATION_SCHEMA.columns where table_name = 'v';
data_type
select data_type from INFORMATION_SCHEMA.columns where table_name = 'v';
data_type
select @@last_plan_from_cache;
@@last_plan_from_cache
0
set tidb_enable_non_prepared_plan_cache=DEFAULT;
drop table if exists t;
create table t(a int);
set tidb_enable_non_prepared_plan_cache=1;
select * from t where a in (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198);
a
select * from t where a in (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198);
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select * from t where a in (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199);
a
select * from t where a in (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199);
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select * from t where a in (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200);
a
select * from t where a in (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200);
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
set tidb_enable_non_prepared_plan_cache=DEFAULT;
drop table if exists t;
create table t(a int);
set tidb_enable_non_prepared_plan_cache=1;
select * from t where a=1;
a
select * from t where a=1;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
alter table t add index idx_a(a);
select * from t where a=1;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select * from t where a=1;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
set tidb_enable_non_prepared_plan_cache=DEFAULT;
drop table if exists t;
create table t(a int);
set tidb_enable_non_prepared_plan_cache=1;
prepare st from 'select * from t where a=1';
execute st;
a
execute st;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select * from t where a=1;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select * from t where a=1;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
set tidb_enable_non_prepared_plan_cache=DEFAULT;
drop table if exists t;
create table t(a int);
set tidb_enable_non_prepared_plan_cache=1;
select * from t where a=1;
a
select * from t where a=1;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
set tidb_enable_non_prepared_plan_cache=0;
select * from t where a=1;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
set tidb_enable_non_prepared_plan_cache=DEFAULT;
drop table if exists t;
create table t(a int);
set tidb_enable_non_prepared_plan_cache=0;
set tidb_enable_prepared_plan_cache=0;
select * from t where a<1;
a
select * from t where a<2;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
prepare st from 'select * from t where a<?';
set @a=1;
execute st using @a;
a
set @a=2;
execute st using @a;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
drop table t;
create table t(a int);
set tidb_enable_non_prepared_plan_cache=0;
set tidb_enable_prepared_plan_cache=1;
select * from t where a<1;
a
select * from t where a<2;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
prepare st from 'select * from t where a<?';
set @a=1;
execute st using @a;
a
set @a=2;
execute st using @a;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
drop table t;
create table t(a int);
set tidb_enable_non_prepared_plan_cache=1;
set tidb_enable_prepared_plan_cache=0;
select * from t where a<1;
a
select * from t where a<2;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
prepare st from 'select * from t where a<?';
set @a=1;
execute st using @a;
a
set @a=2;
execute st using @a;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
drop table t;
create table t(a int);
set tidb_enable_non_prepared_plan_cache=1;
set tidb_enable_prepared_plan_cache=1;
select * from t where a<1;
a
select * from t where a<2;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
prepare st from 'select * from t where a<?';
set @a=1;
execute st using @a;
a
set @a=2;
execute st using @a;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
drop table t;
set tidb_enable_non_prepared_plan_cache=DEFAULT;
set tidb_enable_prepared_plan_cache=DEFAULT;
drop table if exists tt;
create table tt(a char(2) primary key, b char(2));
set tidb_enable_non_prepared_plan_cache=1;
select tt.* from tt tmp where a='aa';
Error 1051 (42S02): Unknown table 'tt'
set tidb_enable_non_prepared_plan_cache=DEFAULT;
drop table if exists t;
create table t(a int);
set tidb_enable_non_prepared_plan_cache=1;
explain format = 'plan_cache' select * from t where a=1;
id	estRows	task	access object	operator info
TableReader_7	10.00	root		data:Selection_6
└─Selection_6	10.00	cop[tikv]		eq(planner__core__plan_cache.t.a, 1)
  └─TableFullScan_5	10000.00	cop[tikv]	table:t	keep order:false, stats:pseudo
explain format = 'plan_cache' select * from t where a=1;
id	estRows	task	access object	operator info
TableReader_7	10.00	root		data:Selection_6
└─Selection_6	10.00	cop[tikv]		eq(planner__core__plan_cache.t.a, 1)
  └─TableFullScan_5	10000.00	cop[tikv]	table:t	keep order:false, stats:pseudo
select @@last_plan_from_cache;
@@last_plan_from_cache
1
explain format = 'plan_cache' select * from (select * from t) tx;
id	estRows	task	access object	operator info
TableReader_6	10000.00	root		data:TableFullScan_5
└─TableFullScan_5	10000.00	cop[tikv]	table:t	keep order:false, stats:pseudo
Level	Code	Message
Warning	1105	skip non-prepared plan-cache: queries that have sub-queries are not supported
set tidb_enable_non_prepared_plan_cache=0;
explain format = 'plan_cache' select * from t where a+1=1;
id	estRows	task	access object	operator info
TableReader_7	8000.00	root		data:Selection_6
└─Selection_6	8000.00	cop[tikv]		eq(plus(planner__core__plan_cache.t.a, 1), 1)
  └─TableFullScan_5	10000.00	cop[tikv]	table:t	keep order:false, stats:pseudo
explain format = 'plan_cache' select * from t t1, t t2;
id	estRows	task	access object	operator info
HashJoin_7	100000000.00	root		CARTESIAN inner join
├─TableReader_12(Build)	10000.00	root		data:TableFullScan_11
│ └─TableFullScan_11	10000.00	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─TableReader_10(Probe)	10000.00	root		data:TableFullScan_9
  └─TableFullScan_9	10000.00	cop[tikv]	table:t1	keep order:false, stats:pseudo
explain format = 'plan_cache' select * from t where a in (select a from t);
id	estRows	task	access object	operator info
HashJoin_10	9990.00	root		inner join, equal:[eq(planner__core__plan_cache.t.a, planner__core__plan_cache.t.a)]
├─HashAgg_20(Build)	7992.00	root		group by:planner__core__plan_cache.t.a, funcs:firstrow(planner__core__plan_cache.t.a)->planner__core__plan_cache.t.a
│ └─TableReader_21	7992.00	root		data:HashAgg_15
│   └─HashAgg_15	7992.00	cop[tikv]		group by:planner__core__plan_cache.t.a, 
│     └─Selection_19	9990.00	cop[tikv]		not(isnull(planner__core__plan_cache.t.a))
│       └─TableFullScan_18	10000.00	cop[tikv]	table:t	keep order:false, stats:pseudo
└─TableReader_14(Probe)	9990.00	root		data:Selection_13
  └─Selection_13	9990.00	cop[tikv]		not(isnull(planner__core__plan_cache.t.a))
    └─TableFullScan_12	10000.00	cop[tikv]	table:t	keep order:false, stats:pseudo
set tidb_enable_non_prepared_plan_cache=DEFAULT;
set tidb_enable_non_prepared_plan_cache=1;
explain format='plan_cache' select address from PERFORMANCE_SCHEMA.tikv_profile_cpu;
id	estRows	task	access object	operator info
Projection_3	10000.00	root		Column#1
└─MemTableScan_4	10000.00	root	table:tikv_profile_cpu	
Level	Code	Message
Warning	1105	skip non-prepared plan-cache: access tables in system schema
use PERFORMANCE_SCHEMA;
explain format='plan_cache' select address from tikv_profile_cpu;
id	estRows	task	access object	operator info
Projection_3	10000.00	root		Column#1
└─MemTableScan_4	10000.00	root	table:tikv_profile_cpu	
Level	Code	Message
Warning	1105	skip non-prepared plan-cache: access tables in system schema
set tidb_enable_non_prepared_plan_cache=DEFAULT;
use planner__core__plan_cache;
drop table if exists t;
create table t(a int);
set tidb_enable_non_prepared_plan_cache=1;
select * from t where a=1;
a
select * from t where a=1;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
set @@sql_mode='';
select * from t where a=1;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select * from t where a=1;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
set @@sql_mode=DEFAULT;
set tidb_enable_non_prepared_plan_cache=DEFAULT;
drop table if exists t;
create table t(a int, b int, c varchar(2048));
prepare st from 'select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b';
execute st;
a	b	c	a	b	c
execute st;
a	b	c	a	b	c
select @@last_plan_from_cache;
@@last_plan_from_cache
1
prepare st from 'select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b union all select * from t, t t1 where t1.c=space(2048) and t.c=space(2048) and t.a=t1.b';
execute st;
a	b	c	a	b	c
execute st;
a	b	c	a	b	c
select @@last_plan_from_cache;
@@last_plan_from_cache
0
set tidb_plan_cache_max_plan_size=1073741824;
execute st;
a	b	c	a	b	c
execute st;
a	b	c	a	b	c
select @@last_plan_from_cache;
@@last_plan_from_cache
1
drop table if exists t;
create table t(a int, b int);
prepare st_199 from 'select * from t where a in (0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198)';
execute st_199;
a	b
execute st_199;
a	b
select @@last_plan_from_cache;
@@last_plan_from_cache
1
prepare st_201 from 'select * from t where a in (0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200)';
execute st_201;
a	b
execute st_201;
a	b
select @@last_plan_from_cache;
@@last_plan_from_cache
0
prepare st_99_100 from 'select * from t where a in (0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98) and b in (0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99)';
execute st_99_100;
a	b
execute st_99_100;
a	b
select @@last_plan_from_cache;
@@last_plan_from_cache
1
prepare st_100_101 from 'select * from t where a in (0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99) and b in (0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100)';
execute st_100_101;
a	b
execute st_100_101;
a	b
select @@last_plan_from_cache;
@@last_plan_from_cache
0
drop table if exists t;
create table t(a int);
insert into t values (2);
prepare st from 'select * from t where a=?';
set @a=1;
execute st using @a;
a
execute st using @a;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
analyze table t;
set tidb_plan_cache_invalidation_on_fresh_stats = 0;
execute st using @a;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
set tidb_plan_cache_invalidation_on_fresh_stats = 1;
execute st using @a;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
execute st using @a;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
set tidb_plan_cache_invalidation_on_fresh_stats = DEFAULT;
drop table if exists t;
create table t(a int);
insert into t values (2);
set tidb_enable_non_prepared_plan_cache=1;
select * from t where a=1;
a
select * from t where a=1;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
analyze table t;
select * from t where a=1;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select * from t where a=1;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
set tidb_enable_non_prepared_plan_cache=DEFAULT;
drop table if exists t;
create table t(a int, index(a));
set tidb_enable_non_prepared_plan_cache=1;
select /*+ use_index(t, a) */ * from t where a=1;
a
select /*+ use_index(t, a) */ * from t where a=1;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select * from t where a=1;
a
select * from t where a=1;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
set tidb_enable_non_prepared_plan_cache=DEFAULT;
drop table if exists tx;
create table tx(a double, b int);
set tidb_enable_non_prepared_plan_cache=1;
insert into tx values (3.0, 3);
select json_object('k', a) = json_object('k', b) from tx;
json_object('k', a) = json_object('k', b)
1
select json_object('k', a) = json_object('k', b) from tx;
json_object('k', a) = json_object('k', b)
1
select @@last_plan_from_cache;
@@last_plan_from_cache
0
set tidb_enable_non_prepared_plan_cache=DEFAULT;
drop table if exists t;
create table t(a int, index(a));
set tidb_enable_non_prepared_plan_cache=1;
create binding for select * from t where a=1 using select /*+ use_index(t, a) */ * from t where a=1;
select * from t where a=1;
a
select * from t where a=1;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
drop binding for select * from t where a=1;
select * from t where a=1;
a
select * from t where a=1;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
set tidb_enable_non_prepared_plan_cache=DEFAULT;
drop table if exists t;
create table t (a int primary key, b int, unique key(b));
set tidb_enable_non_prepared_plan_cache=1;
explain format='brief' select a from t where a in (1, 2);
id	estRows	task	access object	operator info
Batch_Point_Get	2.00	root	table:t	handle:[1 2], keep order:false, desc:false
select a from t where a in (1, 2);
a
select a from t where a in (1, 2);
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
explain format='brief' select b from t where b = 1;
id	estRows	task	access object	operator info
Point_Get	1.00	root	table:t, index:b(b)	
select b from t where b = 1;
b
select b from t where b = 1;
b
select @@last_plan_from_cache;
@@last_plan_from_cache
0
set tidb_enable_non_prepared_plan_cache=DEFAULT;
drop table if exists t;
create table t (a int);
set tidb_enable_non_prepared_plan_cache=1;
select * from t union select * from t;
a
select * from t union select * from t;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select * from t union distinct select * from t;
a
select * from t union distinct select * from t;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select * from t union all select * from t;
a
select * from t union all select * from t;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select * from t except select * from t;
a
select * from t except select * from t;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select * from t intersect select * from t;
a
select * from t intersect select * from t;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
set tidb_enable_non_prepared_plan_cache=DEFAULT;
drop table if exists t;
create table t (a int);
create definer='root'@'localhost' view t_v as select * from t;
create table t_p (a int) partition by hash(a) partitions 4;
create temporary table t_t (a int);
set tidb_enable_non_prepared_plan_cache=1;
select * from t_v;
a
select * from t_v;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select * from t_p;
a
select * from t_p;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select * from t_t;
a
select * from t_t;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
with t_cte as (select * from t) select * from t_cte;
a
with t_cte as (select * from t) select * from t_cte;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
set tidb_enable_non_prepared_plan_cache=DEFAULT;
drop table if exists t;
create table t (a int, key(a));
set tidb_enable_non_prepared_plan_cache=1;
select * from t where a=1;
a
select * from t where a=1;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select * from t where a=1.1;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
explain format = 'plan_cache' select * from t where a=1.1;
id	estRows	task	access object	operator info
IndexReader_10	8000.00	root		index:Selection_9
└─Selection_9	8000.00	cop[tikv]		eq(cast(planner__core__plan_cache.t.a, decimal(10,0) BINARY), 1.1)
  └─IndexFullScan_8	10000.00	cop[tikv]	table:t, index:a(a)	keep order:false, stats:pseudo
Level	Code	Message
Warning	1105	skip non-prepared plan-cache: '1.1' may be converted to INT
select * from t where a='1';
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
explain format = 'plan_cache' select * from t where a='1';
id	estRows	task	access object	operator info
IndexReader_6	10.00	root		index:IndexRangeScan_5
└─IndexRangeScan_5	10.00	cop[tikv]	table:t, index:a(a)	range:[1,1], keep order:false, stats:pseudo
Level	Code	Message
Warning	1105	skip non-prepared plan-cache: '1' may be converted to INT
set tidb_enable_non_prepared_plan_cache=DEFAULT;
drop table if exists t6;
create table t6 (a date, b date, key(a));
insert into t6 values ('2023-01-21', '2023-01-05');
set tidb_enable_non_prepared_plan_cache=1;
select * from t6 where a in (2015, '8');
a	b
select * from t6 where a in (2009, '2023-01-21');
a	b
2023-01-21	2023-01-05
select @@last_plan_from_cache;
@@last_plan_from_cache
1
set tidb_enable_non_prepared_plan_cache=DEFAULT;
drop table if exists t;
create table t(a int, index(a));
set tidb_enable_non_prepared_plan_cache=1;
select * from t where a=1;
a
select * from t where a=1;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
set @@session.sql_select_limit=1;
select * from t where a=1;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
set tidb_enable_non_prepared_plan_cache=DEFAULT;
set @@session.sql_select_limit=DEFAULT;
drop table if exists t;
create table t (a year);
insert into t values (2000);
prepare st from 'select * from t where a<?';
set @a=12;
execute st using @a;
a
2000
Level	Code	Message
Warning	1105	skip prepared plan-cache: '12' may be converted to INT
drop table if exists t;
create table t (a int);
prepare st from 'insert into t values (1)';
execute st;
execute st;
select @@last_plan_from_cache;
@@last_plan_from_cache
1
prepare st from 'insert into t select * from t';
execute st;
execute st;
select @@last_plan_from_cache;
@@last_plan_from_cache
1
prepare st from 'insert /*+ ignore_plan_cache() */ into t select * from t';
execute st;
execute st;
select @@last_plan_from_cache;
@@last_plan_from_cache
0
drop table if exists t;
create table t (a int);
prepare inert200 from 'insert into t values
execute inert200;
execute inert200;
select @@last_plan_from_cache;
@@last_plan_from_cache
1
prepare inert201 from 'insert into t values
Level	Code	Message
Warning	1105	skip prepared plan-cache: too many values in the insert statement
execute inert201;
execute inert201;
select @@last_plan_from_cache;
@@last_plan_from_cache
0
drop table if exists UK_NO_PRECISION_19392;
CREATE TABLE `UK_NO_PRECISION_19392` (
`COL1` bit(1) DEFAULT NULL,
`COL2` varchar(20) COLLATE utf8mb4_bin DEFAULT NULL,
`COL4` datetime DEFAULT NULL,
`COL3` bigint DEFAULT NULL,
`COL5` float DEFAULT NULL,
UNIQUE KEY `UK_COL1` (`COL1`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin;
INSERT INTO `UK_NO_PRECISION_19392` VALUES (0x00,'缎馗惫砲兣肬憵急鳸嫅稩邏蠧鄂艘腯灩專妴粈','9294-12-26 06:50:40',-3088380202191555887,-3.33294e38),(NULL,'仲膩蕦圓猴洠飌镂喵疎偌嫺荂踖Ƕ藨蜿諪軁笞','1746-08-30 18:04:04',-4016793239832666288,-2.52633e38),(0x01,'冑溜畁脊乤纊繳蟥哅稐奺躁悼貘飗昹槐速玃沮','1272-01-19 23:03:27',-8014797887128775012,1.48868e38);
prepare stmt from 'select * from UK_NO_PRECISION_19392 where col1 between ? and ? or col3 = ? or col2 in (?, ?, ?);';
set @a=0x01, @b=0x01, @c=-3088380202191555887, @d="缎馗惫砲兣肬憵急鳸嫅稩邏蠧鄂艘腯灩專妴粈", @e="缎馗惫砲兣肬憵急鳸嫅稩邏蠧鄂艘腯灩專妴粈", @f="缎馗惫砲兣肬憵急鳸嫅稩邏蠧鄂艘腯灩專妴粈";
execute stmt using @a,@b,@c,@d,@e,@f;
COL1	COL2	COL4	COL3	COL5
 	缎馗惫砲兣肬憵急鳸嫅稩邏蠧鄂艘腯灩專妴粈	9294-12-26 06:50:40	-3088380202191555887	-3.33294e38
	冑溜畁脊乤纊繳蟥哅稐奺躁悼貘飗昹槐速玃沮	1272-01-19 23:03:27	-8014797887128775012	1.48868e38
set @a=NULL, @b=NULL, @c=-4016793239832666288, @d="缎馗惫砲兣肬憵急鳸嫅稩邏蠧鄂艘腯灩專妴粈", @e="仲膩蕦圓猴洠飌镂喵疎偌嫺荂踖Ƕ藨蜿諪軁笞", @f="缎馗惫砲兣肬憵急鳸嫅稩邏蠧鄂艘腯灩專妴粈";
execute stmt using @a,@b,@c,@d,@e,@f;
COL1	COL2	COL4	COL3	COL5
 	缎馗惫砲兣肬憵急鳸嫅稩邏蠧鄂艘腯灩專妴粈	9294-12-26 06:50:40	-3088380202191555887	-3.33294e38
NULL	仲膩蕦圓猴洠飌镂喵疎偌嫺荂踖Ƕ藨蜿諪軁笞	1746-08-30 18:04:04	-4016793239832666288	-2.52633e38
select @@last_plan_from_cache;
@@last_plan_from_cache
0
execute stmt using @a,@b,@c,@d,@e,@f;
COL1	COL2	COL4	COL3	COL5
 	缎馗惫砲兣肬憵急鳸嫅稩邏蠧鄂艘腯灩專妴粈	9294-12-26 06:50:40	-3088380202191555887	-3.33294e38
NULL	仲膩蕦圓猴洠飌镂喵疎偌嫺荂踖Ƕ藨蜿諪軁笞	1746-08-30 18:04:04	-4016793239832666288	-2.52633e38
select @@last_plan_from_cache;
@@last_plan_from_cache
1
set @a=0x01, @b=0x01, @c=-3088380202191555887, @d="缎馗惫砲兣肬憵急鳸嫅稩邏蠧鄂艘腯灩專妴粈", @e="缎馗惫砲兣肬憵急鳸嫅稩邏蠧鄂艘腯灩專妴粈", @f="缎馗惫砲兣肬憵急鳸嫅稩邏蠧鄂艘腯灩專妴粈";
execute stmt using @a,@b,@c,@d,@e,@f;
COL1	COL2	COL4	COL3	COL5
 	缎馗惫砲兣肬憵急鳸嫅稩邏蠧鄂艘腯灩專妴粈	9294-12-26 06:50:40	-3088380202191555887	-3.33294e38
	冑溜畁脊乤纊繳蟥哅稐奺躁悼貘飗昹槐速玃沮	1272-01-19 23:03:27	-8014797887128775012	1.48868e38
select @@last_plan_from_cache;
@@last_plan_from_cache
0
drop table if exists t;
create table t (a int, b int, key(a), key(b));
prepare stmt from 'select /*+ ignore_plan_cache() */ * from t';
Level	Code	Message
Warning	1105	skip prepared plan-cache: ignore plan cache by hint
prepare stmt from 'select * from t order by ?';
Level	Code	Message
Warning	1105	skip prepared plan-cache: query has 'order by ?' is un-cacheable
prepare stmt from 'select * from t where a=?';
set @a='123';
execute stmt using @a;
a	b
Level	Code	Message
Warning	1105	skip prepared plan-cache: '123' may be converted to INT
prepare stmt from 'select * from t where a=? and a=?';
set @a=1, @b=1;
execute stmt using @a, @b;
a	b
Level	Code	Message
Warning	1105	skip prepared plan-cache: some parameters may be overwritten
drop table if exists t;
create table t (a int, key(a));
prepare st from 'select * from t where a<?';
set @a='1';
execute st using @a;
a
Level	Code	Message
Warning	1105	skip prepared plan-cache: '1' may be converted to INT
create binding for select * from t where a<1 using select /*+ ignore_plan_cache() */ * from t where a<1;
execute st using @a;
a
Level	Code	Message
Warning	1105	skip prepared plan-cache: ignore plan cache by binding
prepare st from 'select * from t where a>?';
set @a=1;
execute st using @a;
a
execute st using @a;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
create binding for select * from t where a>1 using select /*+ ignore_plan_cache() */ * from t where a>1;
execute st using @a;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
execute st using @a;
a
select @@last_plan_from_binding;
@@last_plan_from_binding
1
CREATE TABLE PK_LP9463 (
COL1 mediumint NOT NULL DEFAULT '77' COMMENT 'NUMERIC PK',
COL2 varchar(20) COLLATE utf8mb4_bin DEFAULT NULL,
COL4 datetime DEFAULT NULL,
COL3 bigint DEFAULT NULL,
COL5 float DEFAULT NULL,
PRIMARY KEY (COL1));
INSERT INTO PK_LP9463 VALUES (-7415279,'笚綷想摻癫梒偆荈湩窐曋繾鏫蘌憬稁渣½隨苆','1001-11-02 05:11:33',-3745331437675076296,-3.21618e38),
(-7153863,'鯷氤衡椻闍饑堀鱟垩啵緬氂哨笂序鉲秼摀巽茊','6800-06-20 23:39:12',-7871155140266310321,-3.04829e38),
(77,'娥藨潰眤徕菗柢礥蕶浠嶲憅榩椻鍙鑜堋ᛀ暵氎','4473-09-13 01:18:59',4076508026242316746,-1.9525e38),
(16614,'阖旕雐盬皪豧篣哙舄糗悄蟊鯴瞶珧赺潴嶽簤彉','2745-12-29 00:29:06',-4242415439257105874,2.71063e37);
prepare stmt from 'SELECT *, rank() OVER (PARTITION BY col2 ORDER BY COL1) FROM PK_LP9463 WHERE col1 != ? AND col1 < ?';
set @a=-8414766051197, @b=-8388608;
execute stmt using @a,@b;
COL1	COL2	COL4	COL3	COL5	rank() OVER (PARTITION BY col2 ORDER BY COL1)
set @a=16614, @b=16614;
execute stmt using @a,@b;
COL1	COL2	COL4	COL3	COL5	rank() OVER (PARTITION BY col2 ORDER BY COL1)
-7153863	鯷氤衡椻闍饑堀鱟垩啵緬氂哨笂序鉲秼摀巽茊	6800-06-20 23:39:12	-7871155140266310321	-3.04829e38	1
-7415279	笚綷想摻癫梒偆荈湩窐曋繾鏫蘌憬稁渣½隨苆	1001-11-02 05:11:33	-3745331437675076296	-3.21618e38	1
77	娥藨潰眤徕菗柢礥蕶浠嶲憅榩椻鍙鑜堋ᛀ暵氎	4473-09-13 01:18:59	4076508026242316746	-1.9525e38	1
select @@last_plan_from_cache;
@@last_plan_from_cache
0
SELECT *, rank() OVER (PARTITION BY col2 ORDER BY COL1) FROM PK_LP9463 WHERE col1 != 16614 and col1 < 16614;
COL1	COL2	COL4	COL3	COL5	rank() OVER (PARTITION BY col2 ORDER BY COL1)
-7153863	鯷氤衡椻闍饑堀鱟垩啵緬氂哨笂序鉲秼摀巽茊	6800-06-20 23:39:12	-7871155140266310321	-3.04829e38	1
-7415279	笚綷想摻癫梒偆荈湩窐曋繾鏫蘌憬稁渣½隨苆	1001-11-02 05:11:33	-3745331437675076296	-3.21618e38	1
77	娥藨潰眤徕菗柢礥蕶浠嶲憅榩椻鍙鑜堋ᛀ暵氎	4473-09-13 01:18:59	4076508026242316746	-1.9525e38	1
CREATE TABLE PK_SIGNED_10087 (
COL1 mediumint(8) unsigned NOT NULL,
COL2 varchar(20) DEFAULT NULL,
COL4 datetime DEFAULT NULL,
COL3 bigint(20) DEFAULT NULL,
COL5 float DEFAULT NULL,
PRIMARY KEY (COL1) );
insert into PK_SIGNED_10087 values(0, "痥腜蟿鮤枓欜喧檕澙姭袐裄钭僇剕焍哓閲疁櫘", "0017-11-14 05:40:55", -4504684261333179273, 7.97449e37);
prepare stmt from 'SELECT/*+ HASH_JOIN(t1, t2) */ t2.* FROM PK_SIGNED_10087 t1 JOIN PK_SIGNED_10087 t2 ON t1.col1 = t2.col1 WHERE t2.col1 >= ? AND t1.col1 >= ?;';
set @a=0, @b=0;
execute stmt using @a,@b;
COL1	COL2	COL4	COL3	COL5
0	痥腜蟿鮤枓欜喧檕澙姭袐裄钭僇剕焍哓閲疁櫘	0017-11-14 05:40:55	-4504684261333179273	7.97449e37
set @a=8950167, @b=16305982;
execute stmt using @a,@b;
COL1	COL2	COL4	COL3	COL5
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select @@session.tidb_enable_plan_cache_for_param_limit;
@@session.tidb_enable_plan_cache_for_param_limit
1
select @@global.tidb_enable_plan_cache_for_param_limit;
@@global.tidb_enable_plan_cache_for_param_limit
1
set @@session.tidb_enable_plan_cache_for_param_limit = OFF;
select @@session.tidb_enable_plan_cache_for_param_limit;
@@session.tidb_enable_plan_cache_for_param_limit
0
set @@session.tidb_enable_plan_cache_for_param_limit = 1;
select @@session.tidb_enable_plan_cache_for_param_limit;
@@session.tidb_enable_plan_cache_for_param_limit
1
set @@global.tidb_enable_plan_cache_for_param_limit = off;
select @@global.tidb_enable_plan_cache_for_param_limit;
@@global.tidb_enable_plan_cache_for_param_limit
0
set @@global.tidb_enable_plan_cache_for_param_limit = ON;
select @@global.tidb_enable_plan_cache_for_param_limit;
@@global.tidb_enable_plan_cache_for_param_limit
1
set @@global.tidb_enable_plan_cache_for_param_limit = '';
Error 1231 (42000): Variable 'tidb_enable_plan_cache_for_param_limit' can't be set to the value of ''
set @@global.tidb_enable_plan_cache_for_param_limit = 11;
Error 1231 (42000): Variable 'tidb_enable_plan_cache_for_param_limit' can't be set to the value of '11'
set @@global.tidb_enable_plan_cache_for_param_limit = enabled;
Error 1231 (42000): Variable 'tidb_enable_plan_cache_for_param_limit' can't be set to the value of 'enabled'
set @@global.tidb_enable_plan_cache_for_param_limit = disabled;
Error 1231 (42000): Variable 'tidb_enable_plan_cache_for_param_limit' can't be set to the value of 'disabled'
set @@global.tidb_enable_plan_cache_for_param_limit = open;
Error 1231 (42000): Variable 'tidb_enable_plan_cache_for_param_limit' can't be set to the value of 'open'
set @@global.tidb_enable_plan_cache_for_param_limit = DEFAULT;
drop table if exists t;
create table t(a int, key(a));
set @@session.tidb_enable_plan_cache_for_param_limit = OFF;
prepare stmt from 'select * from t limit ?';
show warnings;
Level	Code	Message
Warning	1105	skip prepared plan-cache: query has 'limit ?' is un-cacheable
set @a = 1;
execute stmt using @a;
a
execute stmt using @a;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
deallocate prepare stmt;
set @@session.tidb_enable_plan_cache_for_param_limit = ON;
prepare stmt from 'select * from t limit ?';
set @@session.tidb_enable_plan_cache_for_param_limit = OFF;
set @a = 1;
execute stmt using @a;
a
execute stmt using @a;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
execute stmt using @a;
a
show warnings;
Level	Code	Message
Warning	1105	skip prepared plan-cache: the switch 'tidb_enable_plan_cache_for_param_limit' is off
deallocate prepare stmt;
set @@session.tidb_enable_plan_cache_for_param_limit = ON;
prepare stmt from 'select * from t limit ?';
set @a = 1;
execute stmt using @a;
a
execute stmt using @a;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
set @@session.tidb_enable_plan_cache_for_param_limit = OFF;
set @a = 1;
execute stmt using @a;
a
execute stmt using @a;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
deallocate prepare stmt;
drop table if exists t1, t2;
create table t1 (a int);
create table t2 (a int, b int);
prepare st from 'select count(*) from information_schema.COLUMNS where table_name=? and TABLE_SCHEMA = \'planner__core__plan_cache\'';
set @a='t1';
execute st using @a;
count(*)
1
set @a='t2';
execute st using @a;
count(*)
2
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select @@session.tidb_enable_plan_cache_for_subquery;
@@session.tidb_enable_plan_cache_for_subquery
1
select @@global.tidb_enable_plan_cache_for_subquery;
@@global.tidb_enable_plan_cache_for_subquery
1
set @@session.tidb_enable_plan_cache_for_subquery = OFF;
select @@session.tidb_enable_plan_cache_for_subquery;
@@session.tidb_enable_plan_cache_for_subquery
0
set @@session.tidb_enable_plan_cache_for_subquery = 1;
select @@session.tidb_enable_plan_cache_for_subquery;
@@session.tidb_enable_plan_cache_for_subquery
1
set @@global.tidb_enable_plan_cache_for_subquery = off;
select @@global.tidb_enable_plan_cache_for_subquery;
@@global.tidb_enable_plan_cache_for_subquery
0
set @@global.tidb_enable_plan_cache_for_subquery = ON;
select @@global.tidb_enable_plan_cache_for_subquery;
@@global.tidb_enable_plan_cache_for_subquery
1
set @@global.tidb_enable_plan_cache_for_subquery = '';
Error 1231 (42000): Variable 'tidb_enable_plan_cache_for_subquery' can't be set to the value of ''
set @@global.tidb_enable_plan_cache_for_subquery = 11;
Error 1231 (42000): Variable 'tidb_enable_plan_cache_for_subquery' can't be set to the value of '11'
set @@global.tidb_enable_plan_cache_for_subquery = enabled;
Error 1231 (42000): Variable 'tidb_enable_plan_cache_for_subquery' can't be set to the value of 'enabled'
set @@global.tidb_enable_plan_cache_for_subquery = disabled;
Error 1231 (42000): Variable 'tidb_enable_plan_cache_for_subquery' can't be set to the value of 'disabled'
set @@global.tidb_enable_plan_cache_for_subquery = open;
Error 1231 (42000): Variable 'tidb_enable_plan_cache_for_subquery' can't be set to the value of 'open'
set @@global.tidb_enable_plan_cache_for_subquery = DEFAULT;
drop table if exists t, s;
create table t(a int, key(a));
create table s(a int, key(a));
set @@session.tidb_enable_plan_cache_for_subquery = OFF;
prepare stmt from 'select * from t where a in (select a from s)';
Level	Code	Message
Warning	1105	skip prepared plan-cache: query has sub-queries is un-cacheable
execute stmt;
a
execute stmt;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
deallocate prepare stmt;
set @@session.tidb_enable_plan_cache_for_subquery = ON;
prepare stmt from 'select * from t where a in (select a from s)';
set @@session.tidb_enable_plan_cache_for_subquery = OFF;
execute stmt;
a
execute stmt;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
execute stmt;
a
Level	Code	Message
Warning	1105	skip prepared plan-cache: the switch 'tidb_enable_plan_cache_for_subquery' is off
deallocate prepare stmt;
set @@session.tidb_enable_plan_cache_for_subquery = ON;
prepare stmt from 'select * from t where a in (select a from s)';
execute stmt;
a
execute stmt;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
set @@session.tidb_enable_plan_cache_for_subquery = OFF;
execute stmt;
a
execute stmt;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
deallocate prepare stmt;
set @@session.tidb_enable_plan_cache_for_subquery = DEFAULT;
CREATE TABLE IDT_MULTI15840STROBJSTROBJ (
COL1 enum('aa', 'zzz') DEFAULT NULL,
COL2 smallint(6) DEFAULT NULL,
COL3 date DEFAULT NULL,
KEY U_M_COL4 (COL1,COL2),
KEY U_M_COL5 (COL3,COL2));
INSERT INTO IDT_MULTI15840STROBJSTROBJ VALUES ('zzz',1047,'6115-06-05'),('zzz',-23221,'4250-09-03'),('zzz',27138,'1568-07-30'),('zzz',-30903,'6753-08-21'),('zzz',-26875,'6117-10-10');
prepare stmt from 'select * from IDT_MULTI15840STROBJSTROBJ where col3 <=> ? or col1 in (?, ?, ?) and col2 not between ? and ?';
set @a="0051-12-23", @b="none", @c="none", @d="none", @e=-32757, @f=-32757;
execute stmt using @a,@b,@c,@d,@e,@f;
COL1	COL2	COL3
show warnings;
Level	Code	Message
Warning	1105	skip prepared plan-cache: IndexMerge plan with full-scan is un-cacheable
set @a="9795-01-10", @b="aa", @c="aa", @d="aa", @e=31928, @f=31928;
execute stmt using @a,@b,@c,@d,@e,@f;
COL1	COL2	COL3
drop table if exists t;
create table t (a int);
set tidb_enable_non_prepared_plan_cache=1;
set tidb_enable_non_prepared_plan_cache_for_dml=0;
insert into t values (1);
insert into t values (1);
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select a from t where a < 2 for update;
a
1
1
select a from t where a < 2 for update;
a
1
1
select @@last_plan_from_cache;
@@last_plan_from_cache
0
set @x:=1;
set @x:=1;
select @@last_plan_from_cache;
@@last_plan_from_cache
0
set tidb_enable_non_prepared_plan_cache_for_dml=1;
insert into t values (1);
insert into t values (1);
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select a from t where a < 2 for update;
a
1
1
1
1
select a from t where a < 2 for update;
a
1
1
1
1
select @@last_plan_from_cache;
@@last_plan_from_cache
1
set tidb_enable_non_prepared_plan_cache=DEFAULT;
set tidb_enable_non_prepared_plan_cache_for_dml=DEFAULT;
drop table if exists t;
create table t (a varchar(10), b int);
set tidb_enable_non_prepared_plan_cache=1;
select * from t where a = _utf8'a';
a	b
select * from t where a = _utf8'a';
a	b
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select * from t where a = _latin1'a';
a	b
select * from t where a = _latin1'a';
a	b
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select * from t where a = N'a';
a	b
select * from t where a = N'a';
a	b
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select * from t where a = 'a';
a	b
select * from t where a = 'a';
a	b
select @@last_plan_from_cache;
@@last_plan_from_cache
1
set tidb_enable_non_prepared_plan_cache=DEFAULT;
drop table if exists t;
create table t(a int, b int, index(a));
set tidb_enable_non_prepared_plan_cache=1;
select sum(b) from t group by a+1;
sum(b)
select sum(b) from t group by a+1;
sum(b)
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select sum(b) from t group by a+2;
sum(b)
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select sum(b) from t group by a+2;
sum(b)
select @@last_plan_from_cache;
@@last_plan_from_cache
0
set tidb_enable_non_prepared_plan_cache=DEFAULT;
drop table if exists t;
create table t(a int, index(a));
set tidb_enable_non_prepared_plan_cache=1;
explain format = 'row' select * from t;
id	estRows	task	access object	operator info
IndexReader_7	10000.00	root		index:IndexFullScan_6
└─IndexFullScan_6	10000.00	cop[tikv]	table:t, index:a(a)	keep order:false, stats:pseudo
select @@last_plan_from_cache;
@@last_plan_from_cache
0
explain format = 'brief' select * from t;
id	estRows	task	access object	operator info
IndexReader	10000.00	root		index:IndexFullScan
└─IndexFullScan	10000.00	cop[tikv]	table:t, index:a(a)	keep order:false, stats:pseudo
select @@last_plan_from_cache;
@@last_plan_from_cache
0
explain format = 'dot' select * from t;
dot contents

digraph IndexReader_7 {
subgraph cluster7{
node [style=filled, color=lightgrey]
color=black
label = "root"
"IndexReader_7"
}
subgraph cluster6{
node [style=filled, color=lightgrey]
color=black
label = "cop"
"IndexFullScan_6"
}
"IndexReader_7" -> "IndexFullScan_6"
}

select @@last_plan_from_cache;
@@last_plan_from_cache
0
explain format = 'tidb_json' select * from t;
TiDB_JSON
[
    {
        "id": "IndexReader_7",
        "estRows": "10000.00",
        "taskType": "root",
        "operatorInfo": "index:IndexFullScan_6",
        "subOperators": [
            {
                "id": "IndexFullScan_6",
                "estRows": "10000.00",
                "taskType": "cop[tikv]",
                "accessObject": "table:t, index:a(a)",
                "operatorInfo": "keep order:false, stats:pseudo"
            }
        ]
    }
]

select @@last_plan_from_cache;
@@last_plan_from_cache
0
explain format = 'verbose' select * from t;
id	estRows	estCost	task	access object	operator info
IndexReader_7	10000.00	150773.33	root		index:IndexFullScan_6
└─IndexFullScan_6	10000.00	1628000.00	cop[tikv]	table:t, index:a(a)	keep order:false, stats:pseudo
select @@last_plan_from_cache;
@@last_plan_from_cache
0
explain format = 'cost_trace' select * from t;
id	estRows	estCost	costFormula	task	access object	operator info
IndexReader_7	10000.00	150773.33	((scan(10000*logrowsize(16)*tikv_scan_factor(40.7))) + (net(10000*rowsize(16)*tidb_kv_net_factor(3.96))))/15.00	root		index:IndexFullScan_6
└─IndexFullScan_6	10000.00	1628000.00	scan(10000*logrowsize(16)*tikv_scan_factor(40.7))	cop[tikv]	table:t, index:a(a)	keep order:false, stats:pseudo
select @@last_plan_from_cache;
@@last_plan_from_cache
0
explain format = 'row' select * from t limit 1;
id	estRows	task	access object	operator info
Limit_7	1.00	root		offset:0, count:1
└─IndexReader_12	1.00	root		index:Limit_11
  └─Limit_11	1.00	cop[tikv]		offset:0, count:1
    └─IndexFullScan_10	1.00	cop[tikv]	table:t, index:a(a)	keep order:false, stats:pseudo
explain format = 'brief' select * from t limit 1;
id	estRows	task	access object	operator info
Limit	1.00	root		offset:0, count:1
└─IndexReader	1.00	root		index:Limit
  └─Limit	1.00	cop[tikv]		offset:0, count:1
    └─IndexFullScan	1.00	cop[tikv]	table:t, index:a(a)	keep order:false, stats:pseudo
explain format = 'dot' select * from t limit 1;
dot contents

digraph Limit_7 {
subgraph cluster7{
node [style=filled, color=lightgrey]
color=black
label = "root"
"Limit_7" -> "IndexReader_12"
}
subgraph cluster11{
node [style=filled, color=lightgrey]
color=black
label = "cop"
"Limit_11" -> "IndexFullScan_10"
}
"IndexReader_12" -> "Limit_11"
}

explain format = 'tidb_json' select * from t limit 1;
TiDB_JSON
[
    {
        "id": "Limit_7",
        "estRows": "1.00",
        "taskType": "root",
        "operatorInfo": "offset:0, count:1",
        "subOperators": [
            {
                "id": "IndexReader_12",
                "estRows": "1.00",
                "taskType": "root",
                "operatorInfo": "index:Limit_11",
                "subOperators": [
                    {
                        "id": "Limit_11",
                        "estRows": "1.00",
                        "taskType": "cop[tikv]",
                        "operatorInfo": "offset:0, count:1",
                        "subOperators": [
                            {
                                "id": "IndexFullScan_10",
                                "estRows": "1.00",
                                "taskType": "cop[tikv]",
                                "accessObject": "table:t, index:a(a)",
                                "operatorInfo": "keep order:false, stats:pseudo"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]

explain format = 'verbose' select * from t limit 1;
id	estRows	estCost	task	access object	operator info
Limit_7	1.00	12.97	root		offset:0, count:1
└─IndexReader_12	1.00	12.97	root		index:Limit_11
  └─Limit_11	1.00	162.80	cop[tikv]		offset:0, count:1
    └─IndexFullScan_10	1.00	162.80	cop[tikv]	table:t, index:a(a)	keep order:false, stats:pseudo
explain format = 'cost_trace' select * from t limit 1;
id	estRows	estCost	costFormula	task	access object	operator info
Limit_7	1.00	12.97	((((scan(1*logrowsize(16)*tikv_scan_factor(40.7)))) + (net(1*rowsize(8)*tidb_kv_net_factor(3.96))))/15.00)	root		offset:0, count:1
└─IndexReader_12	1.00	12.97	(((scan(1*logrowsize(16)*tikv_scan_factor(40.7)))) + (net(1*rowsize(8)*tidb_kv_net_factor(3.96))))/15.00	root		index:Limit_11
  └─Limit_11	1.00	162.80	(scan(1*logrowsize(16)*tikv_scan_factor(40.7)))	cop[tikv]		offset:0, count:1
    └─IndexFullScan_10	1.00	162.80	scan(1*logrowsize(16)*tikv_scan_factor(40.7))	cop[tikv]	table:t, index:a(a)	keep order:false, stats:pseudo
set tidb_enable_non_prepared_plan_cache=DEFAULT;
drop table if exists t, t1, t2;
CREATE TABLE `t1` (`c_int` int(11) NOT NULL,  `c_str` varchar(40) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,  `c_datetime` datetime DEFAULT NULL,  `c_timestamp` timestamp NULL DEFAULT NULL,  `c_double` double DEFAULT NULL,  `c_decimal` decimal(12,6) DEFAULT NULL,  `c_enum` enum('blue','green','red','yellow','white','orange','purple') NOT NULL,  PRIMARY KEY (`c_int`,`c_enum`) /*T![clustered_index] CLUSTERED */,  KEY `c_decimal` (`c_decimal`),  UNIQUE KEY `c_datetime` (`c_datetime`),  UNIQUE KEY `c_timestamp` (`c_timestamp`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin;
CREATE TABLE `t2` (`c_int` int(11) NOT NULL,  `c_str` varchar(40) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,  `c_datetime` datetime DEFAULT NULL,  `c_timestamp` timestamp NULL DEFAULT NULL,  `c_double` double DEFAULT NULL,  `c_decimal` decimal(12,6) DEFAULT NULL,  `c_enum` enum('blue','green','red','yellow','white','orange','purple') NOT NULL,  PRIMARY KEY (`c_int`,`c_enum`) /*T![clustered_index] CLUSTERED */,  KEY `c_decimal` (`c_decimal`),  UNIQUE KEY `c_datetime` (`c_datetime`),  UNIQUE KEY `c_timestamp` (`c_timestamp`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin;
create table t (a int, b int, primary key(a), key(b));
set @v0 = 'nice hellman', @v1 = 'flamboyant booth', @v2 = 'quirky brahmagupta';
prepare stmt16 from 'select * from t1 where c_enum in (select c_enum from t2 where t1.c_str in (?, ?, ?))';
execute stmt16 using @v0, @v1, @v2;
c_int	c_str	c_datetime	c_timestamp	c_double	c_decimal	c_enum
execute stmt16 using @v0, @v1, @v2;
c_int	c_str	c_datetime	c_timestamp	c_double	c_decimal	c_enum
select @@last_plan_from_cache;
@@last_plan_from_cache
1
prepare stmt from 'select c_enum from t1';
execute stmt;
c_enum
execute stmt;
c_enum
select @@last_plan_from_cache;
@@last_plan_from_cache
1
prepare st from 'select a from t use index(b)';
execute st;
a
execute st;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
set tidb_enable_non_prepared_plan_cache=1;
set tidb_enable_non_prepared_plan_cache_for_dml=1;
drop table if exists t;
create table t (a int default 0, b int default 0);
select a from t for update;
a
select a from t for update;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select a from t where a<10 for update;
a
select a from t where a<10 for update;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
insert into t values (1, 1);
insert into t values (1, 1);
select @@last_plan_from_cache;
@@last_plan_from_cache
1
insert into t (a, b) values (1, 1);
insert into t (a, b) values (1, 1);
select @@last_plan_from_cache;
@@last_plan_from_cache
1
insert into t (a) values (1);
insert into t (a) values (1);
select @@last_plan_from_cache;
@@last_plan_from_cache
1
insert into t (b) values (1);
insert into t (b) values (1);
select @@last_plan_from_cache;
@@last_plan_from_cache
1
insert into t select * from t;
insert into t select * from t;
select @@last_plan_from_cache;
@@last_plan_from_cache
1
insert into t select * from t where a>10;
insert into t select * from t where a>10;
select @@last_plan_from_cache;
@@last_plan_from_cache
1
update t set a=1;
update t set a=1;
select @@last_plan_from_cache;
@@last_plan_from_cache
1
update t set a=1 where a>10;
update t set a=1 where a>10;
select @@last_plan_from_cache;
@@last_plan_from_cache
1
update t set a=1, b=1;
update t set a=1, b=1;
select @@last_plan_from_cache;
@@last_plan_from_cache
1
update t set a=a+1 where a>10;
update t set a=a+1 where a>10;
select @@last_plan_from_cache;
@@last_plan_from_cache
1
delete from t;
delete from t;
select @@last_plan_from_cache;
@@last_plan_from_cache
1
delete from t where a>10;
delete from t where a>10;
select @@last_plan_from_cache;
@@last_plan_from_cache
1
set tidb_enable_non_prepared_plan_cache=DEFAULT;
set tidb_enable_non_prepared_plan_cache_for_dml=DEFAULT;
set tidb_enable_non_prepared_plan_cache=1;
set tidb_enable_non_prepared_plan_cache_for_dml=1;
drop table if exists t;
create table t (a int);
update t set a=1 where a<10;
update t set a=2 where a<12;
select @@last_plan_from_cache;
@@last_plan_from_cache
1
update t set a=1 where a<10; update t set a=2 where a<12;
update t set a=1 where a<10; update t set a=2 where a<12;
select @@last_plan_from_cache;
@@last_plan_from_cache
0
update t set a=2 where a<12;
select @@last_plan_from_cache;
@@last_plan_from_cache
1
set tidb_enable_non_prepared_plan_cache=DEFAULT;
set tidb_enable_non_prepared_plan_cache_for_dml=DEFAULT;
set tidb_enable_non_prepared_plan_cache=1;
drop table if exists t1, t2, t3, t4;
create table t1 (a int, b int, c int);
create table t2 (a int, b int, c int);
create table t3 (a int, b int, c int);
create table t4 (a int, x int);
select * from t1, t2 where t1.a=t2.a and t1.b<10;
a	b	c	a	b	c
select * from t1, t2 where t1.a=t2.a and t1.b<10;
a	b	c	a	b	c
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select * from t1, t2;
a	b	c	a	b	c
select * from t1, t2;
a	b	c	a	b	c
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select * from t1, t2 where t1.a<t2.a and t2.c=10;
a	b	c	a	b	c
select * from t1, t2 where t1.a<t2.a and t2.c=10;
a	b	c	a	b	c
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select * from t1 tx, t1 ty;
a	b	c	a	b	c
select * from t1 tx, t1 ty;
a	b	c	a	b	c
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select * from t1 tx, t1 ty where tx.a=ty.a;
a	b	c	a	b	c
select * from t1 tx, t1 ty where tx.a=ty.a;
a	b	c	a	b	c
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select * from t1 inner join t2;
a	b	c	a	b	c
select * from t1 inner join t2;
a	b	c	a	b	c
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select * from t1 inner join t2 on t1.a=t2.a;
a	b	c	a	b	c
select * from t1 inner join t2 on t1.a=t2.a;
a	b	c	a	b	c
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select * from t1 inner join t2 on t1.a=t2.a and t2.c<10;
a	b	c	a	b	c
select * from t1 inner join t2 on t1.a=t2.a and t2.c<10;
a	b	c	a	b	c
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select * from t1 left join t2 on t1.a=t2.a;
a	b	c	a	b	c
select * from t1 left join t2 on t1.a=t2.a;
a	b	c	a	b	c
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select * from t1 left join t2 on t1.a=t2.a and t2.c<10;
a	b	c	a	b	c
select * from t1 left join t2 on t1.a=t2.a and t2.c<10;
a	b	c	a	b	c
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select * from t1, t4 where t1.a=t4.a and t4.x=10;
a	b	c	a	x
select * from t1, t4 where t1.a=t4.a and t4.x=10;
a	b	c	a	x
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select * from t1 inner join t4 on t1.a=t4.a and t4.x=10;
a	b	c	a	x
select * from t1 inner join t4 on t1.a=t4.a and t4.x=10;
a	b	c	a	x
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select * from t1, t2, t3;
a	b	c	a	b	c	a	b	c
select * from t1, t2, t3;
a	b	c	a	b	c	a	b	c
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select * from t1, t2, t1 tx;
a	b	c	a	b	c	a	b	c
select * from t1, t2, t1 tx;
a	b	c	a	b	c	a	b	c
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select * from t1, (select * from t2) t2;
a	b	c	a	b	c
select * from t1, (select * from t2) t2;
a	b	c	a	b	c
select @@last_plan_from_cache;
@@last_plan_from_cache
0
set tidb_enable_non_prepared_plan_cache=DEFAULT;
set tidb_enable_non_prepared_plan_cache=1;
set sql_mode='';
drop table if exists t;
create table t (a int, b int);
select count(*) from t;
count(*)
0
select count(*) from t;
count(*)
0
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select max(b) from t group by a;
max(b)
select max(b) from t group by a;
max(b)
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select count(*), a from t group by a, b;
count(*)	a
select count(*), a from t group by a, b;
count(*)	a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select a from t order by a;
a
select a from t order by a;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select a, b, a+b from t order by a, b;
a	b	a+b
select a, b, a+b from t order by a, b;
a	b	a+b
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select sum(b) from t group by a+1;
sum(b)
select sum(b) from t group by a+1;
sum(b)
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select count(*) from t group by a+b;
count(*)
select count(*) from t group by a+b;
count(*)
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select a, b, count(*) from t group by 1;
a	b	count(*)
select a, b, count(*) from t group by 1;
a	b	count(*)
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select a, b, count(*) from t group by 1, a;
a	b	count(*)
select a, b, count(*) from t group by 1, a;
a	b	count(*)
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select a, b, count(*) from t group by a having b < 1;
a	b	count(*)
select a, b, count(*) from t group by a having b < 1;
a	b	count(*)
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select a from t order by a+1;
a
select a from t order by a+1;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select a, b, a+b from t order by a + b;
a	b	a+b
select a, b, a+b from t order by a + b;
a	b	a+b
select @@last_plan_from_cache;
@@last_plan_from_cache
0
set tidb_enable_non_prepared_plan_cache=DEFAULT;
set sql_mode=DEFAULT;
set tidb_enable_non_prepared_plan_cache=1;
drop table if exists t;
create table t (a int, b int);
select a from t order by a;
a
select a from t order by a;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select a from t order by a asc;
a
select a from t order by a asc;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select a from t order by a desc;
a
select a from t order by a desc;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select a from t order by a,b desc;
a
select a from t order by a,b desc;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select a from t order by 1;
a
select a from t order by 1;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select a from t order by a, 1;
a
select a from t order by a, 1;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select a from t order by a+1,b-2;
a
select a from t order by a+1,b-2;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select a from t order by a desc, b+2;
a
select a from t order by a desc, b+2;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
set tidb_enable_non_prepared_plan_cache=DEFAULT;
set tidb_enable_non_prepared_plan_cache=1;
drop table if exists t1;
create table t1 (a varchar(10) character set latin1, b int);
insert into t1 values ('a',1);
select concat(a, if(b>10, N'x', N'y')) from t1;
concat(a, if(b>10, N'x', N'y'))
ay
select concat(a, if(b>10, N'x', N'y')) from t1;
concat(a, if(b>10, N'x', N'y'))
ay
select @@last_plan_from_cache;
@@last_plan_from_cache
0
set tidb_enable_non_prepared_plan_cache=DEFAULT;
set tidb_enable_non_prepared_plan_cache=1;
drop table if exists t1;
CREATE TABLE t1 (c1 INT);
INSERT INTO t1 VALUES (1);
SELECT c1 FROM t1 WHERE TO_BASE64('牵');
c1
1
SELECT c1 FROM t1 WHERE TO_BASE64('牵');
c1
1
select @@last_plan_from_cache;
@@last_plan_from_cache
1
SELECT c1 FROM t1 WHERE TO_BASE64('哈');
c1
1
select @@last_plan_from_cache;
@@last_plan_from_cache
1
SELECT c1 FROM t1 WHERE TO_BASE64('');
c1
set tidb_enable_non_prepared_plan_cache=DEFAULT;
set tidb_enable_non_prepared_plan_cache=1;
drop table if exists t1;
CREATE TABLE t1(c1 INT);
INSERT INTO t1 VALUES (1);
SELECT c1 FROM t1 WHERE UNHEX(2038330881);
c1
1
SELECT c1 FROM t1 WHERE UNHEX(2038330881);
c1
1
select @@last_plan_from_cache;
@@last_plan_from_cache
1
set tidb_enable_non_prepared_plan_cache=DEFAULT;
drop table if exists t;
create table t (a varchar(10), key(a(5)));
prepare st from 'select a from t use index(a) where a=?';
set @a='a';
execute st using @a;
a
execute st using @a;
a
Level	Code	Message
Warning	1105	skip plan-cache: plan rebuild failed, rebuild to get an unsafe range
set @@time_zone='UTC';
set @@collation_connection='utf8_general_ci';
prepare s from 'select DATE_FORMAT("2020-01-01","%W") = "wednesday"';
execute s;
DATE_FORMAT("2020-01-01","%W") = "wednesday"
1
set @@collation_connection='utf8_bin';
execute s;
DATE_FORMAT("2020-01-01","%W") = "wednesday"
0
select @@last_plan_from_cache;
@@last_plan_from_cache
0
set @@time_zone=DEFAULT;
set @@collation_connection=DEFAULT;
set tidb_enable_non_prepared_plan_cache=1;
drop table if exists t;
create table t (a int, b varchar(32), c datetime, key(a));
select * from t where mod(a, 5) < 2;
a	b	c
select * from t where mod(a, 5) < 2;
a	b	c
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select * from t where c < now();
a	b	c
select * from t where c < now();
a	b	c
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select date_format(c, '%Y-%m-%d') from t where a < 10;
date_format(c, '%Y-%m-%d')
select date_format(c, '%Y-%m-%d') from t where a < 10;
date_format(c, '%Y-%m-%d')
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select str_to_date(b, '%Y-%m-%d') from t where a < 10;
str_to_date(b, '%Y-%m-%d')
select str_to_date(b, '%Y-%m-%d') from t where a < 10;
str_to_date(b, '%Y-%m-%d')
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select * from t where a-2 < 20;
a	b	c
select * from t where a-2 < 20;
a	b	c
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select * from t where a+b > 100;
a	b	c
select * from t where a+b > 100;
a	b	c
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select * from t where -a > 10;
a	b	c
select * from t where -a > 10;
a	b	c
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select * from t where a < 1 and b like '%abc%';
a	b	c
select * from t where a < 1 and b like '%abc%';
a	b	c
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select database() from t;
database()
select database() from t;
database()
select @@last_plan_from_cache;
@@last_plan_from_cache
0
set tidb_enable_non_prepared_plan_cache=DEFAULT;
select @@tidb_prepared_plan_cache_size;
@@tidb_prepared_plan_cache_size
100
select @@tidb_session_plan_cache_size;
@@tidb_session_plan_cache_size
100
set @@tidb_prepared_plan_cache_size = 200;
select @@tidb_prepared_plan_cache_size;
@@tidb_prepared_plan_cache_size
200
select @@tidb_session_plan_cache_size;
@@tidb_session_plan_cache_size
200
set @@tidb_session_plan_cache_size = 300;
select @@tidb_prepared_plan_cache_size;
@@tidb_prepared_plan_cache_size
300
select @@tidb_session_plan_cache_size;
@@tidb_session_plan_cache_size
300
set global tidb_prepared_plan_cache_size = 400;
select @@tidb_prepared_plan_cache_size;
@@tidb_prepared_plan_cache_size
400
select @@tidb_session_plan_cache_size;
@@tidb_session_plan_cache_size
400
set global tidb_session_plan_cache_size = 500;
select @@tidb_prepared_plan_cache_size;
@@tidb_prepared_plan_cache_size
500
select @@tidb_session_plan_cache_size;
@@tidb_session_plan_cache_size
500
set global tidb_prepared_plan_cache_size = default;
set global tidb_session_plan_cache_size = default;
set @@tidb_session_plan_cache_size = default;
set @@tidb_prepared_plan_cache_size = default;
drop table if exists t;
create table t(a int);
set tidb_enable_non_prepared_plan_cache=1;
select * from t where a=1;
a
explain select * from t where a=2;
id	estRows	task	access object	operator info
TableReader_7	10.00	root		data:Selection_6
└─Selection_6	10.00	cop[tikv]		eq(planner__core__plan_cache.t.a, 2)
  └─TableFullScan_5	10000.00	cop[tikv]	table:t	keep order:false, stats:pseudo
select @@last_plan_from_cache;
@@last_plan_from_cache
0
explain format=verbose select * from t where a=2;
id	estRows	estCost	task	access object	operator info
TableReader_7	10.00	168975.57	root		data:Selection_6
└─Selection_6	10.00	2534000.00	cop[tikv]		eq(planner__core__plan_cache.t.a, 2)
  └─TableFullScan_5	10000.00	2035000.00	cop[tikv]	table:t	keep order:false, stats:pseudo
select @@last_plan_from_cache;
@@last_plan_from_cache
0
explain analyze select * from t where a=2;
id	estRows	actRows	task	access object	execution info	operator info	memory	disk
TableReader_7	10.00	0	root	<access_object>	<execution_info>	<operator_info>	<memory>	<disk>
└─Selection_6	10.00	0	cop[tikv]	<access_object>	<execution_info>	<operator_info>	<memory>	<disk>
  └─TableFullScan_5	10000.00	0	cop[tikv]	<access_object>	<execution_info>	<operator_info>	<memory>	<disk>
select @@last_plan_from_cache;
@@last_plan_from_cache
0
set tidb_enable_non_prepared_plan_cache=default;
drop table if exists t1, t2, t3, t4;
set @@tidb_opt_fix_control = "45798:on";
create table t1 (a int, info json, city varchar(64) as (JSON_UNQUOTE(JSON_EXTRACT(info, '$.city'))));
create table t2 (a int, info json, city varchar(64) as (JSON_UNQUOTE(JSON_EXTRACT(info, '$.city'))) virtual);
create table t3 (a int, info json, city varchar(64) as (JSON_UNQUOTE(JSON_EXTRACT(info, '$.city'))) stored);
create table t4 (a int, info json, index zips( (CAST(info->'$.zipcode' AS UNSIGNED ARRAY))));
set @a=1;
set @b=2;
prepare s1 from 'select * from t1 where a=?';
show warnings;
Level	Code	Message
execute s1 using @a;
a	info	city
execute s1 using @b;
a	info	city
select @@last_plan_from_cache;
@@last_plan_from_cache
1
prepare s1 from 'select * from t2 where a=?';
show warnings;
Level	Code	Message
execute s1 using @a;
a	info	city
execute s1 using @b;
a	info	city
select @@last_plan_from_cache;
@@last_plan_from_cache
1
prepare s1 from 'select * from t3 where a=?';
show warnings;
Level	Code	Message
execute s1 using @a;
a	info	city
execute s1 using @b;
a	info	city
select @@last_plan_from_cache;
@@last_plan_from_cache
1
prepare s1 from 'select * from t4 where a=?';
show warnings;
Level	Code	Message
execute s1 using @a;
a	info
execute s1 using @b;
a	info
select @@last_plan_from_cache;
@@last_plan_from_cache
1
set @@tidb_opt_fix_control = default;
drop table if exists t1, t2;
set @@tidb_opt_fix_control = "45798:on";
CREATE TABLE t1 (
ipk varbinary(255) NOT NULL,
i_id varchar(45) DEFAULT NULL,
i_set_id varchar(45) DEFAULT NULL,
p_id varchar(45) DEFAULT NULL,
p_set_id varchar(45) DEFAULT NULL,
m_id bigint(20) DEFAULT NULL,
m_i_id varchar(127) DEFAULT NULL,
m_i_set_id varchar(127) DEFAULT NULL,
d json DEFAULT NULL,
p_sources json DEFAULT NULL,
nslc json DEFAULT NULL,
cl json DEFAULT NULL,
fii json DEFAULT NULL,
fpi json DEFAULT NULL,
PRIMARY KEY (ipk) /*T![clustered_index] CLUSTERED */,
UNIQUE KEY i_id (i_id),
KEY d ((cast(d as char(253) array))),
KEY m_i_id (m_i_id),
KEY m_i_set_id (m_i_set_id),
KEY fpi ((cast(fpi as unsigned array))),
KEY nslc ((cast(nslc as char(1000) array))),
KEY cl ((cast(cl as char(3000) array))),
KEY fii ((cast(fii as unsigned array))),
KEY m_id (m_id),
KEY i_set_id (i_set_id),
KEY m_i_and_m_id (m_i_id,m_id));
CREATE TABLE t2 (
ipk varbinary(255) NOT NULL,
created_time bigint(20) DEFAULT NULL,
arrival_time bigint(20) DEFAULT NULL,
updated_time bigint(20) DEFAULT NULL,
timestamp_data json DEFAULT NULL,
PRIMARY KEY (ipk) /*T![clustered_index] CLUSTERED */);
prepare stmt from 'select *
from ( t1 left outer join t2 on ( t1 . ipk = t2 . ipk ) )
where ( t1 . i_id = ? )';
show warnings;
Level	Code	Message
set @a='a', @b='b';
execute stmt using @a;
ipk	i_id	i_set_id	p_id	p_set_id	m_id	m_i_id	m_i_set_id	d	p_sources	nslc	cl	fii	fpi	ipk	created_time	arrival_time	updated_time	timestamp_data
execute stmt using @b;
ipk	i_id	i_set_id	p_id	p_set_id	m_id	m_i_id	m_i_set_id	d	p_sources	nslc	cl	fii	fpi	ipk	created_time	arrival_time	updated_time	timestamp_data
select @@last_plan_from_cache;
@@last_plan_from_cache
1
set @@tidb_opt_fix_control = default;
drop table if exists t;
create table t (a int);
prepare st from 'select * from t where mod(a, 2)=1';
execute st;
a
execute st;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
insert into mysql.expr_pushdown_blacklist(name) values('mod');
admin reload expr_pushdown_blacklist;
execute st;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
0
execute st;
a
select @@last_plan_from_cache;
@@last_plan_from_cache
1
delete from mysql.expr_pushdown_blacklist;
admin reload expr_pushdown_blacklist;
drop table if exists t, tt;
create table t(a int, index(a));
create table tt(a varchar(10));
set tidb_enable_non_prepared_plan_cache=1;
select a+1 from t where a<10;
a+1
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select a+1 from t where a<20;
a+1
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select a+2 from t where a<30;
a+2
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select a+2 from t where a<40;
a+2
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select a,a+1 from t where a<30;
a	a+1
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select a,a+1 from t where a<40;
a	a+1
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select a+'123' from tt where a='1';
a+'123'
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select a+'123' from tt where a='2';
a+'123'
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select 1 from t where a<10;
1
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select 1 from t where a<20;
1
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select 2 from t where a<10;
2
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select 2 from t where a<20;
2
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select 1,2 from t where a<10;
1	2
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select 1,2 from t where a<20;
1	2
select @@last_plan_from_cache;
@@last_plan_from_cache
1
set tidb_enable_non_prepared_plan_cache=default;
drop table if exists t;
create table t(a int);
insert into t values(1);
prepare s from "select * from t where tidb_parse_tso(a) > unix_timestamp()";
execute s;
a
1
drop table if exists t;
set tidb_enable_non_prepared_plan_cache=1;
create table t (a int, b varchar(32), c datetime, key(a));
select * from t where mod(a, 5) < 2;
a	b	c
select * from t where mod(a, 5) < 2;
a	b	c
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select * from t where c < now();
a	b	c
select * from t where c < now();
a	b	c
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select date_format(c, '%Y-%m-%d') from t where a < 10;
date_format(c, '%Y-%m-%d')
select date_format(c, '%Y-%m-%d') from t where a < 10;
date_format(c, '%Y-%m-%d')
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select str_to_date(b, '%Y-%m-%d') from t where a < 10;
str_to_date(b, '%Y-%m-%d')
select str_to_date(b, '%Y-%m-%d') from t where a < 10;
str_to_date(b, '%Y-%m-%d')
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select * from t where a-2 < 20;
a	b	c
select * from t where a-2 < 20;
a	b	c
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select * from t where a+b > 100;
a	b	c
select * from t where a+b > 100;
a	b	c
select @@last_plan_from_cache;
@@last_plan_from_cache
1
select * from t where -a > 10;
a	b	c
select * from t where -a > 10;
a	b	c
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select * from t where a < 1 and b like '%abc%';
a	b	c
select * from t where a < 1 and b like '%abc%';
a	b	c
select @@last_plan_from_cache;
@@last_plan_from_cache
0
select database() from t;
database()
select database() from t;
database()
select @@last_plan_from_cache;
@@last_plan_from_cache
0
set tidb_enable_non_prepared_plan_cache=default;
drop table if exists t;
CREATE TABLE t (a int(11) DEFAULT NULL, b date DEFAULT NULL);
INSERT INTO t VALUES (1, current_date());
PREPARE stmt FROM 'SELECT a FROM t WHERE b=current_date()';
EXECUTE stmt;
a
1
