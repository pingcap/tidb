set tidb_cost_model_version=2;
drop table if exists t, t1, t2, t3, t4;
create table t(a int, b int, key(a));
create table t1(a int, b int, key(a));
create table t2(a int, b int, key(a));
create table t3(a int, b int, key(a));
create table t4(a int, b int, key(a));
explain format='plan_tree' select /*+ straight_join() */ * from t, t1, t2, t3 where t.a = t1.a and t1.b=t2.b;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
        └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from t2, t1, t3, t where t.a = t1.a and t1.b=t2.b;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
│   └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		CARTESIAN inner join
  ├─TableReader(Build)	root		data:TableFullScan
  │ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from t3, t2, t1, t where t.a = t1.a and t1.b=t2.b;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
│   └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		CARTESIAN inner join
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:TableFullScan
      └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from t3, t1, t, t2 where t.a = t1.a and t1.b=t2.b;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
│   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
  │   └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		CARTESIAN inner join
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:TableFullScan
      └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from t2 join t1 on t2.a=t1.a join t3 on t1.b=t3.b;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
      └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from t3 join t1 on t1.b=t3.b join t2 on t2.a=t1.a;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
│   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
      └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from t3 join t2 on t2.b=t3.b join t1 on t2.a=t1.a;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
│   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
      └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from t2 join (t1 join t3 on t1.a=t3.a) on t2.a=1;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─IndexLookUp(Build)	root		
│ ├─IndexRangeScan(Build)	cop[tikv]	table:t2, index:a(a)	range:[1,1], keep order:false, stats:pseudo
│ └─TableRowIDScan(Probe)	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from t2 join (t1 join t3 on t1.a=t3.a) on t2.a=t3.a;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
│   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from t1 join (t2 join t3 on t2.a=t3.a) on t1.a=t3.a;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
│   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
      └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from t3 join (t1 join t2 on t1.a=t2.a) on t2.a=t3.a;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from t2 join t1 on t1.a=t2.a join t3 on t2.b=t3.b;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from t1 join t2 on t1.a=t2.a join t3 on t2.b=t3.b;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from t2 join t3 on t3.a=t2.a join t1 on t2.a=t1.a;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
│   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
      └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from (t1 join t2 on t1.a=t2.a) join (t3 join t4 on t3.a=t4.a) on t2.a=t4.a;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
│ ├─TableReader(Build)	root		data:Selection
│ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
│ │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
│ └─TableReader(Probe)	root		data:Selection
│   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
│     └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from (t1 join t2 on t1.a=t2.a) join (t3 join t4 on t3.a=t4.a) on t2.a=t3.a;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
│ ├─TableReader(Build)	root		data:Selection
│ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
│ │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
│ └─TableReader(Probe)	root		data:Selection
│   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
│     └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from (t1 join t2 on t1.a=t2.a) join (t3 join t4 on t3.a=t4.a) on t1.a=t4.a;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
│ ├─TableReader(Build)	root		data:Selection
│ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
│ │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
│ └─TableReader(Probe)	root		data:Selection
│   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
│     └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from (t3 join t4 on t3.a=t4.a) join (t1 join t2 on t1.a=t2.a) on t2.a=t4.a;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
│ ├─TableReader(Build)	root		data:Selection
│ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
│ │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
│ └─TableReader(Probe)	root		data:Selection
│   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
│     └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
  │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
      └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from (t3 join t4 on t3.a=t4.a) join (t1 join t2 on t1.a=t2.a) on t2.a=t3.a;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
│ ├─TableReader(Build)	root		data:Selection
│ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
│ │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
│ └─TableReader(Probe)	root		data:Selection
│   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
│     └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
  │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
      └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from ((select t3.a, t3.b from t, t1, t2, t3 where t.a = t1.a and t1.b=t2.b) t3 join t4 on t3.a=t4.a) join (t1 join t2 on t1.a=t2.a) on t1.a=t4.a;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
│ ├─TableReader(Build)	root		data:Selection
│ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
│ │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
│ └─TableReader(Probe)	root		data:Selection
│   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
│     └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
  │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		CARTESIAN inner join
    ├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
    │ ├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    │ │ ├─IndexReader(Build)	root		index:IndexFullScan
    │ │ │ └─IndexFullScan	cop[tikv]	table:t, index:a(a)	keep order:false, stats:pseudo
    │ │ └─TableReader(Probe)	root		data:Selection
    │ │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │ │     └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    │ └─TableReader(Probe)	root		data:Selection
    │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │     └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
        └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from (t1 join t2 on t1.a=t2.a) join ((select t3.a, t3.b from t, t1, t2, t3 where t.a = t1.a and t1.b=t2.b) t3 join t4 on t3.a=t4.a) on t2.a=t4.a;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
│ ├─TableReader(Build)	root		data:Selection
│ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
│ │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
│ └─TableReader(Probe)	root		data:Selection
│   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
│     └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
  │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		CARTESIAN inner join
    ├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
    │ ├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    │ │ ├─IndexReader(Build)	root		index:IndexFullScan
    │ │ │ └─IndexFullScan	cop[tikv]	table:t, index:a(a)	keep order:false, stats:pseudo
    │ │ └─TableReader(Probe)	root		data:Selection
    │ │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │ │     └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    │ └─TableReader(Probe)	root		data:Selection
    │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │     └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
        └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from (t1 join t2 on t1.a=t2.a) join ((select t3.a, t3.b from t1, t3, t2, t where t.a = t1.a and t1.b=t2.b) t3 join t4 on t3.a=t4.a) on t2.a=t3.a;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
│ ├─TableReader(Build)	root		data:Selection
│ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
│ │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
│ └─TableReader(Probe)	root		data:Selection
│   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
│     └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
  │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
    ├─IndexReader(Build)	root		index:IndexFullScan
    │ └─IndexFullScan	cop[tikv]	table:t, index:a(a)	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
      │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
      └─HashJoin(Probe)	root		CARTESIAN inner join
        ├─TableReader(Build)	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
        │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
        └─TableReader(Probe)	root		data:Selection
          └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
            └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from (t1 join t2 on t1.a=t2.a) join ((select t3.a, t3.b from t3, t2, t1, t where t.a = t1.a and t1.b=t2.b) t3 join t4 on t3.a=t4.a) on t1.a=t4.a;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
│ ├─TableReader(Build)	root		data:Selection
│ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
│ │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
│ └─TableReader(Probe)	root		data:Selection
│   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
│     └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
  │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
    ├─IndexReader(Build)	root		index:IndexFullScan
    │ └─IndexFullScan	cop[tikv]	table:t, index:a(a)	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
      │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
      └─HashJoin(Probe)	root		CARTESIAN inner join
        ├─TableReader(Build)	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
        │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
        └─TableReader(Probe)	root		data:Selection
          └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
            └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from ((select t3.a, t3.b from t1, t2, t, t3 where t.a = t1.a and t1.b=t2.b) t3 join t4 on t3.a=t4.a) join (t1 join t2 on t1.a=t2.a) on t2.a=t4.a;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
│ ├─TableReader(Build)	root		data:Selection
│ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
│ │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
│ └─TableReader(Probe)	root		data:Selection
│   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
│     └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
  │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		CARTESIAN inner join
    ├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
    │ ├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
    │ │ ├─TableReader(Build)	root		data:Selection
    │ │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │ │ │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    │ │ └─TableReader(Probe)	root		data:Selection
    │ │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │ │     └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    │ └─IndexReader(Probe)	root		index:IndexFullScan
    │   └─IndexFullScan	cop[tikv]	table:t, index:a(a)	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
        └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from ((select t3.a, t3.b from t2, t1, t, t3 where t.a = t1.a and t1.b=t2.b) t3 join t4 on t3.a=t4.a) join (t1 join t2 on t1.a=t2.a) on t2.a=t3.a;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
│ ├─TableReader(Build)	root		data:Selection
│ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
│ │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
│ └─TableReader(Probe)	root		data:Selection
│   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
│     └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
  │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		CARTESIAN inner join
    ├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
    │ ├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)]
    │ │ ├─TableReader(Build)	root		data:Selection
    │ │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │ │ │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    │ │ └─TableReader(Probe)	root		data:Selection
    │ │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │ │     └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    │ └─IndexReader(Probe)	root		index:IndexFullScan
    │   └─IndexFullScan	cop[tikv]	table:t, index:a(a)	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
        └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from ((select t3.a, t3.b from t3, t2, t1, t where t.a = t1.a and t1.b=t2.b) t3 join t4 on t3.a=t4.a) join (t1 join t2 on t1.a=t2.a) on t1.a=t4.a;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
│ ├─TableReader(Build)	root		data:Selection
│ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
│ │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
│ └─TableReader(Probe)	root		data:Selection
│   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
│     └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
  │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
    ├─IndexReader(Build)	root		index:IndexFullScan
    │ └─IndexFullScan	cop[tikv]	table:t, index:a(a)	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
      │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
      └─HashJoin(Probe)	root		CARTESIAN inner join
        ├─TableReader(Build)	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
        │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
        └─TableReader(Probe)	root		data:Selection
          └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
            └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
drop table if exists t1, t2, t3, t4;
create table t1(a int, b int, key(a));
create table t2(a int, b int, key(a));
create table t3(a int, b int, key(a));
create table t4(a int, b int, key(a));
explain format='plan_tree' select /*+ no_hash_join() */ * from t1, t2;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint no_hash_join() is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ no_hash_join(t1), hash_join(t1) */ * from t1, t2;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	A conflict between the HASH_JOIN hint and the NO_HASH_JOIN hint, or the tidb_opt_enable_hash_join system variable, the HASH_JOIN hint will take precedence.
explain format='plan_tree' select /*+ no_hash_join(t1), hash_join(t2) */ * from t1, t2;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	A conflict between the HASH_JOIN hint and the NO_HASH_JOIN hint, or the tidb_opt_enable_hash_join system variable, the HASH_JOIN hint will take precedence.
explain format='plan_tree' select /*+ no_hash_join(t1) */ * from t1, t2;
id	task	access object	operator info
MergeJoin	root		inner join
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ no_hash_join(t1, t2) */ * from t1, t2;
id	task	access object	operator info
MergeJoin	root		inner join
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ no_hash_join(t1) */ * from t1, t2 where t1.a=t2.a;
id	task	access object	operator info
IndexHashJoin	root		inner join, inner:IndexLookUp, outer key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t2.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
│   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
└─IndexLookUp(Probe)	root		
  ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │ └─IndexRangeScan	cop[tikv]	table:t2, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)], keep order:false, stats:pseudo
  └─TableRowIDScan(Probe)	cop[tikv]	table:t2	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ no_hash_join(t1, t2) */ * from t1, t2 where t1.b=t2.b;
id	task	access object	operator info
MergeJoin	root		inner join, left key:.__planner__core__casetest__rule__rule_join_reorder.t1.b, right key:.__planner__core__casetest__rule__rule_join_reorder.t2.b
├─Sort(Build)	root		.__planner__core__casetest__rule__rule_join_reorder.t2.b
│ └─TableReader	root		data:Selection
│   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
│     └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─Sort(Probe)	root		.__planner__core__casetest__rule__rule_join_reorder.t1.b
  └─TableReader	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ no_hash_join(t1) */ * from t1, t2 where t1.a=t2.a and t1.b=t2.b;
id	task	access object	operator info
IndexHashJoin	root		inner join, inner:IndexLookUp, outer key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t2.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a), eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
│   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
└─IndexLookUp(Probe)	root		
  ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │ └─IndexRangeScan	cop[tikv]	table:t2, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)], keep order:false, stats:pseudo
  └─Selection(Probe)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    └─TableRowIDScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ no_hash_join(t2) */ * from t1 left join t2 on t1.b=t2.b;
id	task	access object	operator info
MergeJoin	root		left outer join, left side:Sort, left key:.__planner__core__casetest__rule__rule_join_reorder.t1.b, right key:.__planner__core__casetest__rule__rule_join_reorder.t2.b
├─Sort(Build)	root		.__planner__core__casetest__rule__rule_join_reorder.t2.b
│ └─TableReader	root		data:Selection
│   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
│     └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─Sort(Probe)	root		.__planner__core__casetest__rule__rule_join_reorder.t1.b
  └─TableReader	root		data:TableFullScan
    └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ no_hash_join(t2) */ * from t1 left join t2 on t1.a=t2.a;
id	task	access object	operator info
IndexHashJoin	root		left outer join, inner:IndexLookUp, left side:TableReader, outer key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t2.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
└─IndexLookUp(Probe)	root		
  ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │ └─IndexRangeScan	cop[tikv]	table:t2, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)], keep order:false, stats:pseudo
  └─TableRowIDScan(Probe)	cop[tikv]	table:t2	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ no_hash_join(t2) */ * from t1 right join t2 on t1.b=t2.b;
id	task	access object	operator info
MergeJoin	root		right outer join, left side:Sort, left key:.__planner__core__casetest__rule__rule_join_reorder.t1.b, right key:.__planner__core__casetest__rule__rule_join_reorder.t2.b
├─Sort(Build)	root		.__planner__core__casetest__rule__rule_join_reorder.t1.b
│ └─TableReader	root		data:Selection
│   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
│     └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
└─Sort(Probe)	root		.__planner__core__casetest__rule__rule_join_reorder.t2.b
  └─TableReader	root		data:TableFullScan
    └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ no_hash_join(t2) */ * from t1 right join t2 on t1.a=t2.a;
id	task	access object	operator info
IndexHashJoin	root		right outer join, inner:IndexLookUp, left side:IndexLookUp, outer key:.__planner__core__casetest__rule__rule_join_reorder.t2.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─IndexLookUp(Probe)	root		
  ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
  │ └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)], keep order:false, stats:pseudo
  └─TableRowIDScan(Probe)	cop[tikv]	table:t1	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ leading(t4, t3, t2, t1), no_hash_join(t2, t3) */ * from t1, t2, t3, t4;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─MergeJoin(Build)	root		inner join
│ ├─TableReader(Build)	root		data:TableFullScan
│ │ └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
│ └─TableReader(Probe)	root		data:TableFullScan
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─MergeJoin(Probe)	root		inner join
  ├─TableReader(Build)	root		data:TableFullScan
  │ └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:TableFullScan
    └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4, t3, t2, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1, t2, t3, t4), hash_join(t1, t2), no_hash_join(t3), hash_join(t4) */ * from t1, t2, t3, t4;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─HashJoin(Build)	root		CARTESIAN inner join
│ ├─TableReader(Build)	root		data:TableFullScan
│ │ └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
│ └─TableReader(Probe)	root		data:TableFullScan
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		CARTESIAN inner join
  ├─TableReader(Build)	root		data:TableFullScan
  │ └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:TableFullScan
    └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	A conflict between the HASH_JOIN hint and the NO_HASH_JOIN hint, or the tidb_opt_enable_hash_join system variable, the HASH_JOIN hint will take precedence.
Warning	1815	Hint leading(t1, t2, t3, t4) is inapplicable. Please specify the table names in the arguments.
drop table if exists t1, t2, t3, t4;
create table t1(a int, key(a));
create table t2(a int, key(a));
create table t3(a int, key(a));
create table t4(a int, key(a));
explain format='plan_tree' select /*+ no_merge_join() */ * from t1, t2 where t1.a=t2.a;
id	task	access object	operator info
MergeJoin	root		inner join, left key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, right key:.__planner__core__casetest__rule__rule_join_reorder.t2.a
├─IndexReader(Build)	root		index:IndexFullScan
│ └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:true, stats:pseudo
└─IndexReader(Probe)	root		index:IndexFullScan
  └─IndexFullScan	cop[tikv]	table:t1, index:a(a)	keep order:true, stats:pseudo
Level	Code	Message
Warning	1815	Hint no_merge_join() is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ no_merge_join(t1), merge_join(t1) */ * from t1, t2 where t1.a=t2.a;
id	task	access object	operator info
MergeJoin	root		inner join, left key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, right key:.__planner__core__casetest__rule__rule_join_reorder.t2.a
├─IndexReader(Build)	root		index:IndexFullScan
│ └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:true, stats:pseudo
└─IndexReader(Probe)	root		index:IndexFullScan
  └─IndexFullScan	cop[tikv]	table:t1, index:a(a)	keep order:true, stats:pseudo
Level	Code	Message
Warning	1815	Some MERGE_JOIN and NO_MERGE_JOIN hints conflict, NO_MERGE_JOIN is ignored
explain format='plan_tree' select /*+ no_merge_join(t1), merge_join(t2) */ * from t1, t2 where t1.a=t2.a;
id	task	access object	operator info
MergeJoin	root		inner join, left key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, right key:.__planner__core__casetest__rule__rule_join_reorder.t2.a
├─IndexReader(Build)	root		index:IndexFullScan
│ └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:true, stats:pseudo
└─IndexReader(Probe)	root		index:IndexFullScan
  └─IndexFullScan	cop[tikv]	table:t1, index:a(a)	keep order:true, stats:pseudo
Level	Code	Message
Warning	1815	Some MERGE_JOIN and NO_MERGE_JOIN hints conflict, NO_MERGE_JOIN is ignored
explain format='plan_tree' select /*+ no_merge_join(t1) */ * from t1, t2 where t1.a=t2.a;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
├─IndexReader(Build)	root		index:IndexFullScan
│ └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:false, stats:pseudo
└─IndexReader(Probe)	root		index:IndexFullScan
  └─IndexFullScan	cop[tikv]	table:t1, index:a(a)	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ no_merge_join(t1, t2) */ * from t1, t2 where t1.a=t2.a;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
├─IndexReader(Build)	root		index:IndexFullScan
│ └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:false, stats:pseudo
└─IndexReader(Probe)	root		index:IndexFullScan
  └─IndexFullScan	cop[tikv]	table:t1, index:a(a)	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ no_merge_join(t2) */ * from t1 right join t2 on t1.a=t2.a;
id	task	access object	operator info
HashJoin	root		right outer join, left side:IndexReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
├─IndexReader(Build)	root		index:IndexFullScan
│ └─IndexFullScan	cop[tikv]	table:t1, index:a(a)	keep order:false, stats:pseudo
└─IndexReader(Probe)	root		index:IndexFullScan
  └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ leading(t4, t3, t2, t1), no_merge_join(t2, t3) */ * from t1, t2, t3, t4 where t1.a=t2.a and t2.a=t3.a and t3.a=t4.a;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
├─IndexReader(Build)	root		index:IndexFullScan
│ └─IndexFullScan	cop[tikv]	table:t4, index:a(a)	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  ├─IndexReader(Build)	root		index:IndexFullScan
  │ └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
    ├─IndexReader(Build)	root		index:IndexFullScan
    │ └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:false, stats:pseudo
    └─IndexReader(Probe)	root		index:IndexFullScan
      └─IndexFullScan	cop[tikv]	table:t1, index:a(a)	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4, t3, t2, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1, t2, t3, t4), merge_join(t1, t2), no_merge_join(t3), merge_join(t4) */ * from t1, t2, t3, t4 where t1.a=t2.a and t2.a=t3.a and t3.a=t4.a;
id	task	access object	operator info
MergeJoin	root		inner join, left key:.__planner__core__casetest__rule__rule_join_reorder.t3.a, right key:.__planner__core__casetest__rule__rule_join_reorder.t4.a
├─IndexReader(Build)	root		index:IndexFullScan
│ └─IndexFullScan	cop[tikv]	table:t4, index:a(a)	keep order:true, stats:pseudo
└─Sort(Probe)	root		.__planner__core__casetest__rule__rule_join_reorder.t3.a
  └─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
    ├─IndexReader(Build)	root		index:IndexFullScan
    │ └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:false, stats:pseudo
    └─MergeJoin(Probe)	root		inner join, left key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, right key:.__planner__core__casetest__rule__rule_join_reorder.t2.a
      ├─IndexReader(Build)	root		index:IndexFullScan
      │ └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:true, stats:pseudo
      └─IndexReader(Probe)	root		index:IndexFullScan
        └─IndexFullScan	cop[tikv]	table:t1, index:a(a)	keep order:true, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1, t2, t3, t4) is inapplicable. Please specify the table names in the arguments.
drop table if exists t1, t2, t3, t4;
set tidb_enable_index_merge_join=true;
create table t1(a int, key(a));
create table t2(a int, key(a));
create table t3(a int, key(a));
create table t4(a int, key(a));
explain format='plan_tree' select /*+ no_merge_join(t1), no_hash_join(t1), no_index_hash_join(t1), no_index_merge_join(t1) */ * from t1, t2 where t1.a=t2.a;
id	task	access object	operator info
IndexJoin	root		inner join, inner:IndexReader, outer key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t2.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)
├─IndexReader(Build)	root		index:IndexFullScan
│ └─IndexFullScan	cop[tikv]	table:t1, index:a(a)	keep order:false, stats:pseudo
└─IndexReader(Probe)	root		index:Selection
  └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
    └─IndexRangeScan	cop[tikv]	table:t2, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)], keep order:false, stats:pseudo
explain format='plan_tree' select /*+ no_merge_join(t1), no_hash_join(t1), no_index_hash_join(t1), no_index_merge_join(t2) */ * from t1, t2 where t1.a=t2.a;
id	task	access object	operator info
IndexJoin	root		inner join, inner:IndexReader, outer key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t2.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)
├─IndexReader(Build)	root		index:IndexFullScan
│ └─IndexFullScan	cop[tikv]	table:t1, index:a(a)	keep order:false, stats:pseudo
└─IndexReader(Probe)	root		index:Selection
  └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
    └─IndexRangeScan	cop[tikv]	table:t2, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)], keep order:false, stats:pseudo
explain format='plan_tree' select /*+ no_merge_join(t1), no_hash_join(t1), no_index_hash_join(t1, t2), no_index_merge_join(t2, t1) */ * from t1, t2 where t1.a=t2.a;
id	task	access object	operator info
IndexJoin	root		inner join, inner:IndexReader, outer key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t2.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)
├─IndexReader(Build)	root		index:IndexFullScan
│ └─IndexFullScan	cop[tikv]	table:t1, index:a(a)	keep order:false, stats:pseudo
└─IndexReader(Probe)	root		index:Selection
  └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
    └─IndexRangeScan	cop[tikv]	table:t2, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)], keep order:false, stats:pseudo
explain format='plan_tree' select /*+ no_merge_join(t1), no_hash_join(t1), no_index_join(t1), no_index_merge_join(t1) */ * from t1, t2 where t1.a=t2.a;
id	task	access object	operator info
IndexHashJoin	root		inner join, inner:IndexReader, outer key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t2.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)
├─IndexReader(Build)	root		index:IndexFullScan
│ └─IndexFullScan	cop[tikv]	table:t1, index:a(a)	keep order:false, stats:pseudo
└─IndexReader(Probe)	root		index:Selection
  └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
    └─IndexRangeScan	cop[tikv]	table:t2, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)], keep order:false, stats:pseudo
explain format='plan_tree' select /*+ no_merge_join(t1), no_hash_join(t1), no_index_hash_join(t1) */ * from t1, t2 where t1.a=t2.a;
id	task	access object	operator info
IndexJoin	root		inner join, inner:IndexReader, outer key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t2.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)
├─IndexReader(Build)	root		index:IndexFullScan
│ └─IndexFullScan	cop[tikv]	table:t1, index:a(a)	keep order:false, stats:pseudo
└─IndexReader(Probe)	root		index:Selection
  └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
    └─IndexRangeScan	cop[tikv]	table:t2, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)], keep order:false, stats:pseudo
explain format='plan_tree' select /*+ no_merge_join(t1), no_hash_join(t1), inl_join(t1), no_index_merge_join(t1), no_index_hash_join(t1) */ * from t1, t2 where t1.a=t2.a;
id	task	access object	operator info
IndexJoin	root		inner join, inner:IndexReader, outer key:.__planner__core__casetest__rule__rule_join_reorder.t2.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
├─IndexReader(Build)	root		index:IndexFullScan
│ └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:false, stats:pseudo
└─IndexReader(Probe)	root		index:Selection
  └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
    └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)], keep order:false, stats:pseudo
explain format='plan_tree' select /*+ inl_join(t1) */ * from t1, t2 where t1.a=t2.a;
id	task	access object	operator info
IndexJoin	root		inner join, inner:IndexReader, outer key:.__planner__core__casetest__rule__rule_join_reorder.t2.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
├─IndexReader(Build)	root		index:IndexFullScan
│ └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:false, stats:pseudo
└─IndexReader(Probe)	root		index:Selection
  └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
    └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)], keep order:false, stats:pseudo
explain format='plan_tree' select /*+ inl_hash_join(t1) */ * from t1, t2 where t1.a=t2.a;
id	task	access object	operator info
IndexHashJoin	root		inner join, inner:IndexReader, outer key:.__planner__core__casetest__rule__rule_join_reorder.t2.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
├─IndexReader(Build)	root		index:IndexFullScan
│ └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:false, stats:pseudo
└─IndexReader(Probe)	root		index:Selection
  └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
    └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)], keep order:false, stats:pseudo
explain format='plan_tree' select /*+ inl_merge_join(t1), no_index_merge_join(t1, t2) */ * from t1, t2 where t1.a=t2.a;
id	task	access object	operator info
MergeJoin	root		inner join, left key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, right key:.__planner__core__casetest__rule__rule_join_reorder.t2.a
├─IndexReader(Build)	root		index:IndexFullScan
│ └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:true, stats:pseudo
└─IndexReader(Probe)	root		index:IndexFullScan
  └─IndexFullScan	cop[tikv]	table:t1, index:a(a)	keep order:true, stats:pseudo
Level	Code	Message
Warning	1815	The INDEX MERGE JOIN hint is deprecated for usage, try other hints.
explain format='plan_tree' select /*+ inl_join(t1), no_index_hash_join(t1) */ * from t1, t2 where t1.a=t2.a;
id	task	access object	operator info
IndexJoin	root		inner join, inner:IndexReader, outer key:.__planner__core__casetest__rule__rule_join_reorder.t2.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
├─IndexReader(Build)	root		index:IndexFullScan
│ └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:false, stats:pseudo
└─IndexReader(Probe)	root		index:Selection
  └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
    └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)], keep order:false, stats:pseudo
explain format='plan_tree' select /*+ inl_join(t1), no_index_merge_join(t1) */ * from t1, t2 where t1.a=t2.a;
id	task	access object	operator info
IndexJoin	root		inner join, inner:IndexReader, outer key:.__planner__core__casetest__rule__rule_join_reorder.t2.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
├─IndexReader(Build)	root		index:IndexFullScan
│ └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:false, stats:pseudo
└─IndexReader(Probe)	root		index:Selection
  └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
    └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)], keep order:false, stats:pseudo
set tidb_cost_model_version=2;
drop table if exists t, t1, t2, t3, t4, t5, t6, t7, t8;
create table t(a int, b int, key(a));
create table t1(a int, b int, key(a));
create table t2(a int, b int, key(a));
create table t3(a int, b int, key(a));
create table t4(a int, b int, key(a));
create table t5(a int, b int, key(a));
create table t6(a int, b int, key(a));
create table t7(a int, b int, key(a));
create table t8(a int, b int, key(a));
explain format='plan_tree' select /*+ leading(t, t1) */ * from t, t1, t2, t3 where t.a = t1.a and t1.b=t2.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		CARTESIAN inner join
  ├─TableReader(Build)	root		data:TableFullScan
  │ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
      │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
          └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t1) */ * from t, t1, t2, t3 where t.a = t1.a and t1.b=t2.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		CARTESIAN inner join
  ├─TableReader(Build)	root		data:TableFullScan
  │ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
      │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
          └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t1) */ * from t, t1, t2, t3 where t.a = t1.a and t1.b=t2.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		CARTESIAN inner join
  ├─TableReader(Build)	root		data:TableFullScan
  │ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
      │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
          └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3) */ * from t, t1, t2, t3 where t.a = t1.a and t1.b=t2.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		CARTESIAN inner join
  ├─TableReader(Build)	root		data:TableFullScan
  │ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
      │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
          └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t, t1, t2) */ * from t, t1, t2, t3 where t.a = t1.a and t1.b=t2.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		CARTESIAN inner join
  ├─TableReader(Build)	root		data:TableFullScan
  │ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
      │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
          └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t, t1, t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t1, t3) */ * from t, t1, t2, t3 where t.a = t1.a and t1.b=t2.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		CARTESIAN inner join
  ├─TableReader(Build)	root		data:TableFullScan
  │ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
      │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
          └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t1, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t1, t) */ * from t, t1, t2, t3 where t.a = t1.a and t1.b=t2.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		CARTESIAN inner join
  ├─TableReader(Build)	root		data:TableFullScan
  │ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
      │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
          └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t1, t) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3, t) */ * from t, t1, t2, t3 where t.a = t1.a and t1.b=t2.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		CARTESIAN inner join
  ├─TableReader(Build)	root		data:TableFullScan
  │ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
      │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
          └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3, t) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3, t, t4) */ * from t, t1, t2, t3 where t.a = t1.a and t1.b=t2.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		CARTESIAN inner join
  ├─TableReader(Build)	root		data:TableFullScan
  │ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
      │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
          └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3, t, t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t2) */ * from t2 join t1 on t2.a=t1.a join t3 on t1.b=t3.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t1) */ * from t2 join t1 on t2.a=t1.a join t3 on t1.b=t3.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1, t2) */ * from t2 join t1 on t2.a=t1.a join t3 on t1.b=t3.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1, t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3) */ * from t2 join t1 on t2.a=t1.a join t3 on t1.b=t3.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2) */ * from t2 join t1 on t2.a=t1.a join t3 on t1.b=t3.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1) */ * from t2 join t1 on t2.a=t1.a join t3 on t1.b=t3.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t2, t1) */ * from t2 join t1 on t2.a=t1.a join t3 on t1.b=t3.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t2, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1, t2, t3) */ * from t2 join t1 on t2.a=t1.a join t3 on t1.b=t3.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1, t2, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t1, t2) */ * from t2 join t1 on t2.a=t1.a join t3 on t1.b=t3.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t1, t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2) */ * from t2 join (t1 join t3 on t1.a=t3.a) on t2.a=1;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─IndexLookUp(Build)	root		
│ ├─IndexRangeScan(Build)	cop[tikv]	table:t2, index:a(a)	range:[1,1], keep order:false, stats:pseudo
│ └─TableRowIDScan(Probe)	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1) */ * from t2 join (t1 join t3 on t1.a=t3.a) on t2.a=1;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─IndexLookUp(Build)	root		
│ ├─IndexRangeScan(Build)	cop[tikv]	table:t2, index:a(a)	range:[1,1], keep order:false, stats:pseudo
│ └─TableRowIDScan(Probe)	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3) */ * from t2 join (t1 join t3 on t1.a=t3.a) on t2.a=1;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─IndexLookUp(Build)	root		
│ ├─IndexRangeScan(Build)	cop[tikv]	table:t2, index:a(a)	range:[1,1], keep order:false, stats:pseudo
│ └─TableRowIDScan(Probe)	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t1) */ * from t2 join (t1 join t3 on t1.a=t3.a) on t2.a=1;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─IndexLookUp(Build)	root		
│ ├─IndexRangeScan(Build)	cop[tikv]	table:t2, index:a(a)	range:[1,1], keep order:false, stats:pseudo
│ └─TableRowIDScan(Probe)	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3) */ * from t2 join (t1 join t3 on t1.a=t3.a) on t2.a=1;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─IndexLookUp(Build)	root		
│ ├─IndexRangeScan(Build)	cop[tikv]	table:t2, index:a(a)	range:[1,1], keep order:false, stats:pseudo
│ └─TableRowIDScan(Probe)	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t1) */ * from t2 join (t1 join t3 on t1.a=t3.a) on t2.a=1;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─IndexLookUp(Build)	root		
│ ├─IndexRangeScan(Build)	cop[tikv]	table:t2, index:a(a)	range:[1,1], keep order:false, stats:pseudo
│ └─TableRowIDScan(Probe)	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t1, t3) */ * from t2 join (t1 join t3 on t1.a=t3.a) on t2.a=1;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─IndexLookUp(Build)	root		
│ ├─IndexRangeScan(Build)	cop[tikv]	table:t2, index:a(a)	range:[1,1], keep order:false, stats:pseudo
│ └─TableRowIDScan(Probe)	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t1, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1, t3, t2) */ * from t2 join (t1 join t3 on t1.a=t3.a) on t2.a=1;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─IndexLookUp(Build)	root		
│ ├─IndexRangeScan(Build)	cop[tikv]	table:t2, index:a(a)	range:[1,1], keep order:false, stats:pseudo
│ └─TableRowIDScan(Probe)	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1, t3, t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3, t1) */ * from t2 join (t1 join t3 on t1.a=t3.a) on t2.a=1;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─IndexLookUp(Build)	root		
│ ├─IndexRangeScan(Build)	cop[tikv]	table:t2, index:a(a)	range:[1,1], keep order:false, stats:pseudo
│ └─TableRowIDScan(Probe)	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1) */ * from t2 join (t1 join t3 on t1.a=t3.a) on t2.a=t3.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
  │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
    │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2) */ * from t2 join (t1 join t3 on t1.a=t3.a) on t2.a=t3.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
  │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
    │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3) */ * from t2 join (t1 join t3 on t1.a=t3.a) on t2.a=t3.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
  │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
    │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1, t2) */ * from t2 join (t1 join t3 on t1.a=t3.a) on t2.a=t3.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
  │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
    │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1, t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t2) */ * from t2 join (t1 join t3 on t1.a=t3.a) on t2.a=t3.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
  │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
    │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1, t3) */ * from t2 join (t1 join t3 on t1.a=t3.a) on t2.a=t3.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
  │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
    │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1, t2, t3) */ * from t2 join (t1 join t3 on t1.a=t3.a) on t2.a=t3.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
  │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
    │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1, t2, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t1, t2) */ * from t2 join (t1 join t3 on t1.a=t3.a) on t2.a=t3.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
  │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
    │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t1, t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1) */ * from (t1 join t2 on t1.a=t2.a) join (t3 join t4 on t3.a=t4.a) on t2.a=t4.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
    │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
      │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
          └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2) */ * from (t1 join t2 on t1.a=t2.a) join (t3 join t4 on t3.a=t4.a) on t2.a=t4.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
    │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
      │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
          └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3) */ * from (t1 join t2 on t1.a=t2.a) join (t3 join t4 on t3.a=t4.a) on t2.a=t4.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
    │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
      │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
          └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4) */ * from (t1 join t2 on t1.a=t2.a) join (t3 join t4 on t3.a=t4.a) on t2.a=t4.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
    │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
      │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
          └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1, t2) */ * from (t1 join t2 on t1.a=t2.a) join (t3 join t4 on t3.a=t4.a) on t2.a=t4.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
    │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
      │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
          └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1, t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1, t3) */ * from (t1 join t2 on t1.a=t2.a) join (t3 join t4 on t3.a=t4.a) on t2.a=t4.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
    │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
      │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
          └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4, t1) */ * from (t1 join t2 on t1.a=t2.a) join (t3 join t4 on t3.a=t4.a) on t2.a=t4.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
    │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
      │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
          └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4, t2) */ * from (t1 join t2 on t1.a=t2.a) join (t3 join t4 on t3.a=t4.a) on t2.a=t4.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
    │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
      │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
          └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4, t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t2) */ * from (t1 join t2 on t1.a=t2.a) join (t3 join t4 on t3.a=t4.a) on t2.a=t4.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
    │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
      │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
          └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t4) */ * from (t1 join t2 on t1.a=t2.a) join (t3 join t4 on t3.a=t4.a) on t2.a=t4.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
    │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
      │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
          └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1, t2, t3) */ * from (t1 join t2 on t1.a=t2.a) join (t3 join t4 on t3.a=t4.a) on t2.a=t4.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
    │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
      │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
          └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1, t2, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1, t4, t3) */ * from (t1 join t2 on t1.a=t2.a) join (t3 join t4 on t3.a=t4.a) on t2.a=t4.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
    │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
      │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
          └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1, t4, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4, t2, t3) */ * from (t1 join t2 on t1.a=t2.a) join (t3 join t4 on t3.a=t4.a) on t2.a=t4.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
    │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
      │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
          └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4, t2, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1, t2, t3, t4) */ * from (t1 join t2 on t1.a=t2.a) join (t3 join t4 on t3.a=t4.a) on t2.a=t4.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
    │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
      │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
          └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1, t2, t3, t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1) */ * from ((select t8.a, t8.b from t8, t7, t6, t5 where t5.a = t6.a and t6.b=t7.b) t3 join t4 on t3.a=t4.a) join (t1 join t2 on t1.a=t2.a) on t1.a=t4.a;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.a, .__planner__core__casetest__rule__rule_join_reorder.t5.a)]
│ ├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.b, .__planner__core__casetest__rule__rule_join_reorder.t7.b)]
│ │ ├─TableReader(Build)	root		data:Selection
│ │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t7.b))
│ │ │   └─TableFullScan	cop[tikv]	table:t7	keep order:false, stats:pseudo
│ │ └─TableReader(Probe)	root		data:Selection
│ │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
│ │     └─TableFullScan	cop[tikv]	table:t6	keep order:false, stats:pseudo
│ └─IndexReader(Probe)	root		index:IndexFullScan
│   └─IndexFullScan	cop[tikv]	table:t5, index:a(a)	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t8.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
      │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t8.a))
          └─TableFullScan	cop[tikv]	table:t8	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2) */ * from ((select t8.a, t8.b from t8, t7, t6, t5 where t5.a = t6.a and t6.b=t7.b) t3 join t4 on t3.a=t4.a) join (t1 join t2 on t1.a=t2.a) on t1.a=t4.a;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.a, .__planner__core__casetest__rule__rule_join_reorder.t5.a)]
│ ├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.b, .__planner__core__casetest__rule__rule_join_reorder.t7.b)]
│ │ ├─TableReader(Build)	root		data:Selection
│ │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t7.b))
│ │ │   └─TableFullScan	cop[tikv]	table:t7	keep order:false, stats:pseudo
│ │ └─TableReader(Probe)	root		data:Selection
│ │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
│ │     └─TableFullScan	cop[tikv]	table:t6	keep order:false, stats:pseudo
│ └─IndexReader(Probe)	root		index:IndexFullScan
│   └─IndexFullScan	cop[tikv]	table:t5, index:a(a)	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t8.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
      │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t8.a))
          └─TableFullScan	cop[tikv]	table:t8	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3) */ * from ((select t8.a, t8.b from t8, t7, t6, t5 where t5.a = t6.a and t6.b=t7.b) t3 join t4 on t3.a=t4.a) join (t1 join t2 on t1.a=t2.a) on t1.a=t4.a;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.a, .__planner__core__casetest__rule__rule_join_reorder.t5.a)]
│ ├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.b, .__planner__core__casetest__rule__rule_join_reorder.t7.b)]
│ │ ├─TableReader(Build)	root		data:Selection
│ │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t7.b))
│ │ │   └─TableFullScan	cop[tikv]	table:t7	keep order:false, stats:pseudo
│ │ └─TableReader(Probe)	root		data:Selection
│ │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
│ │     └─TableFullScan	cop[tikv]	table:t6	keep order:false, stats:pseudo
│ └─IndexReader(Probe)	root		index:IndexFullScan
│   └─IndexFullScan	cop[tikv]	table:t5, index:a(a)	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t8.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
      │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t8.a))
          └─TableFullScan	cop[tikv]	table:t8	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4) */ * from ((select t8.a, t8.b from t8, t7, t6, t5 where t5.a = t6.a and t6.b=t7.b) t3 join t4 on t3.a=t4.a) join (t1 join t2 on t1.a=t2.a) on t1.a=t4.a;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.a, .__planner__core__casetest__rule__rule_join_reorder.t5.a)]
│ ├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.b, .__planner__core__casetest__rule__rule_join_reorder.t7.b)]
│ │ ├─TableReader(Build)	root		data:Selection
│ │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t7.b))
│ │ │   └─TableFullScan	cop[tikv]	table:t7	keep order:false, stats:pseudo
│ │ └─TableReader(Probe)	root		data:Selection
│ │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
│ │     └─TableFullScan	cop[tikv]	table:t6	keep order:false, stats:pseudo
│ └─IndexReader(Probe)	root		index:IndexFullScan
│   └─IndexFullScan	cop[tikv]	table:t5, index:a(a)	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t8.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
      │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t8.a))
          └─TableFullScan	cop[tikv]	table:t8	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t1) */ * from ((select t8.a, t8.b from t8, t7, t6, t5 where t5.a = t6.a and t6.b=t7.b) t3 join t4 on t3.a=t4.a) join (t1 join t2 on t1.a=t2.a) on t1.a=t4.a;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.a, .__planner__core__casetest__rule__rule_join_reorder.t5.a)]
│ ├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.b, .__planner__core__casetest__rule__rule_join_reorder.t7.b)]
│ │ ├─TableReader(Build)	root		data:Selection
│ │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t7.b))
│ │ │   └─TableFullScan	cop[tikv]	table:t7	keep order:false, stats:pseudo
│ │ └─TableReader(Probe)	root		data:Selection
│ │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
│ │     └─TableFullScan	cop[tikv]	table:t6	keep order:false, stats:pseudo
│ └─IndexReader(Probe)	root		index:IndexFullScan
│   └─IndexFullScan	cop[tikv]	table:t5, index:a(a)	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t8.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
      │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t8.a))
          └─TableFullScan	cop[tikv]	table:t8	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3) */ * from ((select t8.a, t8.b from t8, t7, t6, t5 where t5.a = t6.a and t6.b=t7.b) t3 join t4 on t3.a=t4.a) join (t1 join t2 on t1.a=t2.a) on t1.a=t4.a;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.a, .__planner__core__casetest__rule__rule_join_reorder.t5.a)]
│ ├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.b, .__planner__core__casetest__rule__rule_join_reorder.t7.b)]
│ │ ├─TableReader(Build)	root		data:Selection
│ │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t7.b))
│ │ │   └─TableFullScan	cop[tikv]	table:t7	keep order:false, stats:pseudo
│ │ └─TableReader(Probe)	root		data:Selection
│ │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
│ │     └─TableFullScan	cop[tikv]	table:t6	keep order:false, stats:pseudo
│ └─IndexReader(Probe)	root		index:IndexFullScan
│   └─IndexFullScan	cop[tikv]	table:t5, index:a(a)	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t8.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
      │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t8.a))
          └─TableFullScan	cop[tikv]	table:t8	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4, t1) */ * from ((select t8.a, t8.b from t8, t7, t6, t5 where t5.a = t6.a and t6.b=t7.b) t3 join t4 on t3.a=t4.a) join (t1 join t2 on t1.a=t2.a) on t1.a=t4.a;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.a, .__planner__core__casetest__rule__rule_join_reorder.t5.a)]
│ ├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.b, .__planner__core__casetest__rule__rule_join_reorder.t7.b)]
│ │ ├─TableReader(Build)	root		data:Selection
│ │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t7.b))
│ │ │   └─TableFullScan	cop[tikv]	table:t7	keep order:false, stats:pseudo
│ │ └─TableReader(Probe)	root		data:Selection
│ │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
│ │     └─TableFullScan	cop[tikv]	table:t6	keep order:false, stats:pseudo
│ └─IndexReader(Probe)	root		index:IndexFullScan
│   └─IndexFullScan	cop[tikv]	table:t5, index:a(a)	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t8.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
      │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t8.a))
          └─TableFullScan	cop[tikv]	table:t8	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t1) */ * from ((select t8.a, t8.b from t8, t7, t6, t5 where t5.a = t6.a and t6.b=t7.b) t3 join t4 on t3.a=t4.a) join (t1 join t2 on t1.a=t2.a) on t1.a=t4.a;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.a, .__planner__core__casetest__rule__rule_join_reorder.t5.a)]
│ ├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.b, .__planner__core__casetest__rule__rule_join_reorder.t7.b)]
│ │ ├─TableReader(Build)	root		data:Selection
│ │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t7.b))
│ │ │   └─TableFullScan	cop[tikv]	table:t7	keep order:false, stats:pseudo
│ │ └─TableReader(Probe)	root		data:Selection
│ │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
│ │     └─TableFullScan	cop[tikv]	table:t6	keep order:false, stats:pseudo
│ └─IndexReader(Probe)	root		index:IndexFullScan
│   └─IndexFullScan	cop[tikv]	table:t5, index:a(a)	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t8.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
      │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t8.a))
          └─TableFullScan	cop[tikv]	table:t8	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select * from ((select /*+ leading(t5) */ t8.a, t8.b from t8, t7, t6, t5 where t5.a = t6.a and t6.b=t7.b) t3 join t4 on t3.a=t4.a) join (t1 join t2 on t1.a=t2.a) on t1.a=t4.a;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.a, .__planner__core__casetest__rule__rule_join_reorder.t5.a)]
│ ├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.b, .__planner__core__casetest__rule__rule_join_reorder.t7.b)]
│ │ ├─TableReader(Build)	root		data:Selection
│ │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t7.b))
│ │ │   └─TableFullScan	cop[tikv]	table:t7	keep order:false, stats:pseudo
│ │ └─TableReader(Probe)	root		data:Selection
│ │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
│ │     └─TableFullScan	cop[tikv]	table:t6	keep order:false, stats:pseudo
│ └─IndexReader(Probe)	root		index:IndexFullScan
│   └─IndexFullScan	cop[tikv]	table:t5, index:a(a)	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t8.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
      │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t8.a))
          └─TableFullScan	cop[tikv]	table:t8	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t5) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select * from ((select /*+ leading(t6) */ t8.a, t8.b from t8, t7, t6, t5 where t5.a = t6.a and t6.b=t7.b) t3 join t4 on t3.a=t4.a) join (t1 join t2 on t1.a=t2.a) on t1.a=t4.a;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.a, .__planner__core__casetest__rule__rule_join_reorder.t5.a)]
│ ├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.b, .__planner__core__casetest__rule__rule_join_reorder.t7.b)]
│ │ ├─TableReader(Build)	root		data:Selection
│ │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t7.b))
│ │ │   └─TableFullScan	cop[tikv]	table:t7	keep order:false, stats:pseudo
│ │ └─TableReader(Probe)	root		data:Selection
│ │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
│ │     └─TableFullScan	cop[tikv]	table:t6	keep order:false, stats:pseudo
│ └─IndexReader(Probe)	root		index:IndexFullScan
│   └─IndexFullScan	cop[tikv]	table:t5, index:a(a)	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t8.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
      │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t8.a))
          └─TableFullScan	cop[tikv]	table:t8	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t6) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select * from ((select /*+ leading(t5, t7) */ t8.a, t8.b from t8, t7, t6, t5 where t5.a = t6.a and t6.b=t7.b) t3 join t4 on t3.a=t4.a) join (t1 join t2 on t1.a=t2.a) on t1.a=t4.a;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.a, .__planner__core__casetest__rule__rule_join_reorder.t5.a)]
│ ├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.b, .__planner__core__casetest__rule__rule_join_reorder.t7.b)]
│ │ ├─TableReader(Build)	root		data:Selection
│ │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t7.b))
│ │ │   └─TableFullScan	cop[tikv]	table:t7	keep order:false, stats:pseudo
│ │ └─TableReader(Probe)	root		data:Selection
│ │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
│ │     └─TableFullScan	cop[tikv]	table:t6	keep order:false, stats:pseudo
│ └─IndexReader(Probe)	root		index:IndexFullScan
│   └─IndexFullScan	cop[tikv]	table:t5, index:a(a)	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t8.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
      │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t8.a))
          └─TableFullScan	cop[tikv]	table:t8	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t5, t7) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select * from ((select /*+ leading(t6, t8, t7) */ t8.a, t8.b from t8, t7, t6, t5 where t5.a = t6.a and t6.b=t7.b) t3 join t4 on t3.a=t4.a) join (t1 join t2 on t1.a=t2.a) on t1.a=t4.a;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.a, .__planner__core__casetest__rule__rule_join_reorder.t5.a)]
│ ├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.b, .__planner__core__casetest__rule__rule_join_reorder.t7.b)]
│ │ ├─TableReader(Build)	root		data:Selection
│ │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t7.b))
│ │ │   └─TableFullScan	cop[tikv]	table:t7	keep order:false, stats:pseudo
│ │ └─TableReader(Probe)	root		data:Selection
│ │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
│ │     └─TableFullScan	cop[tikv]	table:t6	keep order:false, stats:pseudo
│ └─IndexReader(Probe)	root		index:IndexFullScan
│   └─IndexFullScan	cop[tikv]	table:t5, index:a(a)	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t8.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
      │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t8.a))
          └─TableFullScan	cop[tikv]	table:t8	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t6, t8, t7) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3) */ * from ((select /*+ leading(t5) */ t8.a, t8.b from t8, t7, t6, t5 where t5.a = t6.a and t6.b=t7.b) t3 join t4 on t3.a=t4.a) join (t1 join t2 on t1.a=t2.a) on t1.a=t4.a;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.a, .__planner__core__casetest__rule__rule_join_reorder.t5.a)]
│ ├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.b, .__planner__core__casetest__rule__rule_join_reorder.t7.b)]
│ │ ├─TableReader(Build)	root		data:Selection
│ │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t7.b))
│ │ │   └─TableFullScan	cop[tikv]	table:t7	keep order:false, stats:pseudo
│ │ └─TableReader(Probe)	root		data:Selection
│ │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
│ │     └─TableFullScan	cop[tikv]	table:t6	keep order:false, stats:pseudo
│ └─IndexReader(Probe)	root		index:IndexFullScan
│   └─IndexFullScan	cop[tikv]	table:t5, index:a(a)	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t8.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
      │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t8.a))
          └─TableFullScan	cop[tikv]	table:t8	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3) is inapplicable. Please specify the table names in the arguments.
Warning	1815	Hint leading(t5) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t1) */ * from ((select /*+ leading(t7) */ t8.a, t8.b from t8, t7, t6, t5 where t5.a = t6.a and t6.b=t7.b) t3 join t4 on t3.a=t4.a) join (t1 join t2 on t1.a=t2.a) on t1.a=t4.a;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.a, .__planner__core__casetest__rule__rule_join_reorder.t5.a)]
│ ├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.b, .__planner__core__casetest__rule__rule_join_reorder.t7.b)]
│ │ ├─TableReader(Build)	root		data:Selection
│ │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t7.b))
│ │ │   └─TableFullScan	cop[tikv]	table:t7	keep order:false, stats:pseudo
│ │ └─TableReader(Probe)	root		data:Selection
│ │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
│ │     └─TableFullScan	cop[tikv]	table:t6	keep order:false, stats:pseudo
│ └─IndexReader(Probe)	root		index:IndexFullScan
│   └─IndexFullScan	cop[tikv]	table:t5, index:a(a)	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t8.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
      │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t8.a))
          └─TableFullScan	cop[tikv]	table:t8	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t1) is inapplicable. Please specify the table names in the arguments.
Warning	1815	Hint leading(t7) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t1, t2) */ * from ((select /*+ leading(t6, t7) */ t8.a, t8.b from t8, t7, t6, t5 where t5.a = t6.a and t6.b=t7.b) t3 join t4 on t3.a=t4.a) join (t1 join t2 on t1.a=t2.a) on t1.a=t4.a;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.a, .__planner__core__casetest__rule__rule_join_reorder.t5.a)]
│ ├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.b, .__planner__core__casetest__rule__rule_join_reorder.t7.b)]
│ │ ├─TableReader(Build)	root		data:Selection
│ │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t7.b))
│ │ │   └─TableFullScan	cop[tikv]	table:t7	keep order:false, stats:pseudo
│ │ └─TableReader(Probe)	root		data:Selection
│ │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
│ │     └─TableFullScan	cop[tikv]	table:t6	keep order:false, stats:pseudo
│ └─IndexReader(Probe)	root		index:IndexFullScan
│   └─IndexFullScan	cop[tikv]	table:t5, index:a(a)	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t8.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
      │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t8.a))
          └─TableFullScan	cop[tikv]	table:t8	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t1, t2) is inapplicable. Please specify the table names in the arguments.
Warning	1815	Hint leading(t6, t7) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t4) */ * from ((select /*+ leading(t5, t7, t8) */ t8.a, t8.b from t8, t7, t6, t5 where t5.a = t6.a and t6.b=t7.b) t3 join t4 on t3.a=t4.a) join (t1 join t2 on t1.a=t2.a) on t1.a=t4.a;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.a, .__planner__core__casetest__rule__rule_join_reorder.t5.a)]
│ ├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.b, .__planner__core__casetest__rule__rule_join_reorder.t7.b)]
│ │ ├─TableReader(Build)	root		data:Selection
│ │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t7.b))
│ │ │   └─TableFullScan	cop[tikv]	table:t7	keep order:false, stats:pseudo
│ │ └─TableReader(Probe)	root		data:Selection
│ │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
│ │     └─TableFullScan	cop[tikv]	table:t6	keep order:false, stats:pseudo
│ └─IndexReader(Probe)	root		index:IndexFullScan
│   └─IndexFullScan	cop[tikv]	table:t5, index:a(a)	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t8.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
      │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t8.a))
          └─TableFullScan	cop[tikv]	table:t8	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t4) is inapplicable. Please specify the table names in the arguments.
Warning	1815	Hint leading(t5, t7, t8) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(tx, t1, t3) */ * from t1, (select * from t2) tx, t3 where t1.a=tx.a and tx.a=t3.a;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(tx, t1, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(txx, tx, t1) */ * from t1, (select * from t2) tx, (select * from t3) txx where t1.a=tx.a and tx.a=txx.a;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(txx, tx, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(txx, tx, t) */ * from (select * from t1) t, (select * from t2) tx, (select * from t3) txx where t.a=tx.a and tx.a=txx.a;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(txx, tx, t) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(tx, t1, t3) */ * from t1, (select t2.* from t2, t4 where t2.a=t4.a) tx, t3 where t1.a=tx.a and tx.a=t3.a;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
  ├─IndexReader(Build)	root		index:IndexFullScan
  │ └─IndexFullScan	cop[tikv]	table:t4, index:a(a)	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
        └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(tx, t1, t3) is inapplicable. Please specify the table names in the arguments.
select /*+ leading(t1) leading(t2) */ * from t1 join t2 on t1.a=t2.a join t3 on t2.b=t3.b;
a	b	a	b	a	b
Level	Code	Message
Warning	1815	Hint leading(t1) is inapplicable. Please specify the table names in the arguments.
Warning	1815	Hint leading(t2) is inapplicable. Please specify the table names in the arguments.
drop table if exists t, t1, t2, t3, t4, t5, t6, t7, t8;
create table t(a int, b int, key(a));
create table t1(a int, b int, key(a));
create table t2(a int, b int, key(a));
create table t3(a int, b int, key(a));
create table t4(a int, b int, key(a));
create table t5(a int, b int, key(a));
create table t6(a int, b int, key(a));
create table t7(a int, b int, key(a));
create table t8(a int, b int, key(a));
select /*+ leading(t1) straight_join() */ * from t1 join t2 on t1.a=t2.a join t3 on t2.b=t3.b;
a	b	a	b	a	b
Level	Code	Message
Warning	1815	Hint leading(t1) is inapplicable. Please specify the table names in the arguments.
select /*+ straight_join() leading(t1) */ * from t1 join t2 on t1.a=t2.a join t3 on t2.b=t3.b;
a	b	a	b	a	b
Level	Code	Message
Warning	1815	Hint leading(t1) is inapplicable. Please specify the table names in the arguments.
select /*+ leading(t1) leading(t1) */ * from t1 join t2 on t1.a=t2.a join t3 on t2.b=t3.b;
a	b	a	b	a	b
Level	Code	Message
Warning	1815	Hint leading(t1) is inapplicable. Please specify the table names in the arguments.
Warning	1815	Hint leading(t1) is inapplicable. Please specify the table names in the arguments.
select /*+ leading(t1) leading(t2) */ * from t1 join t2 on t1.a=t2.a join t3 on t2.b=t3.b;
a	b	a	b	a	b
Level	Code	Message
Warning	1815	Hint leading(t1) is inapplicable. Please specify the table names in the arguments.
Warning	1815	Hint leading(t2) is inapplicable. Please specify the table names in the arguments.
select /*+ straight_join() straight_join() */ * from t1 join t2 on t1.a=t2.a join t3 on t2.b=t3.b;
a	b	a	b	a	b
Level	Code	Message
Warning	1105	STRAIGHT_JOIN() is defined more than once, only the last definition takes effect
select /*+ leading(t1, t1) */ * from t1 join t2 on t1.a=t2.a join t3 on t2.b=t3.b;
a	b	a	b	a	b
Level	Code	Message
Warning	1815	Hint leading(t1, t1) is inapplicable. Please specify the table names in the arguments.
select /*+ leading(t1, t2, t1) */ * from t1 join t2 on t1.a=t2.a join t3 on t2.b=t3.b;
a	b	a	b	a	b
Level	Code	Message
Warning	1815	Hint leading(t1, t2, t1) is inapplicable. Please specify the table names in the arguments.
select /*+ leading(t) */ * from t1 join t2 on t1.a=t2.a join t3 on t2.b=t3.b;
a	b	a	b	a	b
Level	Code	Message
Warning	1815	Hint leading(t) is inapplicable. Please specify the table names in the arguments.
select /*+ leading(t1, t2, t) */ * from t1 join t2 on t1.a=t2.a join t3 on t2.b=t3.b;
a	b	a	b	a	b
Level	Code	Message
Warning	1815	Hint leading(t1, t2, t) is inapplicable. Please specify the table names in the arguments.
select /*+ leading(t) */ * from t1 t join t2 on t.a=t2.a join t3 on t2.b=t3.b;
a	b	a	b	a	b
Level	Code	Message
Warning	1815	Hint leading(t) is inapplicable. Please specify the table names in the arguments.
select /*+ leading(t1) */ * from t1 t join t2 on t.a=t2.a join t3 on t2.b=t3.b;
a	b	a	b	a	b
Level	Code	Message
Warning	1815	Hint leading(t1) is inapplicable. Please specify the table names in the arguments.
select /*+ leading(t2, t) */ * from t1 t join t2 on t.a=t2.a join t3 on t2.b=t3.b;
a	b	a	b	a	b
Level	Code	Message
Warning	1815	Hint leading(t2, t) is inapplicable. Please specify the table names in the arguments.
select /*+ leading(t2, t1) */ * from t1 t join t2 on t.a=t2.a join t3 on t2.b=t3.b;
a	b	a	b	a	b
Level	Code	Message
Warning	1815	Hint leading(t2, t1) is inapplicable. Please specify the table names in the arguments.
select /*+ leading(t4) */ * from (select t2.b from t1 join t2 on t1.a=t2.a) t4 join t3 on t4.b=t3.b;
b	a	b
Level	Code	Message
Warning	1815	Hint leading(t4) is inapplicable. Please specify the table names in the arguments.
select /*+ leading(t3, t2@sel_2) */ * from (select t2.b from t1 join t2 on t1.a=t2.a) t4 join t3 on t4.b=t3.b;
b	a	b
Level	Code	Message
Warning	1815	Hint leading(t3, t2@sel_2) is inapplicable. Please specify the table names in the arguments.
select * from (select /*+ leading(t1, t3@sel_1) */ t2.b from t1 join t2 on t1.a=t2.a) t4 join t3 on t4.b=t3.b;
b	a	b
Level	Code	Message
Warning	1815	Hint leading(t1, t3@sel_1) is inapplicable. Please specify the table names in the arguments.
select /*+ leading(t3) */ * from (select /*+ leading(t1) */ t2.b from t1 join t2 on t1.a=t2.a) t4 join t3 on t4.b=t3.b;
b	a	b
Level	Code	Message
Warning	1815	Hint leading(t1) is inapplicable. Please specify the table names in the arguments.
Warning	1815	Hint leading(t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ straight_join() hash_join(t) */ * from t, t1, t2 where t.a = t1.a and t1.b=t2.b;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
│   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
      └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() merge_join(t1) */ * from t, t1, t2 where t.a = t1.a and t1.b=t2.b;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
│   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─MergeJoin(Probe)	root		inner join, left key:.__planner__core__casetest__rule__rule_join_reorder.t.a, right key:.__planner__core__casetest__rule__rule_join_reorder.t1.a
  ├─Sort(Build)	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a
  │ └─TableReader	root		data:Selection
  │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │     └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─Sort(Probe)	root		.__planner__core__casetest__rule__rule_join_reorder.t.a
    └─TableReader	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
        └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() INL_JOIN(t1) */ * from t, t1, t2 where t.a = t1.a and t1.b=t2.b;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
│   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─IndexJoin(Probe)	root		inner join, inner:IndexLookUp, outer key:.__planner__core__casetest__rule__rule_join_reorder.t.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
  │   └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
  └─IndexLookUp(Probe)	root		
    ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
    │ └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)], keep order:false, stats:pseudo
    └─Selection(Probe)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
      └─TableRowIDScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ leading(t2) hash_join(t2) */ * from t, t1, t2, t3 where t.a = t1.a and t1.b=t2.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		CARTESIAN inner join
  ├─TableReader(Build)	root		data:TableFullScan
  │ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
      │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
          └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2) hash_join(t1) */ * from t, t1, t2, t3 where t.a = t1.a and t1.b=t2.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		CARTESIAN inner join
  ├─TableReader(Build)	root		data:TableFullScan
  │ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
      │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
          └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2) INL_JOIN(t1) */ * from t, t1, t2, t3 where t.a = t1.a and t1.b=t2.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		CARTESIAN inner join
  ├─TableReader(Build)	root		data:TableFullScan
  │ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─IndexJoin(Probe)	root		inner join, inner:IndexLookUp, outer key:.__planner__core__casetest__rule__rule_join_reorder.t.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
      │   └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
      └─IndexLookUp(Probe)	root		
        ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
        │ └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)], keep order:false, stats:pseudo
        └─Selection(Probe)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
          └─TableRowIDScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2) merge_join(t2) */ * from t, t1, t2, t3 where t.a = t1.a and t1.b=t2.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		CARTESIAN inner join
  ├─TableReader(Build)	root		data:TableFullScan
  │ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─MergeJoin(Probe)	root		inner join, left key:.__planner__core__casetest__rule__rule_join_reorder.t1.b, right key:.__planner__core__casetest__rule__rule_join_reorder.t2.b
    ├─Sort(Build)	root		.__planner__core__casetest__rule__rule_join_reorder.t2.b
    │ └─TableReader	root		data:Selection
    │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │     └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─Sort(Probe)	root		.__planner__core__casetest__rule__rule_join_reorder.t1.b
      └─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
        ├─TableReader(Build)	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
        │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
        └─TableReader(Probe)	root		data:Selection
          └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
            └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1) merge_join(t2) */ * from t, t1, t2, t3 where t.a = t1.a and t1.b=t2.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		CARTESIAN inner join
  ├─TableReader(Build)	root		data:TableFullScan
  │ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─MergeJoin(Probe)	root		inner join, left key:.__planner__core__casetest__rule__rule_join_reorder.t1.b, right key:.__planner__core__casetest__rule__rule_join_reorder.t2.b
    ├─Sort(Build)	root		.__planner__core__casetest__rule__rule_join_reorder.t2.b
    │ └─TableReader	root		data:Selection
    │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │     └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─Sort(Probe)	root		.__planner__core__casetest__rule__rule_join_reorder.t1.b
      └─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
        ├─TableReader(Build)	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
        │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
        └─TableReader(Probe)	root		data:Selection
          └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
            └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2) INL_JOIN(t1) */ * from t, t1, t2, t3 where t.a = t1.a and t1.b=t2.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		CARTESIAN inner join
  ├─TableReader(Build)	root		data:TableFullScan
  │ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─IndexJoin(Probe)	root		inner join, inner:IndexLookUp, outer key:.__planner__core__casetest__rule__rule_join_reorder.t.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
      │   └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
      └─IndexLookUp(Probe)	root		
        ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
        │ └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)], keep order:false, stats:pseudo
        └─Selection(Probe)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
          └─TableRowIDScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2) is inapplicable. Please specify the table names in the arguments.
set tidb_cost_model_version=2;
drop table if exists t, t1, t2, t3, t4, t5, t6;
create table t(a int, b int) partition by hash(a) partitions 3;
create table t1(a int, b int) partition by hash(a) partitions 4;
create table t2(a int, b int) partition by hash(a) partitions 5;
create table t3(a int, b int) partition by hash(b) partitions 3;
create table t4(a int, b int) partition by hash(a) partitions 4;
create table t5(a int, b int) partition by hash(a) partitions 5;
create table t6(a int, b int) partition by hash(b) partitions 3;
set @@tidb_partition_prune_mode="static";
set @@tidb_enable_outer_join_reorder=true;
explain format='plan_tree' select /*+ straight_join() */ * from t, t1, t2 where t.a = t1.a and t1.b=t2.b;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
├─PartitionUnion(Build)	root		
│ ├─TableReader	root		data:Selection
│ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
│ │   └─TableFullScan	cop[tikv]	table:t2, partition:p0	keep order:false, stats:pseudo
│ ├─TableReader	root		data:Selection
│ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
│ │   └─TableFullScan	cop[tikv]	table:t2, partition:p1	keep order:false, stats:pseudo
│ ├─TableReader	root		data:Selection
│ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
│ │   └─TableFullScan	cop[tikv]	table:t2, partition:p2	keep order:false, stats:pseudo
│ ├─TableReader	root		data:Selection
│ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
│ │   └─TableFullScan	cop[tikv]	table:t2, partition:p3	keep order:false, stats:pseudo
│ └─TableReader	root		data:Selection
│   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
│     └─TableFullScan	cop[tikv]	table:t2, partition:p4	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
  ├─PartitionUnion(Build)	root		
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
  │ │   └─TableFullScan	cop[tikv]	table:t, partition:p0	keep order:false, stats:pseudo
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
  │ │   └─TableFullScan	cop[tikv]	table:t, partition:p1	keep order:false, stats:pseudo
  │ └─TableReader	root		data:Selection
  │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
  │     └─TableFullScan	cop[tikv]	table:t, partition:p2	keep order:false, stats:pseudo
  └─PartitionUnion(Probe)	root		
    ├─TableReader	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1, partition:p0	keep order:false, stats:pseudo
    ├─TableReader	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1, partition:p1	keep order:false, stats:pseudo
    ├─TableReader	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1, partition:p2	keep order:false, stats:pseudo
    └─TableReader	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
        └─TableFullScan	cop[tikv]	table:t1, partition:p3	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from t, t1, t2, t3 where t.a = t1.a and t1.b=t2.b and t2.b=t3.b;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─PartitionUnion(Build)	root		
│ ├─TableReader	root		data:Selection
│ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│ │   └─TableFullScan	cop[tikv]	table:t3, partition:p0	keep order:false, stats:pseudo
│ ├─TableReader	root		data:Selection
│ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│ │   └─TableFullScan	cop[tikv]	table:t3, partition:p1	keep order:false, stats:pseudo
│ └─TableReader	root		data:Selection
│   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│     └─TableFullScan	cop[tikv]	table:t3, partition:p2	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
  ├─PartitionUnion(Build)	root		
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p0	keep order:false, stats:pseudo
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p1	keep order:false, stats:pseudo
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p2	keep order:false, stats:pseudo
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p3	keep order:false, stats:pseudo
  │ └─TableReader	root		data:Selection
  │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │     └─TableFullScan	cop[tikv]	table:t2, partition:p4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    ├─PartitionUnion(Build)	root		
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
    │ │   └─TableFullScan	cop[tikv]	table:t, partition:p0	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
    │ │   └─TableFullScan	cop[tikv]	table:t, partition:p1	keep order:false, stats:pseudo
    │ └─TableReader	root		data:Selection
    │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
    │     └─TableFullScan	cop[tikv]	table:t, partition:p2	keep order:false, stats:pseudo
    └─PartitionUnion(Probe)	root		
      ├─TableReader	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
      │   └─TableFullScan	cop[tikv]	table:t1, partition:p0	keep order:false, stats:pseudo
      ├─TableReader	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
      │   └─TableFullScan	cop[tikv]	table:t1, partition:p1	keep order:false, stats:pseudo
      ├─TableReader	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
      │   └─TableFullScan	cop[tikv]	table:t1, partition:p2	keep order:false, stats:pseudo
      └─TableReader	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
          └─TableFullScan	cop[tikv]	table:t1, partition:p3	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ leading(t1) */ * from t, t1, t2, t3 where t.a = t1.a and t1.b=t2.b and t2.b=t3.b;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─PartitionUnion(Build)	root		
│ ├─TableReader	root		data:Selection
│ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│ │   └─TableFullScan	cop[tikv]	table:t3, partition:p0	keep order:false, stats:pseudo
│ ├─TableReader	root		data:Selection
│ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│ │   └─TableFullScan	cop[tikv]	table:t3, partition:p1	keep order:false, stats:pseudo
│ └─TableReader	root		data:Selection
│   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│     └─TableFullScan	cop[tikv]	table:t3, partition:p2	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
  ├─PartitionUnion(Build)	root		
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p0	keep order:false, stats:pseudo
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p1	keep order:false, stats:pseudo
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p2	keep order:false, stats:pseudo
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p3	keep order:false, stats:pseudo
  │ └─TableReader	root		data:Selection
  │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │     └─TableFullScan	cop[tikv]	table:t2, partition:p4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    ├─PartitionUnion(Build)	root		
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
    │ │   └─TableFullScan	cop[tikv]	table:t, partition:p0	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
    │ │   └─TableFullScan	cop[tikv]	table:t, partition:p1	keep order:false, stats:pseudo
    │ └─TableReader	root		data:Selection
    │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
    │     └─TableFullScan	cop[tikv]	table:t, partition:p2	keep order:false, stats:pseudo
    └─PartitionUnion(Probe)	root		
      ├─TableReader	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
      │   └─TableFullScan	cop[tikv]	table:t1, partition:p0	keep order:false, stats:pseudo
      ├─TableReader	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
      │   └─TableFullScan	cop[tikv]	table:t1, partition:p1	keep order:false, stats:pseudo
      ├─TableReader	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
      │   └─TableFullScan	cop[tikv]	table:t1, partition:p2	keep order:false, stats:pseudo
      └─TableReader	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
          └─TableFullScan	cop[tikv]	table:t1, partition:p3	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1, t3) */ * from t, t1, t2, t3 where t.a = t1.a and t1.b=t2.b and t2.b=t3.b;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─PartitionUnion(Build)	root		
│ ├─TableReader	root		data:Selection
│ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│ │   └─TableFullScan	cop[tikv]	table:t3, partition:p0	keep order:false, stats:pseudo
│ ├─TableReader	root		data:Selection
│ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│ │   └─TableFullScan	cop[tikv]	table:t3, partition:p1	keep order:false, stats:pseudo
│ └─TableReader	root		data:Selection
│   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│     └─TableFullScan	cop[tikv]	table:t3, partition:p2	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
  ├─PartitionUnion(Build)	root		
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p0	keep order:false, stats:pseudo
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p1	keep order:false, stats:pseudo
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p2	keep order:false, stats:pseudo
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p3	keep order:false, stats:pseudo
  │ └─TableReader	root		data:Selection
  │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │     └─TableFullScan	cop[tikv]	table:t2, partition:p4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    ├─PartitionUnion(Build)	root		
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
    │ │   └─TableFullScan	cop[tikv]	table:t, partition:p0	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
    │ │   └─TableFullScan	cop[tikv]	table:t, partition:p1	keep order:false, stats:pseudo
    │ └─TableReader	root		data:Selection
    │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
    │     └─TableFullScan	cop[tikv]	table:t, partition:p2	keep order:false, stats:pseudo
    └─PartitionUnion(Probe)	root		
      ├─TableReader	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
      │   └─TableFullScan	cop[tikv]	table:t1, partition:p0	keep order:false, stats:pseudo
      ├─TableReader	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
      │   └─TableFullScan	cop[tikv]	table:t1, partition:p1	keep order:false, stats:pseudo
      ├─TableReader	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
      │   └─TableFullScan	cop[tikv]	table:t1, partition:p2	keep order:false, stats:pseudo
      └─TableReader	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
          └─TableFullScan	cop[tikv]	table:t1, partition:p3	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1, t2) */ * from t4 join t on t4.a=t.a left join t1 on t.a = t1.a join t2 on t.b = t2.b join t3 on t2.b=t3.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b, .__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─PartitionUnion(Build)	root		
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p0	keep order:false, stats:pseudo
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p1	keep order:false, stats:pseudo
  │ └─TableReader	root		data:Selection
  │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │     └─TableFullScan	cop[tikv]	table:t3, partition:p2	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
    ├─PartitionUnion(Build)	root		
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p0	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p1	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p2	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p3	keep order:false, stats:pseudo
    │ └─TableReader	root		data:Selection
    │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │     └─TableFullScan	cop[tikv]	table:t2, partition:p4	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		left outer join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
      ├─PartitionUnion(Build)	root		
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      │ │   └─TableFullScan	cop[tikv]	table:t1, partition:p0	keep order:false, stats:pseudo
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      │ │   └─TableFullScan	cop[tikv]	table:t1, partition:p1	keep order:false, stats:pseudo
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      │ │   └─TableFullScan	cop[tikv]	table:t1, partition:p2	keep order:false, stats:pseudo
      │ └─TableReader	root		data:Selection
      │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      │     └─TableFullScan	cop[tikv]	table:t1, partition:p3	keep order:false, stats:pseudo
      └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
        ├─PartitionUnion(Build)	root		
        │ ├─TableReader	root		data:Selection
        │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.b))
        │ │   └─TableFullScan	cop[tikv]	table:t, partition:p0	keep order:false, stats:pseudo
        │ ├─TableReader	root		data:Selection
        │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.b))
        │ │   └─TableFullScan	cop[tikv]	table:t, partition:p1	keep order:false, stats:pseudo
        │ └─TableReader	root		data:Selection
        │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.b))
        │     └─TableFullScan	cop[tikv]	table:t, partition:p2	keep order:false, stats:pseudo
        └─PartitionUnion(Probe)	root		
          ├─TableReader	root		data:Selection
          │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
          │   └─TableFullScan	cop[tikv]	table:t4, partition:p0	keep order:false, stats:pseudo
          ├─TableReader	root		data:Selection
          │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
          │   └─TableFullScan	cop[tikv]	table:t4, partition:p1	keep order:false, stats:pseudo
          ├─TableReader	root		data:Selection
          │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
          │   └─TableFullScan	cop[tikv]	table:t4, partition:p2	keep order:false, stats:pseudo
          └─TableReader	root		data:Selection
            └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
              └─TableFullScan	cop[tikv]	table:t4, partition:p3	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1, t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3) */ * from t4 join t on t4.a=t.a left join t1 on t.a = t1.a join t2 on t.b = t2.b join t3 on t2.b=t3.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b, .__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─PartitionUnion(Build)	root		
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p0	keep order:false, stats:pseudo
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p1	keep order:false, stats:pseudo
  │ └─TableReader	root		data:Selection
  │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │     └─TableFullScan	cop[tikv]	table:t3, partition:p2	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
    ├─PartitionUnion(Build)	root		
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p0	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p1	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p2	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p3	keep order:false, stats:pseudo
    │ └─TableReader	root		data:Selection
    │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │     └─TableFullScan	cop[tikv]	table:t2, partition:p4	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		left outer join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
      ├─PartitionUnion(Build)	root		
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      │ │   └─TableFullScan	cop[tikv]	table:t1, partition:p0	keep order:false, stats:pseudo
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      │ │   └─TableFullScan	cop[tikv]	table:t1, partition:p1	keep order:false, stats:pseudo
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      │ │   └─TableFullScan	cop[tikv]	table:t1, partition:p2	keep order:false, stats:pseudo
      │ └─TableReader	root		data:Selection
      │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      │     └─TableFullScan	cop[tikv]	table:t1, partition:p3	keep order:false, stats:pseudo
      └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
        ├─PartitionUnion(Build)	root		
        │ ├─TableReader	root		data:Selection
        │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.b))
        │ │   └─TableFullScan	cop[tikv]	table:t, partition:p0	keep order:false, stats:pseudo
        │ ├─TableReader	root		data:Selection
        │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.b))
        │ │   └─TableFullScan	cop[tikv]	table:t, partition:p1	keep order:false, stats:pseudo
        │ └─TableReader	root		data:Selection
        │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.b))
        │     └─TableFullScan	cop[tikv]	table:t, partition:p2	keep order:false, stats:pseudo
        └─PartitionUnion(Probe)	root		
          ├─TableReader	root		data:Selection
          │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
          │   └─TableFullScan	cop[tikv]	table:t4, partition:p0	keep order:false, stats:pseudo
          ├─TableReader	root		data:Selection
          │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
          │   └─TableFullScan	cop[tikv]	table:t4, partition:p1	keep order:false, stats:pseudo
          ├─TableReader	root		data:Selection
          │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
          │   └─TableFullScan	cop[tikv]	table:t4, partition:p2	keep order:false, stats:pseudo
          └─TableReader	root		data:Selection
            └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
              └─TableFullScan	cop[tikv]	table:t4, partition:p3	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4, t3, t2, t, t1) */ * from t4 join t on t4.a=t.a left join t1 on t.a = t1.a join t2 on t.b = t2.b join t3 on t2.b=t3.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b, .__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─PartitionUnion(Build)	root		
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p0	keep order:false, stats:pseudo
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p1	keep order:false, stats:pseudo
  │ └─TableReader	root		data:Selection
  │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │     └─TableFullScan	cop[tikv]	table:t3, partition:p2	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
    ├─PartitionUnion(Build)	root		
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p0	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p1	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p2	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p3	keep order:false, stats:pseudo
    │ └─TableReader	root		data:Selection
    │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │     └─TableFullScan	cop[tikv]	table:t2, partition:p4	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		left outer join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
      ├─PartitionUnion(Build)	root		
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      │ │   └─TableFullScan	cop[tikv]	table:t1, partition:p0	keep order:false, stats:pseudo
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      │ │   └─TableFullScan	cop[tikv]	table:t1, partition:p1	keep order:false, stats:pseudo
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      │ │   └─TableFullScan	cop[tikv]	table:t1, partition:p2	keep order:false, stats:pseudo
      │ └─TableReader	root		data:Selection
      │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      │     └─TableFullScan	cop[tikv]	table:t1, partition:p3	keep order:false, stats:pseudo
      └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
        ├─PartitionUnion(Build)	root		
        │ ├─TableReader	root		data:Selection
        │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.b))
        │ │   └─TableFullScan	cop[tikv]	table:t, partition:p0	keep order:false, stats:pseudo
        │ ├─TableReader	root		data:Selection
        │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.b))
        │ │   └─TableFullScan	cop[tikv]	table:t, partition:p1	keep order:false, stats:pseudo
        │ └─TableReader	root		data:Selection
        │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.b))
        │     └─TableFullScan	cop[tikv]	table:t, partition:p2	keep order:false, stats:pseudo
        └─PartitionUnion(Probe)	root		
          ├─TableReader	root		data:Selection
          │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
          │   └─TableFullScan	cop[tikv]	table:t4, partition:p0	keep order:false, stats:pseudo
          ├─TableReader	root		data:Selection
          │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
          │   └─TableFullScan	cop[tikv]	table:t4, partition:p1	keep order:false, stats:pseudo
          ├─TableReader	root		data:Selection
          │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
          │   └─TableFullScan	cop[tikv]	table:t4, partition:p2	keep order:false, stats:pseudo
          └─TableReader	root		data:Selection
            └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
              └─TableFullScan	cop[tikv]	table:t4, partition:p3	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4, t3, t2, t, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4, t3, t2, t) */ * from t4 join t on t4.a=t.a left join t1 on t.a = t1.a join t2 on t.b = t2.b join t3 on t2.b=t3.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b, .__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─PartitionUnion(Build)	root		
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p0	keep order:false, stats:pseudo
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p1	keep order:false, stats:pseudo
  │ └─TableReader	root		data:Selection
  │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │     └─TableFullScan	cop[tikv]	table:t3, partition:p2	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
    ├─PartitionUnion(Build)	root		
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p0	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p1	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p2	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p3	keep order:false, stats:pseudo
    │ └─TableReader	root		data:Selection
    │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │     └─TableFullScan	cop[tikv]	table:t2, partition:p4	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		left outer join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
      ├─PartitionUnion(Build)	root		
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      │ │   └─TableFullScan	cop[tikv]	table:t1, partition:p0	keep order:false, stats:pseudo
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      │ │   └─TableFullScan	cop[tikv]	table:t1, partition:p1	keep order:false, stats:pseudo
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      │ │   └─TableFullScan	cop[tikv]	table:t1, partition:p2	keep order:false, stats:pseudo
      │ └─TableReader	root		data:Selection
      │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      │     └─TableFullScan	cop[tikv]	table:t1, partition:p3	keep order:false, stats:pseudo
      └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
        ├─PartitionUnion(Build)	root		
        │ ├─TableReader	root		data:Selection
        │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.b))
        │ │   └─TableFullScan	cop[tikv]	table:t, partition:p0	keep order:false, stats:pseudo
        │ ├─TableReader	root		data:Selection
        │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.b))
        │ │   └─TableFullScan	cop[tikv]	table:t, partition:p1	keep order:false, stats:pseudo
        │ └─TableReader	root		data:Selection
        │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.b))
        │     └─TableFullScan	cop[tikv]	table:t, partition:p2	keep order:false, stats:pseudo
        └─PartitionUnion(Probe)	root		
          ├─TableReader	root		data:Selection
          │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
          │   └─TableFullScan	cop[tikv]	table:t4, partition:p0	keep order:false, stats:pseudo
          ├─TableReader	root		data:Selection
          │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
          │   └─TableFullScan	cop[tikv]	table:t4, partition:p1	keep order:false, stats:pseudo
          ├─TableReader	root		data:Selection
          │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
          │   └─TableFullScan	cop[tikv]	table:t4, partition:p2	keep order:false, stats:pseudo
          └─TableReader	root		data:Selection
            └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
              └─TableFullScan	cop[tikv]	table:t4, partition:p3	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4, t3, t2, t) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t2, t) */ * from t4 join t on t4.a=t.a left join t1 on t.a = t1.a join t2 on t.b = t2.b join t3 on t2.b=t3.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b, .__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─PartitionUnion(Build)	root		
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p0	keep order:false, stats:pseudo
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p1	keep order:false, stats:pseudo
  │ └─TableReader	root		data:Selection
  │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │     └─TableFullScan	cop[tikv]	table:t3, partition:p2	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
    ├─PartitionUnion(Build)	root		
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p0	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p1	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p2	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p3	keep order:false, stats:pseudo
    │ └─TableReader	root		data:Selection
    │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │     └─TableFullScan	cop[tikv]	table:t2, partition:p4	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		left outer join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
      ├─PartitionUnion(Build)	root		
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      │ │   └─TableFullScan	cop[tikv]	table:t1, partition:p0	keep order:false, stats:pseudo
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      │ │   └─TableFullScan	cop[tikv]	table:t1, partition:p1	keep order:false, stats:pseudo
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      │ │   └─TableFullScan	cop[tikv]	table:t1, partition:p2	keep order:false, stats:pseudo
      │ └─TableReader	root		data:Selection
      │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      │     └─TableFullScan	cop[tikv]	table:t1, partition:p3	keep order:false, stats:pseudo
      └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
        ├─PartitionUnion(Build)	root		
        │ ├─TableReader	root		data:Selection
        │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.b))
        │ │   └─TableFullScan	cop[tikv]	table:t, partition:p0	keep order:false, stats:pseudo
        │ ├─TableReader	root		data:Selection
        │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.b))
        │ │   └─TableFullScan	cop[tikv]	table:t, partition:p1	keep order:false, stats:pseudo
        │ └─TableReader	root		data:Selection
        │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.b))
        │     └─TableFullScan	cop[tikv]	table:t, partition:p2	keep order:false, stats:pseudo
        └─PartitionUnion(Probe)	root		
          ├─TableReader	root		data:Selection
          │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
          │   └─TableFullScan	cop[tikv]	table:t4, partition:p0	keep order:false, stats:pseudo
          ├─TableReader	root		data:Selection
          │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
          │   └─TableFullScan	cop[tikv]	table:t4, partition:p1	keep order:false, stats:pseudo
          ├─TableReader	root		data:Selection
          │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
          │   └─TableFullScan	cop[tikv]	table:t4, partition:p2	keep order:false, stats:pseudo
          └─TableReader	root		data:Selection
            └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
              └─TableFullScan	cop[tikv]	table:t4, partition:p3	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t2, t) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3) */ * from t2 left join (t1 left join t3 on t1.a=t3.a) on t2.b=t1.b;
id	task	access object	operator info
HashJoin	root		left outer join, left side:PartitionUnion, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)]
├─PartitionUnion(Build)	root		
│ ├─TableReader	root		data:TableFullScan
│ │ └─TableFullScan	cop[tikv]	table:t2, partition:p0	keep order:false, stats:pseudo
│ ├─TableReader	root		data:TableFullScan
│ │ └─TableFullScan	cop[tikv]	table:t2, partition:p1	keep order:false, stats:pseudo
│ ├─TableReader	root		data:TableFullScan
│ │ └─TableFullScan	cop[tikv]	table:t2, partition:p2	keep order:false, stats:pseudo
│ ├─TableReader	root		data:TableFullScan
│ │ └─TableFullScan	cop[tikv]	table:t2, partition:p3	keep order:false, stats:pseudo
│ └─TableReader	root		data:TableFullScan
│   └─TableFullScan	cop[tikv]	table:t2, partition:p4	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		left outer join, left side:PartitionUnion, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  ├─PartitionUnion(Build)	root		
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p0	keep order:false, stats:pseudo
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p1	keep order:false, stats:pseudo
  │ └─TableReader	root		data:Selection
  │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │     └─TableFullScan	cop[tikv]	table:t3, partition:p2	keep order:false, stats:pseudo
  └─PartitionUnion(Probe)	root		
    ├─TableReader	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1, partition:p0	keep order:false, stats:pseudo
    ├─TableReader	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1, partition:p1	keep order:false, stats:pseudo
    ├─TableReader	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1, partition:p2	keep order:false, stats:pseudo
    └─TableReader	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
        └─TableFullScan	cop[tikv]	table:t1, partition:p3	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t1, t3) */ * from t2 left join (t1 left join t3 on t1.a=t3.a) on t2.b=t1.b;
id	task	access object	operator info
HashJoin	root		left outer join, left side:PartitionUnion, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)]
├─PartitionUnion(Build)	root		
│ ├─TableReader	root		data:TableFullScan
│ │ └─TableFullScan	cop[tikv]	table:t2, partition:p0	keep order:false, stats:pseudo
│ ├─TableReader	root		data:TableFullScan
│ │ └─TableFullScan	cop[tikv]	table:t2, partition:p1	keep order:false, stats:pseudo
│ ├─TableReader	root		data:TableFullScan
│ │ └─TableFullScan	cop[tikv]	table:t2, partition:p2	keep order:false, stats:pseudo
│ ├─TableReader	root		data:TableFullScan
│ │ └─TableFullScan	cop[tikv]	table:t2, partition:p3	keep order:false, stats:pseudo
│ └─TableReader	root		data:TableFullScan
│   └─TableFullScan	cop[tikv]	table:t2, partition:p4	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		left outer join, left side:PartitionUnion, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  ├─PartitionUnion(Build)	root		
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p0	keep order:false, stats:pseudo
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p1	keep order:false, stats:pseudo
  │ └─TableReader	root		data:Selection
  │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │     └─TableFullScan	cop[tikv]	table:t3, partition:p2	keep order:false, stats:pseudo
  └─PartitionUnion(Probe)	root		
    ├─TableReader	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1, partition:p0	keep order:false, stats:pseudo
    ├─TableReader	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1, partition:p1	keep order:false, stats:pseudo
    ├─TableReader	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1, partition:p2	keep order:false, stats:pseudo
    └─TableReader	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
        └─TableFullScan	cop[tikv]	table:t1, partition:p3	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t1, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3) */ * from t2 left join (t1 join t3 on t1.a=t3.a join t4 on t3.b = t4.b) on t2.b=t1.b;
id	task	access object	operator info
HashJoin	root		left outer join, left side:PartitionUnion, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)]
├─PartitionUnion(Build)	root		
│ ├─TableReader	root		data:TableFullScan
│ │ └─TableFullScan	cop[tikv]	table:t2, partition:p0	keep order:false, stats:pseudo
│ ├─TableReader	root		data:TableFullScan
│ │ └─TableFullScan	cop[tikv]	table:t2, partition:p1	keep order:false, stats:pseudo
│ ├─TableReader	root		data:TableFullScan
│ │ └─TableFullScan	cop[tikv]	table:t2, partition:p2	keep order:false, stats:pseudo
│ ├─TableReader	root		data:TableFullScan
│ │ └─TableFullScan	cop[tikv]	table:t2, partition:p3	keep order:false, stats:pseudo
│ └─TableReader	root		data:TableFullScan
│   └─TableFullScan	cop[tikv]	table:t2, partition:p4	keep order:false, stats:pseudo
└─Projection(Probe)	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b
  └─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
    ├─PartitionUnion(Build)	root		
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
    │ │   └─TableFullScan	cop[tikv]	table:t4, partition:p0	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
    │ │   └─TableFullScan	cop[tikv]	table:t4, partition:p1	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
    │ │   └─TableFullScan	cop[tikv]	table:t4, partition:p2	keep order:false, stats:pseudo
    │ └─TableReader	root		data:Selection
    │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
    │     └─TableFullScan	cop[tikv]	table:t4, partition:p3	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
      ├─PartitionUnion(Build)	root		
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
      │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p0	keep order:false, stats:pseudo
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
      │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p1	keep order:false, stats:pseudo
      │ └─TableReader	root		data:Selection
      │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
      │     └─TableFullScan	cop[tikv]	table:t3, partition:p2	keep order:false, stats:pseudo
      └─PartitionUnion(Probe)	root		
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
        │   └─TableFullScan	cop[tikv]	table:t1, partition:p0	keep order:false, stats:pseudo
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
        │   └─TableFullScan	cop[tikv]	table:t1, partition:p1	keep order:false, stats:pseudo
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
        │   └─TableFullScan	cop[tikv]	table:t1, partition:p2	keep order:false, stats:pseudo
        └─TableReader	root		data:Selection
          └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
            └─TableFullScan	cop[tikv]	table:t1, partition:p3	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t4) */ * from t2 left join (t1 join t3 on t1.a=t3.a join t4 on t3.b = t4.b) on t2.b=t1.b;
id	task	access object	operator info
HashJoin	root		left outer join, left side:PartitionUnion, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)]
├─PartitionUnion(Build)	root		
│ ├─TableReader	root		data:TableFullScan
│ │ └─TableFullScan	cop[tikv]	table:t2, partition:p0	keep order:false, stats:pseudo
│ ├─TableReader	root		data:TableFullScan
│ │ └─TableFullScan	cop[tikv]	table:t2, partition:p1	keep order:false, stats:pseudo
│ ├─TableReader	root		data:TableFullScan
│ │ └─TableFullScan	cop[tikv]	table:t2, partition:p2	keep order:false, stats:pseudo
│ ├─TableReader	root		data:TableFullScan
│ │ └─TableFullScan	cop[tikv]	table:t2, partition:p3	keep order:false, stats:pseudo
│ └─TableReader	root		data:TableFullScan
│   └─TableFullScan	cop[tikv]	table:t2, partition:p4	keep order:false, stats:pseudo
└─Projection(Probe)	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b
  └─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
    ├─PartitionUnion(Build)	root		
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
    │ │   └─TableFullScan	cop[tikv]	table:t4, partition:p0	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
    │ │   └─TableFullScan	cop[tikv]	table:t4, partition:p1	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
    │ │   └─TableFullScan	cop[tikv]	table:t4, partition:p2	keep order:false, stats:pseudo
    │ └─TableReader	root		data:Selection
    │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
    │     └─TableFullScan	cop[tikv]	table:t4, partition:p3	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
      ├─PartitionUnion(Build)	root		
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
      │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p0	keep order:false, stats:pseudo
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
      │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p1	keep order:false, stats:pseudo
      │ └─TableReader	root		data:Selection
      │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
      │     └─TableFullScan	cop[tikv]	table:t3, partition:p2	keep order:false, stats:pseudo
      └─PartitionUnion(Probe)	root		
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
        │   └─TableFullScan	cop[tikv]	table:t1, partition:p0	keep order:false, stats:pseudo
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
        │   └─TableFullScan	cop[tikv]	table:t1, partition:p1	keep order:false, stats:pseudo
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
        │   └─TableFullScan	cop[tikv]	table:t1, partition:p2	keep order:false, stats:pseudo
        └─TableReader	root		data:Selection
          └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
            └─TableFullScan	cop[tikv]	table:t1, partition:p3	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t4) */ * from t2 left join (t1 join t3 on t1.a=t3.a join t4 on t3.b = t4.b) on t2.b=t1.b join t5 on t2.a = t5.a join t6 on t5.b=t6.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b, .__planner__core__casetest__rule__rule_join_reorder.t5.a, .__planner__core__casetest__rule__rule_join_reorder.t5.b, .__planner__core__casetest__rule__rule_join_reorder.t6.a, .__planner__core__casetest__rule__rule_join_reorder.t6.b
└─HashJoin	root		left outer join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)]
  ├─Projection(Build)	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b
  │ └─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
  │   ├─PartitionUnion(Build)	root		
  │   │ ├─TableReader	root		data:Selection
  │   │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │   │ │   └─TableFullScan	cop[tikv]	table:t4, partition:p0	keep order:false, stats:pseudo
  │   │ ├─TableReader	root		data:Selection
  │   │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │   │ │   └─TableFullScan	cop[tikv]	table:t4, partition:p1	keep order:false, stats:pseudo
  │   │ ├─TableReader	root		data:Selection
  │   │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │   │ │   └─TableFullScan	cop[tikv]	table:t4, partition:p2	keep order:false, stats:pseudo
  │   │ └─TableReader	root		data:Selection
  │   │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │   │     └─TableFullScan	cop[tikv]	table:t4, partition:p3	keep order:false, stats:pseudo
  │   └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
  │     ├─PartitionUnion(Build)	root		
  │     │ ├─TableReader	root		data:Selection
  │     │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │     │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p0	keep order:false, stats:pseudo
  │     │ ├─TableReader	root		data:Selection
  │     │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │     │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p1	keep order:false, stats:pseudo
  │     │ └─TableReader	root		data:Selection
  │     │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │     │     └─TableFullScan	cop[tikv]	table:t3, partition:p2	keep order:false, stats:pseudo
  │     └─PartitionUnion(Probe)	root		
  │       ├─TableReader	root		data:Selection
  │       │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │       │   └─TableFullScan	cop[tikv]	table:t1, partition:p0	keep order:false, stats:pseudo
  │       ├─TableReader	root		data:Selection
  │       │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │       │   └─TableFullScan	cop[tikv]	table:t1, partition:p1	keep order:false, stats:pseudo
  │       ├─TableReader	root		data:Selection
  │       │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │       │   └─TableFullScan	cop[tikv]	table:t1, partition:p2	keep order:false, stats:pseudo
  │       └─TableReader	root		data:Selection
  │         └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │           └─TableFullScan	cop[tikv]	table:t1, partition:p3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t5.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
    ├─PartitionUnion(Build)	root		
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
    │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p0	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
    │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p1	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
    │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p2	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
    │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p3	keep order:false, stats:pseudo
    │ └─TableReader	root		data:Selection
    │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
    │     └─TableFullScan	cop[tikv]	table:t2, partition:p4	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.b, .__planner__core__casetest__rule__rule_join_reorder.t5.b)]
      ├─PartitionUnion(Build)	root		
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
      │ │   └─TableFullScan	cop[tikv]	table:t6, partition:p0	keep order:false, stats:pseudo
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
      │ │   └─TableFullScan	cop[tikv]	table:t6, partition:p1	keep order:false, stats:pseudo
      │ └─TableReader	root		data:Selection
      │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
      │     └─TableFullScan	cop[tikv]	table:t6, partition:p2	keep order:false, stats:pseudo
      └─PartitionUnion(Probe)	root		
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
        │   └─TableFullScan	cop[tikv]	table:t5, partition:p0	keep order:false, stats:pseudo
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
        │   └─TableFullScan	cop[tikv]	table:t5, partition:p1	keep order:false, stats:pseudo
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
        │   └─TableFullScan	cop[tikv]	table:t5, partition:p2	keep order:false, stats:pseudo
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
        │   └─TableFullScan	cop[tikv]	table:t5, partition:p3	keep order:false, stats:pseudo
        └─TableReader	root		data:Selection
          └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
            └─TableFullScan	cop[tikv]	table:t5, partition:p4	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t4) leading(t5, t6) */ * from t2 left join (t1 join t3 on t1.a=t3.a join t4 on t3.b = t4.b) on t2.b=t1.b join t5 on t2.a = t5.a join t6 on t5.b=t6.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b, .__planner__core__casetest__rule__rule_join_reorder.t5.a, .__planner__core__casetest__rule__rule_join_reorder.t5.b, .__planner__core__casetest__rule__rule_join_reorder.t6.a, .__planner__core__casetest__rule__rule_join_reorder.t6.b
└─HashJoin	root		left outer join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)]
  ├─Projection(Build)	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b
  │ └─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
  │   ├─PartitionUnion(Build)	root		
  │   │ ├─TableReader	root		data:Selection
  │   │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │   │ │   └─TableFullScan	cop[tikv]	table:t4, partition:p0	keep order:false, stats:pseudo
  │   │ ├─TableReader	root		data:Selection
  │   │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │   │ │   └─TableFullScan	cop[tikv]	table:t4, partition:p1	keep order:false, stats:pseudo
  │   │ ├─TableReader	root		data:Selection
  │   │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │   │ │   └─TableFullScan	cop[tikv]	table:t4, partition:p2	keep order:false, stats:pseudo
  │   │ └─TableReader	root		data:Selection
  │   │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │   │     └─TableFullScan	cop[tikv]	table:t4, partition:p3	keep order:false, stats:pseudo
  │   └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
  │     ├─PartitionUnion(Build)	root		
  │     │ ├─TableReader	root		data:Selection
  │     │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │     │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p0	keep order:false, stats:pseudo
  │     │ ├─TableReader	root		data:Selection
  │     │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │     │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p1	keep order:false, stats:pseudo
  │     │ └─TableReader	root		data:Selection
  │     │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │     │     └─TableFullScan	cop[tikv]	table:t3, partition:p2	keep order:false, stats:pseudo
  │     └─PartitionUnion(Probe)	root		
  │       ├─TableReader	root		data:Selection
  │       │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │       │   └─TableFullScan	cop[tikv]	table:t1, partition:p0	keep order:false, stats:pseudo
  │       ├─TableReader	root		data:Selection
  │       │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │       │   └─TableFullScan	cop[tikv]	table:t1, partition:p1	keep order:false, stats:pseudo
  │       ├─TableReader	root		data:Selection
  │       │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │       │   └─TableFullScan	cop[tikv]	table:t1, partition:p2	keep order:false, stats:pseudo
  │       └─TableReader	root		data:Selection
  │         └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │           └─TableFullScan	cop[tikv]	table:t1, partition:p3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t5.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
    ├─PartitionUnion(Build)	root		
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
    │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p0	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
    │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p1	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
    │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p2	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
    │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p3	keep order:false, stats:pseudo
    │ └─TableReader	root		data:Selection
    │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
    │     └─TableFullScan	cop[tikv]	table:t2, partition:p4	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.b, .__planner__core__casetest__rule__rule_join_reorder.t5.b)]
      ├─PartitionUnion(Build)	root		
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
      │ │   └─TableFullScan	cop[tikv]	table:t6, partition:p0	keep order:false, stats:pseudo
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
      │ │   └─TableFullScan	cop[tikv]	table:t6, partition:p1	keep order:false, stats:pseudo
      │ └─TableReader	root		data:Selection
      │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
      │     └─TableFullScan	cop[tikv]	table:t6, partition:p2	keep order:false, stats:pseudo
      └─PartitionUnion(Probe)	root		
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
        │   └─TableFullScan	cop[tikv]	table:t5, partition:p0	keep order:false, stats:pseudo
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
        │   └─TableFullScan	cop[tikv]	table:t5, partition:p1	keep order:false, stats:pseudo
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
        │   └─TableFullScan	cop[tikv]	table:t5, partition:p2	keep order:false, stats:pseudo
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
        │   └─TableFullScan	cop[tikv]	table:t5, partition:p3	keep order:false, stats:pseudo
        └─TableReader	root		data:Selection
          └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
            └─TableFullScan	cop[tikv]	table:t5, partition:p4	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t4) is inapplicable. Please specify the table names in the arguments.
Warning	1815	Hint leading(t5, t6) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t5, t6, t3, t4) */ * from t2 left join (t1 join t3 on t1.a=t3.a join t4 on t3.b = t4.b) on t2.b=t1.b join t5 on t2.a = t5.a join t6 on t5.b=t6.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b, .__planner__core__casetest__rule__rule_join_reorder.t5.a, .__planner__core__casetest__rule__rule_join_reorder.t5.b, .__planner__core__casetest__rule__rule_join_reorder.t6.a, .__planner__core__casetest__rule__rule_join_reorder.t6.b
└─HashJoin	root		left outer join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)]
  ├─Projection(Build)	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b
  │ └─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
  │   ├─PartitionUnion(Build)	root		
  │   │ ├─TableReader	root		data:Selection
  │   │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │   │ │   └─TableFullScan	cop[tikv]	table:t4, partition:p0	keep order:false, stats:pseudo
  │   │ ├─TableReader	root		data:Selection
  │   │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │   │ │   └─TableFullScan	cop[tikv]	table:t4, partition:p1	keep order:false, stats:pseudo
  │   │ ├─TableReader	root		data:Selection
  │   │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │   │ │   └─TableFullScan	cop[tikv]	table:t4, partition:p2	keep order:false, stats:pseudo
  │   │ └─TableReader	root		data:Selection
  │   │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │   │     └─TableFullScan	cop[tikv]	table:t4, partition:p3	keep order:false, stats:pseudo
  │   └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
  │     ├─PartitionUnion(Build)	root		
  │     │ ├─TableReader	root		data:Selection
  │     │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │     │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p0	keep order:false, stats:pseudo
  │     │ ├─TableReader	root		data:Selection
  │     │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │     │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p1	keep order:false, stats:pseudo
  │     │ └─TableReader	root		data:Selection
  │     │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │     │     └─TableFullScan	cop[tikv]	table:t3, partition:p2	keep order:false, stats:pseudo
  │     └─PartitionUnion(Probe)	root		
  │       ├─TableReader	root		data:Selection
  │       │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │       │   └─TableFullScan	cop[tikv]	table:t1, partition:p0	keep order:false, stats:pseudo
  │       ├─TableReader	root		data:Selection
  │       │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │       │   └─TableFullScan	cop[tikv]	table:t1, partition:p1	keep order:false, stats:pseudo
  │       ├─TableReader	root		data:Selection
  │       │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │       │   └─TableFullScan	cop[tikv]	table:t1, partition:p2	keep order:false, stats:pseudo
  │       └─TableReader	root		data:Selection
  │         └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │           └─TableFullScan	cop[tikv]	table:t1, partition:p3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t5.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
    ├─PartitionUnion(Build)	root		
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
    │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p0	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
    │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p1	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
    │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p2	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
    │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p3	keep order:false, stats:pseudo
    │ └─TableReader	root		data:Selection
    │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
    │     └─TableFullScan	cop[tikv]	table:t2, partition:p4	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t6.b, .__planner__core__casetest__rule__rule_join_reorder.t5.b)]
      ├─PartitionUnion(Build)	root		
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
      │ │   └─TableFullScan	cop[tikv]	table:t6, partition:p0	keep order:false, stats:pseudo
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
      │ │   └─TableFullScan	cop[tikv]	table:t6, partition:p1	keep order:false, stats:pseudo
      │ └─TableReader	root		data:Selection
      │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
      │     └─TableFullScan	cop[tikv]	table:t6, partition:p2	keep order:false, stats:pseudo
      └─PartitionUnion(Probe)	root		
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
        │   └─TableFullScan	cop[tikv]	table:t5, partition:p0	keep order:false, stats:pseudo
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
        │   └─TableFullScan	cop[tikv]	table:t5, partition:p1	keep order:false, stats:pseudo
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
        │   └─TableFullScan	cop[tikv]	table:t5, partition:p2	keep order:false, stats:pseudo
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
        │   └─TableFullScan	cop[tikv]	table:t5, partition:p3	keep order:false, stats:pseudo
        └─TableReader	root		data:Selection
          └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
            └─TableFullScan	cop[tikv]	table:t5, partition:p4	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t5, t6, t3, t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1, t2) */ * from t4 join t on t4.a=t.a right join t1 on t.a = t1.a join t2 on t1.b = t2.b join t3 on t2.b=t3.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b, .__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		right outer join, left side:Projection, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
  ├─Projection(Build)	root		.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b, .__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b
  │ └─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
  │   ├─PartitionUnion(Build)	root		
  │   │ ├─TableReader	root		data:Selection
  │   │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
  │   │ │   └─TableFullScan	cop[tikv]	table:t, partition:p0	keep order:false, stats:pseudo
  │   │ ├─TableReader	root		data:Selection
  │   │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
  │   │ │   └─TableFullScan	cop[tikv]	table:t, partition:p1	keep order:false, stats:pseudo
  │   │ └─TableReader	root		data:Selection
  │   │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
  │   │     └─TableFullScan	cop[tikv]	table:t, partition:p2	keep order:false, stats:pseudo
  │   └─PartitionUnion(Probe)	root		
  │     ├─TableReader	root		data:Selection
  │     │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
  │     │   └─TableFullScan	cop[tikv]	table:t4, partition:p0	keep order:false, stats:pseudo
  │     ├─TableReader	root		data:Selection
  │     │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
  │     │   └─TableFullScan	cop[tikv]	table:t4, partition:p1	keep order:false, stats:pseudo
  │     ├─TableReader	root		data:Selection
  │     │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
  │     │   └─TableFullScan	cop[tikv]	table:t4, partition:p2	keep order:false, stats:pseudo
  │     └─TableReader	root		data:Selection
  │       └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
  │         └─TableFullScan	cop[tikv]	table:t4, partition:p3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)]
    ├─PartitionUnion(Build)	root		
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │ │   └─TableFullScan	cop[tikv]	table:t1, partition:p0	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │ │   └─TableFullScan	cop[tikv]	table:t1, partition:p1	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │ │   └─TableFullScan	cop[tikv]	table:t1, partition:p2	keep order:false, stats:pseudo
    │ └─TableReader	root		data:Selection
    │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │     └─TableFullScan	cop[tikv]	table:t1, partition:p3	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
      ├─PartitionUnion(Build)	root		
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
      │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p0	keep order:false, stats:pseudo
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
      │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p1	keep order:false, stats:pseudo
      │ └─TableReader	root		data:Selection
      │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
      │     └─TableFullScan	cop[tikv]	table:t3, partition:p2	keep order:false, stats:pseudo
      └─PartitionUnion(Probe)	root		
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
        │   └─TableFullScan	cop[tikv]	table:t2, partition:p0	keep order:false, stats:pseudo
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
        │   └─TableFullScan	cop[tikv]	table:t2, partition:p1	keep order:false, stats:pseudo
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
        │   └─TableFullScan	cop[tikv]	table:t2, partition:p2	keep order:false, stats:pseudo
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
        │   └─TableFullScan	cop[tikv]	table:t2, partition:p3	keep order:false, stats:pseudo
        └─TableReader	root		data:Selection
          └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
            └─TableFullScan	cop[tikv]	table:t2, partition:p4	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1, t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3) */ * from t4 join t on t4.a=t.a right join t1 on t.a = t1.a join t2 on t1.b = t2.b join t3 on t2.b=t3.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b, .__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		right outer join, left side:Projection, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
  ├─Projection(Build)	root		.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b, .__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b
  │ └─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
  │   ├─PartitionUnion(Build)	root		
  │   │ ├─TableReader	root		data:Selection
  │   │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
  │   │ │   └─TableFullScan	cop[tikv]	table:t, partition:p0	keep order:false, stats:pseudo
  │   │ ├─TableReader	root		data:Selection
  │   │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
  │   │ │   └─TableFullScan	cop[tikv]	table:t, partition:p1	keep order:false, stats:pseudo
  │   │ └─TableReader	root		data:Selection
  │   │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
  │   │     └─TableFullScan	cop[tikv]	table:t, partition:p2	keep order:false, stats:pseudo
  │   └─PartitionUnion(Probe)	root		
  │     ├─TableReader	root		data:Selection
  │     │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
  │     │   └─TableFullScan	cop[tikv]	table:t4, partition:p0	keep order:false, stats:pseudo
  │     ├─TableReader	root		data:Selection
  │     │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
  │     │   └─TableFullScan	cop[tikv]	table:t4, partition:p1	keep order:false, stats:pseudo
  │     ├─TableReader	root		data:Selection
  │     │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
  │     │   └─TableFullScan	cop[tikv]	table:t4, partition:p2	keep order:false, stats:pseudo
  │     └─TableReader	root		data:Selection
  │       └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
  │         └─TableFullScan	cop[tikv]	table:t4, partition:p3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)]
    ├─PartitionUnion(Build)	root		
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │ │   └─TableFullScan	cop[tikv]	table:t1, partition:p0	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │ │   └─TableFullScan	cop[tikv]	table:t1, partition:p1	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │ │   └─TableFullScan	cop[tikv]	table:t1, partition:p2	keep order:false, stats:pseudo
    │ └─TableReader	root		data:Selection
    │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │     └─TableFullScan	cop[tikv]	table:t1, partition:p3	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
      ├─PartitionUnion(Build)	root		
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
      │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p0	keep order:false, stats:pseudo
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
      │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p1	keep order:false, stats:pseudo
      │ └─TableReader	root		data:Selection
      │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
      │     └─TableFullScan	cop[tikv]	table:t3, partition:p2	keep order:false, stats:pseudo
      └─PartitionUnion(Probe)	root		
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
        │   └─TableFullScan	cop[tikv]	table:t2, partition:p0	keep order:false, stats:pseudo
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
        │   └─TableFullScan	cop[tikv]	table:t2, partition:p1	keep order:false, stats:pseudo
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
        │   └─TableFullScan	cop[tikv]	table:t2, partition:p2	keep order:false, stats:pseudo
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
        │   └─TableFullScan	cop[tikv]	table:t2, partition:p3	keep order:false, stats:pseudo
        └─TableReader	root		data:Selection
          └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
            └─TableFullScan	cop[tikv]	table:t2, partition:p4	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1, t3) */ * from t4 join t on t4.a=t.a right join t1 on t.a = t1.a join t2 on t1.b = t2.b join t3 on t2.b=t3.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b, .__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		right outer join, left side:Projection, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
  ├─Projection(Build)	root		.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b, .__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b
  │ └─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
  │   ├─PartitionUnion(Build)	root		
  │   │ ├─TableReader	root		data:Selection
  │   │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
  │   │ │   └─TableFullScan	cop[tikv]	table:t, partition:p0	keep order:false, stats:pseudo
  │   │ ├─TableReader	root		data:Selection
  │   │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
  │   │ │   └─TableFullScan	cop[tikv]	table:t, partition:p1	keep order:false, stats:pseudo
  │   │ └─TableReader	root		data:Selection
  │   │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
  │   │     └─TableFullScan	cop[tikv]	table:t, partition:p2	keep order:false, stats:pseudo
  │   └─PartitionUnion(Probe)	root		
  │     ├─TableReader	root		data:Selection
  │     │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
  │     │   └─TableFullScan	cop[tikv]	table:t4, partition:p0	keep order:false, stats:pseudo
  │     ├─TableReader	root		data:Selection
  │     │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
  │     │   └─TableFullScan	cop[tikv]	table:t4, partition:p1	keep order:false, stats:pseudo
  │     ├─TableReader	root		data:Selection
  │     │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
  │     │   └─TableFullScan	cop[tikv]	table:t4, partition:p2	keep order:false, stats:pseudo
  │     └─TableReader	root		data:Selection
  │       └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
  │         └─TableFullScan	cop[tikv]	table:t4, partition:p3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)]
    ├─PartitionUnion(Build)	root		
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │ │   └─TableFullScan	cop[tikv]	table:t1, partition:p0	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │ │   └─TableFullScan	cop[tikv]	table:t1, partition:p1	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │ │   └─TableFullScan	cop[tikv]	table:t1, partition:p2	keep order:false, stats:pseudo
    │ └─TableReader	root		data:Selection
    │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │     └─TableFullScan	cop[tikv]	table:t1, partition:p3	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
      ├─PartitionUnion(Build)	root		
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
      │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p0	keep order:false, stats:pseudo
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
      │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p1	keep order:false, stats:pseudo
      │ └─TableReader	root		data:Selection
      │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
      │     └─TableFullScan	cop[tikv]	table:t3, partition:p2	keep order:false, stats:pseudo
      └─PartitionUnion(Probe)	root		
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
        │   └─TableFullScan	cop[tikv]	table:t2, partition:p0	keep order:false, stats:pseudo
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
        │   └─TableFullScan	cop[tikv]	table:t2, partition:p1	keep order:false, stats:pseudo
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
        │   └─TableFullScan	cop[tikv]	table:t2, partition:p2	keep order:false, stats:pseudo
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
        │   └─TableFullScan	cop[tikv]	table:t2, partition:p3	keep order:false, stats:pseudo
        └─TableReader	root		data:Selection
          └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
            └─TableFullScan	cop[tikv]	table:t2, partition:p4	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3) */ * from t2 right join (t1 left join t3 on t1.a=t3.a) on t2.b=t1.b;
id	task	access object	operator info
HashJoin	root		right outer join, left side:PartitionUnion, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)]
├─PartitionUnion(Build)	root		
│ ├─TableReader	root		data:Selection
│ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
│ │   └─TableFullScan	cop[tikv]	table:t2, partition:p0	keep order:false, stats:pseudo
│ ├─TableReader	root		data:Selection
│ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
│ │   └─TableFullScan	cop[tikv]	table:t2, partition:p1	keep order:false, stats:pseudo
│ ├─TableReader	root		data:Selection
│ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
│ │   └─TableFullScan	cop[tikv]	table:t2, partition:p2	keep order:false, stats:pseudo
│ ├─TableReader	root		data:Selection
│ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
│ │   └─TableFullScan	cop[tikv]	table:t2, partition:p3	keep order:false, stats:pseudo
│ └─TableReader	root		data:Selection
│   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
│     └─TableFullScan	cop[tikv]	table:t2, partition:p4	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		left outer join, left side:PartitionUnion, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  ├─PartitionUnion(Build)	root		
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p0	keep order:false, stats:pseudo
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p1	keep order:false, stats:pseudo
  │ └─TableReader	root		data:Selection
  │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │     └─TableFullScan	cop[tikv]	table:t3, partition:p2	keep order:false, stats:pseudo
  └─PartitionUnion(Probe)	root		
    ├─TableReader	root		data:TableFullScan
    │ └─TableFullScan	cop[tikv]	table:t1, partition:p0	keep order:false, stats:pseudo
    ├─TableReader	root		data:TableFullScan
    │ └─TableFullScan	cop[tikv]	table:t1, partition:p1	keep order:false, stats:pseudo
    ├─TableReader	root		data:TableFullScan
    │ └─TableFullScan	cop[tikv]	table:t1, partition:p2	keep order:false, stats:pseudo
    └─TableReader	root		data:TableFullScan
      └─TableFullScan	cop[tikv]	table:t1, partition:p3	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t1, t3) */ * from t2 right join (t1 left join t3 on t1.a=t3.a) on t2.b=t1.b;
id	task	access object	operator info
HashJoin	root		right outer join, left side:PartitionUnion, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)]
├─PartitionUnion(Build)	root		
│ ├─TableReader	root		data:Selection
│ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
│ │   └─TableFullScan	cop[tikv]	table:t2, partition:p0	keep order:false, stats:pseudo
│ ├─TableReader	root		data:Selection
│ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
│ │   └─TableFullScan	cop[tikv]	table:t2, partition:p1	keep order:false, stats:pseudo
│ ├─TableReader	root		data:Selection
│ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
│ │   └─TableFullScan	cop[tikv]	table:t2, partition:p2	keep order:false, stats:pseudo
│ ├─TableReader	root		data:Selection
│ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
│ │   └─TableFullScan	cop[tikv]	table:t2, partition:p3	keep order:false, stats:pseudo
│ └─TableReader	root		data:Selection
│   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
│     └─TableFullScan	cop[tikv]	table:t2, partition:p4	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		left outer join, left side:PartitionUnion, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  ├─PartitionUnion(Build)	root		
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p0	keep order:false, stats:pseudo
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p1	keep order:false, stats:pseudo
  │ └─TableReader	root		data:Selection
  │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │     └─TableFullScan	cop[tikv]	table:t3, partition:p2	keep order:false, stats:pseudo
  └─PartitionUnion(Probe)	root		
    ├─TableReader	root		data:TableFullScan
    │ └─TableFullScan	cop[tikv]	table:t1, partition:p0	keep order:false, stats:pseudo
    ├─TableReader	root		data:TableFullScan
    │ └─TableFullScan	cop[tikv]	table:t1, partition:p1	keep order:false, stats:pseudo
    ├─TableReader	root		data:TableFullScan
    │ └─TableFullScan	cop[tikv]	table:t1, partition:p2	keep order:false, stats:pseudo
    └─TableReader	root		data:TableFullScan
      └─TableFullScan	cop[tikv]	table:t1, partition:p3	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t1, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3) */ * from t2 right join (t1 join t3 on t1.a=t3.a join t4 on t3.b = t4.b) on t2.b=t1.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b
└─HashJoin	root		right outer join, left side:PartitionUnion, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)]
  ├─PartitionUnion(Build)	root		
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p0	keep order:false, stats:pseudo
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p1	keep order:false, stats:pseudo
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p2	keep order:false, stats:pseudo
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p3	keep order:false, stats:pseudo
  │ └─TableReader	root		data:Selection
  │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │     └─TableFullScan	cop[tikv]	table:t2, partition:p4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
    ├─PartitionUnion(Build)	root		
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
    │ │   └─TableFullScan	cop[tikv]	table:t4, partition:p0	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
    │ │   └─TableFullScan	cop[tikv]	table:t4, partition:p1	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
    │ │   └─TableFullScan	cop[tikv]	table:t4, partition:p2	keep order:false, stats:pseudo
    │ └─TableReader	root		data:Selection
    │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
    │     └─TableFullScan	cop[tikv]	table:t4, partition:p3	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
      ├─PartitionUnion(Build)	root		
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
      │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p0	keep order:false, stats:pseudo
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
      │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p1	keep order:false, stats:pseudo
      │ └─TableReader	root		data:Selection
      │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
      │     └─TableFullScan	cop[tikv]	table:t3, partition:p2	keep order:false, stats:pseudo
      └─PartitionUnion(Probe)	root		
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
        │   └─TableFullScan	cop[tikv]	table:t1, partition:p0	keep order:false, stats:pseudo
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
        │   └─TableFullScan	cop[tikv]	table:t1, partition:p1	keep order:false, stats:pseudo
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
        │   └─TableFullScan	cop[tikv]	table:t1, partition:p2	keep order:false, stats:pseudo
        └─TableReader	root		data:Selection
          └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
            └─TableFullScan	cop[tikv]	table:t1, partition:p3	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t4) */ * from t2 right join (t1 join t3 on t1.a=t3.a join t4 on t3.b = t4.b) on t2.b=t1.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b
└─HashJoin	root		right outer join, left side:PartitionUnion, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)]
  ├─PartitionUnion(Build)	root		
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p0	keep order:false, stats:pseudo
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p1	keep order:false, stats:pseudo
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p2	keep order:false, stats:pseudo
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p3	keep order:false, stats:pseudo
  │ └─TableReader	root		data:Selection
  │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │     └─TableFullScan	cop[tikv]	table:t2, partition:p4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
    ├─PartitionUnion(Build)	root		
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
    │ │   └─TableFullScan	cop[tikv]	table:t4, partition:p0	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
    │ │   └─TableFullScan	cop[tikv]	table:t4, partition:p1	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
    │ │   └─TableFullScan	cop[tikv]	table:t4, partition:p2	keep order:false, stats:pseudo
    │ └─TableReader	root		data:Selection
    │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
    │     └─TableFullScan	cop[tikv]	table:t4, partition:p3	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
      ├─PartitionUnion(Build)	root		
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
      │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p0	keep order:false, stats:pseudo
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
      │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p1	keep order:false, stats:pseudo
      │ └─TableReader	root		data:Selection
      │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
      │     └─TableFullScan	cop[tikv]	table:t3, partition:p2	keep order:false, stats:pseudo
      └─PartitionUnion(Probe)	root		
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
        │   └─TableFullScan	cop[tikv]	table:t1, partition:p0	keep order:false, stats:pseudo
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
        │   └─TableFullScan	cop[tikv]	table:t1, partition:p1	keep order:false, stats:pseudo
        ├─TableReader	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
        │   └─TableFullScan	cop[tikv]	table:t1, partition:p2	keep order:false, stats:pseudo
        └─TableReader	root		data:Selection
          └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
            └─TableFullScan	cop[tikv]	table:t1, partition:p3	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t4) */ * from t2 right join (t1 join t3 on t1.a=t3.a join t4 on t3.b = t4.b) on t2.b=t1.b join t5 on t2.a = t5.a join t6 on t5.b=t6.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b, .__planner__core__casetest__rule__rule_join_reorder.t5.a, .__planner__core__casetest__rule__rule_join_reorder.t5.b, .__planner__core__casetest__rule__rule_join_reorder.t6.a, .__planner__core__casetest__rule__rule_join_reorder.t6.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t5.b, .__planner__core__casetest__rule__rule_join_reorder.t6.b)]
  ├─PartitionUnion(Build)	root		
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
  │ │   └─TableFullScan	cop[tikv]	table:t6, partition:p0	keep order:false, stats:pseudo
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
  │ │   └─TableFullScan	cop[tikv]	table:t6, partition:p1	keep order:false, stats:pseudo
  │ └─TableReader	root		data:Selection
  │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
  │     └─TableFullScan	cop[tikv]	table:t6, partition:p2	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t5.a)]
    ├─PartitionUnion(Build)	root		
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
    │ │   └─TableFullScan	cop[tikv]	table:t5, partition:p0	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
    │ │   └─TableFullScan	cop[tikv]	table:t5, partition:p1	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
    │ │   └─TableFullScan	cop[tikv]	table:t5, partition:p2	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
    │ │   └─TableFullScan	cop[tikv]	table:t5, partition:p3	keep order:false, stats:pseudo
    │ └─TableReader	root		data:Selection
    │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
    │     └─TableFullScan	cop[tikv]	table:t5, partition:p4	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
      ├─PartitionUnion(Build)	root		
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
      │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p0	keep order:false, stats:pseudo
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
      │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p1	keep order:false, stats:pseudo
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
      │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p2	keep order:false, stats:pseudo
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
      │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p3	keep order:false, stats:pseudo
      │ └─TableReader	root		data:Selection
      │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
      │     └─TableFullScan	cop[tikv]	table:t2, partition:p4	keep order:false, stats:pseudo
      └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
        ├─PartitionUnion(Build)	root		
        │ ├─TableReader	root		data:Selection
        │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
        │ │   └─TableFullScan	cop[tikv]	table:t4, partition:p0	keep order:false, stats:pseudo
        │ ├─TableReader	root		data:Selection
        │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
        │ │   └─TableFullScan	cop[tikv]	table:t4, partition:p1	keep order:false, stats:pseudo
        │ ├─TableReader	root		data:Selection
        │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
        │ │   └─TableFullScan	cop[tikv]	table:t4, partition:p2	keep order:false, stats:pseudo
        │ └─TableReader	root		data:Selection
        │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
        │     └─TableFullScan	cop[tikv]	table:t4, partition:p3	keep order:false, stats:pseudo
        └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
          ├─PartitionUnion(Build)	root		
          │ ├─TableReader	root		data:Selection
          │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
          │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p0	keep order:false, stats:pseudo
          │ ├─TableReader	root		data:Selection
          │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
          │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p1	keep order:false, stats:pseudo
          │ └─TableReader	root		data:Selection
          │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
          │     └─TableFullScan	cop[tikv]	table:t3, partition:p2	keep order:false, stats:pseudo
          └─PartitionUnion(Probe)	root		
            ├─TableReader	root		data:Selection
            │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
            │   └─TableFullScan	cop[tikv]	table:t1, partition:p0	keep order:false, stats:pseudo
            ├─TableReader	root		data:Selection
            │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
            │   └─TableFullScan	cop[tikv]	table:t1, partition:p1	keep order:false, stats:pseudo
            ├─TableReader	root		data:Selection
            │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
            │   └─TableFullScan	cop[tikv]	table:t1, partition:p2	keep order:false, stats:pseudo
            └─TableReader	root		data:Selection
              └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
                └─TableFullScan	cop[tikv]	table:t1, partition:p3	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t4) leading(t5, t6) */ * from t2 right join (t1 join t3 on t1.a=t3.a join t4 on t3.b = t4.b) on t2.b=t1.b join t5 on t2.a = t5.a join t6 on t5.b=t6.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b, .__planner__core__casetest__rule__rule_join_reorder.t5.a, .__planner__core__casetest__rule__rule_join_reorder.t5.b, .__planner__core__casetest__rule__rule_join_reorder.t6.a, .__planner__core__casetest__rule__rule_join_reorder.t6.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t5.b, .__planner__core__casetest__rule__rule_join_reorder.t6.b)]
  ├─PartitionUnion(Build)	root		
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
  │ │   └─TableFullScan	cop[tikv]	table:t6, partition:p0	keep order:false, stats:pseudo
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
  │ │   └─TableFullScan	cop[tikv]	table:t6, partition:p1	keep order:false, stats:pseudo
  │ └─TableReader	root		data:Selection
  │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
  │     └─TableFullScan	cop[tikv]	table:t6, partition:p2	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t5.a)]
    ├─PartitionUnion(Build)	root		
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
    │ │   └─TableFullScan	cop[tikv]	table:t5, partition:p0	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
    │ │   └─TableFullScan	cop[tikv]	table:t5, partition:p1	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
    │ │   └─TableFullScan	cop[tikv]	table:t5, partition:p2	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
    │ │   └─TableFullScan	cop[tikv]	table:t5, partition:p3	keep order:false, stats:pseudo
    │ └─TableReader	root		data:Selection
    │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
    │     └─TableFullScan	cop[tikv]	table:t5, partition:p4	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
      ├─PartitionUnion(Build)	root		
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
      │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p0	keep order:false, stats:pseudo
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
      │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p1	keep order:false, stats:pseudo
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
      │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p2	keep order:false, stats:pseudo
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
      │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p3	keep order:false, stats:pseudo
      │ └─TableReader	root		data:Selection
      │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
      │     └─TableFullScan	cop[tikv]	table:t2, partition:p4	keep order:false, stats:pseudo
      └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
        ├─PartitionUnion(Build)	root		
        │ ├─TableReader	root		data:Selection
        │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
        │ │   └─TableFullScan	cop[tikv]	table:t4, partition:p0	keep order:false, stats:pseudo
        │ ├─TableReader	root		data:Selection
        │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
        │ │   └─TableFullScan	cop[tikv]	table:t4, partition:p1	keep order:false, stats:pseudo
        │ ├─TableReader	root		data:Selection
        │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
        │ │   └─TableFullScan	cop[tikv]	table:t4, partition:p2	keep order:false, stats:pseudo
        │ └─TableReader	root		data:Selection
        │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
        │     └─TableFullScan	cop[tikv]	table:t4, partition:p3	keep order:false, stats:pseudo
        └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
          ├─PartitionUnion(Build)	root		
          │ ├─TableReader	root		data:Selection
          │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
          │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p0	keep order:false, stats:pseudo
          │ ├─TableReader	root		data:Selection
          │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
          │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p1	keep order:false, stats:pseudo
          │ └─TableReader	root		data:Selection
          │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
          │     └─TableFullScan	cop[tikv]	table:t3, partition:p2	keep order:false, stats:pseudo
          └─PartitionUnion(Probe)	root		
            ├─TableReader	root		data:Selection
            │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
            │   └─TableFullScan	cop[tikv]	table:t1, partition:p0	keep order:false, stats:pseudo
            ├─TableReader	root		data:Selection
            │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
            │   └─TableFullScan	cop[tikv]	table:t1, partition:p1	keep order:false, stats:pseudo
            ├─TableReader	root		data:Selection
            │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
            │   └─TableFullScan	cop[tikv]	table:t1, partition:p2	keep order:false, stats:pseudo
            └─TableReader	root		data:Selection
              └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
                └─TableFullScan	cop[tikv]	table:t1, partition:p3	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t4) is inapplicable. Please specify the table names in the arguments.
Warning	1815	Hint leading(t5, t6) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t4, t5, t6) */ * from t2 right join (t1 join t3 on t1.a=t3.a join t4 on t3.b = t4.b) on t2.b=t1.b join t5 on t2.a = t5.a join t6 on t5.b=t6.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b, .__planner__core__casetest__rule__rule_join_reorder.t5.a, .__planner__core__casetest__rule__rule_join_reorder.t5.b, .__planner__core__casetest__rule__rule_join_reorder.t6.a, .__planner__core__casetest__rule__rule_join_reorder.t6.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t5.b, .__planner__core__casetest__rule__rule_join_reorder.t6.b)]
  ├─PartitionUnion(Build)	root		
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
  │ │   └─TableFullScan	cop[tikv]	table:t6, partition:p0	keep order:false, stats:pseudo
  │ ├─TableReader	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
  │ │   └─TableFullScan	cop[tikv]	table:t6, partition:p1	keep order:false, stats:pseudo
  │ └─TableReader	root		data:Selection
  │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
  │     └─TableFullScan	cop[tikv]	table:t6, partition:p2	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t5.a)]
    ├─PartitionUnion(Build)	root		
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
    │ │   └─TableFullScan	cop[tikv]	table:t5, partition:p0	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
    │ │   └─TableFullScan	cop[tikv]	table:t5, partition:p1	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
    │ │   └─TableFullScan	cop[tikv]	table:t5, partition:p2	keep order:false, stats:pseudo
    │ ├─TableReader	root		data:Selection
    │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
    │ │   └─TableFullScan	cop[tikv]	table:t5, partition:p3	keep order:false, stats:pseudo
    │ └─TableReader	root		data:Selection
    │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
    │     └─TableFullScan	cop[tikv]	table:t5, partition:p4	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
      ├─PartitionUnion(Build)	root		
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
      │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p0	keep order:false, stats:pseudo
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
      │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p1	keep order:false, stats:pseudo
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
      │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p2	keep order:false, stats:pseudo
      │ ├─TableReader	root		data:Selection
      │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
      │ │   └─TableFullScan	cop[tikv]	table:t2, partition:p3	keep order:false, stats:pseudo
      │ └─TableReader	root		data:Selection
      │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
      │     └─TableFullScan	cop[tikv]	table:t2, partition:p4	keep order:false, stats:pseudo
      └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
        ├─PartitionUnion(Build)	root		
        │ ├─TableReader	root		data:Selection
        │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
        │ │   └─TableFullScan	cop[tikv]	table:t4, partition:p0	keep order:false, stats:pseudo
        │ ├─TableReader	root		data:Selection
        │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
        │ │   └─TableFullScan	cop[tikv]	table:t4, partition:p1	keep order:false, stats:pseudo
        │ ├─TableReader	root		data:Selection
        │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
        │ │   └─TableFullScan	cop[tikv]	table:t4, partition:p2	keep order:false, stats:pseudo
        │ └─TableReader	root		data:Selection
        │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
        │     └─TableFullScan	cop[tikv]	table:t4, partition:p3	keep order:false, stats:pseudo
        └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
          ├─PartitionUnion(Build)	root		
          │ ├─TableReader	root		data:Selection
          │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
          │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p0	keep order:false, stats:pseudo
          │ ├─TableReader	root		data:Selection
          │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
          │ │   └─TableFullScan	cop[tikv]	table:t3, partition:p1	keep order:false, stats:pseudo
          │ └─TableReader	root		data:Selection
          │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
          │     └─TableFullScan	cop[tikv]	table:t3, partition:p2	keep order:false, stats:pseudo
          └─PartitionUnion(Probe)	root		
            ├─TableReader	root		data:Selection
            │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
            │   └─TableFullScan	cop[tikv]	table:t1, partition:p0	keep order:false, stats:pseudo
            ├─TableReader	root		data:Selection
            │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
            │   └─TableFullScan	cop[tikv]	table:t1, partition:p1	keep order:false, stats:pseudo
            ├─TableReader	root		data:Selection
            │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
            │   └─TableFullScan	cop[tikv]	table:t1, partition:p2	keep order:false, stats:pseudo
            └─TableReader	root		data:Selection
              └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
                └─TableFullScan	cop[tikv]	table:t1, partition:p3	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t4, t5, t6) is inapplicable. Please specify the table names in the arguments.
set tidb_cost_model_version=2;
drop table if exists t, t1, t2, t3, t4, t5, t6, t7, t8;
create table t(a int, b int, key(a));
create table t1(a int, b int, key(a));
create table t2(a int, b int, key(a));
create table t3(a int, b int, key(a));
create table t4(a int, b int, key(a));
create table t5(a int, b int, key(a));
create table t6(a int, b int, key(a));
create table t7(a int, b int, key(a));
create table t8(a int, b int, key(a));
set @@tidb_enable_outer_join_reorder=true;
explain format='plan_tree' select /*+ straight_join() */ * from t1 join t2 on t1.a=t2.a join t3 on t2.b=t3.b;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from t1 straight_join t2 straight_join t3;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		CARTESIAN inner join
  ├─TableReader(Build)	root		data:TableFullScan
  │ └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:TableFullScan
    └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from t1 join t2 on t1.a=t2.a left join t3 on t2.b=t3.b;
id	task	access object	operator info
HashJoin	root		left outer join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from t1 join t2 on t1.a=t2.a right join t3 on t2.b=t3.b;
id	task	access object	operator info
HashJoin	root		right outer join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from t1 join t2 on t1.a=t2.a cross join t3;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ leading(t2) */ * from t1 join t2 on t1.a=t2.a join t3 on t2.b=t3.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
        └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3) */ * from t1 join t2 on t1.a=t2.a join t3 on t2.b=t3.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
        └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3) */ * from t1 join t2 on t1.a=t2.a join t3 on t2.b=t3.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
        └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t2) */ * from t1 join t2 on t1.a=t2.a join t3 on t2.b=t3.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
        └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t1) */ * from t1 join t2 on t1.a=t2.a join t3 on t2.b=t3.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
        └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2) */ * from t1 straight_join t2 straight_join t3;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		CARTESIAN inner join
  ├─TableReader(Build)	root		data:TableFullScan
  │ └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:TableFullScan
    └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3) */ * from t1 straight_join t2 straight_join t3;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		CARTESIAN inner join
  ├─TableReader(Build)	root		data:TableFullScan
  │ └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:TableFullScan
    └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3) */ * from t1 straight_join t2 straight_join t3;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		CARTESIAN inner join
  ├─TableReader(Build)	root		data:TableFullScan
  │ └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:TableFullScan
    └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t2) */ * from t1 straight_join t2 straight_join t3;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		CARTESIAN inner join
  ├─TableReader(Build)	root		data:TableFullScan
  │ └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:TableFullScan
    └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t1) */ * from t1 straight_join t2 straight_join t3;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		CARTESIAN inner join
  ├─TableReader(Build)	root		data:TableFullScan
  │ └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:TableFullScan
    └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2) */ * from t1 join t2 on t1.a=t2.a left join t3 on t2.b=t3.b;
id	task	access object	operator info
HashJoin	root		left outer join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3) */ * from t1 join t2 on t1.a=t2.a left join t3 on t2.b=t3.b;
id	task	access object	operator info
HashJoin	root		left outer join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3) */ * from t1 join t2 on t1.a=t2.a left join t3 on t2.b=t3.b;
id	task	access object	operator info
HashJoin	root		left outer join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t2) */ * from t1 join t2 on t1.a=t2.a left join t3 on t2.b=t3.b;
id	task	access object	operator info
HashJoin	root		left outer join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t1) */ * from t1 join t2 on t1.a=t2.a left join t3 on t2.b=t3.b;
id	task	access object	operator info
HashJoin	root		left outer join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2) */ * from t1 join t2 on t1.a=t2.a right join t3 on t2.b=t3.b;
id	task	access object	operator info
HashJoin	root		right outer join, left side:Projection, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─Projection(Probe)	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b
  └─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
        └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3) */ * from t1 join t2 on t1.a=t2.a right join t3 on t2.b=t3.b;
id	task	access object	operator info
HashJoin	root		right outer join, left side:Projection, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─Projection(Probe)	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b
  └─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
        └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3) */ * from t1 join t2 on t1.a=t2.a right join t3 on t2.b=t3.b;
id	task	access object	operator info
HashJoin	root		right outer join, left side:Projection, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─Projection(Probe)	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b
  └─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
        └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t2) */ * from t1 join t2 on t1.a=t2.a right join t3 on t2.b=t3.b;
id	task	access object	operator info
HashJoin	root		right outer join, left side:Projection, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─Projection(Probe)	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b
  └─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
        └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t1) */ * from t1 join t2 on t1.a=t2.a right join t3 on t2.b=t3.b;
id	task	access object	operator info
HashJoin	root		right outer join, left side:Projection, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─Projection(Probe)	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b
  └─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
        └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2) */ * from t1 join t2 on t1.a=t2.a cross join t3;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3) */ * from t1 join t2 on t1.a=t2.a cross join t3;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3) */ * from t1 join t2 on t1.a=t2.a cross join t3;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t2) */ * from t1 join t2 on t1.a=t2.a cross join t3;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t1) */ * from t1 join t2 on t1.a=t2.a cross join t3;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t1) */ * from t1 left join t2 on t1.a=t2.a cross join t3;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		left outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:TableFullScan
    └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t1) */ * from t1 right join t2 on t1.a=t2.a cross join t3;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		right outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
  │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:TableFullScan
    └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t1) */ * from t1 right join t2 on t1.a=t2.a right join t3 on t2.b=t3.b;
id	task	access object	operator info
HashJoin	root		right outer join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		right outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1) */ * from t1 left join t2 on t1.a=t2.a straight_join t3;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		left outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:TableFullScan
    └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1) */ * from t1 right join t2 on t1.a=t2.a straight_join t3;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		right outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
  │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:TableFullScan
    └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1) */ * from t1 left join t2 on t1.a=t2.a cross join t3;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		left outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:TableFullScan
    └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1) */ * from t1 right join t2 on t1.a=t2.a cross join t3;
id	task	access object	operator info
HashJoin	root		CARTESIAN inner join
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		right outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
  │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:TableFullScan
    └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1) is inapplicable. Please specify the table names in the arguments.
set tidb_cost_model_version=2;
drop table if exists t, t1, t2, t3, t4, t5, t6, t7, t8;
create table t(a int, b int, key(a));
create table t1(a int, b int, key(a));
create table t2(a int, b int, key(a));
create table t3(a int, b int, key(a));
create table t4(a int, b int, key(a));
create table t5(a int, b int, key(a));
create table t6(a int, b int, key(a));
create table t7(a int, b int, key(a));
create table t8(a int, b int, key(a));
insert into t3 values(1, 1), (2, 2), (3, 3);
analyze table t3 all columns;
explain format='plan_tree' select /*+ straight_join() */ * from t1 join t2 on t1.a=t2.a where t1.a in (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b) eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
      └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from t1 join t2 on t1.a=t2.a where t1.a not in (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		anti semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)], other cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from t1 join t2 on t1.a=t2.a where exists (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
      └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from t1 join t2 on t1.a=t2.a where not exists (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		anti semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ t1.a, (select min(t1.a) from t2 where t2.a > t1.a) from t1;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, Column#11->Column#13
└─Apply	root		CARTESIAN left outer join, left side:HashAgg
  ├─HashAgg(Build)	root		funcs:min(.__planner__core__casetest__rule__rule_join_reorder.t1.a)->Column#7, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t1.a)->.__planner__core__casetest__rule__rule_join_reorder.t1.a
  │ └─IndexReader	root		index:IndexFullScan
  │   └─IndexFullScan	cop[tikv]	table:t1, index:a(a)	keep order:false, stats:pseudo
  └─MaxOneRow(Probe)	root		
    └─Projection	root		Column#7->Column#11
      └─IndexReader	root		index:Selection
        └─Selection	cop[tikv]		gt(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
          └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ t1.a, (select min(t1.a) from t2 where t2.a > t1.a) from t1 join t3 on t1.a = t3.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, Column#14->Column#16
└─Apply	root		CARTESIAN left outer join, left side:StreamAgg
  ├─StreamAgg(Build)	root		funcs:min(.__planner__core__casetest__rule__rule_join_reorder.t1.a)->Column#10, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t1.a)->.__planner__core__casetest__rule__rule_join_reorder.t1.a
  │ └─IndexHashJoin	root		inner join, inner:IndexReader, outer key:.__planner__core__casetest__rule__rule_join_reorder.t3.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
  │   ├─IndexReader(Build)	root		index:IndexFullScan
  │   │ └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:false
  │   └─IndexReader(Probe)	root		index:Selection
  │     └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
  │       └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)], keep order:false, stats:pseudo
  └─MaxOneRow(Probe)	root		
    └─Projection	root		Column#10->Column#14
      └─IndexReader	root		index:Selection
        └─Selection	cop[tikv]		gt(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
          └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from t1 join t2 on t1.a=t2.a where t1.a in (select t3.a from t3);
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
├─StreamAgg(Build)	root		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.a, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t3.a)->.__planner__core__casetest__rule__rule_join_reorder.t3.a
│ └─IndexReader	root		index:StreamAgg
│   └─StreamAgg	cop[tikv]		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.a, 
│     └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:true
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from t1 join t2 on t1.a=t2.a where t1.a not in (select t3.a from t3);
id	task	access object	operator info
HashJoin	root		Null-aware anti semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
├─IndexReader(Build)	root		index:IndexFullScan
│ └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from t1 join t2 on t1.a=t2.a where exists (select t3.a from t3);
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
│   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:Selection
  └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
    └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
ScalarSubQuery	root		Output: ScalarQueryCol#10, ScalarQueryCol#11, ScalarQueryCol#12
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t3	keep order:false
explain format='plan_tree' select /*+ straight_join() */ * from t1 join t2 on t1.a=t2.a where not exists (select t3.a from t3);
id	task	access object	operator info
TableDual	root		rows:0
ScalarSubQuery	root		Output: ScalarQueryCol#10, ScalarQueryCol#11, ScalarQueryCol#12
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t3	keep order:false
explain format='plan_tree' select /*+ straight_join() */ * from t1 join (select * from t4) t2 on t1.a=t2.a join t3 on t2.b=t3.b;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from (select * from t4) t1 join t2 on t1.a=t2.a join t3 on t2.b=t3.b;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
      └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ * from t1 join t2 on t1.a=t2.a join (select * from t4) t3 on t2.b=t3.b;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
│   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ t1.a, (select min(t2.a) from t2) from t1;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, ScalarQueryCol#11(<nil>)->Column#12
└─IndexReader	root		index:IndexFullScan
  └─IndexFullScan	cop[tikv]	table:t1, index:a(a)	keep order:false, stats:pseudo
ScalarSubQuery	root		Output: ScalarQueryCol#11
└─MaxOneRow	root		
  └─StreamAgg	root		funcs:min(.__planner__core__casetest__rule__rule_join_reorder.t2.a)->Column#10
    └─Limit	root		offset:0, count:1
      └─IndexReader	root		index:Limit
        └─Limit	cop[tikv]		offset:0, count:1
          └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:true, stats:pseudo
explain format='plan_tree' select /*+ straight_join() */ t1.a, (select min(t2.a) from t2) from t1 join t3 on t1.a = t3.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, ScalarQueryCol#14(<nil>)->Column#15
└─IndexHashJoin	root		inner join, inner:IndexReader, outer key:.__planner__core__casetest__rule__rule_join_reorder.t3.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
  ├─IndexReader(Build)	root		index:IndexFullScan
  │ └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:false
  └─IndexReader(Probe)	root		index:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)], keep order:false, stats:pseudo
ScalarSubQuery	root		Output: ScalarQueryCol#14
└─MaxOneRow	root		
  └─StreamAgg	root		funcs:min(.__planner__core__casetest__rule__rule_join_reorder.t2.a)->Column#13
    └─Limit	root		offset:0, count:1
      └─IndexReader	root		index:Limit
        └─Limit	cop[tikv]		offset:0, count:1
          └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:true, stats:pseudo
explain format='plan_tree' select /*+ leading(t4) */ * from t1 join t2 on t1.a=t2.a join t4 on t1.b = t4.b where t1.a in (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b) eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2) */ * from t1 join t2 on t1.a=t2.a where t1.a in (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b) eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
      └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3@sel_2) */ * from t1 join t2 on t1.a=t2.a where t1.a in (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b) eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
      └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1, t3@sel_2) */ * from t1 join t2 on t1.a=t2.a where t1.a in (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b) eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
      └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1, t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2, t2) */ * from t1 join t2 on t1.a=t2.a where t1.a in (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b) eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
      └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2, t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2, t1) */ * from t1 join t2 on t1.a=t2.a where t1.a in (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b) eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
      └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4) */ * from t1 join t2 on t1.a=t2.a join t4 on t1.b = t4.b where t1.a not in (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		anti semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)], other cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2) */ * from t1 join t2 on t1.a=t2.a where t1.a not in (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		anti semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)], other cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3@sel_2) */ * from t1 join t2 on t1.a=t2.a where t1.a not in (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		anti semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)], other cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1, t3@sel_2) */ * from t1 join t2 on t1.a=t2.a where t1.a not in (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		anti semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)], other cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1, t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2, t2) */ * from t1 join t2 on t1.a=t2.a where t1.a not in (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		anti semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)], other cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2, t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2, t1) */ * from t1 join t2 on t1.a=t2.a where t1.a not in (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		anti semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)], other cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4) */ * from t1 join t2 on t1.a=t2.a join t4 on t1.b = t4.b where exists (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2) */ * from t1 join t2 on t1.a=t2.a where exists (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
      └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3@sel_2) */ * from t1 join t2 on t1.a=t2.a where exists (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
      └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1, t3@sel_2) */ * from t1 join t2 on t1.a=t2.a where exists (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
      └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1, t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2, t2) */ * from t1 join t2 on t1.a=t2.a where exists (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
      └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2, t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2, t1) */ * from t1 join t2 on t1.a=t2.a where exists (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
      └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4) */ * from t1 join t2 on t1.a=t2.a join t4 on t1.b = t4.b where not exists (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		anti semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2) */ * from t1 join t2 on t1.a=t2.a where not exists (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		anti semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3@sel_2) */ * from t1 join t2 on t1.a=t2.a where not exists (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		anti semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1, t3@sel_2) */ * from t1 join t2 on t1.a=t2.a where not exists (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		anti semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1, t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2, t2) */ * from t1 join t2 on t1.a=t2.a where not exists (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		anti semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2, t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2, t1) */ * from t1 join t2 on t1.a=t2.a where not exists (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		anti semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1) */ t1.a, (select min(t1.a) from t2 where t2.a > t1.a) from t1 join t3 on t1.a = t3.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, Column#14->Column#16
└─Apply	root		CARTESIAN left outer join, left side:StreamAgg
  ├─StreamAgg(Build)	root		funcs:min(.__planner__core__casetest__rule__rule_join_reorder.t1.a)->Column#10, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t1.a)->.__planner__core__casetest__rule__rule_join_reorder.t1.a
  │ └─IndexHashJoin	root		inner join, inner:IndexReader, outer key:.__planner__core__casetest__rule__rule_join_reorder.t3.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
  │   ├─IndexReader(Build)	root		index:IndexFullScan
  │   │ └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:false
  │   └─IndexReader(Probe)	root		index:Selection
  │     └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
  │       └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)], keep order:false, stats:pseudo
  └─MaxOneRow(Probe)	root		
    └─Projection	root		Column#10->Column#14
      └─IndexReader	root		index:Selection
        └─Selection	cop[tikv]		gt(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
          └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2) */ t1.a, (select min(t1.a) from t2 where t2.a > t1.a) from t1 join t3 on t1.a = t3.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, Column#14->Column#16
└─Apply	root		CARTESIAN left outer join, left side:StreamAgg
  ├─StreamAgg(Build)	root		funcs:min(.__planner__core__casetest__rule__rule_join_reorder.t1.a)->Column#10, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t1.a)->.__planner__core__casetest__rule__rule_join_reorder.t1.a
  │ └─IndexHashJoin	root		inner join, inner:IndexReader, outer key:.__planner__core__casetest__rule__rule_join_reorder.t3.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
  │   ├─IndexReader(Build)	root		index:IndexFullScan
  │   │ └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:false
  │   └─IndexReader(Probe)	root		index:Selection
  │     └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
  │       └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)], keep order:false, stats:pseudo
  └─MaxOneRow(Probe)	root		
    └─Projection	root		Column#10->Column#14
      └─IndexReader	root		index:Selection
        └─Selection	cop[tikv]		gt(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
          └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3@sel_2) */ t1.a, (select min(t1.a) from t2 where t2.a > t1.a) from t1 join t3 on t1.a = t3.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, Column#14->Column#16
└─Apply	root		CARTESIAN left outer join, left side:StreamAgg
  ├─StreamAgg(Build)	root		funcs:min(.__planner__core__casetest__rule__rule_join_reorder.t1.a)->Column#10, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t1.a)->.__planner__core__casetest__rule__rule_join_reorder.t1.a
  │ └─IndexHashJoin	root		inner join, inner:IndexReader, outer key:.__planner__core__casetest__rule__rule_join_reorder.t3.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
  │   ├─IndexReader(Build)	root		index:IndexFullScan
  │   │ └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:false
  │   └─IndexReader(Probe)	root		index:Selection
  │     └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
  │       └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)], keep order:false, stats:pseudo
  └─MaxOneRow(Probe)	root		
    └─Projection	root		Column#10->Column#14
      └─IndexReader	root		index:Selection
        └─Selection	cop[tikv]		gt(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
          └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1, t3@sel_2) */ t1.a, (select min(t1.a) from t2 where t2.a > t1.a) from t1 join t3 on t1.a = t3.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, Column#14->Column#16
└─Apply	root		CARTESIAN left outer join, left side:StreamAgg
  ├─StreamAgg(Build)	root		funcs:min(.__planner__core__casetest__rule__rule_join_reorder.t1.a)->Column#10, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t1.a)->.__planner__core__casetest__rule__rule_join_reorder.t1.a
  │ └─IndexHashJoin	root		inner join, inner:IndexReader, outer key:.__planner__core__casetest__rule__rule_join_reorder.t3.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
  │   ├─IndexReader(Build)	root		index:IndexFullScan
  │   │ └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:false
  │   └─IndexReader(Probe)	root		index:Selection
  │     └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
  │       └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)], keep order:false, stats:pseudo
  └─MaxOneRow(Probe)	root		
    └─Projection	root		Column#10->Column#14
      └─IndexReader	root		index:Selection
        └─Selection	cop[tikv]		gt(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
          └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1, t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2, t2) */ t1.a, (select min(t1.a) from t2 where t2.a > t1.a) from t1 join t3 on t1.a = t3.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, Column#14->Column#16
└─Apply	root		CARTESIAN left outer join, left side:StreamAgg
  ├─StreamAgg(Build)	root		funcs:min(.__planner__core__casetest__rule__rule_join_reorder.t1.a)->Column#10, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t1.a)->.__planner__core__casetest__rule__rule_join_reorder.t1.a
  │ └─IndexHashJoin	root		inner join, inner:IndexReader, outer key:.__planner__core__casetest__rule__rule_join_reorder.t3.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
  │   ├─IndexReader(Build)	root		index:IndexFullScan
  │   │ └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:false
  │   └─IndexReader(Probe)	root		index:Selection
  │     └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
  │       └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)], keep order:false, stats:pseudo
  └─MaxOneRow(Probe)	root		
    └─Projection	root		Column#10->Column#14
      └─IndexReader	root		index:Selection
        └─Selection	cop[tikv]		gt(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
          └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2, t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2, t1) */ t1.a, (select min(t1.a) from t2 where t2.a > t1.a) from t1 join t3 on t1.a = t3.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, Column#14->Column#16
└─Apply	root		CARTESIAN left outer join, left side:StreamAgg
  ├─StreamAgg(Build)	root		funcs:min(.__planner__core__casetest__rule__rule_join_reorder.t1.a)->Column#10, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t1.a)->.__planner__core__casetest__rule__rule_join_reorder.t1.a
  │ └─IndexHashJoin	root		inner join, inner:IndexReader, outer key:.__planner__core__casetest__rule__rule_join_reorder.t3.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
  │   ├─IndexReader(Build)	root		index:IndexFullScan
  │   │ └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:false
  │   └─IndexReader(Probe)	root		index:Selection
  │     └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
  │       └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)], keep order:false, stats:pseudo
  └─MaxOneRow(Probe)	root		
    └─Projection	root		Column#10->Column#14
      └─IndexReader	root		index:Selection
        └─Selection	cop[tikv]		gt(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
          └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4, t3@sel_2) */ * from t1 join t2 on t1.a=t2.a join t4 on t1.b = t4.b where t1.a = (select max(t3.a) from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
├─IndexHashJoin(Build)	root		inner join, inner:IndexLookUp, outer key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t2.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)
│ ├─IndexHashJoin(Build)	root		inner join, inner:IndexLookUp, outer key:Column#13, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b), eq(Column#13, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
│ │ ├─Selection(Build)	root		not(isnull(Column#13))
│ │ │ └─HashAgg	root		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.b, funcs:max(.__planner__core__casetest__rule__rule_join_reorder.t3.a)->Column#13, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t3.b)->.__planner__core__casetest__rule__rule_join_reorder.t3.b
│ │ │   └─TableReader	root		data:Selection
│ │ │     └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│ │ │       └─TableFullScan	cop[tikv]	table:t3	keep order:false
│ │ └─IndexLookUp(Probe)	root		
│ │   ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
│ │   │ └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, Column#13)], keep order:false, stats:pseudo
│ │   └─Selection(Probe)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
│ │     └─TableRowIDScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
│ └─IndexLookUp(Probe)	root		
│   ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
│   │ └─IndexRangeScan	cop[tikv]	table:t2, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)], keep order:false, stats:pseudo
│   └─TableRowIDScan(Probe)	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:Selection
  └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
    └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4, t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4) */ * from t1 join t2 on t1.a=t2.a join t4 on t1.b = t4.b where t1.a = (select max(t3.a) from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
├─IndexHashJoin(Build)	root		inner join, inner:IndexLookUp, outer key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t2.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)
│ ├─IndexHashJoin(Build)	root		inner join, inner:IndexLookUp, outer key:Column#13, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b), eq(Column#13, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
│ │ ├─Selection(Build)	root		not(isnull(Column#13))
│ │ │ └─HashAgg	root		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.b, funcs:max(.__planner__core__casetest__rule__rule_join_reorder.t3.a)->Column#13, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t3.b)->.__planner__core__casetest__rule__rule_join_reorder.t3.b
│ │ │   └─TableReader	root		data:Selection
│ │ │     └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│ │ │       └─TableFullScan	cop[tikv]	table:t3	keep order:false
│ │ └─IndexLookUp(Probe)	root		
│ │   ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
│ │   │ └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, Column#13)], keep order:false, stats:pseudo
│ │   └─Selection(Probe)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
│ │     └─TableRowIDScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
│ └─IndexLookUp(Probe)	root		
│   ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
│   │ └─IndexRangeScan	cop[tikv]	table:t2, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)], keep order:false, stats:pseudo
│   └─TableRowIDScan(Probe)	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:Selection
  └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
    └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2) */ * from t1 join t2 on t1.a=t2.a join t4 on t1.b = t4.b where t1.a = (select max(t3.a) from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
├─IndexHashJoin(Build)	root		inner join, inner:IndexLookUp, outer key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t2.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)
│ ├─IndexHashJoin(Build)	root		inner join, inner:IndexLookUp, outer key:Column#13, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b), eq(Column#13, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
│ │ ├─Selection(Build)	root		not(isnull(Column#13))
│ │ │ └─HashAgg	root		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.b, funcs:max(.__planner__core__casetest__rule__rule_join_reorder.t3.a)->Column#13, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t3.b)->.__planner__core__casetest__rule__rule_join_reorder.t3.b
│ │ │   └─TableReader	root		data:Selection
│ │ │     └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│ │ │       └─TableFullScan	cop[tikv]	table:t3	keep order:false
│ │ └─IndexLookUp(Probe)	root		
│ │   ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
│ │   │ └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, Column#13)], keep order:false, stats:pseudo
│ │   └─Selection(Probe)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
│ │     └─TableRowIDScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
│ └─IndexLookUp(Probe)	root		
│   ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
│   │ └─IndexRangeScan	cop[tikv]	table:t2, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)], keep order:false, stats:pseudo
│   └─TableRowIDScan(Probe)	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:Selection
  └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
    └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2, t2) */ * from t1 join t2 on t1.a=t2.a join t4 on t1.b = t4.b where t1.a = (select max(t3.a) from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
├─IndexHashJoin(Build)	root		inner join, inner:IndexLookUp, outer key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t2.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)
│ ├─IndexHashJoin(Build)	root		inner join, inner:IndexLookUp, outer key:Column#13, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b), eq(Column#13, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
│ │ ├─Selection(Build)	root		not(isnull(Column#13))
│ │ │ └─HashAgg	root		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.b, funcs:max(.__planner__core__casetest__rule__rule_join_reorder.t3.a)->Column#13, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t3.b)->.__planner__core__casetest__rule__rule_join_reorder.t3.b
│ │ │   └─TableReader	root		data:Selection
│ │ │     └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│ │ │       └─TableFullScan	cop[tikv]	table:t3	keep order:false
│ │ └─IndexLookUp(Probe)	root		
│ │   ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
│ │   │ └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, Column#13)], keep order:false, stats:pseudo
│ │   └─Selection(Probe)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
│ │     └─TableRowIDScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
│ └─IndexLookUp(Probe)	root		
│   ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
│   │ └─IndexRangeScan	cop[tikv]	table:t2, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)], keep order:false, stats:pseudo
│   └─TableRowIDScan(Probe)	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:Selection
  └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
    └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2, t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4, t3@sel_2) */ * from t1 join t2 on t1.a=t2.a join t4 on t1.b = t4.b where t1.a > (select min(t3.a) from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
├─IndexHashJoin(Build)	root		inner join, inner:IndexLookUp, outer key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t2.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)
│ ├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)], other cond:gt(.__planner__core__casetest__rule__rule_join_reorder.t1.a, Column#13)
│ │ ├─Selection(Build)	root		not(isnull(Column#13))
│ │ │ └─HashAgg	root		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.b, funcs:min(.__planner__core__casetest__rule__rule_join_reorder.t3.a)->Column#13, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t3.b)->.__planner__core__casetest__rule__rule_join_reorder.t3.b
│ │ │   └─TableReader	root		data:Selection
│ │ │     └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│ │ │       └─TableFullScan	cop[tikv]	table:t3	keep order:false
│ │ └─TableReader(Probe)	root		data:Selection
│ │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
│ │     └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
│ └─IndexLookUp(Probe)	root		
│   ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
│   │ └─IndexRangeScan	cop[tikv]	table:t2, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)], keep order:false, stats:pseudo
│   └─TableRowIDScan(Probe)	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:Selection
  └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
    └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4, t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4) */ * from t1 join t2 on t1.a=t2.a join t4 on t1.b = t4.b where t1.a > (select min(t3.a) from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
├─IndexHashJoin(Build)	root		inner join, inner:IndexLookUp, outer key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t2.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)
│ ├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)], other cond:gt(.__planner__core__casetest__rule__rule_join_reorder.t1.a, Column#13)
│ │ ├─Selection(Build)	root		not(isnull(Column#13))
│ │ │ └─HashAgg	root		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.b, funcs:min(.__planner__core__casetest__rule__rule_join_reorder.t3.a)->Column#13, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t3.b)->.__planner__core__casetest__rule__rule_join_reorder.t3.b
│ │ │   └─TableReader	root		data:Selection
│ │ │     └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│ │ │       └─TableFullScan	cop[tikv]	table:t3	keep order:false
│ │ └─TableReader(Probe)	root		data:Selection
│ │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
│ │     └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
│ └─IndexLookUp(Probe)	root		
│   ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
│   │ └─IndexRangeScan	cop[tikv]	table:t2, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)], keep order:false, stats:pseudo
│   └─TableRowIDScan(Probe)	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:Selection
  └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
    └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2) */ * from t1 join t2 on t1.a=t2.a join t4 on t1.b = t4.b where t1.a > (select min(t3.a) from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
├─IndexHashJoin(Build)	root		inner join, inner:IndexLookUp, outer key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t2.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)
│ ├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)], other cond:gt(.__planner__core__casetest__rule__rule_join_reorder.t1.a, Column#13)
│ │ ├─Selection(Build)	root		not(isnull(Column#13))
│ │ │ └─HashAgg	root		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.b, funcs:min(.__planner__core__casetest__rule__rule_join_reorder.t3.a)->Column#13, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t3.b)->.__planner__core__casetest__rule__rule_join_reorder.t3.b
│ │ │   └─TableReader	root		data:Selection
│ │ │     └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│ │ │       └─TableFullScan	cop[tikv]	table:t3	keep order:false
│ │ └─TableReader(Probe)	root		data:Selection
│ │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
│ │     └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
│ └─IndexLookUp(Probe)	root		
│   ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
│   │ └─IndexRangeScan	cop[tikv]	table:t2, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)], keep order:false, stats:pseudo
│   └─TableRowIDScan(Probe)	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:Selection
  └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
    └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2, t2) */ * from t1 join t2 on t1.a=t2.a join t4 on t1.b = t4.b where t1.a > (select min(t3.a) from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
├─IndexHashJoin(Build)	root		inner join, inner:IndexLookUp, outer key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t2.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)
│ ├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)], other cond:gt(.__planner__core__casetest__rule__rule_join_reorder.t1.a, Column#13)
│ │ ├─Selection(Build)	root		not(isnull(Column#13))
│ │ │ └─HashAgg	root		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.b, funcs:min(.__planner__core__casetest__rule__rule_join_reorder.t3.a)->Column#13, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t3.b)->.__planner__core__casetest__rule__rule_join_reorder.t3.b
│ │ │   └─TableReader	root		data:Selection
│ │ │     └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│ │ │       └─TableFullScan	cop[tikv]	table:t3	keep order:false
│ │ └─TableReader(Probe)	root		data:Selection
│ │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
│ │     └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
│ └─IndexLookUp(Probe)	root		
│   ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
│   │ └─IndexRangeScan	cop[tikv]	table:t2, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)], keep order:false, stats:pseudo
│   └─TableRowIDScan(Probe)	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:Selection
  └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
    └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2, t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4) */ * from t1 join t2 on t1.a=t2.a join t4 on t1.b = t4.b where t1.a in (select t3.a from t3);
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
├─IndexHashJoin(Build)	root		inner join, inner:IndexLookUp, outer key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t2.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)
│ ├─IndexHashJoin(Build)	root		inner join, inner:IndexLookUp, outer key:.__planner__core__casetest__rule__rule_join_reorder.t3.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
│ │ ├─StreamAgg(Build)	root		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.a, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t3.a)->.__planner__core__casetest__rule__rule_join_reorder.t3.a
│ │ │ └─IndexReader	root		index:StreamAgg
│ │ │   └─StreamAgg	cop[tikv]		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.a, 
│ │ │     └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:true
│ │ └─IndexLookUp(Probe)	root		
│ │   ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
│ │   │ └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)], keep order:false, stats:pseudo
│ │   └─Selection(Probe)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
│ │     └─TableRowIDScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
│ └─IndexLookUp(Probe)	root		
│   ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
│   │ └─IndexRangeScan	cop[tikv]	table:t2, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)], keep order:false, stats:pseudo
│   └─TableRowIDScan(Probe)	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:Selection
  └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
    └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2) */ * from t1 join t2 on t1.a=t2.a where t1.a in (select t3.a from t3);
id	task	access object	operator info
IndexHashJoin	root		inner join, inner:IndexLookUp, outer key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t2.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)
├─IndexHashJoin(Build)	root		inner join, inner:IndexLookUp, outer key:.__planner__core__casetest__rule__rule_join_reorder.t3.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
│ ├─StreamAgg(Build)	root		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.a, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t3.a)->.__planner__core__casetest__rule__rule_join_reorder.t3.a
│ │ └─IndexReader	root		index:StreamAgg
│ │   └─StreamAgg	cop[tikv]		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.a, 
│ │     └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:true
│ └─IndexLookUp(Probe)	root		
│   ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
│   │ └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)], keep order:false, stats:pseudo
│   └─TableRowIDScan(Probe)	cop[tikv]	table:t1	keep order:false, stats:pseudo
└─IndexLookUp(Probe)	root		
  ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │ └─IndexRangeScan	cop[tikv]	table:t2, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)], keep order:false, stats:pseudo
  └─TableRowIDScan(Probe)	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3@sel_2) */ * from t1 join t2 on t1.a=t2.a where t1.a in (select t3.a from t3);
id	task	access object	operator info
IndexHashJoin	root		inner join, inner:IndexLookUp, outer key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t2.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)
├─IndexHashJoin(Build)	root		inner join, inner:IndexLookUp, outer key:.__planner__core__casetest__rule__rule_join_reorder.t3.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
│ ├─StreamAgg(Build)	root		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.a, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t3.a)->.__planner__core__casetest__rule__rule_join_reorder.t3.a
│ │ └─IndexReader	root		index:StreamAgg
│ │   └─StreamAgg	cop[tikv]		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.a, 
│ │     └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:true
│ └─IndexLookUp(Probe)	root		
│   ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
│   │ └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)], keep order:false, stats:pseudo
│   └─TableRowIDScan(Probe)	cop[tikv]	table:t1	keep order:false, stats:pseudo
└─IndexLookUp(Probe)	root		
  ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │ └─IndexRangeScan	cop[tikv]	table:t2, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)], keep order:false, stats:pseudo
  └─TableRowIDScan(Probe)	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1, t3@sel_2) */ * from t1 join t2 on t1.a=t2.a where t1.a in (select t3.a from t3);
id	task	access object	operator info
IndexHashJoin	root		inner join, inner:IndexLookUp, outer key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t2.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)
├─IndexHashJoin(Build)	root		inner join, inner:IndexLookUp, outer key:.__planner__core__casetest__rule__rule_join_reorder.t3.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
│ ├─StreamAgg(Build)	root		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.a, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t3.a)->.__planner__core__casetest__rule__rule_join_reorder.t3.a
│ │ └─IndexReader	root		index:StreamAgg
│ │   └─StreamAgg	cop[tikv]		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.a, 
│ │     └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:true
│ └─IndexLookUp(Probe)	root		
│   ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
│   │ └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)], keep order:false, stats:pseudo
│   └─TableRowIDScan(Probe)	cop[tikv]	table:t1	keep order:false, stats:pseudo
└─IndexLookUp(Probe)	root		
  ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │ └─IndexRangeScan	cop[tikv]	table:t2, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)], keep order:false, stats:pseudo
  └─TableRowIDScan(Probe)	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1, t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2, t2) */ * from t1 join t2 on t1.a=t2.a where t1.a in (select t3.a from t3);
id	task	access object	operator info
IndexHashJoin	root		inner join, inner:IndexLookUp, outer key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t2.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)
├─IndexHashJoin(Build)	root		inner join, inner:IndexLookUp, outer key:.__planner__core__casetest__rule__rule_join_reorder.t3.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
│ ├─StreamAgg(Build)	root		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.a, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t3.a)->.__planner__core__casetest__rule__rule_join_reorder.t3.a
│ │ └─IndexReader	root		index:StreamAgg
│ │   └─StreamAgg	cop[tikv]		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.a, 
│ │     └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:true
│ └─IndexLookUp(Probe)	root		
│   ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
│   │ └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)], keep order:false, stats:pseudo
│   └─TableRowIDScan(Probe)	cop[tikv]	table:t1	keep order:false, stats:pseudo
└─IndexLookUp(Probe)	root		
  ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │ └─IndexRangeScan	cop[tikv]	table:t2, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)], keep order:false, stats:pseudo
  └─TableRowIDScan(Probe)	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2, t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2, t1) */ * from t1 join t2 on t1.a=t2.a where t1.a in (select t3.a from t3);
id	task	access object	operator info
IndexHashJoin	root		inner join, inner:IndexLookUp, outer key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t2.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)
├─IndexHashJoin(Build)	root		inner join, inner:IndexLookUp, outer key:.__planner__core__casetest__rule__rule_join_reorder.t3.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
│ ├─StreamAgg(Build)	root		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.a, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t3.a)->.__planner__core__casetest__rule__rule_join_reorder.t3.a
│ │ └─IndexReader	root		index:StreamAgg
│ │   └─StreamAgg	cop[tikv]		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.a, 
│ │     └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:true
│ └─IndexLookUp(Probe)	root		
│   ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
│   │ └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)], keep order:false, stats:pseudo
│   └─TableRowIDScan(Probe)	cop[tikv]	table:t1	keep order:false, stats:pseudo
└─IndexLookUp(Probe)	root		
  ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │ └─IndexRangeScan	cop[tikv]	table:t2, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)], keep order:false, stats:pseudo
  └─TableRowIDScan(Probe)	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4) */ * from t1 join t2 on t1.a=t2.a join t4 on t1.b = t4.b where t1.a not in (select t3.a from t3);
id	task	access object	operator info
HashJoin	root		Null-aware anti semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
├─IndexReader(Build)	root		index:IndexFullScan
│ └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2) */ * from t1 join t2 on t1.a=t2.a where t1.a not in (select t3.a from t3);
id	task	access object	operator info
HashJoin	root		Null-aware anti semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
├─IndexReader(Build)	root		index:IndexFullScan
│ └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3@sel_2) */ * from t1 join t2 on t1.a=t2.a where t1.a not in (select t3.a from t3);
id	task	access object	operator info
HashJoin	root		Null-aware anti semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
├─IndexReader(Build)	root		index:IndexFullScan
│ └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1, t3@sel_2) */ * from t1 join t2 on t1.a=t2.a where t1.a not in (select t3.a from t3);
id	task	access object	operator info
HashJoin	root		Null-aware anti semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
├─IndexReader(Build)	root		index:IndexFullScan
│ └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1, t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2, t2) */ * from t1 join t2 on t1.a=t2.a where t1.a not in (select t3.a from t3);
id	task	access object	operator info
HashJoin	root		Null-aware anti semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
├─IndexReader(Build)	root		index:IndexFullScan
│ └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2, t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2, t1) */ * from t1 join t2 on t1.a=t2.a where t1.a not in (select t3.a from t3);
id	task	access object	operator info
HashJoin	root		Null-aware anti semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
├─IndexReader(Build)	root		index:IndexFullScan
│ └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:false
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4) */ * from t1 join t2 on t1.a=t2.a join t4 on t1.b = t4.b where exists (select t3.a from t3);
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
│   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
      └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
ScalarSubQuery	root		Output: ScalarQueryCol#13, ScalarQueryCol#14, ScalarQueryCol#15
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t3	keep order:false
Level	Code	Message
Warning	1815	Hint leading(t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2) */ * from t1 join t2 on t1.a=t2.a where exists (select t3.a from t3);
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
│   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:Selection
  └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
    └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
ScalarSubQuery	root		Output: ScalarQueryCol#10, ScalarQueryCol#11, ScalarQueryCol#12
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t3	keep order:false
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3@sel_2) */ * from t1 join t2 on t1.a=t2.a where exists (select t3.a from t3);
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
│   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:Selection
  └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
    └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
ScalarSubQuery	root		Output: ScalarQueryCol#10, ScalarQueryCol#11, ScalarQueryCol#12
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t3	keep order:false
Level	Code	Message
Warning	1815	Hint leading(t2, t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1, t3@sel_2) */ * from t1 join t2 on t1.a=t2.a where exists (select t3.a from t3);
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
│   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:Selection
  └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
    └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
ScalarSubQuery	root		Output: ScalarQueryCol#10, ScalarQueryCol#11, ScalarQueryCol#12
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t3	keep order:false
Level	Code	Message
Warning	1815	Hint leading(t1, t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2, t2) */ * from t1 join t2 on t1.a=t2.a where exists (select t3.a from t3);
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
│   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:Selection
  └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
    └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
ScalarSubQuery	root		Output: ScalarQueryCol#10, ScalarQueryCol#11, ScalarQueryCol#12
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t3	keep order:false
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2, t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2, t1) */ * from t1 join t2 on t1.a=t2.a where exists (select t3.a from t3);
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
│   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:Selection
  └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
    └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
ScalarSubQuery	root		Output: ScalarQueryCol#10, ScalarQueryCol#11, ScalarQueryCol#12
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t3	keep order:false
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4) */ * from t1 join t2 on t1.a=t2.a join t4 on t1.b = t4.b where not exists (select t3.a from t3);
id	task	access object	operator info
TableDual	root		rows:0
ScalarSubQuery	root		Output: ScalarQueryCol#13, ScalarQueryCol#14, ScalarQueryCol#15
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t3	keep order:false
Level	Code	Message
Warning	1815	Hint leading(t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2) */ * from t1 join t2 on t1.a=t2.a where not exists (select t3.a from t3);
id	task	access object	operator info
TableDual	root		rows:0
ScalarSubQuery	root		Output: ScalarQueryCol#10, ScalarQueryCol#11, ScalarQueryCol#12
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t3	keep order:false
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3@sel_2) */ * from t1 join t2 on t1.a=t2.a where not exists (select t3.a from t3);
id	task	access object	operator info
TableDual	root		rows:0
ScalarSubQuery	root		Output: ScalarQueryCol#10, ScalarQueryCol#11, ScalarQueryCol#12
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t3	keep order:false
Level	Code	Message
Warning	1815	Hint leading(t2, t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1, t3@sel_2) */ * from t1 join t2 on t1.a=t2.a where not exists (select t3.a from t3);
id	task	access object	operator info
TableDual	root		rows:0
ScalarSubQuery	root		Output: ScalarQueryCol#10, ScalarQueryCol#11, ScalarQueryCol#12
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t3	keep order:false
Level	Code	Message
Warning	1815	Hint leading(t1, t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2, t2) */ * from t1 join t2 on t1.a=t2.a where not exists (select t3.a from t3);
id	task	access object	operator info
TableDual	root		rows:0
ScalarSubQuery	root		Output: ScalarQueryCol#10, ScalarQueryCol#11, ScalarQueryCol#12
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t3	keep order:false
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2, t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2, t1) */ * from t1 join t2 on t1.a=t2.a where not exists (select t3.a from t3);
id	task	access object	operator info
TableDual	root		rows:0
ScalarSubQuery	root		Output: ScalarQueryCol#10, ScalarQueryCol#11, ScalarQueryCol#12
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t3	keep order:false
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4@sel_2, t1) */ * from t1 join (select * from t4) t2 on t1.a=t2.a join t3 on t2.b=t3.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─IndexHashJoin	root		inner join, inner:IndexLookUp, outer key:.__planner__core__casetest__rule__rule_join_reorder.t4.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
  ├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
  │ ├─TableReader(Build)	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │ │   └─TableFullScan	cop[tikv]	table:t3	keep order:false
  │ └─TableReader(Probe)	root		data:Selection
  │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │     └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─IndexLookUp(Probe)	root		
    ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
    │ └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)], keep order:false, stats:pseudo
    └─TableRowIDScan(Probe)	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4@sel_2, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t4@sel_2) */ * from (select * from t4) t1 join t2 on t1.a=t2.a join t3 on t2.b=t3.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─IndexHashJoin	root		inner join, inner:IndexLookUp, outer key:.__planner__core__casetest__rule__rule_join_reorder.t2.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t4.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)
  ├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
  │ ├─TableReader(Build)	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │ │   └─TableFullScan	cop[tikv]	table:t3	keep order:false
  │ └─TableReader(Probe)	root		data:Selection
  │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │     └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─IndexLookUp(Probe)	root		
    ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
    │ └─IndexRangeScan	cop[tikv]	table:t4, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)], keep order:false, stats:pseudo
    └─TableRowIDScan(Probe)	cop[tikv]	table:t4	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t4@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3) */ * from t1 join t2 on t1.a=t2.a join (select * from t4) t3 on t2.b=t3.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
        └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1) */ t1.a, (select min(t2.a) from t2) from t1 join t3 on t1.a = t3.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, ScalarQueryCol#14(<nil>)->Column#15
└─IndexHashJoin	root		inner join, inner:IndexReader, outer key:.__planner__core__casetest__rule__rule_join_reorder.t3.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
  ├─IndexReader(Build)	root		index:IndexFullScan
  │ └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:false
  └─IndexReader(Probe)	root		index:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)], keep order:false, stats:pseudo
ScalarSubQuery	root		Output: ScalarQueryCol#14
└─MaxOneRow	root		
  └─StreamAgg	root		funcs:min(.__planner__core__casetest__rule__rule_join_reorder.t2.a)->Column#13
    └─Limit	root		offset:0, count:1
      └─IndexReader	root		index:Limit
        └─Limit	cop[tikv]		offset:0, count:1
          └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:true, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1, t2@sel_2) */ t1.a, (select min(t2.a) from t2) from t1 join t3 on t1.a = t3.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, ScalarQueryCol#14(<nil>)->Column#15
└─IndexHashJoin	root		inner join, inner:IndexReader, outer key:.__planner__core__casetest__rule__rule_join_reorder.t3.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
  ├─IndexReader(Build)	root		index:IndexFullScan
  │ └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:false
  └─IndexReader(Probe)	root		index:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)], keep order:false, stats:pseudo
ScalarSubQuery	root		Output: ScalarQueryCol#14
└─MaxOneRow	root		
  └─StreamAgg	root		funcs:min(.__planner__core__casetest__rule__rule_join_reorder.t2.a)->Column#13
    └─Limit	root		offset:0, count:1
      └─IndexReader	root		index:Limit
        └─Limit	cop[tikv]		offset:0, count:1
          └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:true, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1, t2@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1, t3) */ t1.a, (select min(t2.a) from t2) from t1 join t3 on t1.a = t3.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, ScalarQueryCol#14(<nil>)->Column#15
└─IndexHashJoin	root		inner join, inner:IndexReader, outer key:.__planner__core__casetest__rule__rule_join_reorder.t3.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
  ├─IndexReader(Build)	root		index:IndexFullScan
  │ └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:false
  └─IndexReader(Probe)	root		index:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)], keep order:false, stats:pseudo
ScalarSubQuery	root		Output: ScalarQueryCol#14
└─MaxOneRow	root		
  └─StreamAgg	root		funcs:min(.__planner__core__casetest__rule__rule_join_reorder.t2.a)->Column#13
    └─Limit	root		offset:0, count:1
      └─IndexReader	root		index:Limit
        └─Limit	cop[tikv]		offset:0, count:1
          └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:true, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2@sel_2, t1) */ t1.a, (select min(t2.a) from t2) from t1 join t3 on t1.a = t3.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, ScalarQueryCol#14(<nil>)->Column#15
└─IndexHashJoin	root		inner join, inner:IndexReader, outer key:.__planner__core__casetest__rule__rule_join_reorder.t3.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
  ├─IndexReader(Build)	root		index:IndexFullScan
  │ └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:false
  └─IndexReader(Probe)	root		index:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)], keep order:false, stats:pseudo
ScalarSubQuery	root		Output: ScalarQueryCol#14
└─MaxOneRow	root		
  └─StreamAgg	root		funcs:min(.__planner__core__casetest__rule__rule_join_reorder.t2.a)->Column#13
    └─Limit	root		offset:0, count:1
      └─IndexReader	root		index:Limit
        └─Limit	cop[tikv]		offset:0, count:1
          └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:true, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2@sel_2, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2@sel_2, t3) */ t1.a, (select min(t2.a) from t2) from t1 join t3 on t1.a = t3.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, ScalarQueryCol#14(<nil>)->Column#15
└─IndexHashJoin	root		inner join, inner:IndexReader, outer key:.__planner__core__casetest__rule__rule_join_reorder.t3.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
  ├─IndexReader(Build)	root		index:IndexFullScan
  │ └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:false
  └─IndexReader(Probe)	root		index:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)], keep order:false, stats:pseudo
ScalarSubQuery	root		Output: ScalarQueryCol#14
└─MaxOneRow	root		
  └─StreamAgg	root		funcs:min(.__planner__core__casetest__rule__rule_join_reorder.t2.a)->Column#13
    └─Limit	root		offset:0, count:1
      └─IndexReader	root		index:Limit
        └─Limit	cop[tikv]		offset:0, count:1
          └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:true, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2@sel_2, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1, t2@sel_2) */ t1.a, (select min(t2.a) from t2) from t1 join t3 on t1.a = t3.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, ScalarQueryCol#14(<nil>)->Column#15
└─IndexHashJoin	root		inner join, inner:IndexReader, outer key:.__planner__core__casetest__rule__rule_join_reorder.t3.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
  ├─IndexReader(Build)	root		index:IndexFullScan
  │ └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:false
  └─IndexReader(Probe)	root		index:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)], keep order:false, stats:pseudo
ScalarSubQuery	root		Output: ScalarQueryCol#14
└─MaxOneRow	root		
  └─StreamAgg	root		funcs:min(.__planner__core__casetest__rule__rule_join_reorder.t2.a)->Column#13
    └─Limit	root		offset:0, count:1
      └─IndexReader	root		index:Limit
        └─Limit	cop[tikv]		offset:0, count:1
          └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:true, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1, t2@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t2@sel_2) */ t1.a, (select min(t2.a) from t2) from t1 join t3 on t1.a = t3.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, ScalarQueryCol#14(<nil>)->Column#15
└─IndexHashJoin	root		inner join, inner:IndexReader, outer key:.__planner__core__casetest__rule__rule_join_reorder.t3.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
  ├─IndexReader(Build)	root		index:IndexFullScan
  │ └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:false
  └─IndexReader(Probe)	root		index:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)], keep order:false, stats:pseudo
ScalarSubQuery	root		Output: ScalarQueryCol#14
└─MaxOneRow	root		
  └─StreamAgg	root		funcs:min(.__planner__core__casetest__rule__rule_join_reorder.t2.a)->Column#13
    └─Limit	root		offset:0, count:1
      └─IndexReader	root		index:Limit
        └─Limit	cop[tikv]		offset:0, count:1
          └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:true, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t2@sel_2) is inapplicable. Please specify the table names in the arguments.
set tidb_cost_model_version=2;
drop table if exists t, t1, t2, t3, t4, t5, t6, t7, t8;
create table t(a int, b int, key(a));
create table t1(a int, b int, key(a));
create table t2(a int, b int, key(a));
create table t3(a int, b int, key(a));
create table t4(a int, b int, key(a));
create table t5(a int, b int, key(a));
create table t6(a int, b int, key(a));
create table t7(a int, b int, key(a));
create table t8(a int, b int, key(a));
set @@tidb_enable_outer_join_reorder=true;
explain format='plan_tree' select /*+ leading(t1, t2) */ * from t4 join t on t4.a=t.a left join t1 on t.a = t1.a join t2 on t.b = t2.b join t3 on t2.b=t3.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b, .__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		left outer join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
      └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
        ├─TableReader(Build)	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.b))
        │   └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
        └─TableReader(Probe)	root		data:Selection
          └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
            └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1, t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3) */ * from t4 join t on t4.a=t.a left join t1 on t.a = t1.a join t2 on t.b = t2.b join t3 on t2.b=t3.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b, .__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		left outer join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
      └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
        ├─TableReader(Build)	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.b))
        │   └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
        └─TableReader(Probe)	root		data:Selection
          └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
            └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4, t3, t2, t, t1) */ * from t4 join t on t4.a=t.a left join t1 on t.a = t1.a join t2 on t.b = t2.b join t3 on t2.b=t3.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b, .__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		left outer join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
      └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
        ├─TableReader(Build)	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.b))
        │   └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
        └─TableReader(Probe)	root		data:Selection
          └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
            └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4, t3, t2, t, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4, t3, t2, t) */ * from t4 join t on t4.a=t.a left join t1 on t.a = t1.a join t2 on t.b = t2.b join t3 on t2.b=t3.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b, .__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		left outer join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
      └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
        ├─TableReader(Build)	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.b))
        │   └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
        └─TableReader(Probe)	root		data:Selection
          └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
            └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4, t3, t2, t) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t2, t) */ * from t4 join t on t4.a=t.a left join t1 on t.a = t1.a join t2 on t.b = t2.b join t3 on t2.b=t3.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b, .__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		left outer join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
      └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t4.a)]
        ├─TableReader(Build)	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.b))
        │   └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
        └─TableReader(Probe)	root		data:Selection
          └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
            └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t2, t) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3) */ * from t2 left join (t1 left join t3 on t1.a=t3.a) on t2.b=t1.b;
id	task	access object	operator info
HashJoin	root		left outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)]
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		left outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t1, t3) */ * from t2 left join (t1 left join t3 on t1.a=t3.a) on t2.b=t1.b;
id	task	access object	operator info
HashJoin	root		left outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)]
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		left outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t1, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3) */ * from t2 left join (t1 join t3 on t1.a=t3.a join t4 on t3.b = t4.b) on t2.b=t1.b;
id	task	access object	operator info
HashJoin	root		left outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)]
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
    │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
        └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t4) */ * from t2 left join (t1 join t3 on t1.a=t3.a join t4 on t3.b = t4.b) on t2.b=t1.b;
id	task	access object	operator info
HashJoin	root		left outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)]
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
    │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
        └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t4) */ * from t2 left join (t1 join t3 on t1.a=t3.a join t4 on t3.b = t4.b) on t2.b=t1.b join t5 on t2.a = t5.a join t6 on t5.b=t6.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b, .__planner__core__casetest__rule__rule_join_reorder.t5.a, .__planner__core__casetest__rule__rule_join_reorder.t5.b, .__planner__core__casetest__rule__rule_join_reorder.t6.a, .__planner__core__casetest__rule__rule_join_reorder.t6.b
└─HashJoin	root		left outer join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)]
  ├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
  │ ├─TableReader(Build)	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │ │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  │ └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  │   ├─TableReader(Build)	root		data:Selection
  │   │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  │   └─TableReader(Probe)	root		data:Selection
  │     └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │       └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t5.b, .__planner__core__casetest__rule__rule_join_reorder.t6.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
    │   └─TableFullScan	cop[tikv]	table:t6	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t5.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
      │   └─TableFullScan	cop[tikv]	table:t5	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
          └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t4) leading(t5, t6) */ * from t2 left join (t1 join t3 on t1.a=t3.a join t4 on t3.b = t4.b) on t2.b=t1.b join t5 on t2.a = t5.a join t6 on t5.b=t6.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b, .__planner__core__casetest__rule__rule_join_reorder.t5.a, .__planner__core__casetest__rule__rule_join_reorder.t5.b, .__planner__core__casetest__rule__rule_join_reorder.t6.a, .__planner__core__casetest__rule__rule_join_reorder.t6.b
└─HashJoin	root		left outer join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)]
  ├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
  │ ├─TableReader(Build)	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │ │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  │ └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  │   ├─TableReader(Build)	root		data:Selection
  │   │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  │   └─TableReader(Probe)	root		data:Selection
  │     └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │       └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t5.b, .__planner__core__casetest__rule__rule_join_reorder.t6.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
    │   └─TableFullScan	cop[tikv]	table:t6	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t5.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
      │   └─TableFullScan	cop[tikv]	table:t5	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
          └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t4) is inapplicable. Please specify the table names in the arguments.
Warning	1815	Hint leading(t5, t6) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t5, t6, t3, t4) */ * from t2 left join (t1 join t3 on t1.a=t3.a join t4 on t3.b = t4.b) on t2.b=t1.b join t5 on t2.a = t5.a join t6 on t5.b=t6.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b, .__planner__core__casetest__rule__rule_join_reorder.t5.a, .__planner__core__casetest__rule__rule_join_reorder.t5.b, .__planner__core__casetest__rule__rule_join_reorder.t6.a, .__planner__core__casetest__rule__rule_join_reorder.t6.b
└─HashJoin	root		left outer join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)]
  ├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
  │ ├─TableReader(Build)	root		data:Selection
  │ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │ │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  │ └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
  │   ├─TableReader(Build)	root		data:Selection
  │   │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  │   └─TableReader(Probe)	root		data:Selection
  │     └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │       └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t5.b, .__planner__core__casetest__rule__rule_join_reorder.t6.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
    │   └─TableFullScan	cop[tikv]	table:t6	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t5.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
      │   └─TableFullScan	cop[tikv]	table:t5	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
          └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t5, t6, t3, t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1, t2) */ * from t4 join t on t4.a=t.a right join t1 on t.a = t1.a join t2 on t1.b = t2.b join t3 on t2.b=t3.b;
id	task	access object	operator info
HashJoin	root		right outer join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
│ ├─TableReader(Build)	root		data:Selection
│ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
│ │   └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
│ └─TableReader(Probe)	root		data:Selection
│   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
│     └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
        └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1, t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3) */ * from t4 join t on t4.a=t.a right join t1 on t.a = t1.a join t2 on t1.b = t2.b join t3 on t2.b=t3.b;
id	task	access object	operator info
HashJoin	root		right outer join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
│ ├─TableReader(Build)	root		data:Selection
│ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
│ │   └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
│ └─TableReader(Probe)	root		data:Selection
│   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
│     └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
        └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1, t3) */ * from t4 join t on t4.a=t.a right join t1 on t.a = t1.a join t2 on t1.b = t2.b join t3 on t2.b=t3.b;
id	task	access object	operator info
HashJoin	root		right outer join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
├─HashJoin(Build)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
│ ├─TableReader(Build)	root		data:Selection
│ │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
│ │   └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
│ └─TableReader(Probe)	root		data:Selection
│   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
│     └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
        └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3) */ * from t2 right join (t1 left join t3 on t1.a=t3.a) on t2.b=t1.b;
id	task	access object	operator info
HashJoin	root		left outer join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		right outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:TableFullScan
    └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t1, t3) */ * from t2 right join (t1 left join t3 on t1.a=t3.a) on t2.b=t1.b;
id	task	access object	operator info
HashJoin	root		left outer join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		right outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:TableFullScan
    └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t1, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3) */ * from t2 right join (t1 join t3 on t1.a=t3.a join t4 on t3.b = t4.b) on t2.b=t1.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		right outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
      │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
          └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t4) */ * from t2 right join (t1 join t3 on t1.a=t3.a join t4 on t3.b = t4.b) on t2.b=t1.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		right outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
      │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
          └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t4) */ * from t2 right join (t1 join t3 on t1.a=t3.a join t4 on t3.b = t4.b) on t2.b=t1.b join t5 on t2.a = t5.a join t6 on t5.b=t6.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b, .__planner__core__casetest__rule__rule_join_reorder.t5.a, .__planner__core__casetest__rule__rule_join_reorder.t5.b, .__planner__core__casetest__rule__rule_join_reorder.t6.a, .__planner__core__casetest__rule__rule_join_reorder.t6.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t5.b, .__planner__core__casetest__rule__rule_join_reorder.t6.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
  │   └─TableFullScan	cop[tikv]	table:t6	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
    │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t5.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
      │   └─TableFullScan	cop[tikv]	table:t5	keep order:false, stats:pseudo
      └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
        ├─TableReader(Build)	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
        │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
        └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)]
          ├─TableReader(Build)	root		data:Selection
          │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
          │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
          └─TableReader(Probe)	root		data:Selection
            └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
              └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t4) leading(t5, t6) */ * from t2 right join (t1 join t3 on t1.a=t3.a join t4 on t3.b = t4.b) on t2.b=t1.b join t5 on t2.a = t5.a join t6 on t5.b=t6.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b, .__planner__core__casetest__rule__rule_join_reorder.t5.a, .__planner__core__casetest__rule__rule_join_reorder.t5.b, .__planner__core__casetest__rule__rule_join_reorder.t6.a, .__planner__core__casetest__rule__rule_join_reorder.t6.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t5.b, .__planner__core__casetest__rule__rule_join_reorder.t6.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
  │   └─TableFullScan	cop[tikv]	table:t6	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
    │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t5.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
      │   └─TableFullScan	cop[tikv]	table:t5	keep order:false, stats:pseudo
      └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
        ├─TableReader(Build)	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
        │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
        └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)]
          ├─TableReader(Build)	root		data:Selection
          │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
          │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
          └─TableReader(Probe)	root		data:Selection
            └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
              └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t4) is inapplicable. Please specify the table names in the arguments.
Warning	1815	Hint leading(t5, t6) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t4, t5, t6) */ * from t2 right join (t1 join t3 on t1.a=t3.a join t4 on t3.b = t4.b) on t2.b=t1.b join t5 on t2.a = t5.a join t6 on t5.b=t6.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b, .__planner__core__casetest__rule__rule_join_reorder.t5.a, .__planner__core__casetest__rule__rule_join_reorder.t5.b, .__planner__core__casetest__rule__rule_join_reorder.t6.a, .__planner__core__casetest__rule__rule_join_reorder.t6.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t5.b, .__planner__core__casetest__rule__rule_join_reorder.t6.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t6.b))
  │   └─TableFullScan	cop[tikv]	table:t6	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t3.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
    │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t5.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t5.b))
      │   └─TableFullScan	cop[tikv]	table:t5	keep order:false, stats:pseudo
      └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
        ├─TableReader(Build)	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
        │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
        └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t1.b)]
          ├─TableReader(Build)	root		data:Selection
          │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
          │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
          └─TableReader(Probe)	root		data:Selection
            └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
              └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t4, t5, t6) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2) hash_join(t2) */ * from t left join t1 on t.a = t1.a right join t2 on t1.b = t2.b join t3 on t2.b = t3.b ;
id	task	access object	operator info
HashJoin	root		right outer join, left side:Projection, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
├─Projection(Build)	root		.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b
│ └─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
│   ├─TableReader(Build)	root		data:Selection
│   │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
│   │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
│   └─TableReader(Probe)	root		data:Selection
│     └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
│       └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
      └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2) hash_join(t1) */ * from t left join t1 on t.a = t1.a right join t2 on t1.b = t2.b join t3 on t2.b = t3.b ;
id	task	access object	operator info
HashJoin	root		right outer join, left side:Projection, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
├─Projection(Build)	root		.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b
│ └─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
│   ├─TableReader(Build)	root		data:Selection
│   │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
│   │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
│   └─TableReader(Probe)	root		data:Selection
│     └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
│       └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
      └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2) hash_join(t3) */ * from t left join t1 on t.a = t1.a right join t2 on t1.b = t2.b join t3 on t2.b = t3.b ;
id	task	access object	operator info
HashJoin	root		right outer join, left side:Projection, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
├─Projection(Build)	root		.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b
│ └─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
│   ├─TableReader(Build)	root		data:Selection
│   │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
│   │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
│   └─TableReader(Probe)	root		data:Selection
│     └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
│       └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
      └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t) hash_join(t2) */ * from t left join t1 on t.a = t1.a left join t2 on t1.b = t2.b join t3 on t2.b = t3.b ;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
      │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
          └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t) hash_join(t1) */ * from t left join t1 on t.a = t1.a left join t2 on t1.b = t2.b join t3 on t2.b = t3.b ;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
      │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
          └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t) hash_join(t3) */ * from t left join t1 on t.a = t1.a left join t2 on t1.b = t2.b join t3 on t2.b = t3.b ;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
      │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
          └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2) INL_JOIN(t1) */ * from t left join t1 on t.a = t1.a right join t2 on t1.b = t2.b join t3 on t2.b = t3.b ;
id	task	access object	operator info
HashJoin	root		right outer join, left side:Projection, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
├─Projection(Build)	root		.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b
│ └─IndexJoin	root		inner join, inner:IndexLookUp, outer key:.__planner__core__casetest__rule__rule_join_reorder.t.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
│   ├─TableReader(Build)	root		data:Selection
│   │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
│   │   └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
│   └─IndexLookUp(Probe)	root		
│     ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
│     │ └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)], keep order:false, stats:pseudo
│     └─Selection(Probe)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
│       └─TableRowIDScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
      └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2) INL_JOIN(t3) */ * from t left join t1 on t.a = t1.a right join t2 on t1.b = t2.b join t3 on t2.b = t3.b ;
id	task	access object	operator info
HashJoin	root		right outer join, left side:Projection, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
├─Projection(Build)	root		.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b
│ └─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
│   ├─TableReader(Build)	root		data:Selection
│   │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
│   │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
│   └─TableReader(Probe)	root		data:Selection
│     └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
│       └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
      └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2) is inapplicable. Please specify the table names in the arguments.
Warning	1815	Optimizer Hint /*+ INL_JOIN(t3) */ or /*+ TIDB_INLJ(t3) */ is inapplicable
explain format='plan_tree' select /*+ leading(t3) INL_JOIN(t1) */ * from t left join t1 on t.a = t1.a right join t2 on t1.b = t2.b join t3 on t2.b = t3.b ;
id	task	access object	operator info
HashJoin	root		right outer join, left side:Projection, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
├─Projection(Build)	root		.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b
│ └─IndexJoin	root		inner join, inner:IndexLookUp, outer key:.__planner__core__casetest__rule__rule_join_reorder.t.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
│   ├─TableReader(Build)	root		data:Selection
│   │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
│   │   └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
│   └─IndexLookUp(Probe)	root		
│     ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
│     │ └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)], keep order:false, stats:pseudo
│     └─Selection(Probe)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
│       └─TableRowIDScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
      └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3) INL_JOIN(t3) */ * from t left join t1 on t.a = t1.a right join t2 on t1.b = t2.b join t3 on t2.b = t3.b ;
id	task	access object	operator info
HashJoin	root		right outer join, left side:Projection, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
├─Projection(Build)	root		.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b
│ └─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
│   ├─TableReader(Build)	root		data:Selection
│   │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
│   │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
│   └─TableReader(Probe)	root		data:Selection
│     └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
│       └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
      └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3) is inapplicable. Please specify the table names in the arguments.
Warning	1815	Optimizer Hint /*+ INL_JOIN(t3) */ or /*+ TIDB_INLJ(t3) */ is inapplicable
explain format='plan_tree' select /*+ leading(t2) merge_join(t2) */ * from t left join t1 on t.a = t1.a right join t2 on t1.b = t2.b join t3 on t2.b = t3.b ;
id	task	access object	operator info
HashJoin	root		right outer join, left side:Projection, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
├─Projection(Build)	root		.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b
│ └─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
│   ├─TableReader(Build)	root		data:Selection
│   │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
│   │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
│   └─TableReader(Probe)	root		data:Selection
│     └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
│       └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
└─MergeJoin(Probe)	root		inner join, left key:.__planner__core__casetest__rule__rule_join_reorder.t2.b, right key:.__planner__core__casetest__rule__rule_join_reorder.t3.b
  ├─Sort(Build)	root		.__planner__core__casetest__rule__rule_join_reorder.t3.b
  │ └─TableReader	root		data:Selection
  │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │     └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─Sort(Probe)	root		.__planner__core__casetest__rule__rule_join_reorder.t2.b
    └─TableReader	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1) merge_join(t2) */ * from t join t1 on t.a = t1.a left join t2 on t1.b = t2.b join t3 on t2.b = t3.b ;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─MergeJoin(Probe)	root		inner join, left key:.__planner__core__casetest__rule__rule_join_reorder.t1.b, right key:.__planner__core__casetest__rule__rule_join_reorder.t2.b
    ├─Sort(Build)	root		.__planner__core__casetest__rule__rule_join_reorder.t2.b
    │ └─TableReader	root		data:Selection
    │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │     └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─Sort(Probe)	root		.__planner__core__casetest__rule__rule_join_reorder.t1.b
      └─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
        ├─TableReader(Build)	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
        │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
        └─TableReader(Probe)	root		data:Selection
          └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
            └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2) merge_join(t3) */ * from t left join t1 on t.a = t1.a right join t2 on t1.b = t2.b join t3 on t2.b = t3.b ;
id	task	access object	operator info
HashJoin	root		right outer join, left side:Projection, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
├─Projection(Build)	root		.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b
│ └─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
│   ├─TableReader(Build)	root		data:Selection
│   │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
│   │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
│   └─TableReader(Probe)	root		data:Selection
│     └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
│       └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
└─MergeJoin(Probe)	root		inner join, left key:.__planner__core__casetest__rule__rule_join_reorder.t2.b, right key:.__planner__core__casetest__rule__rule_join_reorder.t3.b
  ├─Sort(Build)	root		.__planner__core__casetest__rule__rule_join_reorder.t3.b
  │ └─TableReader	root		data:Selection
  │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │     └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─Sort(Probe)	root		.__planner__core__casetest__rule__rule_join_reorder.t2.b
    └─TableReader	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3) merge_join(t3) */ * from t join t1 on t.a = t1.a join t2 on t1.b = t2.b join t3 on t2.b = t3.b ;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─MergeJoin	root		inner join, left key:.__planner__core__casetest__rule__rule_join_reorder.t2.b, right key:.__planner__core__casetest__rule__rule_join_reorder.t3.b
  ├─Sort(Build)	root		.__planner__core__casetest__rule__rule_join_reorder.t3.b
  │ └─TableReader	root		data:Selection
  │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │     └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─Sort(Probe)	root		.__planner__core__casetest__rule__rule_join_reorder.t2.b
    └─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
      │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
      └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
        ├─TableReader(Build)	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
        │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
        └─TableReader(Probe)	root		data:Selection
          └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
            └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3) merge_join(t2) */ * from t right join t1 on t.a = t1.a join t2 on t1.b = t2.b join t3 on t2.b = t3.b ;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─MergeJoin(Probe)	root		inner join, left key:.__planner__core__casetest__rule__rule_join_reorder.t1.b, right key:.__planner__core__casetest__rule__rule_join_reorder.t2.b
  ├─Sort(Build)	root		.__planner__core__casetest__rule__rule_join_reorder.t2.b
  │ └─TableReader	root		data:Selection
  │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │     └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─Sort(Probe)	root		.__planner__core__casetest__rule__rule_join_reorder.t1.b
    └─HashJoin	root		right outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
      │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
          └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3) merge_join(t2) */ * from t right join t1 on t.a = t1.a join t2 on t1.b = t2.b join t3 on t2.b = t3.b ;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─MergeJoin(Probe)	root		inner join, left key:.__planner__core__casetest__rule__rule_join_reorder.t1.b, right key:.__planner__core__casetest__rule__rule_join_reorder.t2.b
  ├─Sort(Build)	root		.__planner__core__casetest__rule__rule_join_reorder.t2.b
  │ └─TableReader	root		data:Selection
  │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │     └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─Sort(Probe)	root		.__planner__core__casetest__rule__rule_join_reorder.t1.b
    └─HashJoin	root		right outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
      │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
          └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3) merge_join(t3) */ * from t right join t1 on t.a = t1.a join t2 on t1.b = t2.b join t3 on t2.b = t3.b ;
id	task	access object	operator info
MergeJoin	root		inner join, left key:.__planner__core__casetest__rule__rule_join_reorder.t2.b, right key:.__planner__core__casetest__rule__rule_join_reorder.t3.b
├─Sort(Build)	root		.__planner__core__casetest__rule__rule_join_reorder.t3.b
│ └─TableReader	root		data:Selection
│   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│     └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─Sort(Probe)	root		.__planner__core__casetest__rule__rule_join_reorder.t2.b
  └─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─HashJoin(Probe)	root		right outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
      │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
      └─TableReader(Probe)	root		data:Selection
        └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
          └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3) merge_join(t3) */ * from t left join t1 on t.a = t1.a left join t2 on t1.b = t2.b join t3 on t2.b = t3.b ;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─MergeJoin	root		inner join, left key:.__planner__core__casetest__rule__rule_join_reorder.t2.b, right key:.__planner__core__casetest__rule__rule_join_reorder.t3.b
  ├─Sort(Build)	root		.__planner__core__casetest__rule__rule_join_reorder.t3.b
  │ └─TableReader	root		data:Selection
  │   └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │     └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─Sort(Probe)	root		.__planner__core__casetest__rule__rule_join_reorder.t2.b
    └─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
      │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
      └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)]
        ├─TableReader(Build)	root		data:Selection
        │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
        │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
        └─TableReader(Probe)	root		data:Selection
          └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
            └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2) INL_JOIN(t1) */ * from t join t1 on t.a = t1.a left join t2 on t1.b = t2.b join t3 on t2.b = t3.b ;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t.b, .__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.b)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─IndexJoin(Probe)	root		inner join, inner:IndexLookUp, outer key:.__planner__core__casetest__rule__rule_join_reorder.t.a, inner key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, equal cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
      ├─TableReader(Build)	root		data:Selection
      │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t.a))
      │   └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
      └─IndexLookUp(Probe)	root		
        ├─Selection(Build)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
        │ └─IndexRangeScan	cop[tikv]	table:t1, index:a(a)	range: decided by [eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t.a)], keep order:false, stats:pseudo
        └─Selection(Probe)	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
          └─TableRowIDScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4) */ * from t1 join t2 on t1.a=t2.a right join t4 on t1.b = t4.b where t1.a in (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b) eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2) */ * from t1 left join t2 on t1.a=t2.a where t1.a in (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b) eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		left outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
      └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3@sel_2) */ * from t1 right join t2 on t1.a=t2.a where t1.a in (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b) eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
      └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4) */ * from t1 join t2 on t1.a=t2.a right join t4 on t1.b = t4.b where t1.a not in (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		anti semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)], other cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		right outer join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
  ├─TableReader(Build)	root		data:TableFullScan
  │ └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2) */ * from t1 left join t2 on t1.a=t2.a where t1.a not in (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		anti semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)], other cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		left outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:TableFullScan
    └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3@sel_2) */ * from t1 right join t2 on t1.a=t2.a where t1.a not in (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		anti semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)], other cond:eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		right outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
  │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:TableFullScan
    └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4) */ * from t1 join t2 on t1.a=t2.a right join t4 on t1.b = t4.b where exists (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2) */ * from t1 left join t2 on t1.a=t2.a where exists (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		left outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3@sel_2) */ * from t1 right join t2 on t1.a=t2.a where exists (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
      └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4) */ * from t1 join t2 on t1.a=t2.a right join t4 on t1.b = t4.b where not exists (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		anti semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		right outer join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
  ├─TableReader(Build)	root		data:TableFullScan
  │ └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2) */ * from t1 left join t2 on t1.a=t2.a where not exists (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		anti semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		left outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:TableFullScan
    └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3@sel_2) */ * from t1 right join t2 on t1.a=t2.a where not exists (select t3.a from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		anti semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		right outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
  │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:TableFullScan
    └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1) */ t1.a, (select min(t1.a) from t2 where t2.a > t1.a) from t1 join t3 on t1.a = t3.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, Column#14->Column#16
└─Apply	root		CARTESIAN left outer join, left side:HashAgg
  ├─HashAgg(Build)	root		funcs:min(.__planner__core__casetest__rule__rule_join_reorder.t1.a)->Column#10, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t1.a)->.__planner__core__casetest__rule__rule_join_reorder.t1.a
  │ └─MergeJoin	root		inner join, left key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, right key:.__planner__core__casetest__rule__rule_join_reorder.t3.a
  │   ├─IndexReader(Build)	root		index:IndexFullScan
  │   │ └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:true, stats:pseudo
  │   └─IndexReader(Probe)	root		index:IndexFullScan
  │     └─IndexFullScan	cop[tikv]	table:t1, index:a(a)	keep order:true, stats:pseudo
  └─MaxOneRow(Probe)	root		
    └─Projection	root		Column#10->Column#14
      └─IndexReader	root		index:Selection
        └─Selection	cop[tikv]		gt(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
          └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2) */ t1.a, (select min(t1.a) from t2 where t2.a > t1.a) from t1 join t3 on t1.a = t3.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, Column#14->Column#16
└─Apply	root		CARTESIAN left outer join, left side:HashAgg
  ├─HashAgg(Build)	root		funcs:min(.__planner__core__casetest__rule__rule_join_reorder.t1.a)->Column#10, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t1.a)->.__planner__core__casetest__rule__rule_join_reorder.t1.a
  │ └─MergeJoin	root		inner join, left key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, right key:.__planner__core__casetest__rule__rule_join_reorder.t3.a
  │   ├─IndexReader(Build)	root		index:IndexFullScan
  │   │ └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:true, stats:pseudo
  │   └─IndexReader(Probe)	root		index:IndexFullScan
  │     └─IndexFullScan	cop[tikv]	table:t1, index:a(a)	keep order:true, stats:pseudo
  └─MaxOneRow(Probe)	root		
    └─Projection	root		Column#10->Column#14
      └─IndexReader	root		index:Selection
        └─Selection	cop[tikv]		gt(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
          └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3@sel_2) */ t1.a, (select min(t1.a) from t2 where t2.a > t1.a) from t1 join t3 on t1.a = t3.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, Column#14->Column#16
└─Apply	root		CARTESIAN left outer join, left side:HashAgg
  ├─HashAgg(Build)	root		funcs:min(.__planner__core__casetest__rule__rule_join_reorder.t1.a)->Column#10, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t1.a)->.__planner__core__casetest__rule__rule_join_reorder.t1.a
  │ └─MergeJoin	root		inner join, left key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, right key:.__planner__core__casetest__rule__rule_join_reorder.t3.a
  │   ├─IndexReader(Build)	root		index:IndexFullScan
  │   │ └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:true, stats:pseudo
  │   └─IndexReader(Probe)	root		index:IndexFullScan
  │     └─IndexFullScan	cop[tikv]	table:t1, index:a(a)	keep order:true, stats:pseudo
  └─MaxOneRow(Probe)	root		
    └─Projection	root		Column#10->Column#14
      └─IndexReader	root		index:Selection
        └─Selection	cop[tikv]		gt(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)
          └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4, t3@sel_2) */ * from t1 right join t2 on t1.a=t2.a join t4 on t1.b = t4.b where t1.a = (select max(t3.a) from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b) eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, Column#13)]
├─Selection(Build)	root		not(isnull(Column#13))
│ └─HashAgg	root		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.b, funcs:max(Column#22)->Column#13, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t3.b)->.__planner__core__casetest__rule__rule_join_reorder.t3.b
│   └─TableReader	root		data:HashAgg
│     └─HashAgg	cop[tikv]		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.b, funcs:max(.__planner__core__casetest__rule__rule_join_reorder.t3.a)->Column#22
│       └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│         └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4, t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4) */ * from t1 right join t2 on t1.a=t2.a join t4 on t1.b = t4.b where t1.a = (select max(t3.a) from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b) eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, Column#13)]
├─Selection(Build)	root		not(isnull(Column#13))
│ └─HashAgg	root		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.b, funcs:max(Column#22)->Column#13, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t3.b)->.__planner__core__casetest__rule__rule_join_reorder.t3.b
│   └─TableReader	root		data:HashAgg
│     └─HashAgg	cop[tikv]		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.b, funcs:max(.__planner__core__casetest__rule__rule_join_reorder.t3.a)->Column#22
│       └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│         └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2) */ * from t1 left join t2 on t1.a=t2.a join t4 on t1.b = t4.b where t1.a = (select max(t3.a) from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b) eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, Column#13)]
├─Selection(Build)	root		not(isnull(Column#13))
│ └─HashAgg	root		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.b, funcs:max(Column#21)->Column#13, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t3.b)->.__planner__core__casetest__rule__rule_join_reorder.t3.b
│   └─TableReader	root		data:HashAgg
│     └─HashAgg	cop[tikv]		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.b, funcs:max(.__planner__core__casetest__rule__rule_join_reorder.t3.a)->Column#21
│       └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│         └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		left outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2, t1) */ * from t1 left join t2 on t1.a=t2.a join t4 on t1.b = t4.b where t1.a = (select max(t3.a) from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b) eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, Column#13)]
├─Selection(Build)	root		not(isnull(Column#13))
│ └─HashAgg	root		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.b, funcs:max(Column#21)->Column#13, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t3.b)->.__planner__core__casetest__rule__rule_join_reorder.t3.b
│   └─TableReader	root		data:HashAgg
│     └─HashAgg	cop[tikv]		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.b, funcs:max(.__planner__core__casetest__rule__rule_join_reorder.t3.a)->Column#21
│       └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│         └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		left outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4, t3@sel_2) */ * from t1 left join t2 on t1.a=t2.a right join t4 on t1.b = t4.b where t1.a > (select min(t3.a) from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)], other cond:gt(.__planner__core__casetest__rule__rule_join_reorder.t1.a, Column#13)
├─Selection(Build)	root		not(isnull(Column#13))
│ └─HashAgg	root		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.b, funcs:min(Column#21)->Column#13, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t3.b)->.__planner__core__casetest__rule__rule_join_reorder.t3.b
│   └─TableReader	root		data:HashAgg
│     └─HashAgg	cop[tikv]		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.b, funcs:min(.__planner__core__casetest__rule__rule_join_reorder.t3.a)->Column#21
│       └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│         └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		left outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4, t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4) */ * from t1 left join t2 on t1.a=t2.a right join t4 on t1.b = t4.b where t1.a > (select min(t3.a) from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)], other cond:gt(.__planner__core__casetest__rule__rule_join_reorder.t1.a, Column#13)
├─Selection(Build)	root		not(isnull(Column#13))
│ └─HashAgg	root		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.b, funcs:min(Column#21)->Column#13, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t3.b)->.__planner__core__casetest__rule__rule_join_reorder.t3.b
│   └─TableReader	root		data:HashAgg
│     └─HashAgg	cop[tikv]		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.b, funcs:min(.__planner__core__casetest__rule__rule_join_reorder.t3.a)->Column#21
│       └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│         └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		left outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2) */ * from t1 left join t2 on t1.a=t2.a join t4 on t1.b = t4.b where t1.a > (select min(t3.a) from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)], other cond:gt(.__planner__core__casetest__rule__rule_join_reorder.t1.a, Column#13)
├─Selection(Build)	root		not(isnull(Column#13))
│ └─HashAgg	root		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.b, funcs:min(Column#21)->Column#13, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t3.b)->.__planner__core__casetest__rule__rule_join_reorder.t3.b
│   └─TableReader	root		data:HashAgg
│     └─HashAgg	cop[tikv]		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.b, funcs:min(.__planner__core__casetest__rule__rule_join_reorder.t3.a)->Column#21
│       └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│         └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		left outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2, t2) */ * from t1 right join t2 on t1.a=t2.a join t4 on t1.b = t4.b where t1.a > (select min(t3.a) from t3 where t1.b = t3.b);
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)], other cond:gt(.__planner__core__casetest__rule__rule_join_reorder.t1.a, Column#13)
├─Selection(Build)	root		not(isnull(Column#13))
│ └─HashAgg	root		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.b, funcs:min(Column#22)->Column#13, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t3.b)->.__planner__core__casetest__rule__rule_join_reorder.t3.b
│   └─TableReader	root		data:HashAgg
│     └─HashAgg	cop[tikv]		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.b, funcs:min(.__planner__core__casetest__rule__rule_join_reorder.t3.a)->Column#22
│       └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│         └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2, t2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4) */ * from t1 join t2 on t1.a=t2.a right join t4 on t1.b = t4.b where t1.a in (select t3.a from t3);
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
├─StreamAgg(Build)	root		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.a, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t3.a)->.__planner__core__casetest__rule__rule_join_reorder.t3.a
│ └─IndexReader	root		index:StreamAgg
│   └─StreamAgg	cop[tikv]		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.a, 
│     └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:true, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
  │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
    │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
        └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2) */ * from t1 left join t2 on t1.a=t2.a where t1.a in (select t3.a from t3);
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
├─StreamAgg(Build)	root		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.a, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t3.a)->.__planner__core__casetest__rule__rule_join_reorder.t3.a
│ └─IndexReader	root		index:StreamAgg
│   └─StreamAgg	cop[tikv]		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.a, 
│     └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:true, stats:pseudo
└─HashJoin(Probe)	root		left outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3@sel_2) */ * from t1 join t2 on t1.a=t2.a where t1.a in (select t3.a from t3);
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
├─StreamAgg(Build)	root		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.a, funcs:firstrow(.__planner__core__casetest__rule__rule_join_reorder.t3.a)->.__planner__core__casetest__rule__rule_join_reorder.t3.a
│ └─IndexReader	root		index:StreamAgg
│   └─StreamAgg	cop[tikv]		group by:.__planner__core__casetest__rule__rule_join_reorder.t3.a, 
│     └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:true, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4) */ * from t1 left join t2 on t1.a=t2.a right join t4 on t1.b = t4.b where t1.a not in (select t3.a from t3);
id	task	access object	operator info
HashJoin	root		Null-aware anti semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
├─IndexReader(Build)	root		index:IndexFullScan
│ └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		right outer join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
  ├─TableReader(Build)	root		data:TableFullScan
  │ └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		left outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
        └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2) */ * from t1 left join t2 on t1.a=t2.a where t1.a not in (select t3.a from t3);
id	task	access object	operator info
HashJoin	root		Null-aware anti semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
├─IndexReader(Build)	root		index:IndexFullScan
│ └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		left outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:TableFullScan
    └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3@sel_2) */ * from t1 join t2 on t1.a=t2.a where t1.a not in (select t3.a from t3);
id	task	access object	operator info
HashJoin	root		Null-aware anti semi join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t3.a)]
├─IndexReader(Build)	root		index:IndexFullScan
│ └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4) */ * from t1 left join t2 on t1.a=t2.a right join t4 on t1.b = t4.b where exists (select t3.a from t3);
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b
└─TableDual	root		rows:0
ScalarSubQuery	root		Output: ScalarQueryCol#13, ScalarQueryCol#14, ScalarQueryCol#15
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2) */ * from t1 left join t2 on t1.a=t2.a where exists (select t3.a from t3);
id	task	access object	operator info
TableDual	root		rows:0
ScalarSubQuery	root		Output: ScalarQueryCol#10, ScalarQueryCol#11, ScalarQueryCol#12
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3@sel_2) */ * from t1 join t2 on t1.a=t2.a where exists (select t3.a from t3);
id	task	access object	operator info
TableDual	root		rows:0
ScalarSubQuery	root		Output: ScalarQueryCol#10, ScalarQueryCol#11, ScalarQueryCol#12
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4) */ * from t1 join t2 on t1.a=t2.a right join t4 on t1.b = t4.b where not exists (select t3.a from t3);
id	task	access object	operator info
HashJoin	root		right outer join, left side:HashJoin, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.b))
  │   └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
      └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
ScalarSubQuery	root		Output: ScalarQueryCol#13, ScalarQueryCol#14, ScalarQueryCol#15
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3@sel_2) */ * from t1 left join t2 on t1.a=t2.a where not exists (select t3.a from t3);
id	task	access object	operator info
HashJoin	root		left outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
│   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
ScalarSubQuery	root		Output: ScalarQueryCol#10, ScalarQueryCol#11, ScalarQueryCol#12
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t3@sel_2) */ * from t1 join t2 on t1.a=t2.a where not exists (select t3.a from t3);
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a))
│   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:Selection
  └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
    └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
ScalarSubQuery	root		Output: ScalarQueryCol#10, ScalarQueryCol#11, ScalarQueryCol#12
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t3@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t4@sel_2, t1) */ * from t1 join (select * from t4) t2 on t1.a=t2.a join t3 on t2.b=t3.b;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t4.b, .__planner__core__casetest__rule__rule_join_reorder.t3.a, .__planner__core__casetest__rule__rule_join_reorder.t3.b
└─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
  │   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
  └─HashJoin(Probe)	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.b))
    │   └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
        └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t4@sel_2, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2, t4@sel_2) */ * from (select * from t4) t1 right join t2 on t1.a=t2.a join t3 on t2.b=t3.b;
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t3.b)]
├─TableReader(Build)	root		data:Selection
│ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t3.b))
│   └─TableFullScan	cop[tikv]	table:t3	keep order:false, stats:pseudo
└─HashJoin(Probe)	root		right outer join, left side:TableReader, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t4.a, .__planner__core__casetest__rule__rule_join_reorder.t2.a)]
  ├─TableReader(Build)	root		data:Selection
  │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
  │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t4.a))
      └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2, t4@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3) */ * from t1 join t2 on t1.a=t2.a right join (select * from t4) t3 on t2.b=t3.b;
id	task	access object	operator info
HashJoin	root		right outer join, left side:Projection, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.b, .__planner__core__casetest__rule__rule_join_reorder.t4.b)]
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t4	keep order:false, stats:pseudo
└─Projection(Probe)	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, .__planner__core__casetest__rule__rule_join_reorder.t1.b, .__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t2.b
  └─HashJoin	root		inner join, equal:[eq(.__planner__core__casetest__rule__rule_join_reorder.t2.a, .__planner__core__casetest__rule__rule_join_reorder.t1.a)]
    ├─TableReader(Build)	root		data:Selection
    │ └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.a)), not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t2.b))
    │   └─TableFullScan	cop[tikv]	table:t2	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:Selection
      └─Selection	cop[tikv]		not(isnull(.__planner__core__casetest__rule__rule_join_reorder.t1.a))
        └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1) */ t1.a, (select min(t2.a) from t2) from t1 join t3 on t1.a = t3.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, ScalarQueryCol#14(<nil>)->Column#15
└─MergeJoin	root		inner join, left key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, right key:.__planner__core__casetest__rule__rule_join_reorder.t3.a
  ├─IndexReader(Build)	root		index:IndexFullScan
  │ └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:true, stats:pseudo
  └─IndexReader(Probe)	root		index:IndexFullScan
    └─IndexFullScan	cop[tikv]	table:t1, index:a(a)	keep order:true, stats:pseudo
ScalarSubQuery	root		Output: ScalarQueryCol#14
└─MaxOneRow	root		
  └─StreamAgg	root		funcs:min(.__planner__core__casetest__rule__rule_join_reorder.t2.a)->Column#13
    └─Limit	root		offset:0, count:1
      └─IndexReader	root		index:Limit
        └─Limit	cop[tikv]		offset:0, count:1
          └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:true, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1, t2@sel_2) */ t1.a, (select min(t2.a) from t2) from t1 join t3 on t1.a = t3.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, ScalarQueryCol#14(<nil>)->Column#15
└─MergeJoin	root		inner join, left key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, right key:.__planner__core__casetest__rule__rule_join_reorder.t3.a
  ├─IndexReader(Build)	root		index:IndexFullScan
  │ └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:true, stats:pseudo
  └─IndexReader(Probe)	root		index:IndexFullScan
    └─IndexFullScan	cop[tikv]	table:t1, index:a(a)	keep order:true, stats:pseudo
ScalarSubQuery	root		Output: ScalarQueryCol#14
└─MaxOneRow	root		
  └─StreamAgg	root		funcs:min(.__planner__core__casetest__rule__rule_join_reorder.t2.a)->Column#13
    └─Limit	root		offset:0, count:1
      └─IndexReader	root		index:Limit
        └─Limit	cop[tikv]		offset:0, count:1
          └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:true, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1, t2@sel_2) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t1, t3) */ t1.a, (select min(t2.a) from t2) from t1 join t3 on t1.a = t3.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, ScalarQueryCol#14(<nil>)->Column#15
└─MergeJoin	root		inner join, left key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, right key:.__planner__core__casetest__rule__rule_join_reorder.t3.a
  ├─IndexReader(Build)	root		index:IndexFullScan
  │ └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:true, stats:pseudo
  └─IndexReader(Probe)	root		index:IndexFullScan
    └─IndexFullScan	cop[tikv]	table:t1, index:a(a)	keep order:true, stats:pseudo
ScalarSubQuery	root		Output: ScalarQueryCol#14
└─MaxOneRow	root		
  └─StreamAgg	root		funcs:min(.__planner__core__casetest__rule__rule_join_reorder.t2.a)->Column#13
    └─Limit	root		offset:0, count:1
      └─IndexReader	root		index:Limit
        └─Limit	cop[tikv]		offset:0, count:1
          └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:true, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t1, t3) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t2@sel_2, t1) */ t1.a, (select min(t2.a) from t2) from t1 left join t3 on t1.a = t3.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, ScalarQueryCol#14(<nil>)->Column#15
└─MergeJoin	root		left outer join, left side:IndexReader, left key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, right key:.__planner__core__casetest__rule__rule_join_reorder.t3.a
  ├─IndexReader(Build)	root		index:IndexFullScan
  │ └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:true, stats:pseudo
  └─IndexReader(Probe)	root		index:IndexFullScan
    └─IndexFullScan	cop[tikv]	table:t1, index:a(a)	keep order:true, stats:pseudo
ScalarSubQuery	root		Output: ScalarQueryCol#14
└─MaxOneRow	root		
  └─StreamAgg	root		funcs:min(.__planner__core__casetest__rule__rule_join_reorder.t2.a)->Column#13
    └─Limit	root		offset:0, count:1
      └─IndexReader	root		index:Limit
        └─Limit	cop[tikv]		offset:0, count:1
          └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:true, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t2@sel_2, t1) is inapplicable. Please specify the table names in the arguments.
explain format='plan_tree' select /*+ leading(t3, t2@sel_2) */ t1.a, (select min(t2.a) from t2) from t1 right join t3 on t1.a = t3.a;
id	task	access object	operator info
Projection	root		.__planner__core__casetest__rule__rule_join_reorder.t1.a, ScalarQueryCol#14(<nil>)->Column#15
└─MergeJoin	root		right outer join, left side:IndexReader, left key:.__planner__core__casetest__rule__rule_join_reorder.t1.a, right key:.__planner__core__casetest__rule__rule_join_reorder.t3.a
  ├─IndexReader(Build)	root		index:IndexFullScan
  │ └─IndexFullScan	cop[tikv]	table:t1, index:a(a)	keep order:true, stats:pseudo
  └─IndexReader(Probe)	root		index:IndexFullScan
    └─IndexFullScan	cop[tikv]	table:t3, index:a(a)	keep order:true, stats:pseudo
ScalarSubQuery	root		Output: ScalarQueryCol#14
└─MaxOneRow	root		
  └─StreamAgg	root		funcs:min(.__planner__core__casetest__rule__rule_join_reorder.t2.a)->Column#13
    └─Limit	root		offset:0, count:1
      └─IndexReader	root		index:Limit
        └─Limit	cop[tikv]		offset:0, count:1
          └─IndexFullScan	cop[tikv]	table:t2, index:a(a)	keep order:true, stats:pseudo
Level	Code	Message
Warning	1815	Hint leading(t3, t2@sel_2) is inapplicable. Please specify the table names in the arguments.
