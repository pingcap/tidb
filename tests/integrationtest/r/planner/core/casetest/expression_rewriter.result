set tidb_cost_model_version=2;
drop table if exists t1, t2;
create table t1(a int, b int);
insert into t1 values(1,1),(2,null),(null,3),(4,4);
analyze table t1 all columns;
create table t2(a int, b int);
insert into t2 values(1,1),(2,null),(null,3),(5,4);
analyze table t2 all columns;
set @@tidb_enable_chunk_rpc = on;
explain format='plan_tree' select * from t1 where (t1.a, t1.b) in (select a, b from t2);
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(planner__core__casetest__expression_rewriter.t1.a, planner__core__casetest__expression_rewriter.t2.a) eq(planner__core__casetest__expression_rewriter.t1.b, planner__core__casetest__expression_rewriter.t2.b)]
├─HashAgg(Build)	root		group by:planner__core__casetest__expression_rewriter.t2.a, planner__core__casetest__expression_rewriter.t2.b, funcs:firstrow(planner__core__casetest__expression_rewriter.t2.a)->planner__core__casetest__expression_rewriter.t2.a, funcs:firstrow(planner__core__casetest__expression_rewriter.t2.b)->planner__core__casetest__expression_rewriter.t2.b
│ └─TableReader	root		data:Selection
│   └─Selection	cop[tikv]		not(isnull(planner__core__casetest__expression_rewriter.t2.a)), not(isnull(planner__core__casetest__expression_rewriter.t2.b))
│     └─TableFullScan	cop[tikv]	table:t2	keep order:false
└─TableReader(Probe)	root		data:Selection
  └─Selection	cop[tikv]		not(isnull(planner__core__casetest__expression_rewriter.t1.a)), not(isnull(planner__core__casetest__expression_rewriter.t1.b))
    └─TableFullScan	cop[tikv]	table:t1	keep order:false
select * from t1 where (t1.a, t1.b) in (select a, b from t2);
a	b
1	1
explain format='plan_tree' select * from t1 where (t1.a, t1.b) not in (select a, b from t2);
id	task	access object	operator info
HashJoin	root		Null-aware anti semi join, left side:TableReader, equal:[eq(planner__core__casetest__expression_rewriter.t1.a, planner__core__casetest__expression_rewriter.t2.a) eq(planner__core__casetest__expression_rewriter.t1.b, planner__core__casetest__expression_rewriter.t2.b)]
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t2	keep order:false
└─TableReader(Probe)	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t1	keep order:false
select * from t1 where (t1.a, t1.b) not in (select a, b from t2);
a	b
4	4
explain format='plan_tree' select t1.a from t1 group by t1.a having (a, count(1)) in (select a, b from t2);
id	task	access object	operator info
HashJoin	root		inner join, equal:[eq(planner__core__casetest__expression_rewriter.t2.a, planner__core__casetest__expression_rewriter.t1.a) eq(planner__core__casetest__expression_rewriter.t2.b, Column#7)]
├─HashAgg(Build)	root		group by:planner__core__casetest__expression_rewriter.t2.a, planner__core__casetest__expression_rewriter.t2.b, funcs:firstrow(planner__core__casetest__expression_rewriter.t2.a)->planner__core__casetest__expression_rewriter.t2.a, funcs:firstrow(planner__core__casetest__expression_rewriter.t2.b)->planner__core__casetest__expression_rewriter.t2.b
│ └─TableReader	root		data:Selection
│   └─Selection	cop[tikv]		not(isnull(planner__core__casetest__expression_rewriter.t2.a)), not(isnull(planner__core__casetest__expression_rewriter.t2.b))
│     └─TableFullScan	cop[tikv]	table:t2	keep order:false
└─HashAgg(Probe)	root		group by:planner__core__casetest__expression_rewriter.t1.a, funcs:count(1)->Column#7, funcs:firstrow(planner__core__casetest__expression_rewriter.t1.a)->planner__core__casetest__expression_rewriter.t1.a
  └─TableReader	root		data:Selection
    └─Selection	cop[tikv]		not(isnull(planner__core__casetest__expression_rewriter.t1.a))
      └─TableFullScan	cop[tikv]	table:t1	keep order:false
select t1.a from t1 group by t1.a having (a, count(1)) in (select a, b from t2);
a
1
explain format='plan_tree' select t1.a from t1 group by t1.a having (a, count(1)) not in (select a, b from t2);
id	task	access object	operator info
HashJoin	root		Null-aware anti semi join, left side:HashAgg, equal:[eq(planner__core__casetest__expression_rewriter.t1.a, planner__core__casetest__expression_rewriter.t2.a) eq(Column#7, planner__core__casetest__expression_rewriter.t2.b)]
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:t2	keep order:false
└─HashAgg(Probe)	root		group by:planner__core__casetest__expression_rewriter.t1.a, funcs:count(1)->Column#7, funcs:firstrow(planner__core__casetest__expression_rewriter.t1.a)->planner__core__casetest__expression_rewriter.t1.a
  └─TableReader	root		data:TableFullScan
    └─TableFullScan	cop[tikv]	table:t1	keep order:false
select t1.a from t1 group by t1.a having (a, count(1)) not in (select a, b from t2);
a
4
drop table if exists t;
set tidb_cost_model_version=2;
create table t (a timestamp, b varbinary(32));
insert into t values ('2006-08-27 21:57:57', 0x373037343631313230);
analyze table t all columns;
explain format='plan_tree' select bit_or(a * b) from t;
id	task	access object	operator info
StreamAgg	root		funcs:bit_or(Column#6)->Column#4
└─TableReader	root		data:StreamAgg
  └─StreamAgg	cop[tikv]		funcs:bit_or(cast(mul(cast(planner__core__casetest__expression_rewriter.t.a, double BINARY), cast(planner__core__casetest__expression_rewriter.t.b, double BINARY)), bigint BINARY))->Column#6
    └─TableFullScan	cop[tikv]	table:t	keep order:false
