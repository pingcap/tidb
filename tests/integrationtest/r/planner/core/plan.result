drop table if exists t;
create table t (c1 int not null, c2 int not null, key idx_c2(c2)) partition by range (c2) (partition p0 values less than (10), partition p1 values less than (20));
explain format='hint'select /*+ use_index(@`sel_2` `test`.`t2` `idx_c2`), hash_agg(@`sel_2`), use_index(@`sel_1` `test`.`t1` `idx_c2`), hash_agg(@`sel_1`) */ count(1) from t t1 where c2 in (select c2 from t t2 where t2.c2 < 15 and t2.c2 > 12);
hint
hash_agg(@`sel_1`), hash_agg(@`sel_2`), use_index(@`sel_2` `planner__core__plan`.`t2` `idx_c2`), no_order_index(@`sel_2` `planner__core__plan`.`t2` `idx_c2`), agg_to_cop(@`sel_2`), use_index(@`sel_1` `planner__core__plan`.`t1` `idx_c2`), no_order_index(@`sel_1` `planner__core__plan`.`t1` `idx_c2`), use_index(@`sel_2` `test`.`t2` `idx_c2`), use_index(@`sel_1` `test`.`t1` `idx_c2`)
drop table if exists tt;
create table tt (a int,b int, index(a), index(b));
insert into tt values (1, 1), (2, 2), (3, 4);
explain select /*+nth_plan(4)*/ * from tt where a=1 and b=1;
id	estRows	task	access object	operator info
IndexLookUp_11	0.01	root		
├─IndexRangeScan_8(Build)	10.00	cop[tikv]	table:tt, index:a(a)	range:[1,1], keep order:false, stats:pseudo
└─Selection_10(Probe)	0.01	cop[tikv]		eq(planner__core__plan.tt.b, 1)
  └─TableRowIDScan_9	10.00	cop[tikv]	table:tt	keep order:false, stats:pseudo
Level	Code	Message
Warning	1105	The parameter of nth_plan() is out of range
drop table if exists t;
create table t (a int, b int, c int, index(a), index(b), index(a,b));
explain format='hint' select * from t where a=1 and b=1;
hint
use_index(@`sel_1` `planner__core__plan`.`t` `a_2`), no_order_index(@`sel_1` `planner__core__plan`.`t` `a_2`)
explain format='hint' select /*+ nth_plan(1) */ * from t where a=1 and b=1;
hint
use_index(@`sel_1` `planner__core__plan`.`t` ), nth_plan(1)
explain format='hint' select /*+ nth_plan(2) */ * from t where a=1 and b=1;
hint
use_index(@`sel_1` `planner__core__plan`.`t` `a_2`), no_order_index(@`sel_1` `planner__core__plan`.`t` `a_2`), nth_plan(2)
explain format='hint' select /*+ nth_plan(3) */ * from t where a=1 and b=1;
hint
use_index(@`sel_1` `planner__core__plan`.`t` `a_2`), no_order_index(@`sel_1` `planner__core__plan`.`t` `a_2`), nth_plan(3)
Level	Code	Message
Warning	1105	The parameter of nth_plan() is out of range
explain format='hint' select /*+ nth_plan(500) */ * from t where a=1 and b=1;
hint
use_index(@`sel_1` `planner__core__plan`.`t` `a_2`), no_order_index(@`sel_1` `planner__core__plan`.`t` `a_2`), nth_plan(500)
Level	Code	Message
Warning	1105	The parameter of nth_plan() is out of range
explain format='hint' select /*+ nth_plan(1) nth_plan(2) */ * from t where a=1 and b=1;
hint
use_index(@`sel_1` `planner__core__plan`.`t` `a_2`), no_order_index(@`sel_1` `planner__core__plan`.`t` `a_2`), nth_plan(1), nth_plan(2)
Level	Code	Message
Warning	1105	NTH_PLAN() is defined more than once, only the last definition takes effect: NTH_PLAN(2)
insert into t values (1,1,1);
select  /*+ nth_plan(1) */ * from t where a=1 and b=1;
a	b	c
1	1	1
select  /*+ nth_plan(2) */ * from t where a=1 and b=1;
a	b	c
1	1	1
select  /*+ nth_plan(1) */ * from tt where a=1 and b=1;
a	b
1	1
select  /*+ nth_plan(2) */ * from tt where a=1 and b=1;
a	b
1	1
select  /*+ nth_plan(3) */ * from tt where a=1 and b=1;
a	b
1	1
select /*+ nth_plan(1000) */ count(1) from t where (select count(1) from t, tt) > 1;
count(1)
1
Level	Code	Message
Warning	1105	The parameter of nth_plan() is out of range
select /*+ nth_plan(1000) */ count(1) from t where exists (select count(1) from t, tt);
count(1)
1
Level	Code	Message
Warning	1105	The parameter of nth_plan() is out of range
drop table if exists tt;
create table tt(a int, b int, key k((a+1)), key k1((a+1), b), key k2((a+1), b), key k3((a+1)));
explain format='brief' select * from tt where a+1 = 5 and b=3;
id	estRows	task	access object	operator info
Projection	0.10	root		planner__core__plan.tt.a, planner__core__plan.tt.b
└─IndexLookUp	0.10	root		
  ├─IndexRangeScan(Build)	0.10	cop[tikv]	table:tt, index:k1(`a` + 1, b)	range:[5 3,5 3], keep order:false, stats:pseudo
  └─TableRowIDScan(Probe)	0.10	cop[tikv]	table:tt	keep order:false, stats:pseudo
explain format='brief' select * from tt where a+1 = 5 and b=3;
id	estRows	task	access object	operator info
Projection	0.10	root		planner__core__plan.tt.a, planner__core__plan.tt.b
└─IndexLookUp	0.10	root		
  ├─IndexRangeScan(Build)	0.10	cop[tikv]	table:tt, index:k1(`a` + 1, b)	range:[5 3,5 3], keep order:false, stats:pseudo
  └─TableRowIDScan(Probe)	0.10	cop[tikv]	table:tt	keep order:false, stats:pseudo
explain format='brief' select * from tt where a+1 = 5 and b=3;
id	estRows	task	access object	operator info
Projection	0.10	root		planner__core__plan.tt.a, planner__core__plan.tt.b
└─IndexLookUp	0.10	root		
  ├─IndexRangeScan(Build)	0.10	cop[tikv]	table:tt, index:k1(`a` + 1, b)	range:[5 3,5 3], keep order:false, stats:pseudo
  └─TableRowIDScan(Probe)	0.10	cop[tikv]	table:tt	keep order:false, stats:pseudo
explain format='brief' select * from tt where a+1 = 5 and b=3;
id	estRows	task	access object	operator info
Projection	0.10	root		planner__core__plan.tt.a, planner__core__plan.tt.b
└─IndexLookUp	0.10	root		
  ├─IndexRangeScan(Build)	0.10	cop[tikv]	table:tt, index:k1(`a` + 1, b)	range:[5 3,5 3], keep order:false, stats:pseudo
  └─TableRowIDScan(Probe)	0.10	cop[tikv]	table:tt	keep order:false, stats:pseudo
explain format='brief' select * from tt where a+1 = 5 and b=3;
id	estRows	task	access object	operator info
Projection	0.10	root		planner__core__plan.tt.a, planner__core__plan.tt.b
└─IndexLookUp	0.10	root		
  ├─IndexRangeScan(Build)	0.10	cop[tikv]	table:tt, index:k1(`a` + 1, b)	range:[5 3,5 3], keep order:false, stats:pseudo
  └─TableRowIDScan(Probe)	0.10	cop[tikv]	table:tt	keep order:false, stats:pseudo
explain format='brief' select * from tt where a+1 = 5 and b=3;
id	estRows	task	access object	operator info
Projection	0.10	root		planner__core__plan.tt.a, planner__core__plan.tt.b
└─IndexLookUp	0.10	root		
  ├─IndexRangeScan(Build)	0.10	cop[tikv]	table:tt, index:k1(`a` + 1, b)	range:[5 3,5 3], keep order:false, stats:pseudo
  └─TableRowIDScan(Probe)	0.10	cop[tikv]	table:tt	keep order:false, stats:pseudo
explain format='brief' select * from tt where a+1 = 5 and b=3;
id	estRows	task	access object	operator info
Projection	0.10	root		planner__core__plan.tt.a, planner__core__plan.tt.b
└─IndexLookUp	0.10	root		
  ├─IndexRangeScan(Build)	0.10	cop[tikv]	table:tt, index:k1(`a` + 1, b)	range:[5 3,5 3], keep order:false, stats:pseudo
  └─TableRowIDScan(Probe)	0.10	cop[tikv]	table:tt	keep order:false, stats:pseudo
explain format='brief' select * from tt where a+1 = 5 and b=3;
id	estRows	task	access object	operator info
Projection	0.10	root		planner__core__plan.tt.a, planner__core__plan.tt.b
└─IndexLookUp	0.10	root		
  ├─IndexRangeScan(Build)	0.10	cop[tikv]	table:tt, index:k1(`a` + 1, b)	range:[5 3,5 3], keep order:false, stats:pseudo
  └─TableRowIDScan(Probe)	0.10	cop[tikv]	table:tt	keep order:false, stats:pseudo
explain format='brief' select * from tt where a+1 = 5 and b=3;
id	estRows	task	access object	operator info
Projection	0.10	root		planner__core__plan.tt.a, planner__core__plan.tt.b
└─IndexLookUp	0.10	root		
  ├─IndexRangeScan(Build)	0.10	cop[tikv]	table:tt, index:k1(`a` + 1, b)	range:[5 3,5 3], keep order:false, stats:pseudo
  └─TableRowIDScan(Probe)	0.10	cop[tikv]	table:tt	keep order:false, stats:pseudo
explain format='brief' select * from tt where a+1 = 5 and b=3;
id	estRows	task	access object	operator info
Projection	0.10	root		planner__core__plan.tt.a, planner__core__plan.tt.b
└─IndexLookUp	0.10	root		
  ├─IndexRangeScan(Build)	0.10	cop[tikv]	table:tt, index:k1(`a` + 1, b)	range:[5 3,5 3], keep order:false, stats:pseudo
  └─TableRowIDScan(Probe)	0.10	cop[tikv]	table:tt	keep order:false, stats:pseudo
insert into tt values(4, 3);
select * from tt where a+1 = 5 and b=3;
a	b
4	3
drop table if exists t1;
CREATE TABLE `t1` (  `a` varchar(10) DEFAULT NULL,  `b` varchar(10) DEFAULT NULL,  KEY `expression_index` ((concat(`a`, `b`))),  KEY `expression_index_2` ((concat(`a`, `b`))),  KEY `idx` ((concat(`a`, `b`)),`a`),  KEY `idx1` (`a`,(concat(`a`, `b`))),  KEY `idx2` (`a`,(concat(`a`, `b`)),`b`));
explain format='brief' select * from t1  where concat(a, b) like "aadwa" and a = "a";
id	estRows	task	access object	operator info
Projection	0.10	root		planner__core__plan.t1.a, planner__core__plan.t1.b
└─IndexReader	0.10	root		index:IndexRangeScan
  └─IndexRangeScan	0.10	cop[tikv]	table:t1, index:idx2(a, concat(`a`, `b`), b)	range:["a" "aadwa","a" "aadwa"], keep order:false, stats:pseudo
explain format='brief' select b from t1 where concat(a, b) >= "aa" and a = "b";
id	estRows	task	access object	operator info
Projection	33.33	root		planner__core__plan.t1.b
└─IndexReader	33.33	root		index:IndexRangeScan
  └─IndexRangeScan	33.33	cop[tikv]	table:t1, index:idx2(a, concat(`a`, `b`), b)	range:["b" "aa","b" +inf], keep order:false, stats:pseudo
explain format='brief' select * from t1  where concat(a, b) like "aadwa" and a = "a";
id	estRows	task	access object	operator info
Projection	0.10	root		planner__core__plan.t1.a, planner__core__plan.t1.b
└─IndexReader	0.10	root		index:IndexRangeScan
  └─IndexRangeScan	0.10	cop[tikv]	table:t1, index:idx2(a, concat(`a`, `b`), b)	range:["a" "aadwa","a" "aadwa"], keep order:false, stats:pseudo
explain format='brief' select b from t1 where concat(a, b) >= "aa" and a = "b";
id	estRows	task	access object	operator info
Projection	33.33	root		planner__core__plan.t1.b
└─IndexReader	33.33	root		index:IndexRangeScan
  └─IndexRangeScan	33.33	cop[tikv]	table:t1, index:idx2(a, concat(`a`, `b`), b)	range:["b" "aa","b" +inf], keep order:false, stats:pseudo
explain format='brief' select * from t1  where concat(a, b) like "aadwa" and a = "a";
id	estRows	task	access object	operator info
Projection	0.10	root		planner__core__plan.t1.a, planner__core__plan.t1.b
└─IndexReader	0.10	root		index:IndexRangeScan
  └─IndexRangeScan	0.10	cop[tikv]	table:t1, index:idx2(a, concat(`a`, `b`), b)	range:["a" "aadwa","a" "aadwa"], keep order:false, stats:pseudo
explain format='brief' select b from t1 where concat(a, b) >= "aa" and a = "b";
id	estRows	task	access object	operator info
Projection	33.33	root		planner__core__plan.t1.b
└─IndexReader	33.33	root		index:IndexRangeScan
  └─IndexRangeScan	33.33	cop[tikv]	table:t1, index:idx2(a, concat(`a`, `b`), b)	range:["b" "aa","b" +inf], keep order:false, stats:pseudo
explain format='brief' select * from t1  where concat(a, b) like "aadwa" and a = "a";
id	estRows	task	access object	operator info
Projection	0.10	root		planner__core__plan.t1.a, planner__core__plan.t1.b
└─IndexReader	0.10	root		index:IndexRangeScan
  └─IndexRangeScan	0.10	cop[tikv]	table:t1, index:idx2(a, concat(`a`, `b`), b)	range:["a" "aadwa","a" "aadwa"], keep order:false, stats:pseudo
explain format='brief' select b from t1 where concat(a, b) >= "aa" and a = "b";
id	estRows	task	access object	operator info
Projection	33.33	root		planner__core__plan.t1.b
└─IndexReader	33.33	root		index:IndexRangeScan
  └─IndexRangeScan	33.33	cop[tikv]	table:t1, index:idx2(a, concat(`a`, `b`), b)	range:["b" "aa","b" +inf], keep order:false, stats:pseudo
explain format='brief' select * from t1  where concat(a, b) like "aadwa" and a = "a";
id	estRows	task	access object	operator info
Projection	0.10	root		planner__core__plan.t1.a, planner__core__plan.t1.b
└─IndexReader	0.10	root		index:IndexRangeScan
  └─IndexRangeScan	0.10	cop[tikv]	table:t1, index:idx2(a, concat(`a`, `b`), b)	range:["a" "aadwa","a" "aadwa"], keep order:false, stats:pseudo
explain format='brief' select b from t1 where concat(a, b) >= "aa" and a = "b";
id	estRows	task	access object	operator info
Projection	33.33	root		planner__core__plan.t1.b
└─IndexReader	33.33	root		index:IndexRangeScan
  └─IndexRangeScan	33.33	cop[tikv]	table:t1, index:idx2(a, concat(`a`, `b`), b)	range:["b" "aa","b" +inf], keep order:false, stats:pseudo
explain format='brief' select * from t1  where concat(a, b) like "aadwa" and a = "a";
id	estRows	task	access object	operator info
Projection	0.10	root		planner__core__plan.t1.a, planner__core__plan.t1.b
└─IndexReader	0.10	root		index:IndexRangeScan
  └─IndexRangeScan	0.10	cop[tikv]	table:t1, index:idx2(a, concat(`a`, `b`), b)	range:["a" "aadwa","a" "aadwa"], keep order:false, stats:pseudo
explain format='brief' select b from t1 where concat(a, b) >= "aa" and a = "b";
id	estRows	task	access object	operator info
Projection	33.33	root		planner__core__plan.t1.b
└─IndexReader	33.33	root		index:IndexRangeScan
  └─IndexRangeScan	33.33	cop[tikv]	table:t1, index:idx2(a, concat(`a`, `b`), b)	range:["b" "aa","b" +inf], keep order:false, stats:pseudo
explain format='brief' select * from t1  where concat(a, b) like "aadwa" and a = "a";
id	estRows	task	access object	operator info
Projection	0.10	root		planner__core__plan.t1.a, planner__core__plan.t1.b
└─IndexReader	0.10	root		index:IndexRangeScan
  └─IndexRangeScan	0.10	cop[tikv]	table:t1, index:idx2(a, concat(`a`, `b`), b)	range:["a" "aadwa","a" "aadwa"], keep order:false, stats:pseudo
explain format='brief' select b from t1 where concat(a, b) >= "aa" and a = "b";
id	estRows	task	access object	operator info
Projection	33.33	root		planner__core__plan.t1.b
└─IndexReader	33.33	root		index:IndexRangeScan
  └─IndexRangeScan	33.33	cop[tikv]	table:t1, index:idx2(a, concat(`a`, `b`), b)	range:["b" "aa","b" +inf], keep order:false, stats:pseudo
explain format='brief' select * from t1  where concat(a, b) like "aadwa" and a = "a";
id	estRows	task	access object	operator info
Projection	0.10	root		planner__core__plan.t1.a, planner__core__plan.t1.b
└─IndexReader	0.10	root		index:IndexRangeScan
  └─IndexRangeScan	0.10	cop[tikv]	table:t1, index:idx2(a, concat(`a`, `b`), b)	range:["a" "aadwa","a" "aadwa"], keep order:false, stats:pseudo
explain format='brief' select b from t1 where concat(a, b) >= "aa" and a = "b";
id	estRows	task	access object	operator info
Projection	33.33	root		planner__core__plan.t1.b
└─IndexReader	33.33	root		index:IndexRangeScan
  └─IndexRangeScan	33.33	cop[tikv]	table:t1, index:idx2(a, concat(`a`, `b`), b)	range:["b" "aa","b" +inf], keep order:false, stats:pseudo
explain format='brief' select * from t1  where concat(a, b) like "aadwa" and a = "a";
id	estRows	task	access object	operator info
Projection	0.10	root		planner__core__plan.t1.a, planner__core__plan.t1.b
└─IndexReader	0.10	root		index:IndexRangeScan
  └─IndexRangeScan	0.10	cop[tikv]	table:t1, index:idx2(a, concat(`a`, `b`), b)	range:["a" "aadwa","a" "aadwa"], keep order:false, stats:pseudo
explain format='brief' select b from t1 where concat(a, b) >= "aa" and a = "b";
id	estRows	task	access object	operator info
Projection	33.33	root		planner__core__plan.t1.b
└─IndexReader	33.33	root		index:IndexRangeScan
  └─IndexRangeScan	33.33	cop[tikv]	table:t1, index:idx2(a, concat(`a`, `b`), b)	range:["b" "aa","b" +inf], keep order:false, stats:pseudo
explain format='brief' select * from t1  where concat(a, b) like "aadwa" and a = "a";
id	estRows	task	access object	operator info
Projection	0.10	root		planner__core__plan.t1.a, planner__core__plan.t1.b
└─IndexReader	0.10	root		index:IndexRangeScan
  └─IndexRangeScan	0.10	cop[tikv]	table:t1, index:idx2(a, concat(`a`, `b`), b)	range:["a" "aadwa","a" "aadwa"], keep order:false, stats:pseudo
explain format='brief' select b from t1 where concat(a, b) >= "aa" and a = "b";
id	estRows	task	access object	operator info
Projection	33.33	root		planner__core__plan.t1.b
└─IndexReader	33.33	root		index:IndexRangeScan
  └─IndexRangeScan	33.33	cop[tikv]	table:t1, index:idx2(a, concat(`a`, `b`), b)	range:["b" "aa","b" +inf], keep order:false, stats:pseudo
insert into t1 values("a", "adwa");
select * from t1  where concat(a, b) like "aadwa" and a = "a";
a	b
a	adwa
drop table if exists c;
drop table if exists o;
create table c(c_id bigint);
create table o(o_id bigint, c_id bigint);
insert into c values(1),(2),(3),(4),(5);
insert into o values(1,1),(2,1),(3,2),(4,2),(5,2);
set @@tidb_opt_agg_push_down=1;
select count(*) from c left join o on c.c_id=o.c_id;
count(*)
8
select count(c.c_id) from c left join o on c.c_id=o.c_id;
count(c.c_id)
8
select count(o.c_id) from c left join o on c.c_id=o.c_id;
count(o.c_id)
5
select sum(o.c_id is null) from c left join o on c.c_id=o.c_id;
sum(o.c_id is null)
3
select count(*) from c right join o on c.c_id=o.c_id;
count(*)
5
select count(o.c_id) from c right join o on c.c_id=o.c_id;
count(o.c_id)
5
set @@tidb_opt_agg_push_down=0;
select count(*) from c left join o on c.c_id=o.c_id;
count(*)
8
select count(c.c_id) from c left join o on c.c_id=o.c_id;
count(c.c_id)
8
select count(o.c_id) from c left join o on c.c_id=o.c_id;
count(o.c_id)
5
select sum(o.c_id is null) from c left join o on c.c_id=o.c_id;
sum(o.c_id is null)
3
select count(*) from c right join o on c.c_id=o.c_id;
count(*)
5
select count(o.c_id) from c right join o on c.c_id=o.c_id;
count(o.c_id)
5
set @@tidb_opt_agg_push_down=DEFAULT;
CREATE VIEW v0(c0) AS SELECT NULL;
SELECT v0.c0 FROM v0 WHERE (v0.c0 IS NULL) LIKE(NULL);
c0
SELECT v0.c0 FROM (SELECT null as c0) v0 WHERE (v0.c0 IS NULL) like (NULL);
c0
CREATE TABLE t0(c0 BOOL, PRIMARY KEY(c0));
INSERT INTO t0 VALUES (FALSE);
SELECT * FROM t0 WHERE NOT (('4')AND(t0.c0<=>FALSE));
c0
explain SELECT * FROM t0 WHERE NOT (('4')AND(t0.c0<=>FALSE));
id	estRows	task	access object	operator info
TableReader_7	8000.00	root		data:Selection_6
└─Selection_6	8000.00	cop[tikv]		or(0, not(nulleq(planner__core__plan.t0.c0, 0)))
  └─TableFullScan_5	10000.00	cop[tikv]	table:t0	keep order:false, stats:pseudo
SELECT * FROM t0 WHERE (('4')AND(t0.c0<=>FALSE));
c0
0
explain SELECT * FROM t0 WHERE (('4')AND(t0.c0<=>FALSE));
id	estRows	task	access object	operator info
Point_Get_5	1.00	root	table:t0	handle:0
drop table if exists t0, t1;
CREATE TABLE t0(c0 BLOB(5), c1 BLOB(5));
CREATE TABLE t1 (c0 BOOL);
INSERT INTO t1 VALUES(false);
INSERT INTO t0(c0, c1) VALUES ('>', true);
SELECT * FROM t0 LEFT OUTER JOIN t1 ON NULL;
c0	c1	c0
>	1	NULL
SELECT NOT '2' =(t1.c0 AND t0.c1 IS NULL) FROM t0 LEFT OUTER JOIN t1 ON NULL;
NOT '2' =(t1.c0 AND t0.c1 IS NULL)
1
SELECT * FROM t0 LEFT JOIN t1 ON NULL WHERE NOT '2' =(t1.c0 AND t0.c1 IS NULL);
c0	c1	c0
>	1	NULL
SELECT * FROM t0 LEFT JOIN t1 ON NULL WHERE t1.c0 or true;
c0	c1	c0
>	1	NULL
SELECT * FROM t0 LEFT JOIN t1 ON NULL WHERE not(t1.c0 and false);
c0	c1	c0
>	1	NULL
CREATE TABLE t2(c0 INT);
CREATE TABLE t3(c0 INT);
INSERT INTO t3 VALUES (1);
SELECT ((NOT ('i'))AND(t2.c0)) IS NULL FROM  t2 RIGHT JOIN t3 ON t3.c0;
((NOT ('i'))AND(t2.c0)) IS NULL
1
SELECT * FROM t2 RIGHT JOIN t3 ON t2.c0 WHERE ((NOT ('i'))AND(t2.c0)) IS NULL;
c0	c0
NULL	1
drop table if exists t;
create table t (a int, b int, c int, d int, key(a));
create index hypo_a type hypo on t (a);
create index hypo_bc type hypo on t (b, c);
show create table t;
Table	Create Table
t	CREATE TABLE `t` (
  `a` int(11) DEFAULT NULL,
  `b` int(11) DEFAULT NULL,
  `c` int(11) DEFAULT NULL,
  `d` int(11) DEFAULT NULL,
  KEY `a` (`a`),
  KEY `hypo_a` (`a`) /* HYPO INDEX */,
  KEY `hypo_bc` (`b`,`c`) /* HYPO INDEX */
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
drop hypo index hypo_a on t;
drop hypo index hypo_bc on t;
show create table t;
Table	Create Table
t	CREATE TABLE `t` (
  `a` int(11) DEFAULT NULL,
  `b` int(11) DEFAULT NULL,
  `c` int(11) DEFAULT NULL,
  `d` int(11) DEFAULT NULL,
  KEY `a` (`a`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
drop table if exists t;
create table t (a int);
explain select a from t where a = 1;
id	estRows	task	access object	operator info
TableReader_7	10.00	root		data:Selection_6
└─Selection_6	10.00	cop[tikv]		eq(planner__core__plan.t.a, 1)
  └─TableFullScan_5	10000.00	cop[tikv]	table:t	keep order:false, stats:pseudo
create index hypo_a type hypo on t (a);
explain select a from t where a = 1;
id	estRows	task	access object	operator info
IndexReader_6	10.00	root		index:IndexRangeScan_5
└─IndexRangeScan_5	10.00	cop[tikv]	table:t, index:hypo_a(a)	range:[1,1], keep order:false, stats:pseudo
drop hypo index hypo_a on t;
create unique index hypo_a type hypo on t (a);
explain select a from t where a = 1;
id	estRows	task	access object	operator info
Point_Get_5	1.00	root	table:t, index:hypo_a(a)	
drop table if exists t;
create table t (a int);
explain select a from t;
id	estRows	task	access object	operator info
IndexReader_7	10000.00	root		index:IndexFullScan_6
└─IndexFullScan_6	10000.00	cop[tikv]	table:t, index:hypo_a(a)	keep order:false, stats:pseudo
alter table t set hypo tiflash replica 1;
explain select a from t;
id	estRows	task	access object	operator info
TableReader_14	10000.00	root		MppVersion: 2, data:ExchangeSender_13
└─ExchangeSender_13	10000.00	mpp[tiflash]		ExchangeType: PassThrough
  └─TableFullScan_12	10000.00	mpp[tiflash]	table:t	keep order:false, stats:pseudo
alter table t set hypo tiflash replica 0;
explain select a from t;
id	estRows	task	access object	operator info
IndexReader_7	10000.00	root		index:IndexFullScan_6
└─IndexFullScan_6	10000.00	cop[tikv]	table:t, index:hypo_a(a)	keep order:false, stats:pseudo
