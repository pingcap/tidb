set tidb_cost_model_version=1;
create table t(id int, value varchar(20) charset utf8mb4 collate utf8mb4_general_ci, value1 varchar(20) charset utf8mb4 collate utf8mb4_bin);
insert into t values (1, 'abc', 'abc '),(4, 'Abc', 'abc'),(3,'def', 'def '), (5, 'abc', 'ABC');
explain format='plan_tree' select group_concat(value order by 1) from t;
id	task	access object	operator info
HashAgg	root		funcs:group_concat(collation_agg_func.t.value order by collation_agg_func.t.value separator ",")->Column#5
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
select group_concat(value order by 1) from t;
group_concat(value order by 1)
Abc,abc,abc,def
explain format='plan_tree' select group_concat(value) from t;
id	task	access object	operator info
HashAgg	root		funcs:group_concat(collation_agg_func.t.value separator ",")->Column#5
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
select group_concat(value) from t;
group_concat(value)
abc,Abc,def,abc
explain format='plan_tree' select group_concat(value collate utf8mb4_bin) from t;
id	task	access object	operator info
HashAgg	root		funcs:group_concat(Column#6 separator ",")->Column#5
└─Projection	root		cast(collation_agg_func.t.value, varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin)->Column#6
  └─TableReader	root		data:TableFullScan
    └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
select group_concat(value collate utf8mb4_bin) from t;
group_concat(value collate utf8mb4_bin)
abc,Abc,def,abc
explain format='plan_tree' select group_concat(distinct value order by 1) from t;
id	task	access object	operator info
StreamAgg	root		funcs:group_concat(distinct collation_agg_func.t.value order by collation_agg_func.t.value separator ",")->Column#5
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
select upper(group_concat(distinct value order by 1)) from t;
upper(group_concat(distinct value order by 1))
ABC,ABC,DEF
explain format='plan_tree' select group_concat(distinct value collate utf8mb4_bin order by 1) from t;
id	task	access object	operator info
StreamAgg	root		funcs:group_concat(distinct Column#6 order by Column#6 separator ",")->Column#5
└─Projection	root		cast(collation_agg_func.t.value, varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin)->Column#6
  └─TableReader	root		data:TableFullScan
    └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
select upper(group_concat(distinct value collate utf8mb4_bin order by 1)) from t;
upper(group_concat(distinct value collate utf8mb4_bin order by 1))
ABC,ABC,DEF
explain format='plan_tree' select group_concat(distinct value) from t;
id	task	access object	operator info
StreamAgg	root		funcs:group_concat(distinct collation_agg_func.t.value separator ",")->Column#5
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
select upper(group_concat(distinct value)) from t;
upper(group_concat(distinct value))
ABC,ABC,DEF
explain format='plan_tree' select group_concat(distinct value collate utf8mb4_bin) from t;
id	task	access object	operator info
StreamAgg	root		funcs:group_concat(distinct Column#6 separator ",")->Column#5
└─Projection	root		cast(collation_agg_func.t.value, varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin)->Column#6
  └─TableReader	root		data:TableFullScan
    └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
select upper(group_concat(distinct value collate utf8mb4_bin)) from t;
upper(group_concat(distinct value collate utf8mb4_bin))
ABC,ABC,DEF
explain format='plan_tree' select count(distinct value) from t;
id	task	access object	operator info
StreamAgg	root		funcs:count(distinct collation_agg_func.t.value)->Column#5
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
select count(distinct value) from t;
count(distinct value)
3
explain format='plan_tree' select count(distinct value collate utf8mb4_bin) from t;
id	task	access object	operator info
StreamAgg	root		funcs:count(distinct Column#8)->Column#5
└─Projection	root		cast(collation_agg_func.t.value, varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin)->Column#8
  └─TableReader	root		data:TableFullScan
    └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
select count(distinct value collate utf8mb4_bin) from t;
count(distinct value collate utf8mb4_bin)
3
explain format='plan_tree' select count(distinct value, value1) from t;
id	task	access object	operator info
StreamAgg	root		funcs:count(distinct collation_agg_func.t.value, collation_agg_func.t.value1)->Column#5
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
select count(distinct value, value1) from t;
count(distinct value, value1)
4
explain format='plan_tree' select count(distinct value collate utf8mb4_bin, value1) from t;
id	task	access object	operator info
StreamAgg	root		funcs:count(distinct Column#8, Column#9)->Column#5
└─Projection	root		cast(collation_agg_func.t.value, varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin)->Column#8, collation_agg_func.t.value1->Column#9
  └─TableReader	root		data:TableFullScan
    └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
select count(distinct value collate utf8mb4_bin, value1) from t;
count(distinct value collate utf8mb4_bin, value1)
4
explain format='plan_tree' select approx_count_distinct(value) from t;
id	task	access object	operator info
HashAgg	root		funcs:approx_count_distinct(collation_agg_func.t.value)->Column#5
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
select approx_count_distinct(value) from t;
approx_count_distinct(value)
3
explain format='plan_tree' select approx_count_distinct(value collate utf8mb4_bin) from t;
id	task	access object	operator info
HashAgg	root		funcs:approx_count_distinct(Column#6)->Column#5
└─Projection	root		cast(collation_agg_func.t.value, varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin)->Column#6
  └─TableReader	root		data:TableFullScan
    └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
select approx_count_distinct(value collate utf8mb4_bin) from t;
approx_count_distinct(value collate utf8mb4_bin)
3
explain format='plan_tree' select approx_count_distinct(value, value1) from t;
id	task	access object	operator info
HashAgg	root		funcs:approx_count_distinct(collation_agg_func.t.value, collation_agg_func.t.value1)->Column#5
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
select approx_count_distinct(value, value1) from t;
approx_count_distinct(value, value1)
4
explain format='plan_tree' select approx_count_distinct(value collate utf8mb4_bin, value1) from t;
id	task	access object	operator info
HashAgg	root		funcs:approx_count_distinct(Column#6, Column#7)->Column#5
└─Projection	root		cast(collation_agg_func.t.value, varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin)->Column#6, collation_agg_func.t.value1->Column#7
  └─TableReader	root		data:TableFullScan
    └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
select approx_count_distinct(value collate utf8mb4_bin, value1) from t;
approx_count_distinct(value collate utf8mb4_bin, value1)
4
create table tt(a char(10), b enum('a', 'B', 'c'), c set('a', 'B', 'c'), d json) collate utf8mb4_general_ci;
insert into tt values ("a", "a", "a", JSON_OBJECT("a", "a"));
insert into tt values ("A", "A", "A", JSON_OBJECT("A", "A"));
insert into tt values ("b", "b", "b", JSON_OBJECT("b", "b"));
insert into tt values ("B", "B", "B", JSON_OBJECT("B", "B"));
insert into tt values ("c", "c", "c", JSON_OBJECT("c", "c"));
insert into tt values ("C", "C", "C", JSON_OBJECT("C", "C"));
split table tt by (0), (1), (2), (3), (4), (5);
TOTAL_SPLIT_REGION	SCATTER_FINISH_RATIO
6	1
explain format='plan_tree' select min(a) from tt;
id	task	access object	operator info
StreamAgg	root		funcs:min(collation_agg_func.tt.a)->Column#6
└─TopN	root		collation_agg_func.tt.a, offset:0, count:1
  └─TableReader	root		data:TopN
    └─TopN	cop[tikv]		collation_agg_func.tt.a, offset:0, count:1
      └─Selection	cop[tikv]		not(isnull(collation_agg_func.tt.a))
        └─TableFullScan	cop[tikv]	table:tt	keep order:false, stats:pseudo
explain format='plan_tree' select lower(min(a)) from tt;
id	task	access object	operator info
Projection	root		lower(Column#6)->Column#7
└─StreamAgg	root		funcs:min(collation_agg_func.tt.a)->Column#6
  └─TopN	root		collation_agg_func.tt.a, offset:0, count:1
    └─TableReader	root		data:TopN
      └─TopN	cop[tikv]		collation_agg_func.tt.a, offset:0, count:1
        └─Selection	cop[tikv]		not(isnull(collation_agg_func.tt.a))
          └─TableFullScan	cop[tikv]	table:tt	keep order:false, stats:pseudo
select lower(min(a)) from tt;
lower(min(a))
b
explain format='plan_tree' select min(a collate utf8mb4_bin) from tt;
id	task	access object	operator info
StreamAgg	root		funcs:min(Column#8)->Column#6
└─Projection	root		cast(collation_agg_func.tt.a, char(10) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin)->Column#8
  └─Projection	root		collation_agg_func.tt.a
    └─TopN	root		Column#7, offset:0, count:1
      └─Projection	root		collation_agg_func.tt.a, cast(collation_agg_func.tt.a, char(10) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin)->Column#7
        └─TableReader	root		data:TopN
          └─TopN	cop[tikv]		cast(collation_agg_func.tt.a, char(10) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin), offset:0, count:1
            └─Selection	cop[tikv]		not(isnull(cast(collation_agg_func.tt.a, char(10) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin)))
              └─TableFullScan	cop[tikv]	table:tt	keep order:false, stats:pseudo
select min(a collate utf8mb4_bin) from tt;
min(a collate utf8mb4_bin)
B
explain format='plan_tree' select max(a) from tt;
id	task	access object	operator info
StreamAgg	root		funcs:max(collation_agg_func.tt.a)->Column#6
└─TopN	root		collation_agg_func.tt.a:desc, offset:0, count:1
  └─TableReader	root		data:TopN
    └─TopN	cop[tikv]		collation_agg_func.tt.a:desc, offset:0, count:1
      └─Selection	cop[tikv]		not(isnull(collation_agg_func.tt.a))
        └─TableFullScan	cop[tikv]	table:tt	keep order:false, stats:pseudo
select max(a) from tt;
max(a)
c
explain format='plan_tree' select max(a collate utf8mb4_bin) from tt;
id	task	access object	operator info
StreamAgg	root		funcs:max(Column#8)->Column#6
└─Projection	root		cast(collation_agg_func.tt.a, char(10) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin)->Column#8
  └─Projection	root		collation_agg_func.tt.a
    └─TopN	root		Column#7:desc, offset:0, count:1
      └─Projection	root		collation_agg_func.tt.a, cast(collation_agg_func.tt.a, char(10) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin)->Column#7
        └─TableReader	root		data:TopN
          └─TopN	cop[tikv]		cast(collation_agg_func.tt.a, char(10) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin):desc, offset:0, count:1
            └─Selection	cop[tikv]		not(isnull(cast(collation_agg_func.tt.a, char(10) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin)))
              └─TableFullScan	cop[tikv]	table:tt	keep order:false, stats:pseudo
select max(a collate utf8mb4_bin) from tt;
max(a collate utf8mb4_bin)
c
explain format='plan_tree' select min(b) from tt;
id	task	access object	operator info
StreamAgg	root		funcs:min(Column#8)->Column#6
└─TableReader	root		data:StreamAgg
  └─StreamAgg	cop[tikv]		funcs:min(collation_agg_func.tt.b)->Column#8
    └─TableFullScan	cop[tikv]	table:tt	keep order:false, stats:pseudo
select min(b) from tt;
min(b)
B
explain format='plan_tree' select min(b collate utf8mb4_bin) from tt;
Error 1235 (42000): This version of TiDB doesn't yet support 'use collate clause for enum or set'
select min(b collate utf8mb4_bin) from tt;
Error 1235 (42000): This version of TiDB doesn't yet support 'use collate clause for enum or set'
explain format='plan_tree' select max(b) from tt;
id	task	access object	operator info
StreamAgg	root		funcs:max(Column#8)->Column#6
└─TableReader	root		data:StreamAgg
  └─StreamAgg	cop[tikv]		funcs:max(collation_agg_func.tt.b)->Column#8
    └─TableFullScan	cop[tikv]	table:tt	keep order:false, stats:pseudo
select max(b) from tt;
max(b)
c
explain format='plan_tree' select max(b collate utf8mb4_bin) from tt;
Error 1235 (42000): This version of TiDB doesn't yet support 'use collate clause for enum or set'
select max(b collate utf8mb4_bin) from tt;
Error 1235 (42000): This version of TiDB doesn't yet support 'use collate clause for enum or set'
explain format='plan_tree' select min(c) from tt;
id	task	access object	operator info
HashAgg	root		funcs:min(collation_agg_func.tt.c)->Column#6
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:tt	keep order:false, stats:pseudo
select min(c) from tt;
min(c)
B
explain format='plan_tree' select min(c collate utf8mb4_bin) from tt;
Error 1235 (42000): This version of TiDB doesn't yet support 'use collate clause for enum or set'
select min(c collate utf8mb4_bin) from tt;
Error 1235 (42000): This version of TiDB doesn't yet support 'use collate clause for enum or set'
explain format='plan_tree' select max(c) from tt;
id	task	access object	operator info
HashAgg	root		funcs:max(collation_agg_func.tt.c)->Column#6
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:tt	keep order:false, stats:pseudo
select max(c) from tt;
max(c)
c
explain format='plan_tree' select max(c collate utf8mb4_bin) from tt;
Error 1235 (42000): This version of TiDB doesn't yet support 'use collate clause for enum or set'
select max(c collate utf8mb4_bin) from tt;
Error 1235 (42000): This version of TiDB doesn't yet support 'use collate clause for enum or set'
explain format='plan_tree' select min(d) from tt;
id	task	access object	operator info
StreamAgg	root		funcs:min(collation_agg_func.tt.d)->Column#6
└─TopN	root		collation_agg_func.tt.d, offset:0, count:1
  └─TableReader	root		data:TopN
    └─TopN	cop[tikv]		collation_agg_func.tt.d, offset:0, count:1
      └─Selection	cop[tikv]		not(isnull(cast(collation_agg_func.tt.d, var_string(4294967295))))
        └─TableFullScan	cop[tikv]	table:tt	keep order:false, stats:pseudo
select min(d) from tt;
min(d)
{"B": "B"}
explain format='plan_tree' select min(d collate utf8mb4_bin) from tt;
id	task	access object	operator info
StreamAgg	root		funcs:min(Column#8)->Column#6
└─Projection	root		cast(collation_agg_func.tt.d, longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin)->Column#8
  └─Projection	root		collation_agg_func.tt.d
    └─TopN	root		Column#7, offset:0, count:1
      └─Projection	root		collation_agg_func.tt.d, cast(collation_agg_func.tt.d, longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin)->Column#7
        └─TableReader	root		data:TopN
          └─TopN	cop[tikv]		cast(collation_agg_func.tt.d, longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin), offset:0, count:1
            └─Selection	cop[tikv]		not(isnull(cast(collation_agg_func.tt.d, longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin)))
              └─TableFullScan	cop[tikv]	table:tt	keep order:false, stats:pseudo
select min(d collate utf8mb4_bin) from tt;
min(d collate utf8mb4_bin)
{"B": "B"}
explain format='plan_tree' select max(d) from tt;
id	task	access object	operator info
StreamAgg	root		funcs:max(collation_agg_func.tt.d)->Column#6
└─TopN	root		collation_agg_func.tt.d:desc, offset:0, count:1
  └─TableReader	root		data:TopN
    └─TopN	cop[tikv]		collation_agg_func.tt.d:desc, offset:0, count:1
      └─Selection	cop[tikv]		not(isnull(cast(collation_agg_func.tt.d, var_string(4294967295))))
        └─TableFullScan	cop[tikv]	table:tt	keep order:false, stats:pseudo
select max(d) from tt;
max(d)
{"c": "c"}
explain format='plan_tree' select max(d collate utf8mb4_bin) from tt;
id	task	access object	operator info
StreamAgg	root		funcs:max(Column#8)->Column#6
└─Projection	root		cast(collation_agg_func.tt.d, longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin)->Column#8
  └─Projection	root		collation_agg_func.tt.d
    └─TopN	root		Column#7:desc, offset:0, count:1
      └─Projection	root		collation_agg_func.tt.d, cast(collation_agg_func.tt.d, longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin)->Column#7
        └─TableReader	root		data:TopN
          └─TopN	cop[tikv]		cast(collation_agg_func.tt.d, longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin):desc, offset:0, count:1
            └─Selection	cop[tikv]		not(isnull(cast(collation_agg_func.tt.d, longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin)))
              └─TableFullScan	cop[tikv]	table:tt	keep order:false, stats:pseudo
select max(d collate utf8mb4_bin) from tt;
max(d collate utf8mb4_bin)
{"c": "c"}
