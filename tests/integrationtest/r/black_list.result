set tidb_cost_model_version=1;
drop table if exists t;
create table t (a int);
explain format = 'plan_tree' select * from t where a < 1;
id	task	access object	operator info
TableReader	root		data:Selection
└─Selection	cop[tikv]		lt(black_list.t.a, 1)
  └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
insert into mysql.opt_rule_blacklist values('predicate_push_down');
admin reload opt_rule_blacklist;
explain format = 'plan_tree' select * from t where a < 1;
id	task	access object	operator info
Selection	root		lt(black_list.t.a, 1)
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
delete from mysql.opt_rule_blacklist where name='predicate_push_down';
admin reload opt_rule_blacklist;
explain format = 'plan_tree' select * from t where a < 1;
id	task	access object	operator info
TableReader	root		data:Selection
└─Selection	cop[tikv]		lt(black_list.t.a, 1)
  └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
insert into mysql.expr_pushdown_blacklist values('<', 'tikv,tiflash,tidb', 'for test');
admin reload expr_pushdown_blacklist;
explain format = 'plan_tree' select * from t where a < 1;
id	task	access object	operator info
Selection	root		lt(black_list.t.a, 1)
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
delete from mysql.expr_pushdown_blacklist where name='<' and store_type = 'tikv,tiflash,tidb' and reason = 'for test';
admin reload expr_pushdown_blacklist;
explain format = 'plan_tree' select * from t where a < 1;
id	task	access object	operator info
TableReader	root		data:Selection
└─Selection	cop[tikv]		lt(black_list.t.a, 1)
  └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
insert into mysql.expr_pushdown_blacklist values('lt', 'tikv,tiflash,tidb', 'for test');
admin reload expr_pushdown_blacklist;
explain format = 'plan_tree' select * from t where a < 1;
id	task	access object	operator info
Selection	root		lt(black_list.t.a, 1)
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
delete from mysql.expr_pushdown_blacklist where name='lt' and store_type = 'tikv,tiflash,tidb' and reason = 'for test';
admin reload expr_pushdown_blacklist;
explain format = 'plan_tree' select * from t where a < 1;
id	task	access object	operator info
TableReader	root		data:Selection
└─Selection	cop[tikv]		lt(black_list.t.a, 1)
  └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
delete from mysql.expr_pushdown_blacklist;
admin reload expr_pushdown_blacklist;
drop table if exists t;
create table t(a enum('a','b','c'), b enum('a','b','c'), c int, index idx(b,a));
insert into t values(1,1,1),(2,2,2),(3,3,3);
insert into mysql.expr_pushdown_blacklist(name) values('enum');
admin reload expr_pushdown_blacklist;
explain format='plan_tree' select /*+ HASH_AGG() */ max(a) from t;
id	task	access object	operator info
HashAgg	root		funcs:max(black_list.t.a)->Column#5
└─IndexReader	root		index:IndexFullScan
  └─IndexFullScan	cop[tikv]	table:t, index:idx(b, a)	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ STREAM_AGG() */ max(a) from t;
id	task	access object	operator info
StreamAgg	root		funcs:max(black_list.t.a)->Column#5
└─IndexReader	root		index:IndexFullScan
  └─IndexFullScan	cop[tikv]	table:t, index:idx(b, a)	keep order:false, stats:pseudo
delete from mysql.expr_pushdown_blacklist;
admin reload expr_pushdown_blacklist;
explain format='plan_tree' select /*+ HASH_AGG() */ max(a) from t;
id	task	access object	operator info
HashAgg	root		funcs:max(Column#7)->Column#5
└─IndexReader	root		index:HashAgg
  └─HashAgg	cop[tikv]		funcs:max(black_list.t.a)->Column#7
    └─IndexFullScan	cop[tikv]	table:t, index:idx(b, a)	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ STREAM_AGG() */ max(a) from t;
id	task	access object	operator info
StreamAgg	root		funcs:max(Column#7)->Column#5
└─IndexReader	root		index:StreamAgg
  └─StreamAgg	cop[tikv]		funcs:max(black_list.t.a)->Column#7
    └─IndexFullScan	cop[tikv]	table:t, index:idx(b, a)	keep order:false, stats:pseudo
insert into mysql.expr_pushdown_blacklist(name) values('enum');
admin reload expr_pushdown_blacklist;
explain format='plan_tree' select * from t where a + b;
id	task	access object	operator info
Selection	root		plus(cast(black_list.t.a, double BINARY), cast(black_list.t.b, double BINARY))
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
explain format='plan_tree' select * from t where a + b;
id	task	access object	operator info
Selection	root		plus(cast(black_list.t.a, double BINARY), cast(black_list.t.b, double BINARY))
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
delete from mysql.expr_pushdown_blacklist;
admin reload expr_pushdown_blacklist;
explain format='plan_tree' select * from t where a + b;
id	task	access object	operator info
TableReader	root		data:Selection
└─Selection	cop[tikv]		plus(cast(black_list.t.a, double BINARY), cast(black_list.t.b, double BINARY))
  └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
explain format='plan_tree' select * from t where a + b;
id	task	access object	operator info
TableReader	root		data:Selection
└─Selection	cop[tikv]		plus(cast(black_list.t.a, double BINARY), cast(black_list.t.b, double BINARY))
  └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
insert into mysql.expr_pushdown_blacklist(name) values('enum');
admin reload expr_pushdown_blacklist;
explain format='plan_tree' select * from t where b = 1;
id	task	access object	operator info
Selection	root		eq(black_list.t.b, 1)
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
explain format='plan_tree' select * from t where b = 'a';
id	task	access object	operator info
Selection	root		eq(black_list.t.b, "a")
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
explain format='plan_tree' select * from t where b > 1;
id	task	access object	operator info
Selection	root		gt(black_list.t.b, 1)
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
explain format='plan_tree' select * from t where b > 'a';
id	task	access object	operator info
Selection	root		gt(black_list.t.b, "a")
└─TableReader	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:t	keep order:false, stats:pseudo
delete from mysql.expr_pushdown_blacklist;
admin reload expr_pushdown_blacklist;
explain format='plan_tree' select * from t where b = 1 and a = 1;
id	task	access object	operator info
IndexLookUp	root		
├─IndexRangeScan(Build)	cop[tikv]	table:t, index:idx(b, a)	range:["a" "a","a" "a"], keep order:false, stats:pseudo
└─TableRowIDScan(Probe)	cop[tikv]	table:t	keep order:false, stats:pseudo
explain format='plan_tree' select * from t where b = 'a' and a = 'a';
id	task	access object	operator info
IndexLookUp	root		
├─IndexRangeScan(Build)	cop[tikv]	table:t, index:idx(b, a)	range:["a" "a","a" "a"], keep order:false, stats:pseudo
└─TableRowIDScan(Probe)	cop[tikv]	table:t	keep order:false, stats:pseudo
explain format='plan_tree' select * from t where b = 1 and a > 1;
id	task	access object	operator info
IndexLookUp	root		
├─IndexRangeScan(Build)	cop[tikv]	table:t, index:idx(b, a)	range:("a" "a","a" +inf], keep order:false, stats:pseudo
└─TableRowIDScan(Probe)	cop[tikv]	table:t	keep order:false, stats:pseudo
explain format='plan_tree' select * from t where b = 1 and a > 'a';
id	task	access object	operator info
IndexLookUp	root		
├─IndexRangeScan(Build)	cop[tikv]	table:t, index:idx(b, a)	range:["a" "b","a" "b"], ["a" "c","a" "c"], keep order:false, stats:pseudo
└─TableRowIDScan(Probe)	cop[tikv]	table:t	keep order:false, stats:pseudo
