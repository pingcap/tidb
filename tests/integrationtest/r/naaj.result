set tidb_cost_model_version=1;
set @@session.tidb_enable_null_aware_anti_join=1;
select "***************************************************** PART 1 *****************************************************************" as name;
name
***************************************************** PART 1 *****************************************************************
drop table if exists naaj_A, naaj_B;
create table naaj_A(a int, b int, c int);
create table naaj_B(a int, b int, c int);
insert into naaj_A values (1,1,1);
insert into naaj_B values (1,2,2);
explain format = 'plan_tree' select (a, b) not in (select a, b from naaj_B) from naaj_A;
id	task	access object	operator info
HashJoin	root		Null-aware anti left outer semi join, left side:TableReader, equal:[eq(naaj.naaj_a.a, naaj.naaj_b.a) eq(naaj.naaj_a.b, naaj.naaj_b.b)]
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:naaj_B	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:naaj_A	keep order:false, stats:pseudo
select (a, b) not in (select a, b from naaj_B) from naaj_A;
(a, b) not in (select a, b from naaj_B)
1
explain format = 'plan_tree' select * from naaj_A where (a, b) not in (select a, b from naaj_B);
id	task	access object	operator info
HashJoin	root		Null-aware anti semi join, left side:TableReader, equal:[eq(naaj.naaj_a.a, naaj.naaj_b.a) eq(naaj.naaj_a.b, naaj.naaj_b.b)]
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:naaj_B	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:naaj_A	keep order:false, stats:pseudo
select * from naaj_A where (a, b) not in (select a, b from naaj_B);
a	b	c
1	1	1
insert into naaj_B values(1,1,1);
select (a, b) not in (select a, b from naaj_B) from naaj_A;
(a, b) not in (select a, b from naaj_B)
0
select * from naaj_A where (a, b) not in (select a, b from naaj_B);
a	b	c
insert into naaj_B values(1, null, 2);
select (a, b) not in (select a, b from naaj_B) from naaj_A;
(a, b) not in (select a, b from naaj_B)
0
select * from naaj_A where (a, b) not in (select a, b from naaj_B);
a	b	c
explain format = 'plan_tree' select (a, b) not in (select a, b from naaj_B where naaj_A.c > naaj_B.c) from naaj_A;
id	task	access object	operator info
HashJoin	root		Null-aware anti left outer semi join, left side:TableReader, equal:[eq(naaj.naaj_a.a, naaj.naaj_b.a) eq(naaj.naaj_a.b, naaj.naaj_b.b)], other cond:gt(naaj.naaj_a.c, naaj.naaj_b.c)
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:naaj_B	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:naaj_A	keep order:false, stats:pseudo
select (a, b) not in (select a, b from naaj_B where naaj_A.c > naaj_B.c) from naaj_A;
(a, b) not in (select a, b from naaj_B where naaj_A.c > naaj_B.c)
1
explain format = 'plan_tree' select * from naaj_A where (a, b) not in (select a, b from naaj_B where naaj_A.c > naaj_B.c);
id	task	access object	operator info
HashJoin	root		Null-aware anti semi join, left side:TableReader, equal:[eq(naaj.naaj_a.a, naaj.naaj_b.a) eq(naaj.naaj_a.b, naaj.naaj_b.b)], other cond:gt(naaj.naaj_a.c, naaj.naaj_b.c)
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:naaj_B	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:naaj_A	keep order:false, stats:pseudo
select * from naaj_A where (a, b) not in (select a, b from naaj_B where naaj_A.c > naaj_B.c);
a	b	c
1	1	1
explain format = 'plan_tree' select (a, b) not in (select a, b from naaj_B where naaj_A.a != naaj_B.a) from naaj_A;
id	task	access object	operator info
HashJoin	root		Null-aware anti left outer semi join, left side:TableReader, equal:[eq(naaj.naaj_a.a, naaj.naaj_b.a) eq(naaj.naaj_a.b, naaj.naaj_b.b)], other cond:ne(naaj.naaj_a.a, naaj.naaj_b.a)
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:naaj_B	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:naaj_A	keep order:false, stats:pseudo
select (a, b) not in (select a, b from naaj_B where naaj_A.a != naaj_B.a) from naaj_A;
(a, b) not in (select a, b from naaj_B where naaj_A.a != naaj_B.a)
1
explain format = 'plan_tree' select * from naaj_A where (a, b) not in (select a, b from naaj_B where naaj_A.a != naaj_B.a);
id	task	access object	operator info
HashJoin	root		Null-aware anti semi join, left side:TableReader, equal:[eq(naaj.naaj_a.a, naaj.naaj_b.a) eq(naaj.naaj_a.b, naaj.naaj_b.b)], other cond:ne(naaj.naaj_a.a, naaj.naaj_b.a)
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:naaj_B	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:naaj_A	keep order:false, stats:pseudo
select * from naaj_A where (a, b) not in (select a, b from naaj_B where naaj_A.a != naaj_B.a);
a	b	c
1	1	1
select * from naaj_A where (a, b) not in (select a, b from naaj_B where false);
a	b	c
1	1	1
select (a, b) not in (select a, b from naaj_B where false) from naaj_A;
(a, b) not in (select a, b from naaj_B where false)
1
insert into naaj_B values(2, null, 2);
select (a, b) not in (select a, b from naaj_B) from naaj_A;
(a, b) not in (select a, b from naaj_B)
0
select * from naaj_A where (a, b) not in (select a, b from naaj_B);
a	b	c
delete from naaj_B where a=1 and b=1 and c=1;
select (a, b) not in (select a, b from naaj_B) from naaj_A;
(a, b) not in (select a, b from naaj_B)
NULL
select * from naaj_A where (a, b) not in (select a, b from naaj_B);
a	b	c
select "***************************************************** PART 2 *****************************************************************" as name;
name
***************************************************** PART 2 *****************************************************************
delete from naaj_A;
delete from naaj_B;
insert into naaj_A values(1,null,1);
select (a, b) not in (select a, b from naaj_B) from naaj_A;
(a, b) not in (select a, b from naaj_B)
1
select * from naaj_A where (a, b) not in (select a, b from naaj_B);
a	b	c
1	NULL	1
insert into naaj_B values(2, null, 2);
select (a, b) not in (select a, b from naaj_B) from naaj_A;
(a, b) not in (select a, b from naaj_B)
1
select * from naaj_A where (a, b) not in (select a, b from naaj_B);
a	b	c
1	NULL	1
insert into naaj_B values(null, null, 2);
select (a, b) not in (select a, b from naaj_B) from naaj_A;
(a, b) not in (select a, b from naaj_B)
NULL
select * from naaj_A where (a, b) not in (select a, b from naaj_B);
a	b	c
delete from naaj_B;
insert into naaj_B values(2, 2, 2);
select (a, b) not in (select a, b from naaj_B) from naaj_A;
(a, b) not in (select a, b from naaj_B)
1
select * from naaj_A where (a, b) not in (select a, b from naaj_B);
a	b	c
1	NULL	1
insert into naaj_B values(2, null, 2);
insert into naaj_B values(null, null, 2);
explain format = 'plan_tree' select (a, b) not in (select a, b from naaj_B where naaj_A.c > naaj_B.c) from naaj_A;
id	task	access object	operator info
HashJoin	root		Null-aware anti left outer semi join, left side:TableReader, equal:[eq(naaj.naaj_a.a, naaj.naaj_b.a) eq(naaj.naaj_a.b, naaj.naaj_b.b)], other cond:gt(naaj.naaj_a.c, naaj.naaj_b.c)
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:naaj_B	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:naaj_A	keep order:false, stats:pseudo
select (a, b) not in (select a, b from naaj_B where naaj_A.c > naaj_B.c) from naaj_A;
(a, b) not in (select a, b from naaj_B where naaj_A.c > naaj_B.c)
1
explain format = 'plan_tree' select * from naaj_A where (a, b) not in (select a, b from naaj_B  where naaj_A.c > naaj_B.c);
id	task	access object	operator info
HashJoin	root		Null-aware anti semi join, left side:TableReader, equal:[eq(naaj.naaj_a.a, naaj.naaj_b.a) eq(naaj.naaj_a.b, naaj.naaj_b.b)], other cond:gt(naaj.naaj_a.c, naaj.naaj_b.c)
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:naaj_B	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:naaj_A	keep order:false, stats:pseudo
select * from naaj_A where (a, b) not in (select a, b from naaj_B  where naaj_A.c > naaj_B.c);
a	b	c
1	NULL	1
explain format = 'plan_tree' select (a, b) not in (select a, b from naaj_B where naaj_A.c = naaj_B.c) from naaj_A;
id	task	access object	operator info
HashJoin	root		anti left outer semi join, left side:TableReader, equal:[eq(naaj.naaj_a.c, naaj.naaj_b.c)], other cond:eq(naaj.naaj_a.a, naaj.naaj_b.a), eq(naaj.naaj_a.b, naaj.naaj_b.b)
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:naaj_B	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:naaj_A	keep order:false, stats:pseudo
select (a, b) not in (select a, b from naaj_B where naaj_A.c = naaj_B.c) from naaj_A;
(a, b) not in (select a, b from naaj_B where naaj_A.c = naaj_B.c)
1
explain format = 'plan_tree' select * from naaj_A where (a, b) not in (select a, b from naaj_B  where naaj_A.c = naaj_B.c);
id	task	access object	operator info
HashJoin	root		anti semi join, left side:TableReader, equal:[eq(naaj.naaj_a.c, naaj.naaj_b.c)], other cond:eq(naaj.naaj_a.a, naaj.naaj_b.a), eq(naaj.naaj_a.b, naaj.naaj_b.b)
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:naaj_B	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:naaj_A	keep order:false, stats:pseudo
select * from naaj_A where (a, b) not in (select a, b from naaj_B  where naaj_A.c = naaj_B.c);
a	b	c
1	NULL	1
select "***************************************************** PART 3 *****************************************************************" as name;
name
***************************************************** PART 3 *****************************************************************
drop table if exists naaj_A, naaj_B;
create table naaj_A(a int, b int, c int);
create table naaj_B(a int, b int, c int);
insert into naaj_A values (1,1,1);
insert into naaj_B values (1,2,2);
explain format = 'plan_tree' select (a, b) != all (select a, b from naaj_B) from naaj_A;
id	task	access object	operator info
HashJoin	root		Null-aware anti left outer semi join, left side:TableReader, equal:[eq(naaj.naaj_a.a, naaj.naaj_b.a) eq(naaj.naaj_a.b, naaj.naaj_b.b)]
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:naaj_B	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:naaj_A	keep order:false, stats:pseudo
select (a, b) != all (select a, b from naaj_B) from naaj_A;
(a, b) != all (select a, b from naaj_B)
1
explain format = 'plan_tree' select * from naaj_A where (a, b) != all (select a, b from naaj_B);
id	task	access object	operator info
Projection	root		naaj.naaj_a.a, naaj.naaj_a.b, naaj.naaj_a.c
└─Selection	root		Column#9
  └─HashJoin	root		Null-aware anti left outer semi join, left side:TableReader, equal:[eq(naaj.naaj_a.a, naaj.naaj_b.a) eq(naaj.naaj_a.b, naaj.naaj_b.b)]
    ├─TableReader(Build)	root		data:TableFullScan
    │ └─TableFullScan	cop[tikv]	table:naaj_B	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:TableFullScan
      └─TableFullScan	cop[tikv]	table:naaj_A	keep order:false, stats:pseudo
select * from naaj_A where (a, b) != all (select a, b from naaj_B);
a	b	c
1	1	1
insert into naaj_B values(1,1,1);
select (a, b) != all (select a, b from naaj_B) from naaj_A;
(a, b) != all (select a, b from naaj_B)
0
select * from naaj_A where (a, b) != all (select a, b from naaj_B);
a	b	c
insert into naaj_B values(1, null, 2);
select (a, b) != all (select a, b from naaj_B) from naaj_A;
(a, b) != all (select a, b from naaj_B)
0
select * from naaj_A where (a, b) != all (select a, b from naaj_B);
a	b	c
explain format = 'plan_tree' select (a, b) != all (select a, b from naaj_B where naaj_A.c > naaj_B.c) from naaj_A;
id	task	access object	operator info
HashJoin	root		Null-aware anti left outer semi join, left side:TableReader, equal:[eq(naaj.naaj_a.a, naaj.naaj_b.a) eq(naaj.naaj_a.b, naaj.naaj_b.b)], other cond:gt(naaj.naaj_a.c, naaj.naaj_b.c)
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:naaj_B	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:naaj_A	keep order:false, stats:pseudo
select (a, b) != all (select a, b from naaj_B where naaj_A.c > naaj_B.c) from naaj_A;
(a, b) != all (select a, b from naaj_B where naaj_A.c > naaj_B.c)
1
explain format = 'plan_tree' select * from naaj_A where (a, b) != all (select a, b from naaj_B where naaj_A.c > naaj_B.c);
id	task	access object	operator info
Projection	root		naaj.naaj_a.a, naaj.naaj_a.b, naaj.naaj_a.c
└─Selection	root		Column#9
  └─HashJoin	root		Null-aware anti left outer semi join, left side:TableReader, equal:[eq(naaj.naaj_a.a, naaj.naaj_b.a) eq(naaj.naaj_a.b, naaj.naaj_b.b)], other cond:gt(naaj.naaj_a.c, naaj.naaj_b.c)
    ├─TableReader(Build)	root		data:TableFullScan
    │ └─TableFullScan	cop[tikv]	table:naaj_B	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:TableFullScan
      └─TableFullScan	cop[tikv]	table:naaj_A	keep order:false, stats:pseudo
select * from naaj_A where (a, b) != all (select a, b from naaj_B where naaj_A.c > naaj_B.c);
a	b	c
1	1	1
explain format = 'plan_tree' select (a, b) != all (select a, b from naaj_B where naaj_A.a != naaj_B.a) from naaj_A;
id	task	access object	operator info
HashJoin	root		Null-aware anti left outer semi join, left side:TableReader, equal:[eq(naaj.naaj_a.a, naaj.naaj_b.a) eq(naaj.naaj_a.b, naaj.naaj_b.b)], other cond:ne(naaj.naaj_a.a, naaj.naaj_b.a)
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:naaj_B	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:naaj_A	keep order:false, stats:pseudo
select (a, b) != all (select a, b from naaj_B where naaj_A.a != naaj_B.a) from naaj_A;
(a, b) != all (select a, b from naaj_B where naaj_A.a != naaj_B.a)
1
explain format = 'plan_tree' select * from naaj_A where (a, b) != all (select a, b from naaj_B where naaj_A.a != naaj_B.a);
id	task	access object	operator info
Projection	root		naaj.naaj_a.a, naaj.naaj_a.b, naaj.naaj_a.c
└─Selection	root		Column#9
  └─HashJoin	root		Null-aware anti left outer semi join, left side:TableReader, equal:[eq(naaj.naaj_a.a, naaj.naaj_b.a) eq(naaj.naaj_a.b, naaj.naaj_b.b)], other cond:ne(naaj.naaj_a.a, naaj.naaj_b.a)
    ├─TableReader(Build)	root		data:TableFullScan
    │ └─TableFullScan	cop[tikv]	table:naaj_B	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:TableFullScan
      └─TableFullScan	cop[tikv]	table:naaj_A	keep order:false, stats:pseudo
select * from naaj_A where (a, b) != all (select a, b from naaj_B where naaj_A.a != naaj_B.a);
a	b	c
1	1	1
select * from naaj_A where (a, b) != all (select a, b from naaj_B where false);
a	b	c
1	1	1
select (a, b) != all (select a, b from naaj_B where false) from naaj_A;
(a, b) != all (select a, b from naaj_B where false)
1
insert into naaj_B values(2, null, 2);
select (a, b) != all (select a, b from naaj_B) from naaj_A;
(a, b) != all (select a, b from naaj_B)
0
select * from naaj_A where (a, b) != all (select a, b from naaj_B);
a	b	c
delete from naaj_B where a=1 and b=1 and c=1;
select (a, b) != all (select a, b from naaj_B) from naaj_A;
(a, b) != all (select a, b from naaj_B)
NULL
select * from naaj_A where (a, b) != all (select a, b from naaj_B);
a	b	c
select "***************************************************** PART 4 *****************************************************************" as name;
name
***************************************************** PART 4 *****************************************************************
delete from naaj_A;
delete from naaj_B;
insert into naaj_A values(1,null,1);
select (a, b) != all (select a, b from naaj_B) from naaj_A;
(a, b) != all (select a, b from naaj_B)
1
select * from naaj_A where (a, b) != all (select a, b from naaj_B);
a	b	c
1	NULL	1
insert into naaj_B values(2, null, 2);
select (a, b) != all (select a, b from naaj_B) from naaj_A;
(a, b) != all (select a, b from naaj_B)
1
select * from naaj_A where (a, b) != all (select a, b from naaj_B);
a	b	c
1	NULL	1
insert into naaj_B values(null, null, 2);
select (a, b) != all (select a, b from naaj_B) from naaj_A;
(a, b) != all (select a, b from naaj_B)
NULL
select * from naaj_A where (a, b) != all (select a, b from naaj_B);
a	b	c
delete from naaj_B;
insert into naaj_B values(2, 2, 2);
select (a, b) != all (select a, b from naaj_B) from naaj_A;
(a, b) != all (select a, b from naaj_B)
1
select * from naaj_A where (a, b) != all (select a, b from naaj_B);
a	b	c
1	NULL	1
insert into naaj_B values(2, null, 2);
insert into naaj_B values(null, null, 2);
explain format = 'plan_tree' select (a, b) != all (select a, b from naaj_B where naaj_A.c > naaj_B.c) from naaj_A;
id	task	access object	operator info
HashJoin	root		Null-aware anti left outer semi join, left side:TableReader, equal:[eq(naaj.naaj_a.a, naaj.naaj_b.a) eq(naaj.naaj_a.b, naaj.naaj_b.b)], other cond:gt(naaj.naaj_a.c, naaj.naaj_b.c)
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:naaj_B	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:naaj_A	keep order:false, stats:pseudo
select (a, b) != all (select a, b from naaj_B where naaj_A.c > naaj_B.c) from naaj_A;
(a, b) != all (select a, b from naaj_B where naaj_A.c > naaj_B.c)
1
explain format = 'plan_tree' select * from naaj_A where (a, b) != all (select a, b from naaj_B  where naaj_A.c > naaj_B.c);
id	task	access object	operator info
Projection	root		naaj.naaj_a.a, naaj.naaj_a.b, naaj.naaj_a.c
└─Selection	root		Column#9
  └─HashJoin	root		Null-aware anti left outer semi join, left side:TableReader, equal:[eq(naaj.naaj_a.a, naaj.naaj_b.a) eq(naaj.naaj_a.b, naaj.naaj_b.b)], other cond:gt(naaj.naaj_a.c, naaj.naaj_b.c)
    ├─TableReader(Build)	root		data:TableFullScan
    │ └─TableFullScan	cop[tikv]	table:naaj_B	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:TableFullScan
      └─TableFullScan	cop[tikv]	table:naaj_A	keep order:false, stats:pseudo
select * from naaj_A where (a, b) != all (select a, b from naaj_B  where naaj_A.c > naaj_B.c);
a	b	c
1	NULL	1
explain format = 'plan_tree' select (a, b) != all (select a, b from naaj_B where naaj_A.c = naaj_B.c) from naaj_A;
id	task	access object	operator info
HashJoin	root		anti left outer semi join, left side:TableReader, equal:[eq(naaj.naaj_a.c, naaj.naaj_b.c)], other cond:eq(naaj.naaj_a.a, naaj.naaj_b.a), eq(naaj.naaj_a.b, naaj.naaj_b.b)
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:naaj_B	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:naaj_A	keep order:false, stats:pseudo
select (a, b) != all (select a, b from naaj_B where naaj_A.c = naaj_B.c) from naaj_A;
(a, b) != all (select a, b from naaj_B where naaj_A.c = naaj_B.c)
1
explain format = 'plan_tree' select * from naaj_A where (a, b) != all (select a, b from naaj_B  where naaj_A.c = naaj_B.c);
id	task	access object	operator info
Projection	root		naaj.naaj_a.a, naaj.naaj_a.b, naaj.naaj_a.c
└─Selection	root		Column#9
  └─HashJoin	root		anti left outer semi join, left side:TableReader, equal:[eq(naaj.naaj_a.c, naaj.naaj_b.c)], other cond:eq(naaj.naaj_a.a, naaj.naaj_b.a), eq(naaj.naaj_a.b, naaj.naaj_b.b)
    ├─TableReader(Build)	root		data:TableFullScan
    │ └─TableFullScan	cop[tikv]	table:naaj_B	keep order:false, stats:pseudo
    └─TableReader(Probe)	root		data:TableFullScan
      └─TableFullScan	cop[tikv]	table:naaj_A	keep order:false, stats:pseudo
select * from naaj_A where (a, b) != all (select a, b from naaj_B  where naaj_A.c = naaj_B.c);
a	b	c
1	NULL	1
select "***************************************************** PART 5 *****************************************************************" as name;
name
***************************************************** PART 5 *****************************************************************
delete from naaj_A;
delete from naaj_B;
insert into naaj_A values(1,1,1);
insert into naaj_B values(2,null,2);
select (a,b) not in (select a, b from naaj_B) from naaj_A;
(a,b) not in (select a, b from naaj_B)
1
select * from naaj_A where (a,b) not in (select a, b from naaj_B);
a	b	c
1	1	1
explain format='plan_tree' select (a+1,b*2) not in (select a, b from naaj_B) from naaj_A;
id	task	access object	operator info
HashJoin	root		Null-aware anti left outer semi join, left side:Projection, equal:[eq(Column#14, naaj.naaj_b.a) eq(Column#15, naaj.naaj_b.b)]
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:naaj_B	keep order:false, stats:pseudo
└─Projection(Probe)	root		plus(naaj.naaj_a.a, 1)->Column#14, mul(naaj.naaj_a.b, 2)->Column#15
  └─TableReader	root		data:TableFullScan
    └─TableFullScan	cop[tikv]	table:naaj_A	keep order:false, stats:pseudo
select (a+1,b*2) not in (select a, b from naaj_B) from naaj_A;
(a+1,b*2) not in (select a, b from naaj_B)
NULL
insert into naaj_B values(2,2,2);
select (a+1,b*2) not in (select a, b from naaj_B) from naaj_A;
(a+1,b*2) not in (select a, b from naaj_B)
0
explain format='plan_tree' select * from naaj_A where (a+1,b*2) not in (select a+1, b-1 from naaj_B);
id	task	access object	operator info
HashJoin	root		Null-aware anti semi join, left side:Projection, equal:[eq(Column#13, Column#9) eq(Column#14, Column#10)]
├─Projection(Build)	root		plus(naaj.naaj_b.a, 1)->Column#9, minus(naaj.naaj_b.b, 1)->Column#10
│ └─TableReader	root		data:TableFullScan
│   └─TableFullScan	cop[tikv]	table:naaj_B	keep order:false, stats:pseudo
└─Projection(Probe)	root		naaj.naaj_a.a, naaj.naaj_a.b, naaj.naaj_a.c, plus(naaj.naaj_a.a, 1)->Column#13, mul(naaj.naaj_a.b, 2)->Column#14
  └─TableReader	root		data:TableFullScan
    └─TableFullScan	cop[tikv]	table:naaj_A	keep order:false, stats:pseudo
select * from naaj_A where (a+1,b*2) not in (select a, b from naaj_B);
a	b	c
explain format='plan_tree' select (a+1,b*2) not in (select a, b=1 from naaj_B where naaj_A.a = naaj_B.a) from naaj_A;
id	task	access object	operator info
HashJoin	root		anti left outer semi join, left side:TableReader, equal:[eq(naaj.naaj_a.a, naaj.naaj_b.a)], other cond:eq(mul(naaj.naaj_a.b, 2), eq(naaj.naaj_b.b, 1)), eq(plus(naaj.naaj_a.a, 1), naaj.naaj_b.a)
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:naaj_B	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:naaj_A	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ set_var(tidb_hash_join_version=legacy) */ * from naaj_A where (a+1,b*2) not in (select a, b=1 from naaj_B where naaj_A.a = naaj_B.a);
id	task	access object	operator info
HashJoin	root		anti semi join, left side:TableReader, equal:[eq(naaj.naaj_a.a, naaj.naaj_b.a)], other cond:eq(mul(naaj.naaj_a.b, 2), eq(naaj.naaj_b.b, 1)), eq(plus(naaj.naaj_a.a, 1), naaj.naaj_b.a)
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:naaj_B	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:naaj_A	keep order:false, stats:pseudo
explain format='plan_tree' select /*+ set_var(tidb_hash_join_version=optimized) */ * from naaj_A where (a+1,b*2) not in (select a, b=1 from naaj_B where naaj_A.a = naaj_B.a);
id	task	access object	operator info
HashJoin	root		anti semi join, left side:TableReader, equal:[eq(naaj.naaj_a.a, naaj.naaj_b.a)], other cond:eq(mul(naaj.naaj_a.b, 2), eq(naaj.naaj_b.b, 1)), eq(plus(naaj.naaj_a.a, 1), naaj.naaj_b.a)
├─TableReader(Build)	root		data:TableFullScan
│ └─TableFullScan	cop[tikv]	table:naaj_B	keep order:false, stats:pseudo
└─TableReader(Probe)	root		data:TableFullScan
  └─TableFullScan	cop[tikv]	table:naaj_A	keep order:false, stats:pseudo
set @@session.tidb_enable_null_aware_anti_join=0;
drop table if exists chqin,chqin1;
create table chqin(id int, f1 int,f2 int);
create table chqin1(id int, f1 int,f2 int);
insert into chqin values (1,1,1),(2,2,2),(3,3,3);
insert into chqin1 values (4,4,4),(5,5,5),(6,6,6);
explain format='plan_tree' SELECT -1405353984 FROM chqin t1 WHERE t1.f1 not IN (  SELECT a1.f2 FROM chqin1 a1 WHERE  ( 1 >= t1.id ) ) ;
id	task	access object	operator info
Projection	root		-1405353984->Column#9
└─HashJoin	root		CARTESIAN anti semi join, left side:TableReader, left cond:[ge(1, naaj.chqin.id)], other cond:eq(naaj.chqin.f1, naaj.chqin1.f2)
  ├─TableReader(Build)	root		data:TableFullScan
  │ └─TableFullScan	cop[tikv]	table:a1	keep order:false, stats:pseudo
  └─TableReader(Probe)	root		data:TableFullScan
    └─TableFullScan	cop[tikv]	table:t1	keep order:false, stats:pseudo
SELECT -1405353984 as myName FROM chqin t1 WHERE t1.f1 not IN (  SELECT a1.f2 FROM chqin1 a1 WHERE  ( 1 >= t1.id ) ) ;
myName
-1405353984
-1405353984
-1405353984
