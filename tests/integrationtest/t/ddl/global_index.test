set tidb_enable_global_index=true;

# TestCreatePartitionTableWithGlobalIndex
drop table if exists test_global;
create table test_global ( a int, b int, c int, unique key p_b(b))
partition by range( a ) (
	partition p1 values less than (10),
	partition p2 values less than (20)
);
insert into test_global values (1,2,2);
-- error 1062
insert into test_global values (11,2,2);
-- error 1062
insert into test_global values (11,2,2);

--echo # NULL will not get 'duplicate key' error here
insert into test_global(a,c) values (1,2);
insert into test_global(a,c) values (11,2);

drop table if exists test_global;
-- error 1503
create table test_global ( a int, b int, c int, primary key p_b(b) /*T![clustered_index] CLUSTERED */)
partition by range( a ) (
	partition p1 values less than (10),
	partition p2 values less than (20)
);

drop table if exists test_global;
-- error 1503
create table test_global ( a int, b int, c int, primary key p_b_c(b, c) /*T![clustered_index] CLUSTERED */)
partition by range( a ) (
	partition p1 values less than (10),
	partition p2 values less than (20)
);

drop table if exists test_global;
create table test_global ( a int, b int, c int, primary key (b) /*T![clustered_index] NONCLUSTERED */)
partition by range( a ) (
	partition p1 values less than (10),
	partition p2 values less than (20)
);
insert into test_global values (1,2,2);
-- error 1062
insert into test_global values (11,2,2);
-- error 1062
insert into test_global values (11,2,2);

# TestUpdateGlobalIndex
drop table if exists test_global;
create table test_global ( a int, b int, c int)
partition by range( a ) (
	partition p1 values less than (10),
	partition p2 values less than (20),
	partition p3 values less than (30)
);
alter table test_global add unique index idx_b (b);
insert into test_global values (1, 1, 1), (8, 8, 8), (11, 11, 11), (12, 12, 12);
update test_global set a = 2 where a = 11;
update test_global set a = 13 where a = 12;
analyze table test_global;
select * from test_global use index(idx_b) order by a;

