# TestExplainFormatHint
drop table if exists t;
create table t (c1 int not null, c2 int not null, key idx_c2(c2)) partition by range (c2) (partition p0 values less than (10), partition p1 values less than (20));
explain format='hint'select /*+ use_index(@`sel_2` `test`.`t2` `idx_c2`), hash_agg(@`sel_2`), use_index(@`sel_1` `test`.`t1` `idx_c2`), hash_agg(@`sel_1`) */ count(1) from t t1 where c2 in (select c2 from t t2 where t2.c2 < 15 and t2.c2 > 12);

# TestNthPlanHint
drop table if exists tt;
create table tt (a int,b int, index(a), index(b));
insert into tt values (1, 1), (2, 2), (3, 4);
--enable_warnings
explain select /*+nth_plan(4)*/ * from tt where a=1 and b=1;
--disable_warnings
drop table if exists t;
create table t (a int, b int, c int, index(a), index(b), index(a,b));
explain format='hint' select * from t where a=1 and b=1;
explain format='hint' select /*+ nth_plan(1) */ * from t where a=1 and b=1;
explain format='hint' select /*+ nth_plan(2) */ * from t where a=1 and b=1;
--enable_warnings
explain format='hint' select /*+ nth_plan(3) */ * from t where a=1 and b=1;
explain format='hint' select /*+ nth_plan(500) */ * from t where a=1 and b=1;
explain format='hint' select /*+ nth_plan(1) nth_plan(2) */ * from t where a=1 and b=1;
--disable_warnings
insert into t values (1,1,1);
select  /*+ nth_plan(1) */ * from t where a=1 and b=1;
select  /*+ nth_plan(2) */ * from t where a=1 and b=1;
select  /*+ nth_plan(1) */ * from tt where a=1 and b=1;
select  /*+ nth_plan(2) */ * from tt where a=1 and b=1;
select  /*+ nth_plan(3) */ * from tt where a=1 and b=1;
--enable_warnings
select /*+ nth_plan(1000) */ count(1) from t where (select count(1) from t, tt) > 1;
select /*+ nth_plan(1000) */ count(1) from t where exists (select count(1) from t, tt);
--disable_warnings


# TestIssue25729
drop table if exists tt;
create table tt(a int, b int, key k((a+1)), key k1((a+1), b), key k2((a+1), b), key k3((a+1)));
explain format='brief' select * from tt where a+1 = 5 and b=3;
explain format='brief' select * from tt where a+1 = 5 and b=3;
explain format='brief' select * from tt where a+1 = 5 and b=3;
explain format='brief' select * from tt where a+1 = 5 and b=3;
explain format='brief' select * from tt where a+1 = 5 and b=3;
explain format='brief' select * from tt where a+1 = 5 and b=3;
explain format='brief' select * from tt where a+1 = 5 and b=3;
explain format='brief' select * from tt where a+1 = 5 and b=3;
explain format='brief' select * from tt where a+1 = 5 and b=3;
explain format='brief' select * from tt where a+1 = 5 and b=3;
insert into tt values(4, 3);
select * from tt where a+1 = 5 and b=3;
drop table if exists t1;
CREATE TABLE `t1` (  `a` varchar(10) DEFAULT NULL,  `b` varchar(10) DEFAULT NULL,  KEY `expression_index` ((concat(`a`, `b`))),  KEY `expression_index_2` ((concat(`a`, `b`))),  KEY `idx` ((concat(`a`, `b`)),`a`),  KEY `idx1` (`a`,(concat(`a`, `b`))),  KEY `idx2` (`a`,(concat(`a`, `b`)),`b`));
explain format='brief' select * from t1  where concat(a, b) like "aadwa" and a = "a";
explain format='brief' select b from t1 where concat(a, b) >= "aa" and a = "b";
explain format='brief' select * from t1  where concat(a, b) like "aadwa" and a = "a";
explain format='brief' select b from t1 where concat(a, b) >= "aa" and a = "b";
explain format='brief' select * from t1  where concat(a, b) like "aadwa" and a = "a";
explain format='brief' select b from t1 where concat(a, b) >= "aa" and a = "b";
explain format='brief' select * from t1  where concat(a, b) like "aadwa" and a = "a";
explain format='brief' select b from t1 where concat(a, b) >= "aa" and a = "b";
explain format='brief' select * from t1  where concat(a, b) like "aadwa" and a = "a";
explain format='brief' select b from t1 where concat(a, b) >= "aa" and a = "b";
explain format='brief' select * from t1  where concat(a, b) like "aadwa" and a = "a";
explain format='brief' select b from t1 where concat(a, b) >= "aa" and a = "b";
explain format='brief' select * from t1  where concat(a, b) like "aadwa" and a = "a";
explain format='brief' select b from t1 where concat(a, b) >= "aa" and a = "b";
explain format='brief' select * from t1  where concat(a, b) like "aadwa" and a = "a";
explain format='brief' select b from t1 where concat(a, b) >= "aa" and a = "b";
explain format='brief' select * from t1  where concat(a, b) like "aadwa" and a = "a";
explain format='brief' select b from t1 where concat(a, b) >= "aa" and a = "b";
explain format='brief' select * from t1  where concat(a, b) like "aadwa" and a = "a";
explain format='brief' select b from t1 where concat(a, b) >= "aa" and a = "b";
insert into t1 values("a", "adwa");
select * from t1  where concat(a, b) like "aadwa" and a = "a";


# TestIssue34863
drop table if exists c;
drop table if exists o;
create table c(c_id bigint);
create table o(o_id bigint, c_id bigint);
insert into c values(1),(2),(3),(4),(5);
insert into o values(1,1),(2,1),(3,2),(4,2),(5,2);
set @@tidb_opt_agg_push_down=1;
select count(*) from c left join o on c.c_id=o.c_id;
select count(c.c_id) from c left join o on c.c_id=o.c_id;
select count(o.c_id) from c left join o on c.c_id=o.c_id;
select sum(o.c_id is null) from c left join o on c.c_id=o.c_id;
select count(*) from c right join o on c.c_id=o.c_id;
select count(o.c_id) from c right join o on c.c_id=o.c_id;
set @@tidb_opt_agg_push_down=0;
select count(*) from c left join o on c.c_id=o.c_id;
select count(c.c_id) from c left join o on c.c_id=o.c_id;
select count(o.c_id) from c left join o on c.c_id=o.c_id;
select sum(o.c_id is null) from c left join o on c.c_id=o.c_id;
select count(*) from c right join o on c.c_id=o.c_id;
select count(o.c_id) from c right join o on c.c_id=o.c_id;
set @@tidb_opt_agg_push_down=DEFAULT;


# TestTableDualAsSubQuery
CREATE VIEW v0(c0) AS SELECT NULL;
SELECT v0.c0 FROM v0 WHERE (v0.c0 IS NULL) LIKE(NULL);
SELECT v0.c0 FROM (SELECT null as c0) v0 WHERE (v0.c0 IS NULL) like (NULL);


# TestNullEQConditionPlan
CREATE TABLE t0(c0 BOOL, PRIMARY KEY(c0));
INSERT INTO t0 VALUES (FALSE);
SELECT * FROM t0 WHERE NOT (('4')AND(t0.c0<=>FALSE));
explain SELECT * FROM t0 WHERE NOT (('4')AND(t0.c0<=>FALSE));
SELECT * FROM t0 WHERE (('4')AND(t0.c0<=>FALSE));
explain SELECT * FROM t0 WHERE (('4')AND(t0.c0<=>FALSE));


# TestOuterJoinOnNull
drop table if exists t0, t1;
CREATE TABLE t0(c0 BLOB(5), c1 BLOB(5));
CREATE TABLE t1 (c0 BOOL);
INSERT INTO t1 VALUES(false);
INSERT INTO t0(c0, c1) VALUES ('>', true);
SELECT * FROM t0 LEFT OUTER JOIN t1 ON NULL; ;
SELECT NOT '2' =(t1.c0 AND t0.c1 IS NULL) FROM t0 LEFT OUTER JOIN t1 ON NULL; ;
SELECT * FROM t0 LEFT JOIN t1 ON NULL WHERE NOT '2' =(t1.c0 AND t0.c1 IS NULL); ;
SELECT * FROM t0 LEFT JOIN t1 ON NULL WHERE t1.c0 or true; ;
SELECT * FROM t0 LEFT JOIN t1 ON NULL WHERE not(t1.c0 and false); ;
CREATE TABLE t2(c0 INT);
CREATE TABLE t3(c0 INT);
INSERT INTO t3 VALUES (1);
SELECT ((NOT ('i'))AND(t2.c0)) IS NULL FROM  t2 RIGHT JOIN t3 ON t3.c0;
SELECT * FROM t2 RIGHT JOIN t3 ON t2.c0 WHERE ((NOT ('i'))AND(t2.c0)) IS NULL;


# TestHypoIndexDDL
drop table if exists t;
create table t (a int, b int, c int, d int, key(a));
create index hypo_a type hypo on t (a);
create index hypo_bc type hypo on t (b, c);
show create table t;
drop hypo index hypo_a on t;
drop hypo index hypo_bc on t;
show create table t;


# TestHypoIndexPlan
drop table if exists t;
create table t (a int);
explain select a from t where a = 1;
create index hypo_a type hypo on t (a);
explain select a from t where a = 1;
drop hypo index hypo_a on t;
create unique index hypo_a type hypo on t (a);
explain select a from t where a = 1;


# TestHypoTiFlashReplica
drop table if exists t;
create table t (a int);
explain select a from t;
alter table t set hypo tiflash replica 1;
explain select a from t;
alter table t set hypo tiflash replica 0;
explain select a from t;


