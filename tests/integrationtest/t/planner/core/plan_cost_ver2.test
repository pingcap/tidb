# TestHugeTopNCost
drop table if exists t;
create table t (a int);
insert into t values (1);
analyze table t;
explain format='verbose' select /*+ limit_to_cop() */ * from t where a=1 order by a limit 1;
explain format='verbose' select /*+ limit_to_cop() */ * from t where a=1 order by a limit 1000000000;


# TestCostModelVer2
drop table if exists t;
create table t (a int primary key, b int, c int, key(b));
insert into t values (0, 0, 0), (1, 1, 1), (2, 2, 2), (3, 3, 3), (4, 4, 4), (5, 5, 5), (6, 6, 6), (7, 7, 7), (8, 8, 8), (9, 9, 9), (10, 10, 10), (11, 11, 11), (12, 12, 12), (13, 13, 13), (14, 14, 14), (15, 15, 15), (16, 16, 16), (17, 17, 17), (18, 18, 18), (19, 19, 19), (20, 20, 20), (21, 21, 21), (22, 22, 22), (23, 23, 23), (24, 24, 24), (25, 25, 25), (26, 26, 26), (27, 27, 27), (28, 28, 28), (29, 29, 29), (30, 30, 30), (31, 31, 31), (32, 32, 32), (33, 33, 33), (34, 34, 34), (35, 35, 35), (36, 36, 36), (37, 37, 37), (38, 38, 38), (39, 39, 39), (40, 40, 40), (41, 41, 41), (42, 42, 42), (43, 43, 43), (44, 44, 44), (45, 45, 45), (46, 46, 46), (47, 47, 47), (48, 48, 48), (49, 49, 49), (50, 50, 50), (51, 51, 51), (52, 52, 52), (53, 53, 53), (54, 54, 54), (55, 55, 55), (56, 56, 56), (57, 57, 57), (58, 58, 58), (59, 59, 59), (60, 60, 60), (61, 61, 61), (62, 62, 62), (63, 63, 63), (64, 64, 64), (65, 65, 65), (66, 66, 66), (67, 67, 67), (68, 68, 68), (69, 69, 69), (70, 70, 70), (71, 71, 71), (72, 72, 72), (73, 73, 73), (74, 74, 74), (75, 75, 75), (76, 76, 76), (77, 77, 77), (78, 78, 78), (79, 79, 79), (80, 80, 80), (81, 81, 81), (82, 82, 82), (83, 83, 83), (84, 84, 84), (85, 85, 85), (86, 86, 86), (87, 87, 87), (88, 88, 88), (89, 89, 89), (90, 90, 90), (91, 91, 91), (92, 92, 92), (93, 93, 93), (94, 94, 94), (95, 95, 95), (96, 96, 96), (97, 97, 97), (98, 98, 98), (99, 99, 99);
analyze table t;
set @@tidb_distsql_scan_concurrency=1;
set @@tidb_executor_concurrency=1;
set @@tidb_opt_tiflash_concurrency_factor=1;
set @@tidb_index_lookup_concurrency=1;
set @@tidb_cost_model_version=2;
explain format='verbose' select /*+ use_index(t, primary) */ a from t where a<1;
explain format='verbose' select /*+ use_index(t, primary) */ a from t where a<10;
explain format='verbose' select /*+ use_index(t, primary) */ a from t where a<100;
explain format='verbose' select /*+ use_index(t, b) */ b from t where b<1;
explain format='verbose' select /*+ use_index(t, b) */ b from t where b<10;
explain format='verbose' select /*+ use_index(t, b) */ b from t where b<100;
explain format='verbose' select /*+ use_index(t, primary) */ a from t;
explain format='verbose' select /*+ use_index(t, primary) */ a, b from t;
explain format='verbose' select /*+ use_index(t, primary) */ a, b, c from t;
explain format='verbose' select /*+ use_index(t, b) */ * from t where b<1;
explain format='verbose' select /*+ use_index(t, b) */ * from t where b<10;
explain format='verbose' select /*+ use_index(t, b) */ * from t where b<100;
explain format='verbose' select /*+ use_index(t, primary) */ a from t where mod(a, 20)<10;
explain format='verbose' select /*+ use_index(t, primary) */ a from t where mod(a, 20)<10 and mod(a, 20)<11;
explain format='verbose' select /*+ use_index(t, primary) */ a from t where mod(a, 20)<10 and mod(a, 20)<11 and mod(a, 20)<12;
explain format='verbose' select /*+ use_index(t, primary) */ a+1 from t;
explain format='verbose' select /*+ use_index(t, primary) */ a+1, a+2 from t;
explain format='verbose' select /*+ use_index(t, primary) */ a+1, a+2, a+3 from t;
explain format='verbose' select /*+ use_index(t, primary), hash_agg() */ sum(a) from t group by b;
explain format='verbose' select /*+ use_index(t, primary), hash_agg() */ sum(a), sum(a+2) from t group by b;
explain format='verbose' select /*+ use_index(t, primary), hash_agg() */ sum(a), sum(a+2), sum(a+4) from t group by b;
explain format='verbose' select /*+ use_index(t, primary), hash_agg() */ sum(a) from t group by b;
explain format='verbose' select /*+ use_index(t, primary), hash_agg() */ sum(a) from t group by b, b+1;
explain format='verbose' select /*+ use_index(t, primary), hash_agg() */ sum(a) from t group by b, b+1, b+2;
explain format='verbose' select /*+ use_index(t, primary), stream_agg() */ sum(a) from t group by b;
explain format='verbose' select /*+ use_index(t, primary), stream_agg() */ sum(a), sum(a+2) from t group by b;
explain format='verbose' select /*+ use_index(t, primary), stream_agg() */ sum(a), sum(a+2), sum(a+4) from t group by b;
explain format='verbose' select /*+ hash_join_build(t1) */ * from t t1, t t2 where t1.b=t2.b and t1.a<10;
explain format='verbose' select /*+ hash_join_build(t2) */ * from t t1, t t2 where t1.b=t2.b and t1.a<10;
explain format='verbose' select /*+ hash_join_build(t1) */ * from t t1, t t2 where t1.b=t2.b;
explain format='verbose' select /*+ hash_join_build(t1) */ * from t t1, t t2 where t1.a=t2.a and t1.b=t2.b;
set @@tidb_distsql_scan_concurrency=DEFAULT;
set @@tidb_executor_concurrency=DEFAULT;
set @@tidb_opt_tiflash_concurrency_factor=DEFAULT;
set @@tidb_index_lookup_concurrency=DEFAULT;
set @@tidb_cost_model_version=DEFAULT;


# TestIndexJoinPenaltyCost
drop table if exists t1, t2;
create table t1 (a int, key(a));
create table t2 (a int, key(a));
select @@tidb_index_join_double_read_penalty_cost_rate;
explain format='verbose' select /*+ tidb_inlj(t1, t2) */ * from t1, t2 where t1.a=t2.a;
set tidb_index_join_double_read_penalty_cost_rate=0.5;
explain format='verbose' select /*+ tidb_inlj(t1, t2) */ * from t1, t2 where t1.a=t2.a;
set tidb_index_join_double_read_penalty_cost_rate=1;
explain format='verbose' select /*+ tidb_inlj(t1, t2) */ * from t1, t2 where t1.a=t2.a;


# TestIssue44025
drop table if exists t;
create table t(a int, b int, c int, d int, index ia(a), index ibc(b,c));
set @@tidb_cost_model_version=1;
explain select * from t where a between 1 and 5 and b != 200 and c = 20 limit 100000;


# TestCostModelShowFormula
drop table if exists t;
create table t (a int);
set @@tidb_cost_model_version=2;
## 'true_card_cost' must work with 'explain analyze'
--error 1105
explain format='true_card_cost' select * from t;
--replace_column 8 <execution_info> 9 <operator_info> 10 <memory> 11 <disk>
explain analyze format='true_card_cost' select * from t where a<3;

set @@tidb_cost_model_version=DEFAULT;
