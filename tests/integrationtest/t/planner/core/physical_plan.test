# TestExplainJoinHints
drop table if exists t;
create table t(a int, b int, c int, key(b), key(c));
explain format='hint' select /*+ inl_merge_join(t2) */ * from t t1 inner join t t2 on t1.b = t2.b and t1.c = 1;
explain format='hint' select /*+ inl_hash_join(t2) */ * from t t1 inner join t t2 on t1.b = t2.b and t1.c = 1;


# TestTopNPushDownEmpty
drop table if exists t;
create table t(a int, b int, c int, index idx_a(a));
select extract(day_hour from 'ziy') as res from t order by res limit 1;


# TestPossibleProperties
drop table if exists student, sc;
create table student(id int primary key auto_increment, name varchar(4) not null);
create table sc(id int primary key auto_increment, student_id int not null, course_id int not null, score int not null);
insert into student values (1,'s1'), (2,'s2');
insert into sc (student_id, course_id, score) values (1,1,59), (1,2,57), (1,3,76), (2,1,99), (2,2,100), (2,3,100);
select /*+ stream_agg() */ a.id, avg(b.score) as afs from student a join sc b on a.id = b.student_id where b.score < 60 group by a.id having count(b.course_id) >= 2;


# TestIssue30965
drop table if exists t30965;
CREATE TABLE `t30965` ( `a` int(11) DEFAULT NULL, `b` int(11) DEFAULT NULL, `c` int(11) DEFAULT NULL, `d` int(11) GENERATED ALWAYS AS (`a` + 1) VIRTUAL, KEY `ib` (`b`));
insert into t30965 (a,b,c) value(3,4,5);
select count(*) from t30965 where d = 2 and b = 4 and a = 3 and c = 5;
explain format = 'brief' select count(*) from t30965 where d = 2 and b = 4 and a = 3 and c = 5;


# TestRemoveOrderbyInSubquery
drop table if exists t1;
CREATE TABLE `t1` ( `a` int(11) DEFAULT NULL, `b` int(11) DEFAULT NULL, `c` int(11) DEFAULT NULL);
insert into t1 (a,b,c) value(3,4,5);
explain format = 'brief' select * from (select * from t1 order by a) tmp;


# TestHJBuildAndProbeHintWithBinding
set tidb_cost_model_version=2;
drop table if exists t, t1, t2, t3;
create table t(a int, b int, key(a));
create table t1(a int, b int, key(a));
create table t2(a int, b int, key(a));
create table t3(a int, b int, key(a));

select * from t1 join t2 on t1.a=t2.a join t3 on t2.b=t3.b;
select @@last_plan_from_binding;
create global binding for select * from t1 join t2 on t1.a=t2.a join t3 on t2.b=t3.b using select /*+ hash_join_build(t1) */ * from t1 join t2 on t1.a=t2.a join t3 on t2.b=t3.b;
select * from t1 join t2 on t1.a=t2.a join t3 on t2.b=t3.b;
select @@last_plan_from_binding;
--replace_column 5 <create_time> 6 <update_time>
show global bindings where original_sql like '%planner__core__physical_plan%';

create global binding for select * from t1 join t2 on t1.a=t2.a join t3 on t2.b=t3.b using select /*+ hash_join_probe(t1) */ * from t1 join t2 on t1.a=t2.a join t3 on t2.b=t3.b;
select * from t1 join t2 on t1.a=t2.a join t3 on t2.b=t3.b;
select @@last_plan_from_binding;
--replace_column 5 <create_time> 6 <update_time>
show global bindings where original_sql like '%planner__core__physical_plan%';

drop global binding for select * from t1 join t2 on t1.a=t2.a join t3 on t2.b=t3.b;
select * from t1 join t2 on t1.a=t2.a join t3 on t2.b=t3.b;
select @@last_plan_from_binding;
--replace_column 5 <create_time> 6 <update_time>
show global bindings where original_sql like '%planner__core__physical_plan%';

set tidb_cost_model_version=DEFAULT;
