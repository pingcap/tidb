--echo # TestWriteListPartitionTable2
--echo # test for write list partition when the partition expression is complicated and contain generated column.
set @@session.tidb_enable_list_partition = ON;
drop table if exists t;
create table t (id int, name varchar(10),b int generated always as (length(name)+1) virtual)
    partition by list  (id*2 + b*b + b*b - b*b*2 - abs(id)) (
   	partition p0 values in (3,5,6,9,17),
   	partition p1 values in (1,2,10,11,19,20),
   	partition p2 values in (4,12,13,14,18),
   	partition p3 values in (7,8,15,16,null)
);

analyze table t;

--echo ## Test add unique index failed.
insert into t (id,name) values  (1, 'a'),(1,'b');
--error 1062
alter table t add unique index idx (id,b);
--echo ## Test add unique index success.
delete from t where name='b';
alter table t add unique index idx (id,b);

--echo ## --------------------------Test insert---------------------------
--echo ## Test insert 1 partition.
delete from t;
insert into t (id,name) values  (1, 'a'),(2,'b'),(10,'c');
select id,name from t partition(p1) order by id;
--echo ## Test insert multi-partitions.
delete from t;
insert into t (id,name) values  (1, 'a'),(3,'c'),(4,'e');
select id,name from t partition(p0) order by id;
select id,name from t partition(p1) order by id;
select id,name from t partition(p2) order by id;
select id,name from t partition(p3) order by id;
--echo ## Test insert on duplicate.
insert into t (id,name) values (1, 'd'), (3,'f'),(5,'g') on duplicate key update name='x';
select id,name from t partition(p0) order by id;
select id,name from t partition(p1) order by id;
select id,name from t partition(p2) order by id;
select id,name from t partition(p3) order by id;
--echo ## Test insert on duplicate error
--error 1062
insert into t (id,name) values (3, 'a'), (11,'x') on duplicate key update id=id+1;
select id,name from t order by id;
--echo ## Test insert ignore with duplicate
insert ignore into t (id,name) values  (1, 'b'), (5,'a'),(null,'y');
show warnings;
select id,name from t partition(p0) order by id;
select id,name from t partition(p1) order by id;
select id,name from t partition(p2) order by id;
select id,name from t partition(p3) order by id;
--echo ## Test insert ignore without duplicate
insert ignore into t (id,name) values  (15, 'a'),(17,'a');
select id,name from t partition(p0,p1,p2) order by id;
select id,name from t partition(p3) order by id;
--echo ## Test insert meet no partition error.
--error 1526
insert into t (id,name) values (100, 'd');

--echo ## --------------------------Test update---------------------------
--echo ## Test update 1 partition.
delete from t;
insert into t (id,name) values  (1, 'a'),(2,'b'),(3,'c');
update t set name='b' where id=2;;
select id,name from t partition(p1);
update t set name='x' where id in (1,2);
select id,name from t partition(p1);
update t set name='y' where id < 3;
select id,name from t order by id;
--echo ## Test update meet duplicate error.
--error 1062
update t set id=2 where id = 1;
select id,name from t order by id;

--echo ## Test update multi-partitions
update t set name='z' where id in (1,2,3);;
select id,name from t order by id;
update t set name='a' limit 3;
select id,name from t order by id;
update t set id=id*10 where id in (1,2);
select id,name from t order by id;
--echo ## Test update meet duplicate error.
--error 1062
update t set id=id+17 where id in (3,10);
select id,name from t order by id;
--echo ## Test update meet no partition error.
--error 1526
update t set id=id*2 where id in (3,20);
select id,name from t order by id;

--echo ## --------------------------Test replace---------------------------
--echo ## Test replace 1 partition.
delete from t;
replace into t (id,name) values  (1, 'a'),(2,'b');
select id,name from t order by id;
--echo ## Test replace multi-partitions.
replace into t (id,name) values  (3, 'c'),(4,'d'),(7,'f');
select id,name from t partition(p0) order by id;
select id,name from t partition(p1) order by id;
select id,name from t partition(p2) order by id;
select id,name from t partition(p3) order by id;
--echo ## Test replace on duplicate.
replace into t (id,name) values  (1, 'x'),(7,'x');
select id,name from t order by id;
--echo ## Test replace meet no partition error.
--error 1526
replace into t (id,name) values  (10,'x'),(50,'x');
select id,name from t order by id;

--echo ## --------------------------Test delete---------------------------
--echo ## Test delete 1 partition.
delete from t where id = 3;
select id,name from t partition(p0) order by id;
delete from t where id in (1,2);
select id,name from t partition(p1) order by id;
--echo ## Test delete multi-partitions.
delete from t where id in (4,7,10,11);
select id,name from t;
insert into t (id,name) values  (3, 'c'),(4,'d'),(7,'f');
delete from t where id < 10;
select id,name from t;
insert into t (id,name) values  (3, 'c'),(4,'d'),(7,'f');
delete from t limit 3;
select id,name from t;
set @@session.tidb_enable_list_partition = default;

--echo # TestWriteListColumnsPartitionTable1
set @@session.tidb_enable_list_partition = ON;

drop table if exists t;
create table t (id int, name varchar(10)) partition by list columns (id) (
    partition p0 values in (3,5,6,9,17),
    partition p1 values in (1,2,10,11,19,20),
    partition p2 values in (4,12,13,14,18),
    partition p3 values in (7,8,15,16,null)
);

analyze table t;

--echo ## Test add unique index failed.
insert into t values  (1, 'a'),(1,'b');
--error 1062
alter table t add unique index idx (id);
--echo ## Test add unique index success.
delete from t where name='b';
alter table t add unique index idx (id);

--echo ## --------------------------Test insert---------------------------
--echo ## Test insert 1 partition.
delete from t;
insert into t values  (1, 'a'),(2,'b'),(10,'c');
select * from t partition(p1) order by id;
--echo ## Test insert multi-partitions.
delete from t;
insert into t values  (1, 'a'),(3,'c'),(4,'e');
select * from t partition(p0) order by id;
select * from t partition(p1) order by id;
select * from t partition(p2) order by id;
select * from t partition(p3) order by id;
--echo ## Test insert on duplicate.
insert into t values (1, 'd'), (3,'f'),(5,'g') on duplicate key update name='x';
select * from t partition(p0) order by id;
select * from t partition(p1) order by id;
select * from t partition(p2) order by id;
select * from t partition(p3) order by id;
--echo ## Test insert on duplicate error
--error 1062
insert into t values (3, 'a'), (11,'x') on duplicate key update id=id+1;
select * from t order by id;
--echo ## Test insert ignore with duplicate
insert ignore into t values  (1, 'b'), (5,'a'),(null,'y');
show warnings;
select * from t partition(p0) order by id;
select * from t partition(p1) order by id;
select * from t partition(p2) order by id;
select * from t partition(p3) order by id;
--echo ## Test insert ignore without duplicate
insert ignore into t values  (15, 'a'),(17,'a');
select * from t partition(p0,p1,p2) order by id;
select * from t partition(p3) order by id;
--echo ## Test insert meet no partition error.
--error 1526
insert into t values (100, 'd');

--echo ## --------------------------Test update---------------------------
--echo ## Test update 1 partition.
delete from t;
insert into t values  (1, 'a'),(2,'b'),(3,'c');
update t set name='b' where id=2;;
select * from t partition(p1);
update t set name='x' where id in (1,2);
select * from t partition(p1);
update t set name='y' where id < 3;
select * from t order by id;
--echo ## Test update meet duplicate error.
--error 1062
update t set id=2 where id = 1;
select * from t order by id;

--echo ## Test update multi-partitions
update t set name='z' where id in (1,2,3);;
select * from t order by id;
update t set name='a' limit 3;
select * from t order by id;
update t set id=id*10 where id in (1,2);
select * from t order by id;
--echo ## Test update meet duplicate error.
--error 1062
update t set id=id+17 where id in (3,10);
select * from t order by id;
--echo ## Test update meet no partition error.
--error 1526
update t set id=id*2 where id in (3,20);
select * from t order by id;

--echo ## --------------------------Test replace---------------------------
--echo ## Test replace 1 partition.
delete from t;
replace into t values  (1, 'a'),(2,'b');
select * from t order by id;
--echo ## Test replace multi-partitions.
replace into t values  (3, 'c'),(4,'d'),(7,'f');
select * from t partition(p0) order by id;
select * from t partition(p1) order by id;
select * from t partition(p2) order by id;
select * from t partition(p3) order by id;
--echo ## Test replace on duplicate.
replace into t values  (1, 'x'),(7,'x');
select * from t order by id;
--echo ## Test replace meet no partition error.
--error 1526
replace into t values  (10,'x'),(100,'x');
select * from t order by id;

--echo ## --------------------------Test delete---------------------------
--echo ## Test delete 1 partition.
delete from t where id = 3;
select * from t partition(p0) order by id;
delete from t where id in (1,2);
select * from t partition(p1) order by id;
--echo ## Test delete multi-partitions.
delete from t where id in (4,7,10,11);
select * from t;
insert into t values  (3, 'c'),(4,'d'),(7,'f');
delete from t where id < 10;
select * from t;
insert into t values  (3, 'c'),(4,'d'),(7,'f');
delete from t limit 3;
select * from t;

set @@session.tidb_enable_list_partition = default;
